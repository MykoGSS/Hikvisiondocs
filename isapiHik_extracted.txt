Intelligent Security API (General Application)
Developer Guide

Intelligent Security API (General Application) Developer Guide

Legal Information
© 2019 Hangzhou Hikvision Digital Technology Co., Ltd. All rights reserved.
This Document (hereinafter referred to be “the Document”) is the property of Hangzhou Hikvision
Digital Technology Co., Ltd. or its affiliates (hereinafter referred to as “Hikvision”), and it cannot be
reproduced, changed, translated, or distributed, partially or wholly, by any means, without the
prior written permission of Hikvision. Unless otherwise expressly stated herein, Hikvision does not
make any warranties, guarantees or representations, express or implied, regarding to the
Document, any information contained herein.

LEGAL DISCLAIMER
TO THE MAXIMUM EXTENT PERMITTED BY APPLICABLE LAW, THE DOCUMENT IS PROVIDED "AS IS"
AND “WITH ALL FAULTS AND ERRORS”. HIKVISION MAKES NO REPRESENTATIONS OR WARRANTIES,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO, WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE OR NON-INFRINGEMENT. IN NO EVENT WILL HIKVISION BE
LIABLE FOR ANY SPECIAL, CONSEQUENTIAL, INCIDENTAL, OR INDIRECT DAMAGES, INCLUDING,
AMONG OTHERS, DAMAGES FOR LOSS OF BUSINESS PROFITS, BUSINESS INTERRUPTION OR LOSS
OF DATA, CORRUPTION OF SYSTEMS, OR LOSS OF DOCUMENTATION, WHETHER BASED ON BREACH
OF CONTRACT, TORT (INCLUDING NEGLIGENCE), OR OTHERWISE, IN CONNECTION WITH THE USE
OF THE DOCUMENT, EVEN IF HIKVISION HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH
DAMAGES OR LOSS.

i

Intelligent Security API (General Application) Developer Guide

Contents
Chapter 1 Overview .................................................................................................................... 1
1.1 Introduction ........................................................................................................................... 1
1.2 Update History ....................................................................................................................... 2
Chapter 2 Protocol .................................................................................................................... 25
2.1 Operation Method ............................................................................................................... 25
2.2 URL Format .......................................................................................................................... 28
2.3 Message Format .................................................................................................................. 29
2.4 Others .................................................................................................................................. 31
Chapter 3 Security .................................................................................................................... 32
3.1 Authentication ..................................................................................................................... 32
3.2 User Permission ................................................................................................................... 33
3.3 Encryption ............................................................................................................................ 33
3.3.1 Encrypt Stream ........................................................................................................... 35
3.3.2 Encrypt Sensitive Information ..................................................................................... 37
3.4 Security Service .................................................................................................................... 47
Chapter 4 Login ........................................................................................................................ 49
Chapter 5 Device Management ................................................................................................. 50
5.1 Device Activation ................................................................................................................. 50
5.1.1 Directly Activate Device .............................................................................................. 50
5.1.2 Activate Network Camera via NVR .............................................................................. 52
5.2 Reset Password by Setting Recovery Email .......................................................................... 52
5.3 Online Upgrade Device ........................................................................................................ 54
5.4 IoT Devices Access ............................................................................................................... 56
5.4.1 Add IoT Devices to NVR/DVR ...................................................................................... 57
5.4.2 Configure Alarm of IoT Device .................................................................................... 59
Chapter 6 Device Maintenance ................................................................................................. 62

ii

Intelligent Security API (General Application) Developer Guide
6.1 Basic ..................................................................................................................................... 62
6.1.1 Securely Export and Import Configuration Files ......................................................... 63
6.2 Log ....................................................................................................................................... 64
6.3 Status ................................................................................................................................... 65
6.4 Calibration ............................................................................................................................ 66
6.5 Advanced ............................................................................................................................. 66
Chapter 7 User Management .................................................................................................... 68
7.1 Configure Double Verification .............................................................................................. 69
Chapter 8 Video and Audio ....................................................................................................... 73
8.1 Video Search and Downloading ........................................................................................... 73
8.1.1 VCA Search .................................................................................................................. 74
8.2 Live View and Playback ........................................................................................................ 75
8.3 Start Two-Way Audio ........................................................................................................... 83
8.4 Stream Encoding .................................................................................................................. 83
Chapter 9 Capture and Recording ............................................................................................. 85
Chapter 10 PTZ Control ............................................................................................................. 86
Chapter 11 Storage Management ............................................................................................. 88
11.1 HDD Management ............................................................................................................. 88
Chapter 12 Alarm/Event ........................................................................................................... 90
12.1 Receive Alarm/Event in Arming Mode ............................................................................... 90
12.2 Receive Alarm/Event in Listening Mode ............................................................................ 92
12.3 Subscribe Alarm/Event in Arming Mode ............................................................................ 94
12.4 Configure Exception Alarm ................................................................................................ 96
12.5 Configure Certificate Expiry Alarm ..................................................................................... 97
Chapter 13 Parameter Configuration ....................................................................................... 100
13.1 I/O Settings ...................................................................................................................... 100
13.2 Video/Image Settings ....................................................................................................... 102
13.3 Audio Settings .................................................................................................................. 105

iii

Intelligent Security API (General Application) Developer Guide
13.4 Channel Settings .............................................................................................................. 105
13.5 Peripherals Settings ......................................................................................................... 107
Chapter 14 System Configuration ............................................................................................ 108
14.1 Network Settings .............................................................................................................. 108
14.1.1 Email ....................................................................................................................... 108
14.1.2 Network Access ....................................................................................................... 109
14.1.3 Network Interface ................................................................................................... 110
14.1.4 Wireless Network .................................................................................................... 111
14.1.5 Network Service ...................................................................................................... 112
14.2 Time Settings .................................................................................................................... 113
14.3 System Diagnose .............................................................................................................. 114
14.4 Data Replenishment ......................................................................................................... 114
Chapter 15 Request URL ......................................................................................................... 116
15.1 /ISAPI/AUXInfo ................................................................................................................. 116
15.1.1 /ISAPI/AUXInfo/attributes/Channels ....................................................................... 116
15.1.2 /ISAPI/AUXInfo/attributes/Channels/<ID> .............................................................. 116
15.2 /ISAPI/ContentMgmt ....................................................................................................... 117
15.2.1 /ISAPI/ContentMgmt/capabilities ........................................................................... 117
15.2.2 /ISAPI/ContentMgmt/download ............................................................................. 117
15.2.3 /ISAPI/ContentMgmt/download/capabilities ......................................................... 118
15.2.4 /ISAPI/ContentMgmt/download/toUSB/<taskId>/progress?format=json .............. 118
15.2.5 /ISAPI/ContentMgmt/download/toUSB/capabilities?format=json ........................ 118
15.2.6 /ISAPI/ContentMgmt/download/toUSB?format=json ............................................ 119
15.2.7 /ISAPI/ContentMgmt/InputProxy/channels ............................................................ 119
15.2.8 /ISAPI/ContentMgmt/InputProxy/channels/<ID> ................................................... 120
15.2.9 /ISAPI/ContentMgmt/InputProxy/channels/<ID>/capabilities ............................... 121
15.2.10 /ISAPI/ContentMgmt/InputProxy/channels/<ID>/chanCtrl .................................. 121
15.2.11 /ISAPI/ContentMgmt/InputProxy/channels/<ID>/portMapParam ....................... 122

iv

Intelligent Security API (General Application) Developer Guide
15.2.12 /ISAPI/ContentMgmt/InputProxy/channels/<ID>/reboot .................................... 123
15.2.13 /ISAPI/ContentMgmt/InputProxy/channels/<ID>/status ...................................... 123
15.2.14 /ISAPI/ContentMgmt/InputProxy/channels/activate ............................................ 124
15.2.15 /ISAPI/ContentMgmt/InputProxy/channels/activate/capabilities ........................ 124
15.2.16 /ISAPI/ContentMgmt/InputProxy/channels/capabilities ...................................... 124
15.2.17 /ISAPI/ContentMgmt/InputProxy/channels/status ............................................... 125
15.2.18 /ISAPI/ContentMgmt/InputProxy/search ............................................................. 125
15.2.19 /ISAPI/ContentMgmt/InputProxy/sourceCapability ............................................. 125
15.2.20 /ISAPI/ContentMgmt/IOProxy/inputs ................................................................... 126
15.2.21 /ISAPI/ContentMgmt/IOProxy/inputs/<ID> .......................................................... 127
15.2.22 /ISAPI/ContentMgmt/IOProxy/inputs/<ID>/status ............................................... 128
15.2.23 /ISAPI/ContentMgmt/IOProxy/outputs ................................................................ 128
15.2.24 /ISAPI/ContentMgmt/IOProxy/outputs/<ID> ....................................................... 129
15.2.25 /ISAPI/ContentMgmt/IOProxy/outputs/<ID>/status ............................................ 130
15.2.26 /ISAPI/ContentMgmt/IOProxy/outputs/<ID>/trigger ........................................... 130
15.2.27 /ISAPI/ContentMgmt/logConfig ............................................................................ 131
15.2.28 /ISAPI/ContentMgmt/logConfig/capabilities ........................................................ 131
15.2.29 /ISAPI/ContentMgmt/logSearch ........................................................................... 132
15.2.30 /ISAPI/ContentMgmt/logSearch/dataPackage ...................................................... 132
15.2.31 /ISAPI/ContentMgmt/record/control/manualRefresh/channels/<ID> ................. 132
15.2.32 /ISAPI/ContentMgmt/record/control/manual/start/tracks/<ID> ......................... 133
15.2.33 /ISAPI/ContentMgmt/record/control/manual/stop/tracks/<ID> .......................... 133
15.2.34 /ISAPI/ContentMgmt/record/profile .................................................................... 134
15.2.35 /ISAPI/ContentMgmt/record/storageMounts ....................................................... 134
15.2.36 /ISAPI/ContentMgmt/record/tracks ..................................................................... 134
15.2.37 /ISAPI/ContentMgmt/record/tracks/<ID> ............................................................ 135
15.2.38 /ISAPI/ContentMgmt/record/tracks/<ID>/capabilities ......................................... 136
15.2.39 /ISAPI/ContentMgmt/record/tracks/<ID>/dailyDistribution ................................ 137

v

Intelligent Security API (General Application) Developer Guide
15.2.40 /ISAPI/ContentMgmt/search ................................................................................ 137
15.2.41 /ISAPI/ContentMgmt/search/profile .................................................................... 139
15.2.42 /ISAPI/ContentMgmt/security/logSearch ............................................................. 139
15.2.43 /ISAPI/ContentMgmt/SmartSearch ...................................................................... 140
15.2.44 /ISAPI/ContentMgmt/SmartSearch/capabilities ................................................... 140
15.2.45 /ISAPI/ContentMgmt/Storage/ExtraInfo ............................................................... 141
15.2.46 /ISAPI/ContentMgmt/Storage/ExtraInfo/capabilities ........................................... 141
15.2.47 /ISAPI/ContentMgmt/Storage/hdd ....................................................................... 142
15.2.48 /ISAPI/ContentMgmt/Storage/hdd/<ID> .............................................................. 142
15.2.49 /ISAPI/ContentMgmt/Storage/hdd/<ID>/BadSectorsTest/pause ......................... 143
15.2.50 /ISAPI/ContentMgmt/Storage/hdd/<ID>/BadSectorsTest/resume ....................... 143
15.2.51 /ISAPI/ContentMgmt/Storage/hdd/<ID>/BadSectorsTest/start ........................... 144
15.2.52 /ISAPI/ContentMgmt/Storage/hdd/<ID>/BadSectorsTest/status ......................... 144
15.2.53 /ISAPI/ContentMgmt/Storage/hdd/<ID>/BadSectorsTest/stop ............................ 144
15.2.54 /ISAPI/ContentMgmt/Storage/hdd/<ID>/encryptFormat?format=json ............... 145
15.2.55 /ISAPI/ContentMgmt/Storage/hdd/<ID>/encryptVerfy?format=json .................. 146
15.2.56 /ISAPI/ContentMgmt/Storage/hdd/<ID>/formatStatus ........................................ 146
15.2.57 /ISAPI/ContentMgmt/Storage/hdd/<ID>/format?formatType= ........................... 147
15.2.58 /ISAPI/ContentMgmt/Storage/hdd/SMARTTest/config ........................................ 147
15.2.59 /ISAPI/ContentMgmt/Storage/hdd/<ID>/SMARTTest/start .................................. 148
15.2.60 /ISAPI/ContentMgmt/Storage/hdd/<ID>/SMARTTest/status ............................... 148
15.2.61 /ISAPI/ContentMgmt/Storage/hdd/capabilities ................................................... 149
15.2.62 /ISAPI/ContentMgmt/Storage/hdd/format .......................................................... 149
15.2.63 /ISAPI/ContentMgmt/Storage/hdd/specifyHddFormat?format=json ................... 149
15.2.64 /ISAPI/ContentMgmt/Storage/quota .................................................................... 150
15.3 /ISAPI/Event ..................................................................................................................... 150
15.3.1 /ISAPI/Event/capabilities ........................................................................................ 150
15.3.2 /ISAPI/Event/channels/<ID>/capabilities ................................................................ 151

vi

Intelligent Security API (General Application) Developer Guide
15.3.3 /ISAPI/Event/IOT/channels/<ID>/capabilities?format=json .................................... 151
15.3.4 /ISAPI/Event/notification/alertStream .................................................................... 152
15.3.5 /ISAPI/Event/notification/httpHosts ....................................................................... 152
15.3.6 /ISAPI/Event/notification/httpHosts/<ID>/test ...................................................... 154
15.3.7 /ISAPI/Event/notification/httpHosts/capabilities ................................................... 154
15.3.8 /ISAPI/Event/notification/subscribeEvent .............................................................. 155
15.3.9 /ISAPI/Event/notification/subscribeEvent/<ID> ...................................................... 155
15.3.10 /ISAPI/Event/notification/subscribeEventCap ...................................................... 156
15.3.11 /ISAPI/Event/notification/unSubscribeEvent ........................................................ 156
15.3.12 /ISAPI/Event/schedules/<EventType>/<ID> .......................................................... 157
15.3.13 /ISAPI/Event/triggers/hdBadBlock ........................................................................ 157
15.3.14 /ISAPI/Event/triggers/hdImpact ........................................................................... 158
15.3.15 /ISAPI/Event/triggers/highHDTemperature .......................................................... 158
15.3.16 /ISAPI/Event/triggers/lowHDTemperature ........................................................... 159
15.3.17 /ISAPI/Event/triggers/severeHDFailure ................................................................. 160
15.3.18 /ISAPI/Event/triggers/<ID> ................................................................................... 160
15.3.19 /ISAPI/Event/triggers/<ID>/notifications .............................................................. 161
15.3.20 /ISAPI/Event/triggersCap/IOT ............................................................................... 162
15.3.21 /ISAPI/Event/triggers/notifications/AudioAlarm?format=json ............................. 162
15.3.22 /ISAPI/Event/triggers/notifications/AudioAlarm/capabilities?format=json ......... 163
15.3.23 /ISAPI/Event/triggers/notifications/whiteLightAlarm?format=json ..................... 164
15.3.24 /ISAPI/Event/triggers/notifications/whiteLightAlarm/capabilities?format=json .. 164
15.3.25 /ISAPI/Event/triggersCap ...................................................................................... 165
15.3.26 http://ipAddress:portNo/url ................................................................................. 165
15.4 /ISAPI/Image .................................................................................................................... 166
15.4.1 /ISAPI/Image/channels ........................................................................................... 166
15.4.2 /ISAPI/Image/channels/<ID> .................................................................................. 166
15.4.3 /ISAPI/Image/channels/<ID>/BLC ........................................................................... 167

vii

Intelligent Security API (General Application) Developer Guide
15.4.4 /ISAPI/Image/channels/<ID>/capabilities ............................................................... 168
15.4.5 /ISAPI/Image/channels/<ID>/capturemode ........................................................... 168
15.4.6 /ISAPI/Image/channels/<ID>/color ......................................................................... 169
15.4.7 /ISAPI/Image/channels/<ID>/color/capabilities ..................................................... 169
15.4.8 /ISAPI/Image/channels/<ID>/corridor .................................................................... 170
15.4.9 /ISAPI/Image/channels/<ID>/dehaze ..................................................................... 170
15.4.10 /ISAPI/Image/channels/<ID>/EPTZ ....................................................................... 171
15.4.11 /ISAPI/Image/channels/<ID>/EPTZ/mode/capabilities?format=json ................... 172
15.4.12 /ISAPI/Image/channels/<ID>/EPTZ/mode?format=json ....................................... 172
15.4.13 /ISAPI/Image/channels/<ID>/exposure ................................................................ 173
15.4.14 /ISAPI/Image/channels/<ID>/focusConfiguration ................................................. 174
15.4.15 /ISAPI/Image/channels/<ID>/focusConfiguration/capabilities ............................. 174
15.4.16 /ISAPI/Image/channels/<ID>/gain ........................................................................ 175
15.4.17 /ISAPI/Image/channels/<ID>/imageCap ............................................................... 175
15.4.18 /ISAPI/Image/channels/<ID>/ImageFlip ............................................................... 176
15.4.19 /ISAPI/Image/channels/<ID>/imageMode/<ID> ................................................... 176
15.4.20 /ISAPI/Image/channels/<ID>/imageModes .......................................................... 177
15.4.21 /ISAPI/Image/channels/<ID>/IrcutFilter ............................................................... 177
15.4.22 /ISAPI/Image/channels/<ID>/ISPMode ................................................................. 178
15.4.23 /ISAPI/Image/channels/<ID>/lensDistortionCorrection ....................................... 179
15.4.24 /ISAPI/Image/channels/<ID>/lensDistortionCorrection/capabilities .................... 180
15.4.25 /ISAPI/Image/channels/<ID>/noiseReduce .......................................................... 180
15.4.26 /ISAPI/Image/channels/<ID>/Palettes .................................................................. 181
15.4.27 /ISAPI/Image/channels/<ID>/powerLineFrequency ............................................. 181
15.4.28 /ISAPI/Image/channels/<ID>/regionalFocus ......................................................... 182
15.4.29 /ISAPI/Image/channels/<ID>/reset ....................................................................... 182
15.4.30 /ISAPI/Image/channels/<ID>/restore ................................................................... 183
15.4.31 /ISAPI/Image/channels/<ID>/sharpness ............................................................... 183

viii

Intelligent Security API (General Application) Developer Guide
15.4.32 /ISAPI/Image/channels/<ID>/shutter ................................................................... 184
15.4.33 /ISAPI/Image/channels/<ID>/SupplementLight .................................................... 185
15.4.34 /ISAPI/Image/channels/<ID>/SupplementLight/capabilities ................................ 186
15.4.35 /ISAPI/Image/channels/<ID>/targetEnhancement ............................................... 186
15.4.36 /ISAPI/Image/channels/<ID>/targetEnhancement/capabilities ............................ 187
15.4.37 /ISAPI/Image/channels/<ID>/tempRange ............................................................ 187
15.4.38 /ISAPI/Image/channels/<ID>/tempRange/capabilities ......................................... 188
15.4.39 /ISAPI/Image/channels/<ID>/WDR ....................................................................... 188
15.4.40 /ISAPI/Image/channels/<ID>/whiteBalance ......................................................... 189
15.5 /ISAPI/SDT ........................................................................................................................ 190
15.5.1 /ISAPI/SDT/Management/capabilities?format=json ............................................... 190
15.5.2 /ISAPI/SDT/Management/EventSearch?format=json ............................................. 190
15.5.3 /ISAPI/SDT/Management/EventSearch/capabilities?format=json .......................... 191
15.5.4 /ISAPI/SDT/Management/IntelligentSearch/export/stop?format=json .................. 191
15.5.5 /ISAPI/SDT/Management/IntelligentSearch/export?format=json .......................... 191
15.5.6 /ISAPI/SDT/Management/IntelligentSearch/export/progress?format=json&taskID=
............................................................................................................................................ 192
15.5.7 /ISAPI/SDT/Management/IntelligentSearch/capabilities?format=json .................. 192
15.5.8 /ISAPI/SDT/Management/IntelligentSearch?format=json ...................................... 193
15.6 /ISAPI/PTZCtrl .................................................................................................................. 193
15.6.1 /ISAPI/PTZCtrl/channels/<ID> ................................................................................. 193
15.6.2 /ISAPI/PTZCtrl/channels/<ID>/auxcontrols ............................................................. 194
15.6.3 /ISAPI/PTZCtrl/channels/<ID>/auxcontrols/<ID> .................................................... 195
15.6.4 /ISAPI/PTZCtrl/channels/<ID>/capabilities ............................................................. 195
15.6.5 /ISAPI/PTZCtrl/channels/<ID>/EagleFocusing/auto/capabilities?format=json ....... 196
15.6.6 /ISAPI/PTZCtrl/channels/<ID>/EagleFocusing/auto?format=json .......................... 196
15.6.7 /ISAPI/PTZCtrl/channels/<ID>/EagleFocusing/capabilities ..................................... 197
15.6.8 /ISAPI/PTZCtrl/channels/<ID>/lensCorrection/capabilities?format=json ............... 197

ix

Intelligent Security API (General Application) Developer Guide
15.6.9 /ISAPI/PTZCtrl/channels/<ID>/lensCorrection?format=json .................................. 197
15.6.10 /ISAPI/PTZCtrl/channels/<ID>/lockPTZ ................................................................. 198
15.6.11 /ISAPI/PTZCtrl/channels/<ID>/maxelevation ........................................................ 199
15.6.12 /ISAPI/PTZCtrl/channels/<ID>/maxelevation/capabilities .................................... 199
15.6.13 /ISAPI/PTZCtrl/channels/<ID>/onepushfoucs/reset ............................................. 200
15.6.14 /ISAPI/PTZCtrl/channels/<ID>/PTZOSDDisplay ..................................................... 200
15.6.15 /ISAPI/PTZCtrl/channels/<ID>/save ...................................................................... 201
15.6.16 /ISAPI/PTZCtrl/channels/<ID>/save?format=json ................................................. 201
15.6.17 /ISAPI/PTZCtrl/channels/<ID>/status .................................................................... 202
15.6.18 /ISAPI/PTZCtrl/channels/<ID>/zoomFocus ........................................................... 202
15.7 /ISAPI/Security ................................................................................................................. 203
15.7.1 /ISAPI/Security/adminAccesses .............................................................................. 203
15.7.2 /ISAPI/Security/adminAccesses/<ID> ..................................................................... 204
15.7.3 /ISAPI/Security/adminAccesses/capabilities ........................................................... 204
15.7.4 /ISAPI/Security/advanced?format=json .................................................................. 205
15.7.5 /ISAPI/Security/capabilities .................................................................................... 205
15.7.6 /ISAPI/Security/certificate/select/<functinName>?format=json ............................ 206
15.7.7 /ISAPI/Security/certificate/select/capabilities?format=json ................................... 206
15.7.8 /ISAPI/Security/challenge ....................................................................................... 207
15.7.9 /ISAPI/Security/CommuMode/capabilities?format=json ....................................... 207
15.7.10 /ISAPI/Security/CommuMode?format=json ......................................................... 207
15.7.11 /ISAPI/Security/deviceCertificate .......................................................................... 208
15.7.12 /ISAPI/Security/deviceCertificate/capabilities?format=json ................................. 209
15.7.13 /ISAPI/Security/deviceCertificate/certificateRevocation/capabilities?format=json
............................................................................................................................................ 209
15.7.14 /ISAPI/Security/deviceCertificate/certificateRevocation?format=json ................. 210
15.7.15 /ISAPI/Security/deviceCertificate/certificates/<customID>?format=json ............ 210
15.7.16 /ISAPI/Security/deviceCertificate/certificates/<ID> .............................................. 211

x

Intelligent Security API (General Application) Developer Guide
15.7.17 /ISAPI/Security/deviceCertificate/certificates/<ID>/recreate?format=json ......... 211
15.7.18 /ISAPI/Security/deviceCertificate/certificates/<ID>/status?format=json ............. 212
15.7.19 /ISAPI/Security/deviceCertificate/certificates/capabilities?format=json .............. 212
15.7.20 /ISAPI/Security/deviceCertificate/certificates/recreate?format=json .................. 213
15.7.21 /ISAPI/Security/deviceCertificate/certificates/status?format=json ...................... 213
15.7.22 /ISAPI/Security/deviceCertificate/certificates?format=json ................................. 213
15.7.23 /ISAPI/Security/deviceCertificate?customID= ...................................................... 214
15.7.24 /ISAPI/Security/doubleVerification/users/<ID>?format=json ............................... 215
15.7.25 /ISAPI/Security/doubleVerification/users/capabilities?format=json .................... 216
15.7.26 /ISAPI/Security/doubleVerification/users?format=json ....................................... 216
15.7.27 /ISAPI/Security/doubleVerification/UsersPermission/<ID>?format=json ............. 217
15.7.28 /ISAPI/Security/doubleVerification/UsersPermission/capabilities?format=json .. 218
15.7.29 /ISAPI/Security/doubleVerification?format=json ................................................. 218
15.7.30 /ISAPI/Security/email/parameter/capabilities?format=json ................................ 219
15.7.31 /ISAPI/Security/email/parameter?format=json .................................................... 220
15.7.32 /ISAPI/Security/email/qrCode?format=json ......................................................... 220
15.7.33 /ISAPI/Security/emailCertification?format=json ................................................... 221
15.7.34 /ISAPI/Security/extern/capabilities ....................................................................... 221
15.7.35 /ISAPI/Security/illegalLoginLock ........................................................................... 222
15.7.36 /ISAPI/Security/loginLinkNum?format=json ......................................................... 222
15.7.37 /ISAPI/Security/questionConfiguration ................................................................. 223
15.7.38 /ISAPI/Security/serverCertificate/capabilities?format=json ................................. 224
15.7.39 /ISAPI/Security/serverCertificate/certificate ........................................................ 224
15.7.40 /ISAPI/Security/serverCertificate/certificate?customID= ..................................... 225
15.7.41 /ISAPI/Security/serverCertificate/certificates?format=json ................................. 226
15.7.42 /ISAPI/Security/serverCertificate/certificates/<customID>?format=json ............. 227
15.7.43 /ISAPI/Security/serverCertificate/certSignReq ..................................................... 227
15.7.44 /ISAPI/Security/serverCertificate/certSignReq?customID= .................................. 228

xi

Intelligent Security API (General Application) Developer Guide
15.7.45 /ISAPI/Security/serverCertificate/downloadCertSignReq ..................................... 229
15.7.46 /ISAPI/Security/serverCertificate/downloadCertSignReq?customID= .................. 229
15.7.47 /ISAPI/Security/serverCertificate/selfSignCert?customID= .................................. 229
15.7.48 /ISAPI/Security/userCheck .................................................................................... 230
15.7.49 /ISAPI/Security/UserPermission ........................................................................... 231
15.7.50 /ISAPI/Security/UserPermission/<ID> ................................................................... 231
15.7.51 /ISAPI/Security/UserPermission/<ID>/localPermission ........................................ 232
15.7.52 /ISAPI/Security/UserPermission/<ID>/remotePermission .................................... 232
15.7.53 /ISAPI/Security/UserPermission/adminCap .......................................................... 233
15.7.54 /ISAPI/Security/UserPermission/operatorCap ...................................................... 233
15.7.55 /ISAPI/Security/UserPermission/viewerCap ......................................................... 234
15.7.56 /ISAPI/Security/users ............................................................................................ 234
15.7.57 /ISAPI/Security/users/<ID> ................................................................................... 238
15.7.58 /ISAPI/SecurityCP/ReportCenterCfg/capabilities?format=json ............................. 240
15.7.59 /ISAPI/SecurityCP/ReportCenterCfg/<ID>?format=json ....................................... 240
15.8 /ISAPI/Smart .................................................................................................................... 241
15.8.1 /ISAPI/Smart/capabilities ........................................................................................ 241
15.9 /ISAPI/Streaming .............................................................................................................. 241
15.9.1 /ISAPI/Streaming/channels ..................................................................................... 241
15.9.2 /ISAPI/Streaming/channels/<ID> ............................................................................ 242
15.9.3 /ISAPI/Streaming/channels/<ID>/capabilities ........................................................ 244
15.9.4 /ISAPI/Streaming/channels/<ID>/dynamicCap ....................................................... 246
15.9.5 /ISAPI/Streaming/channels/<ID>/picture ............................................................... 246
15.9.6 /ISAPI/Streaming/channels/<ID>/regionClip .......................................................... 247
15.9.7 /ISAPI/Streaming/channels/<ID>/regionClip/capabilities ....................................... 248
15.9.8 /ISAPI/Streaming/channels/<ID>/smartOverlap/capabilities?format=json ........... 248
15.9.9 /ISAPI/Streaming/channels/<ID>/smartOverlap?format=json ............................... 249
15.9.10 /ISAPI/Streaming/channels/<ID>/status ............................................................... 250

xii

Intelligent Security API (General Application) Developer Guide
15.9.11 /ISAPI/Streaming/encryption/capabilities?format=json ....................................... 250
15.9.12 /ISAPI/Streaming/encryption/secretKey?format=json ......................................... 250
15.9.13 /ISAPI/Streaming/encryption?format=json .......................................................... 251
15.9.14 /ISAPI/Streaming/status ....................................................................................... 252
15.9.15 rtsp://<host>[:port]/ISAPI/Streaming/channels/<ID> .......................................... 252
15.9.16 rtsp://<host>[:port]/ISAPI/Streaming/channels/<ID>?npq= ................................ 254
15.9.17 rtsp://<host>[:port]/ISAPI/Streaming/tracks/<ID>?starttime=&endtime= .......... 255
15.10 /ISAPI/System ................................................................................................................ 257
15.10.1 /ISAPI/System/accessDevice/associatedChannel?format=json ............................ 257
15.10.2 /ISAPI/System/AcsUpdate/capabilities ................................................................. 257
15.10.3 /ISAPI/System/activate ......................................................................................... 258
15.10.4 /ISAPI/System/algorithmsVersion ......................................................................... 258
15.10.5 /ISAPI/System/Audio/AudioIn/channels/<ID> ...................................................... 259
15.10.6 /ISAPI/System/Audio/AudioIn/channels/<ID>/capabilities ................................... 259
15.10.7 /ISAPI/System/Audio/AudioOut/channels/<ID> ................................................... 260
15.10.8 /ISAPI/System/Audio/AudioOut/channels/<ID>/capabilities ................................ 260
15.10.9 /ISAPI/System/Audio/capabilities ......................................................................... 261
15.10.10 /ISAPI/System/Audio/channels ........................................................................... 261
15.10.11 /ISAPI/System/Audio/channels/<ID> .................................................................. 262
15.10.12 /ISAPI/System/Audio/channels/<ID>/dynamicCap ............................................. 262
15.10.13 /ISAPI/System/autoMaintenance/capabilities?format=json ............................... 262
15.10.14 /ISAPI/System/autoMaintenance?format=json .................................................. 263
15.10.15 /ISAPI/System/Bluetooth/capabilities ................................................................ 263
15.10.16 /ISAPI/System/Bluetooth/ibeaconParam ............................................................ 264
15.10.17 /ISAPI/System/Bluetooth/ibeaconParam/capabilities ........................................ 264
15.10.18 /ISAPI/System/capabilities .................................................................................. 265
15.10.19 /ISAPI/System/configurationData?secretkey= .................................................... 265
15.10.20 /ISAPI/System/configurationData?type= ............................................................ 266

xiii

Intelligent Security API (General Application) Developer Guide
15.10.21 /ISAPI/System/deviceInfo ................................................................................... 268
15.10.22 /ISAPI/System/deviceInfo/capabilities ................................................................ 269
15.10.23 /ISAPI/System/diagnosedData ............................................................................ 269
15.10.24 /ISAPI/System/diagnosedData/exportStatus ...................................................... 269
15.10.25 /ISAPI/System/diagnosis/capabilities?format=json ............................................ 270
15.10.26 /ISAPI/System/diagnosis?format=json ................................................................ 270
15.10.27 /ISAPI/System/doubleLensParking/capabilities .................................................. 271
15.10.28 /ISAPI/System/dumpData ................................................................................... 271
15.10.29 /ISAPI/System/factoryReset?mode= ................................................................... 271
15.10.30 /ISAPI/System/fileExport/capabilities?format=json ........................................... 272
15.10.31 /ISAPI/System/fileExport?format=json ............................................................... 273
15.10.32 /ISAPI/System/guardAgainstTheft ....................................................................... 273
15.10.33 /ISAPI/System/guardAgainstTheft/capabilities ................................................... 274
15.10.34 /ISAPI/System/guideConfig/<guideEvent>/capabilities?format=json ................ 274
15.10.35 /ISAPI/System/guideConfig/<guideEvent>?format=json .................................... 274
15.10.36 /ISAPI/System/Hardware .................................................................................... 275
15.10.37 /ISAPI/System/Hardware/defog .......................................................................... 276
15.10.38 /ISAPI/System/installationAngleCalibration/channels/<ID>/capabilities?
format=json ....................................................................................................................... 276
15.10.39 /ISAPI/System/installationAngleCalibration/channels/<ID>?format=json .......... 277
15.10.40 /ISAPI/System/IO/capabilities ............................................................................. 277
15.10.41 /ISAPI/System/IO/inputs ..................................................................................... 278
15.10.42 /ISAPI/System/IO/inputs/<ID> ............................................................................ 278
15.10.43 /ISAPI/System/IO/inputs/<ID>/status ................................................................. 279
15.10.44 /ISAPI/System/IO/inputs/capabilities ................................................................. 279
15.10.45 /ISAPI/System/IO/outputs .................................................................................. 279
15.10.46 /ISAPI/System/IO/outputs/capabilities ............................................................... 280
15.10.47 /ISAPI/System/IO/outputs/<ID> ......................................................................... 280

xiv

Intelligent Security API (General Application) Developer Guide
15.10.48 /ISAPI/System/IO/outputs/<ID>/status .............................................................. 281
15.10.49 /ISAPI/System/IO/outputs/<ID>/trigger ............................................................. 281
15.10.50 /ISAPI/System/IO/status ..................................................................................... 282
15.10.51 /ISAPI/System/IOT/channelConfig?format=json ................................................. 282
15.10.52 /ISAPI/System/IOT/channels/<ID>/<EventType>/capabilities?format=json ....... 283
15.10.53 /ISAPI/System/IOT/channels/<ID>/<EventType>?format=json ........................... 283
15.10.54 /ISAPI/System/IOT/channels/<ID>/alarmStatistics?format=json ........................ 284
15.10.55 /ISAPI/System/IOT/channels/<ID>/all?format=json ........................................... 284
15.10.56 /ISAPI/System/IOT/channels/<ID>/basicParam?format=json ............................. 285
15.10.57 /ISAPI/System/IOT/channels/<ID>/OSD/capabilities?format=json ..................... 285
15.10.58 /ISAPI/System/IOT/channels/<ID>/OSD?format=json ........................................ 286
15.10.59 /ISAPI/System/IOT/channels/<ID>/status?format=json ...................................... 286
15.10.60 /ISAPI/System/IOT/channels/<ID>?format=json ................................................. 287
15.10.61 /ISAPI/System/IOT/channels/status?format=json ............................................... 288
15.10.62 /ISAPI/System/IOT/channels/status?format=json&deviceInductiveType= ......... 289
15.10.63 /ISAPI/System/IOT/channels?format=json .......................................................... 289
15.10.64 /ISAPI/System/IOT/channels?format=json&deviceInductiveType= .................... 290
15.10.65 /ISAPI/System/IOT/linkageChannels?format=json .............................................. 291
15.10.66 /ISAPI/System/IOT/search?format=json ............................................................. 291
15.10.67 /ISAPI/System/IOT/sourceCapabilities?format=json ........................................... 292
15.10.68 /ISAPI/System/IOT/sourceSupport/capabilities?format=json ............................. 292
15.10.69 /ISAPI/System/logServer ..................................................................................... 293
15.10.70 /ISAPI/System/logServer/capabilities ................................................................. 293
15.10.71 /ISAPI/System/logServer/test ............................................................................. 294
15.10.72 /ISAPI/System/Network/adaption/capabilities?format=json ............................. 294
15.10.73 /ISAPI/System/Network/adaption?format=json&streamType= ......................... 295
15.10.74 /ISAPI/System/Network/Bond ............................................................................ 295
15.10.75 /ISAPI/System/Network/Bond/<ID> ................................................................... 296

xv

Intelligent Security API (General Application) Developer Guide
15.10.76 /ISAPI/System/Network/capabilities ................................................................... 296
15.10.77 /ISAPI/System/Network/channels/<ID>/buletooth/status ................................. 297
15.10.78 /ISAPI/System/Network/DDNS ........................................................................... 298
15.10.79 /ISAPI/System/Network/DDNS/capabilities ........................................................ 298
15.10.80 /ISAPI/System/Network/DDNS/<ID> .................................................................. 299
15.10.81 /ISAPI/System/Network/DDNS/<ID>/capabilities ............................................... 299
15.10.82 /ISAPI/System/Network/Ehome ......................................................................... 300
15.10.83 /ISAPI/System/Network/Ehome/capabilities ...................................................... 300
15.10.84 /ISAPI/System/Network/Ehome?centerID= ........................................................ 301
15.10.85 /ISAPI/System/Network/EZVIZ ............................................................................ 301
15.10.86 /ISAPI/System/Network/EZVIZ/secretKey?format=json ..................................... 302
15.10.87 /ISAPI/System/Network/ftp ................................................................................ 303
15.10.88 /ISAPI/System/Network/ftp/<ID> ....................................................................... 303
15.10.89 /ISAPI/System/Network/ftp/capabilities ............................................................ 304
15.10.90 /ISAPI/System/Network/ftp/test ........................................................................ 304
15.10.91 /ISAPI/System/Network/interfaces ..................................................................... 305
15.10.92 /ISAPI/System/Network/interfaces/<ID> ............................................................ 306
15.10.93 /ISAPI/System/Network/interfaces/<ID>/capabilities ........................................ 306
15.10.94 /ISAPI/System/Network/interfaces/<ID>/discovery ........................................... 307
15.10.95 /ISAPI/System/Network/interfaces/<ID>/discovery/capabilities ........................ 307
15.10.96 /ISAPI/System/Network/interfaces/<ID>/dynamicHostName?format=json ...... 308
15.10.97 /ISAPI/System/Network/interfaces/<ID>/dynamicHostName/capabilities?
format=json ....................................................................................................................... 309
15.10.98 /ISAPI/System/Network/interfaces/<ID>/ieee802.1x ......................................... 309
15.10.99 /ISAPI/System/Network/interfaces/<ID>/ieee802.1x/capabilities ..................... 310
15.10.100 /ISAPI/System/Network/interfaces/<ID>/ipAddress ........................................ 310
15.10.101 /ISAPI/System/Network/interfaces/<ID>/ipAddress/capabilities ..................... 311
15.10.102 /ISAPI/System/Network/interfaces/<ID>/link ................................................... 312

xvi

Intelligent Security API (General Application) Developer Guide
15.10.103 /ISAPI/System/Network/interfaces/<ID>/link/capabilities ............................... 312
15.10.104 /ISAPI/System/Network/interfaces/<ID>/NetworkMode ................................. 313
15.10.105 /ISAPI/System/Network/interfaces/<ID>/wireless ........................................... 313
15.10.106 /ISAPI/System/Network/interfaces/<ID>/wireless/accessDeviceList/<ID> ...... 314
15.10.107 /ISAPI/System/Network/interfaces/<ID>/wireless/accessDeviceList/capabilities
............................................................................................................................................ 315
15.10.108 /ISAPI/System/Network/interfaces/<ID>/wireless/accessPointList .................. 315
15.10.109 /ISAPI/System/Network/interfaces/<ID>/wireless/accessPointList/<ID> ......... 316
15.10.110 /ISAPI/System/Network/interfaces/<ID>/wireless/capabilities ........................ 316
15.10.111 /ISAPI/System/Network/interfaces/<ID>/wirelessServer ................................. 317
15.10.112 /ISAPI/System/Network/interfaces/ID/wirelessServer/accessDeviceList ......... 317
15.10.113 /ISAPI/System/Network/interfaces/<ID>/wirelessServer/capabilities ............. 318
15.10.114 /ISAPI/System/Network/interfaces/<ID>/wirelessServerStatus ....................... 318
15.10.115 /ISAPI/System/Network/interfaces/<ID>/wirelessServerStatus/capabilities ... 319
15.10.116 /ISAPI/System/Network/interfaces/<ID>/wirelessStatus ................................. 319
15.10.117 /ISAPI/System/Network/interfaces/<ID>/wirelessStatus/capabilities .............. 320
15.10.118 /ISAPI/System/Network/ipFilter ....................................................................... 321
15.10.119 /ISAPI/System/Network/ipFilter/capabilities .................................................... 321
15.10.120 /ISAPI/System/Network/MACFilter .................................................................. 322
15.10.121 /ISAPI/System/Network/MACFilter/capabilities ............................................... 322
15.10.122 /ISAPI/System/Network/mailing ....................................................................... 323
15.10.123 /ISAPI/System/Network/mailing/<ID> .............................................................. 323
15.10.124 /ISAPI/System/Network/mailing/capabilities ................................................... 324
15.10.125 /ISAPI/System/Network/mailing/test ............................................................... 324
15.10.126 /ISAPI/System/Network/POE/capabilities?format=json ................................... 325
15.10.127 /ISAPI/System/Network/POE?format=json ...................................................... 325
15.10.128 /ISAPI/System/Network/resourceStatistics?format=json ................................. 325
15.10.129 /ISAPI/System/Network/SIP .............................................................................. 326

xvii

Intelligent Security API (General Application) Developer Guide
15.10.130 /ISAPI/System/Network/SIP/<ID> ..................................................................... 327
15.10.131 /ISAPI/System/Network/SIP/<ID>/capabilities ................................................. 327
15.10.132 /ISAPI/System/Network/SIP/<ID>/SIPInfo ........................................................ 328
15.10.133 /ISAPI/System/Network/SIP/<ID>/SIPInfo/capabilities ..................................... 328
15.10.134 /ISAPI/System/Network/SIP/<ID>/SIPInfo/multiInfo ........................................ 329
15.10.135 /ISAPI/System/Network/socketIP ..................................................................... 329
15.10.136 /ISAPI/System/Network/ssh ............................................................................. 330
15.10.137 /ISAPI/System/Network/StaticRoute ................................................................ 330
15.10.138 /ISAPI/System/Network/telnetd ....................................................................... 331
15.10.139 /ISAPI/System/Network/telnetd/capabilities ................................................... 332
15.10.140 /ISAPI/System/Network/UPnP .......................................................................... 332
15.10.141 /ISAPI/System/Network/UPnP/ports ................................................................ 333
15.10.142 /ISAPI/System/Network/UPnP/ports/status ..................................................... 333
15.10.143 /ISAPI/System/Network/UPnP/ports/<ID> ....................................................... 334
15.10.144 /ISAPI/System/Network/UPnP/ports/<ID>/status ............................................ 334
15.10.145 /ISAPI/System/Network/verificationCodeCheck ............................................... 335
15.10.146 /ISAPI/System/Network/WirelessDial/Interfaces/<ID>/dial ............................. 335
15.10.147 /ISAPI/System/Network/WirelessDial/Interfaces/<ID>/dial/capabilities ......... 336
15.10.148 /ISAPI/System/Network/WirelessDial/Interfaces/<ID>/dialstatus ................... 336
15.10.149 /ISAPI/System/onlineUpgrade/capabilities ....................................................... 337
15.10.150 /ISAPI/System/onlineUpgrade/deviceParameter?format=json ........................ 337
15.10.151 /ISAPI/System/onlineUpgrade/downloadPackage/pause?format=json ........... 338
15.10.152 /ISAPI/System/onlineUpgrade/downloadPackage/resume?format=json ......... 338
15.10.153 /ISAPI/System/onlineUpgrade/downloadPackage/status?format=json ........... 339
15.10.154 /ISAPI/System/onlineUpgrade/downloadPackage?format=json ...................... 339
15.10.155 /ISAPI/System/onlineUpgrade/ignoreCurrentVersion?format=json ................. 340
15.10.156 /ISAPI/System/onlineUpgrade/server ............................................................... 340
15.10.157 /ISAPI/System/onlineUpgrade/status ............................................................... 341

xviii

Intelligent Security API (General Application) Developer Guide
15.10.158 /ISAPI/System/onlineUpgrade/upgradeWithoutDownload?format=json ........ 341
15.10.159 /ISAPI/System/onlineUpgrade/version ............................................................. 341
15.10.160 /ISAPI/System/reboot ....................................................................................... 342
15.10.161 /ISAPI/System/Serial/capabilities ...................................................................... 342
15.10.162 /ISAPI/System/Serial/ports ............................................................................... 342
15.10.163 /ISAPI/System/Serial/ports/<ID> ...................................................................... 343
15.10.164 /ISAPI/System/Serial/ports/<ID>/capabilities ................................................... 343
15.10.165 /ISAPI/System/Serial/ports/command .............................................................. 344
15.10.166 /ISAPI/System/Serial/ports/command/capabilities .......................................... 345
15.10.167 /ISAPI/System/serialLogCfg/capabilities?format=json ...................................... 345
15.10.168 /ISAPI/System/serialLogCfg?format=json ......................................................... 346
15.10.169 /ISAPI/System/shutdown?format=json ............................................................. 346
15.10.170 /ISAPI/System/Software/channels/<ID> ........................................................... 347
15.10.171 /ISAPI/System/Software/channels/<ID>/capabilities ....................................... 347
15.10.172 /ISAPI/System/status ........................................................................................ 348
15.10.173 /ISAPI/System/syncSignalOutput/<ID> ............................................................. 348
15.10.174 /ISAPI/System/syncSignalOutput/<ID>/capabilities .......................................... 349
15.10.175 /ISAPI/System/time ........................................................................................... 349
15.10.176 /ISAPI/System/time/capabilities ....................................................................... 350
15.10.177 /ISAPI/System/time/localTime .......................................................................... 350
15.10.178 /ISAPI/System/time/ntpServers ........................................................................ 351
15.10.179 /ISAPI/System/time/ntpServers/<ID> ............................................................... 352
15.10.180 /ISAPI/System/time/ntpServers/<ID>/capabilities ........................................... 352
15.10.181 /ISAPI/System/time/ntpServers/capabilities .................................................... 353
15.10.182 /ISAPI/System/time/ntpServers/test ................................................................ 353
15.10.183 /ISAPI/System/time/timeType?format=json ..................................................... 354
15.10.184 /ISAPI/System/time/timeZone .......................................................................... 354
15.10.185 /ISAPI/System/TwoWayAudio/channels ........................................................... 355

xix

Intelligent Security API (General Application) Developer Guide
15.10.186 /ISAPI/System/TwoWayAudio/channels/<ID> .................................................. 356
15.10.187 /ISAPI/System/TwoWayAudio/channels/<ID>/audioData ................................ 356
15.10.188 /ISAPI/System/TwoWayAudio/channels/<ID>/capabilities ............................... 358
15.10.189 /ISAPI/System/TwoWayAudio/channels/<ID>/close ......................................... 358
15.10.190 /ISAPI/System/TwoWayAudio/channels/<ID>/open ......................................... 359
15.10.191 /ISAPI/System/unitConfig/capabilities?format=json ........................................ 360
15.10.192 /ISAPI/System/unitConfig?format=json ............................................................ 361
15.10.193 /ISAPI/System/updateFirmware ....................................................................... 361
15.10.194 /ISAPI/System/updateFirmware?type=&id= ..................................................... 362
15.10.195 /ISAPI/System/updateFirmware?type=&moduleAddress= ............................... 363
15.10.196 /ISAPI/System/upgradeStatus ........................................................................... 364
15.10.197 /ISAPI/System/userLock/config/capabilities?format=json ............................... 364
15.10.198 /ISAPI/System/userLock/config?format=json ................................................... 364
15.10.199 /ISAPI/System/userLock/lockedUsers?format=json ......................................... 365
15.10.200 /ISAPI/System/userLock/unlockUser?format=json ........................................... 365
15.10.201 /ISAPI/System/Video/capabilities ..................................................................... 366
15.10.202 /ISAPI/System/Video/inputs ............................................................................. 366
15.10.203 /ISAPI/System/Video/inputs/channels ............................................................. 366
15.10.204 /ISAPI/System/Video/inputs/channels/<ID> .................................................... 367
15.10.205 /ISAPI/System/Video/inputs/channels?format=json ........................................ 368
15.10.206 /ISAPI/System/Video/inputs/channels/<ID>/focus .......................................... 368
15.10.207 /ISAPI/System/Video/inputs/channels/<ID>?format=json ............................... 368
15.10.208 /ISAPI/System/Video/inputs/channels/<ID>/capabilities ................................. 369
15.10.209 /ISAPI/System/Video/inputs/channels/<ID>/iris .............................................. 369
15.10.210 /ISAPI/System/Video/inputs/channels/<ID>/overlays ...................................... 370
15.10.211 /ISAPI/System/Video/inputs/channels/<ID>/overlays/BatteryPowerOverlay .. 372
15.10.212 /ISAPI/System/Video/inputs/channels/<ID>/overlays/BatteryPowerOverlay/
capabilities ......................................................................................................................... 372

xx

Intelligent Security API (General Application) Developer Guide
15.10.213 /ISAPI/System/Video/inputs/channels/<ID>/overlays/capabilities .................. 373
15.10.214 /ISAPI/System/Video/inputs/channels/<ID>/overlays/channelNameOverlay .. 373
15.10.215 /ISAPI/System/Video/inputs/channels/<ID>/overlays/dateTimeOverlay ......... 374
15.10.216 /ISAPI/System/Video/inputs/channels/<ID>/overlays/dateTimeOverlay/
capabilities ......................................................................................................................... 375
15.10.217 /ISAPI/System/Video/inputs/channels/<ID>/overlays/text .............................. 375
15.10.218 /ISAPI/System/Video/inputs/channels/<ID>/overlays/text/<ID> ..................... 376
15.10.219 /ISAPI/System/Video/inputs/channels/<ID>/privacyMask ............................... 377
15.10.220 /ISAPI/System/Video/inputs/channels/<ID>/privacyMask/privacyMaskCap ... 378
15.10.221 /ISAPI/System/Video/inputs/channels/<ID>/privacyMask/regions .................. 378
15.10.222 /ISAPI/System/Video/inputs/channels/<ID>/privacyMask/regions/<ID> ......... 379
15.10.223 /ISAPI/System/Video/inputs/channels/<ID>/VCAResource .............................. 380
15.10.224 /ISAPI/System/Video/inputs/channels/<ID>/VCAResource/capabilities .......... 381
15.10.225 /ISAPI/System/Video/inputs/channels/counting/collection/capabilities?
format=json ....................................................................................................................... 382
15.10.226 /ISAPI/System/Video/inputs/channels/counting/collection?format=json ....... 382
15.10.227 /ISAPI/System/Video/inputs/channels/heatMap/collection/capabilities?
format=json ....................................................................................................................... 382
15.10.228 /ISAPI/System/Video/inputs/channels/heatMap/collection?format=json ....... 383
15.10.229 /ISAPI/System/Video/inputs/OSDLanguage ..................................................... 383
15.10.230 /ISAPI/System/Video/outputs ........................................................................... 384
15.10.231 /ISAPI/System/Video/outputs/channels ........................................................... 384
15.10.232 /ISAPI/System/Video/outputs/channels/<ID> .................................................. 385
15.10.233 /ISAPI/System/Video/outputs/channels/<ID>/capabilities ............................... 385
15.10.234 /ISAPI/System/Video/outputs/PreviewSwitch/capabilities .............................. 386
15.10.235 /ISAPI/System/Video/outputs/PreviewSwitch/capabilities?videoOutType= .... 386
15.10.236 /ISAPI/System/Video/outputs/PreviewSwitch?groupID=&videoOutType= ...... 387
15.10.237 /ISAPI/System/Video/outputs/PreviewSwitch?
groupID=&videoOutType=&previewFrameNo= ................................................................. 388

xxi

Intelligent Security API (General Application) Developer Guide
15.10.238 /ISAPI/System/workingstatus/hdStatus?format=json ...................................... 389
15.10.239 /ISAPI/System/workingstatus/chanStatus?format=json ................................... 389
15.10.240 /ISAPI/System/workingstatus/capabilities?format=json .................................. 390
15.10.241 /ISAPI/System/workingstatus?format=json ...................................................... 390
15.10.242 /ISAPI/System/workingstatus/IOStatus?format=json ....................................... 391
15.10.243 /ISAPI/System/zeroBiasCalibration/channels/<ID>?format=json ..................... 391
15.11 /ISAPI/Thermal ............................................................................................................... 392
15.11.1 /ISAPI/Thermal/capabilities .................................................................................. 392
15.11.2 /ISAPI/Thermal/temperature/collection/capabilities?format=json ...................... 392
15.11.3 /ISAPI/Thermal/temperature/collection?format=json ......................................... 392
Chapter 16 Request and Response Message ........................................................................... 394
16.1 JSON Messages ................................................................................................................ 394
16.1.1 JSON_Adaption ....................................................................................................... 394
16.1.2 JSON_AdaptionCap ................................................................................................. 394
16.1.3 JSON_AlarmStatistics .............................................................................................. 395
16.1.4 JSON_AssociatedChannelList .................................................................................. 395
16.1.5 JSON_AudioAlarm ................................................................................................... 395
16.1.6 JSON_AudioAlarmCap ............................................................................................. 396
16.1.7 JSON_AutoEagleFocusing ........................................................................................ 398
16.1.8 JSON_AutoEagleFocusingCap .................................................................................. 398
16.1.9 JSON_AutoGotoCfg ................................................................................................. 400
16.1.10 JSON_AutoGotoCfgCap ......................................................................................... 400
16.1.11 JSON_AutoMaintenance ....................................................................................... 400
16.1.12 JSON_AutoMaintenanceCap ................................................................................. 401
16.1.13 JSON_BasicParam ................................................................................................. 401
16.1.14 JSON_CalibrationStatus ........................................................................................ 401
16.1.15 JSON_Cap_CalibrationStatus ................................................................................ 401
16.1.16 JSON_Cap_CertificateSelect .................................................................................. 402

xxii

Intelligent Security API (General Application) Developer Guide
16.1.17 JSON_Cap_CommuMode ...................................................................................... 402
16.1.18 JSON_Cap_ExportInfo ........................................................................................... 403
16.1.19 JSON_Cap_IntelliManagement ............................................................................. 403
16.1.20 JSON_Cap_POE ..................................................................................................... 404
16.1.21 JSON_Cap_ReportCenterCfg ................................................................................. 404
16.1.22 JSON_Cap_WorkingStatus .................................................................................... 405
16.1.23 JSON_CertificateRevocation .................................................................................. 406
16.1.24 JSON_CertificateRevocationCap ........................................................................... 406
16.1.25 JSON_CertificateSelect .......................................................................................... 407
16.1.26 JSON_ChanCond ................................................................................................... 407
16.1.27 JSON_ChanStatus .................................................................................................. 408
16.1.28 JSON_ChannelInfoList ........................................................................................... 408
16.1.29 JSON_ChannelInfo ................................................................................................ 409
16.1.30 JSON_ChangedStatus ............................................................................................ 409
16.1.31 JSON_CommuMode .............................................................................................. 411
16.1.32 JSON_DeviceCertificate ......................................................................................... 411
16.1.33 JSON_DeviceCertificateCap ................................................................................... 411
16.1.34 JSON_DeviceCertificates ....................................................................................... 412
16.1.35 JSON_DeviceCertificatesCap ................................................................................. 412
16.1.36 JSON_DeviceCertificateStatus ............................................................................... 413
16.1.37 JSON_DeviceCertificateStatusList ......................................................................... 413
16.1.38 JSON_DiagnosisCond ............................................................................................ 414
16.1.39 JSON_DiagnosisCondCap ...................................................................................... 414
16.1.40 JSON_DiagnosisResult ........................................................................................... 415
16.1.41 JSON_DoubleVerification ...................................................................................... 415
16.1.42 JSON_DownloadPackageStatus ............................................................................. 415
16.1.43 JSON_DynamicHostName ..................................................................................... 416
16.1.44 JSON_DynamicHostNameCap ............................................................................... 416

xxiii

Intelligent Security API (General Application) Developer Guide
16.1.45 JSON_EmailCertification ....................................................................................... 416
16.1.46 JSON_EnableEncryption ........................................................................................ 417
16.1.47 JSON_EncryptFormat ............................................................................................ 417
16.1.48 JSON_EncryptionCap ............................................................................................ 417
16.1.49 JSON_EncryptVerfy ............................................................................................... 417
16.1.50 JSON_EPTZMode ................................................................................................... 418
16.1.51 JSON_EPTZModeCap ............................................................................................. 419
16.1.52 JSON_EventNotificationAlert_Alarm/EventInfo .................................................... 421
16.1.53 JSON_EventNotificationAlert_CertificateExpiryAlarmMsg ................................... 422
16.1.54 JSON_EventNotificationAlert_HDDBadSectorEventMsg ....................................... 423
16.1.55 JSON_EventNotificationAlert_HDDHighTemperatureEventMsg ........................... 423
16.1.56 JSON_EventNotificationAlert_HDDImpactEventMsg ............................................ 424
16.1.57 JSON_EventNotificationAlert_HDDLowTemperatureEventMsg ............................ 425
16.1.58 JSON_EventNotificationAlert_HDDSevereFaultEventMsg .................................... 426
16.1.59 JSON_EventNotificationAlert_voltageinstable ...................................................... 426
16.1.60 JSON_EventSearchCap .......................................................................................... 427
16.1.61 JSON_EventSearchCond ........................................................................................ 429
16.1.62 JSON_EventSearchResult ...................................................................................... 431
16.1.63 JSON_ExportInfo ................................................................................................... 433
16.1.64 JSON_ExporttoUSB_TaskInfo ................................................................................ 434
16.1.65 JSON_EZVIZSecretKey ........................................................................................... 434
16.1.66 JSON_FileExport .................................................................................................... 434
16.1.67 JSON_FileExportCap .............................................................................................. 434
16.1.68 JSON_FileExportResult .......................................................................................... 435
16.1.69 JSON_GuideConfig ................................................................................................ 435
16.1.70 JSON_GuideConfigCap .......................................................................................... 436
16.1.71 JSON_HeatMap_CollectionDescription ................................................................ 437
16.1.72 JSON_HeatMap_CollectionDescriptionCap .......................................................... 438

xxiv

Intelligent Security API (General Application) Developer Guide
16.1.73 JSON_HeatMap_CollectionResult ......................................................................... 439
16.1.74 JSON_HDCond ....................................................................................................... 440
16.1.75 JSON_HddFormatList ............................................................................................ 440
16.1.76 JSON_HDStatus ..................................................................................................... 440
16.1.77 JSON_id ................................................................................................................. 441
16.1.78 JSON_InputParam ................................................................................................. 441
16.1.79 JSON_IntelligentSearchCondition ......................................................................... 441
16.1.80 JSON_IOStatus ...................................................................................................... 443
16.1.81 JSON_IOT_ChannelInfo ......................................................................................... 443
16.1.82 JSON_IOT_ChannelInfoList .................................................................................... 443
16.1.83 JSON_IOT_ErrorList ............................................................................................... 444
16.1.84 JSON_IOTChannel ................................................................................................. 444
16.1.85 JSON_IOTChannelEventCap .................................................................................. 446
16.1.86 JSON_IOTChannelList ............................................................................................ 448
16.1.87 JSON_IOTChannelStatus ....................................................................................... 448
16.1.88 JSON_IOTChannelStatusList .................................................................................. 449
16.1.89 JSON_IOTSourceDescription ................................................................................. 449
16.1.90 JSON_IOTSourceList .............................................................................................. 450
16.1.91 JSON_IOTSourceSupport ....................................................................................... 451
16.1.92 JSON_LensCorrection ............................................................................................ 452
16.1.93 JSON_LensCorrectionCap ...................................................................................... 452
16.1.94 JSON_LinkageChansCond ...................................................................................... 453
16.1.95 JSON_List_IPAddress ............................................................................................. 453
16.1.96 JSON_LockCfg ........................................................................................................ 454
16.1.97 JSON_LockCfgCap ................................................................................................. 454
16.1.98 JSON_LoginLinkNum ............................................................................................. 454
16.1.99 JSON_OnlineUpgradeParameter ........................................................................... 455
16.1.100 JSON_operType ................................................................................................... 455

xxv

Intelligent Security API (General Application) Developer Guide
16.1.101 JSON_OSD ........................................................................................................... 455
16.1.102 JSON_OSDCap ..................................................................................................... 456
16.1.103 JSON_PeopleCounting_CollectionDescription .................................................... 458
16.1.104 JSON_PeopleCounting_CollectionDescriptionCap .............................................. 459
16.1.105 JSON_PeopleCounting_CollectionResult ............................................................ 459
16.1.106 JSON_POE ........................................................................................................... 460
16.1.107 JSON_ProgressInfo .............................................................................................. 460
16.1.108 JSON_ReportCenterCfg ....................................................................................... 460
16.1.109 JSON_ResponseStatus ......................................................................................... 461
16.1.110 JSON_resourceStatistics ...................................................................................... 462
16.1.111 JSON_Result ........................................................................................................ 462
16.1.112 JSON_secretKey .................................................................................................. 462
16.1.113 JSON_SecurityAdvanced ..................................................................................... 463
16.1.114 JSON_SecurityEmail ............................................................................................ 463
16.1.115 JSON_SecurityEmailCap ...................................................................................... 463
16.1.116 JSON_SecurityEmailQrCode ................................................................................ 464
16.1.117 JSON_SerialLogCfg .............................................................................................. 464
16.1.118 JSON_SerialLogCfgCap ........................................................................................ 464
16.1.119 JSON_ServerCertificateCap ................................................................................. 465
16.1.120 JSON_ServerCertificates ..................................................................................... 466
16.1.121 JSON_SmartOverlap ............................................................................................ 467
16.1.122 JSON_SmartOverlapCap ...................................................................................... 467
16.1.123 JSON_SourceCapabilities .................................................................................... 467
16.1.124 JSON_StopTaskCond ........................................................................................... 468
16.1.125 JSON_CollectionDescription ............................................................................... 468
16.1.126 JSON_Temperature_CollectionDescriptionCap ................................................... 469
16.1.127 JSON_CollectionResult ........................................................................................ 469
16.1.128 JSON_TimeType .................................................................................................. 471

xxvi

Intelligent Security API (General Application) Developer Guide
16.1.129 JSON_unitConfig ................................................................................................. 471
16.1.130 JSON_unitConfigCap ........................................................................................... 471
16.1.131 JSON_User .......................................................................................................... 472
16.1.132 JSON_UserCap .................................................................................................... 472
16.1.133 JSON_UserList ..................................................................................................... 472
16.1.134 JSON_UserPermission ......................................................................................... 473
16.1.135 JSON_UserPermissionCap ................................................................................... 474
16.1.136 JSON_IntelligentSearchCap ................................................................................. 474
16.1.137 JSON_VCASearchExportCond .............................................................................. 477
16.1.138 JSON_VCASearchExportProgress ........................................................................ 480
16.1.139 JSON_VCASearchExportTaskInfo ......................................................................... 481
16.1.140 JSON_IntelligentSearchResult ............................................................................. 481
16.1.141 JSON_WhiteLightAlarm ....................................................................................... 483
16.1.142 JSON_WhiteLightAlarmCap ................................................................................. 484
16.1.143 JSON_WorkingStatus .......................................................................................... 485
16.1.144 JSON_XX .............................................................................................................. 486
16.1.145 JSON_XXCap ........................................................................................................ 486
16.2 XML Messages ................................................................................................................. 487
16.2.1 XML_accessDevice .................................................................................................. 487
16.2.2 XML_accessDeviceList ............................................................................................. 487
16.2.3 XML_accessPoint .................................................................................................... 487
16.2.4 XML_accessPointList ............................................................................................... 488
16.2.5 XML_ActivateInfo .................................................................................................... 488
16.2.6 XML_AdminAccessProtocol .................................................................................... 488
16.2.7 XML_AdminAccessProtocolList ............................................................................... 489
16.2.8 XML_AlgorithmsVersion .......................................................................................... 489
16.2.9 XML_AudioCap ....................................................................................................... 490
16.2.10 XML_AudioChannel .............................................................................................. 490

xxvii

Intelligent Security API (General Application) Developer Guide
16.2.11 XML_AudioChannelList ......................................................................................... 491
16.2.12 XML_AudioDscriptor ............................................................................................. 491
16.2.13 XML_AudioIn ........................................................................................................ 491
16.2.14 XML_AudioInCap .................................................................................................. 492
16.2.15 XML_AudioOut ...................................................................................................... 493
16.2.16 XML_AudioOutCap ............................................................................................... 494
16.2.17 XML_BadSectorsTest ............................................................................................. 495
16.2.18 XML_BadSectorsTestStatus ................................................................................... 495
16.2.19 XML_BatteryPowerOverlay ................................................................................... 496
16.2.20 XML_BLC ............................................................................................................... 496
16.2.21 XML_BluetoothCap ............................................................................................... 497
16.2.22 XML_BluetoothStatus ........................................................................................... 497
16.2.23 XML_Bond ............................................................................................................. 497
16.2.24 XML_BondList ....................................................................................................... 498
16.2.25 XML_BurningPreventionCap ................................................................................. 499
16.2.26 XML_Cap_accessDeviceList ................................................................................... 499
16.2.27 XML_Cap_AcsUpdate ............................................................................................ 500
16.2.28 XML_Cap_AdminAccessProtocolList ..................................................................... 501
16.2.29 XML_Cap_BatteryPowerOverlay ........................................................................... 501
16.2.30 XML_Cap_Color .................................................................................................... 502
16.2.31 XML_Cap_DatetimeOverlay .................................................................................. 502
16.2.32 XML_Cap_DDNS .................................................................................................... 503
16.2.33 XML_Cap_DeviceInfo ............................................................................................ 504
16.2.34 XML_Cap_DefaultParam ....................................................................................... 505
16.2.35 XML_Cap_Dial ....................................................................................................... 506
16.2.36 XML_Cap_Discovery ............................................................................................. 506
16.2.37 XML_Cap_EagleFocusing ...................................................................................... 507
16.2.38 XML_Cap_EHome ................................................................................................. 507

xxviii

Intelligent Security API (General Application) Developer Guide
16.2.39 XML_Cap_ExtraInfo ............................................................................................... 508
16.2.40 XML_Cap_FocusConfiguration .............................................................................. 508
16.2.41 XML_Cap_FTPNotification .................................................................................... 508
16.2.42 XML_Cap_FTPNotificationList ............................................................................... 511
16.2.43 XML_Cap_GuardAgainstTheft ............................................................................... 512
16.2.44 XML_Cap_HardwareService .................................................................................. 512
16.2.45 XML_Cap_hddList ................................................................................................. 513
16.2.46 XML_Cap_IbeaconParam ...................................................................................... 514
16.2.47 XML_Cap_IEEE802_1x .......................................................................................... 514
16.2.48 XML_Cap_ImageChannel ...................................................................................... 515
16.2.49 XML_Cap_InputProxyChannel .............................................................................. 517
16.2.50 XML_Cap_IOInputPortList ..................................................................................... 517
16.2.51 XML_Cap_IOOutputPortList .................................................................................. 518
16.2.52 XML_Cap_IpAddress ............................................................................................. 518
16.2.53 XML_Cap_IPFilter .................................................................................................. 520
16.2.54 XML_Cap_ItemList ................................................................................................ 521
16.2.55 XML_Cap_LensDistortionCorrection ..................................................................... 521
16.2.56 XML_Cap_Link ....................................................................................................... 522
16.2.57 XML_Cap_LogConfig ............................................................................................. 522
16.2.58 XML_Cap_MACFilter ............................................................................................. 522
16.2.59 XML_Cap_mailingList ............................................................................................ 522
16.2.60 XML_Cap_MaxElevation ....................................................................................... 523
16.2.61 XML_Cap_NetworkInterface ................................................................................. 523
16.2.62 XML_Cap_NTPServer ............................................................................................ 523
16.2.63 XML_Cap_PreviewSwitch ...................................................................................... 524
16.2.64 XML_Cap_RegionClip ............................................................................................ 524
16.2.65 XML_Cap_RuleInfo ................................................................................................ 525
16.2.66 XML_Cap_SerialCommand ................................................................................... 528

xxix

Intelligent Security API (General Application) Developer Guide
16.2.67 XML_Cap_SerialPort ............................................................................................. 528
16.2.68 XML_Cap_SIPInfo .................................................................................................. 529
16.2.69 XML_Cap_SIPServer .............................................................................................. 529
16.2.70 XML_Cap_SmartSearchDescription ...................................................................... 531
16.2.71 XML_Cap_SoftwareService ................................................................................... 534
16.2.72 XML_Cap_StreamingChannel ............................................................................... 535
16.2.73 XML_Cap_SupplementLight .................................................................................. 537
16.2.74 XML_Cap_SyncSignalOutputList ........................................................................... 538
16.2.75 XML_Cap_Telnetd ................................................................................................. 540
16.2.76 XML_Cap_tempRange ........................................................................................... 540
16.2.77 XML_Cap_Time ..................................................................................................... 541
16.2.78 XML_Cap_Track ..................................................................................................... 541
16.2.79 XML_Cap_VCAResource ........................................................................................ 543
16.2.80 XML_Cap_VideoInputChannel .............................................................................. 543
16.2.81 XML_Cap_VideoOutputChannel ........................................................................... 544
16.2.82 XML_Cap_VideoOverlay ....................................................................................... 544
16.2.83 XML_Cap_Wireless ............................................................................................... 545
16.2.84 XML_Cap_WirelessServer ..................................................................................... 547
16.2.85 XML_Cap_WirelessServerStatus ........................................................................... 548
16.2.86 XML_Cap_WirelessStatus ..................................................................................... 549
16.2.87 XML_CaptureMode ............................................................................................... 550
16.2.88 XML_CertificateInfo .............................................................................................. 550
16.2.89 XML_CertificateReq .............................................................................................. 551
16.2.90 XML_CertificateReq_ImportCert ........................................................................... 551
16.2.91 XML_CertificateReqInfo ........................................................................................ 552
16.2.92 XML_CertificateResult ........................................................................................... 552
16.2.93 XML_Challenge ..................................................................................................... 552
16.2.94 XML_ChanCtrl ....................................................................................................... 552

xxx

Intelligent Security API (General Application) Developer Guide
16.2.95 XML_ChannelEventCap ......................................................................................... 553
16.2.96 XML_ChannelInfo .................................................................................................. 558
16.2.97 XML_ChannelInfoList ............................................................................................ 560
16.2.98 XML_channelNameOverlay .................................................................................. 560
16.2.99 XML_CheckInfo ..................................................................................................... 560
16.2.100 XML_CMSearchDataPackage .............................................................................. 561
16.2.101 XML_CMSearchDataPackageResult .................................................................... 561
16.2.102 XML_CMSearchDescription ................................................................................ 561
16.2.103 XML_CMSearchProfile ........................................................................................ 562
16.2.104 XML_CMSearchResult ......................................................................................... 563
16.2.105 XML_CMSRecordProfile ...................................................................................... 564
16.2.106 XML_Color .......................................................................................................... 564
16.2.107 XML_corridor ...................................................................................................... 564
16.2.108 XML_DateTimeOverlay ....................................................................................... 565
16.2.109 XML_DDNS .......................................................................................................... 565
16.2.110 XML_DDNSList .................................................................................................... 566
16.2.111 XML_DefaultParam ............................................................................................. 566
16.2.112 XML_Defog .......................................................................................................... 567
16.2.113 XML_Dehaze ....................................................................................................... 567
16.2.114 XML_DeviceCap .................................................................................................. 567
16.2.115 XML_DeviceInfo .................................................................................................. 574
16.2.116 XML_DeviceStatus .............................................................................................. 576
16.2.117 XML_Dial ............................................................................................................. 578
16.2.118 XML_Dialstatus ................................................................................................... 579
16.2.119 XML_Discovery ................................................................................................... 580
16.2.120 XML_diskQuota ................................................................................................... 580
16.2.121 XML_DoubleLensParkingCap .............................................................................. 581
16.2.122 XML_DownloadAbility ........................................................................................ 581

xxxi

Intelligent Security API (General Application) Developer Guide
16.2.123 XML_downloadRequest ...................................................................................... 581
16.2.124 XML_DynamicCap ............................................................................................... 582
16.2.125 XML_Ehome ........................................................................................................ 583
16.2.126 XML_EPTZ ........................................................................................................... 584
16.2.127 XML_EventCap .................................................................................................... 584
16.2.128 XML_EventNotificationAlert_AlarmEventInfo ..................................................... 586
16.2.129 XML_EventNotificationAlert_HeartbeatInfo ....................................................... 586
16.2.130 XML_EventNotificationAlert_IOSensorAlarmMsg .............................................. 587
16.2.131 XML_EventNotificationAlert_SubscriptionHeartbeat ......................................... 588
16.2.132 XML_EventTrigger ............................................................................................... 588
16.2.133 XML_EventTriggerCapType ................................................................................. 589
16.2.134 XML_EventTriggerNotification ............................................................................ 590
16.2.135 XML_EventTriggerNotificationList ....................................................................... 591
16.2.136 XML_EventTriggersCap ....................................................................................... 591
16.2.137 XML_ExportStatus ............................................................................................... 593
16.2.138 XML_Exposure .................................................................................................... 593
16.2.139 XML_externSecurityCap ...................................................................................... 594
16.2.140 XML_ExtraInfo ..................................................................................................... 595
16.2.141 XML_EZVIZ .......................................................................................................... 595
16.2.142 XML_FocusConfiguration .................................................................................... 596
16.2.143 XML_FocusData .................................................................................................. 596
16.2.144 XML_formatStatus .............................................................................................. 597
16.2.145 XML_FTPNotification .......................................................................................... 597
16.2.146 XML_FTPNotificationList ..................................................................................... 600
16.2.147 XML_FTPTestDescription .................................................................................... 600
16.2.148 XML_FTPTestResult ............................................................................................. 601
16.2.149 XML_Gain ............................................................................................................ 601
16.2.150 XML_GuardAgainstTheft ..................................................................................... 601

xxxii

Intelligent Security API (General Application) Developer Guide
16.2.151 XML_HardwareService ........................................................................................ 602
16.2.152 XML_hdd ............................................................................................................. 603
16.2.153 XML_hddList ....................................................................................................... 603
16.2.154 XML_HDDSMARTTest .......................................................................................... 604
16.2.155 XML_Hello ........................................................................................................... 604
16.2.156 XML_HttpHostNotification .................................................................................. 605
16.2.157 XML_HttpHostNotificationCap ............................................................................ 606
16.2.158 XML_HttpHostNotificationList ............................................................................ 607
16.2.159 XML_HttpHostTestResult .................................................................................... 608
16.2.160 XML_IbeaconParam ............................................................................................ 608
16.2.161 XML_IEEE802_1x ................................................................................................. 609
16.2.162 XML_IllegalLoginLock .......................................................................................... 609
16.2.163 XML_ImageCap ................................................................................................... 610
16.2.164 XML_ImageChannel ............................................................................................ 610
16.2.165 XML_ImageChannellist ....................................................................................... 611
16.2.166 XML_ImageFlip ................................................................................................... 612
16.2.167 XML_ImageMode ................................................................................................ 612
16.2.168 XML_ImageModeList .......................................................................................... 612
16.2.169 XML_InputProxyChannel .................................................................................... 612
16.2.170 XML_InputProxyChannelList ............................................................................... 613
16.2.171 XML_Cap_InputProxyChannelListCap ................................................................. 613
16.2.172 XML_InputProxyChannelStatus ........................................................................... 614
16.2.173 XML_InputProxyChannelStatusList ..................................................................... 614
16.2.174 XML_IntelliCap .................................................................................................... 615
16.2.175 XML_IOCap ......................................................................................................... 617
16.2.176 XML_IOInputPort ................................................................................................ 617
16.2.177 XML_IOInputPortList ........................................................................................... 618
16.2.178 XML_IOOutputPort ............................................................................................. 618

xxxiii

Intelligent Security API (General Application) Developer Guide
16.2.179 XML_IOOutputPortList ........................................................................................ 619
16.2.180 XML_IOPortData ................................................................................................. 619
16.2.181 XML_IOPortStatus ............................................................................................... 619
16.2.182 XML_IOPortStatusList ......................................................................................... 619
16.2.183 XML_IOProxyInputPort ....................................................................................... 620
16.2.184 XML_IOProxyInputPortList .................................................................................. 620
16.2.185 XML_IOProxyOutputPort .................................................................................... 621
16.2.186 XML_IOProxyOutputPortList ............................................................................... 621
16.2.187 XML_IOTTriggersCap ........................................................................................... 621
16.2.188 XML_IPAddress ................................................................................................... 622
16.2.189 XML_IPFilter ........................................................................................................ 623
16.2.190 XML_IPFilterAddress ........................................................................................... 623
16.2.191 XML_IPFilterAddressList ..................................................................................... 623
16.2.192 XML_IrcutFilter ................................................................................................... 624
16.2.193 XML_IrisData ....................................................................................................... 624
16.2.194 XML_ISPMode ..................................................................................................... 625
16.2.195 XML_ItemList ...................................................................................................... 625
16.2.196 XML_Language .................................................................................................... 625
16.2.197 XML_LensDistortionCorrection ........................................................................... 626
16.2.198 XML_Link ............................................................................................................. 626
16.2.199 XML_localPermission .......................................................................................... 626
16.2.200 XML_LockPTZ ...................................................................................................... 627
16.2.201 XML_LogConfig ................................................................................................... 627
16.2.202 XML_LogServer ................................................................................................... 628
16.2.203 XML_LogServerCap ............................................................................................. 628
16.2.204 XML_LogServerTestDescription .......................................................................... 628
16.2.205 XML_MACFilter ................................................................................................... 629
16.2.206 XML_mailing ....................................................................................................... 629

xxxiv

Intelligent Security API (General Application) Developer Guide
16.2.207 XML_mailingList .................................................................................................. 630
16.2.208 XML_mailingTestResult ....................................................................................... 630
16.2.209 XML_mailingTestDescription ............................................................................... 630
16.2.210 XML_MaxElevation ............................................................................................. 631
16.2.211 XML_MountList ................................................................................................... 631
16.2.212 XML_NetworkCap ............................................................................................... 631
16.2.213 XML_NetworkInterface ....................................................................................... 634
16.2.214 XML_NetworkInterfaceList ................................................................................. 635
16.2.215 XML_NetWorkMode ........................................................................................... 635
16.2.216 XML_NoiseReduce .............................................................................................. 635
16.2.217 XML_NTPServer .................................................................................................. 636
16.2.218 XML_NTPServerList ............................................................................................. 636
16.2.219 XML_NTPTestDescription .................................................................................... 636
16.2.220 XML_NTPTestResult ............................................................................................ 637
16.2.221 XML_OnlineUpgradeCap ..................................................................................... 637
16.2.222 XML_OnlineUpgradeStatus ................................................................................. 638
16.2.223 XML_OnlineUpgradeVersion ............................................................................... 638
16.2.224 XML_OnlineUpgradeServer ................................................................................ 638
16.2.225 XML_Palettes ...................................................................................................... 638
16.2.226 XML_ParkAction .................................................................................................. 639
16.2.227 XML_ParkingParam ............................................................................................. 639
16.2.228 XML_Probe .......................................................................................................... 640
16.2.229 XML_port ............................................................................................................ 640
16.2.230 XML_portStatus .................................................................................................. 640
16.2.231 XML_ports ........................................................................................................... 640
16.2.232 XML_PortMapParam ........................................................................................... 641
16.2.233 XML_PortMapParamRet ..................................................................................... 641
16.2.234 XML_portsStatus ................................................................................................. 641

xxxv

Intelligent Security API (General Application) Developer Guide
16.2.235 XML_powerLineFrequency ................................................................................. 642
16.2.236 XML_PreviewSwitch ............................................................................................ 642
16.2.237 XML_PreviewSwitchVideoOutCap ...................................................................... 643
16.2.238 XML_PrivacyMask ............................................................................................... 643
16.2.239 XML_PrivacyMaskCap ......................................................................................... 643
16.2.240 XML_PrivacyMaskRegion .................................................................................... 644
16.2.241 XML_PrivacyMaskRegionList ............................................................................... 644
16.2.242 XML_PTZAux ....................................................................................................... 644
16.2.243 XML_PTZAuxList .................................................................................................. 645
16.2.244 XML_PTZChannel ................................................................................................ 645
16.2.245 XML_PTZChanelCap ............................................................................................ 646
16.2.246 XML_PTZOSDDisplay ........................................................................................... 649
16.2.247 XML_PTZStatus ................................................................................................... 649
16.2.248 XML_PublicKey .................................................................................................... 649
16.2.249 XML_RacmCap .................................................................................................... 650
16.2.250 XML_RegionalFocus ............................................................................................ 653
16.2.251 XML_RegionClip .................................................................................................. 653
16.2.252 XML_remotePermission ...................................................................................... 653
16.2.253 XML_ResponseStatus .......................................................................................... 655
16.2.254 XML_ResponseStatus_AuthenticationFailed ...................................................... 656
16.2.255 XML_Schedule .................................................................................................... 656
16.2.256 XML_SecurityCap ................................................................................................ 657
16.2.257 XML_SecurityQuestion ....................................................................................... 659
16.2.258 XML_SerialCap .................................................................................................... 659
16.2.259 XML_SerialCommand .......................................................................................... 660
16.2.260 XML_SerialPorList ............................................................................................... 660
16.2.261 XML_SerialPort ................................................................................................... 660
16.2.262 XML_SIPInfo ........................................................................................................ 661

xxxvi

Intelligent Security API (General Application) Developer Guide
16.2.263 XML_SIPInfoList .................................................................................................. 662
16.2.264 XML_SIPServer .................................................................................................... 662
16.2.265 XML_SIPServerList .............................................................................................. 664
16.2.266 XML_Sharpness ................................................................................................... 664
16.2.267 XML_Shutter ....................................................................................................... 665
16.2.268 XML_SmartCap ................................................................................................... 665
16.2.269 XML_SmartSearchDescription ............................................................................ 666
16.2.270 XML_SmartSearchResult ..................................................................................... 669
16.2.271 XML_SMARTTestConfig ....................................................................................... 669
16.2.272 XML_SMARTTestStatus ....................................................................................... 669
16.2.273 XML_SoftwareService ......................................................................................... 670
16.2.274 XML_SocketIP ..................................................................................................... 670
16.2.275 XML_sourceCapability ........................................................................................ 671
16.2.276 XML_sourceDescriptor ........................................................................................ 671
16.2.277 XML_SSH ............................................................................................................. 671
16.2.278 XML_staticRouteList ............................................................................................ 671
16.2.279 XML_StreamingChannel ...................................................................................... 672
16.2.280 XML_StreamingChannelList ................................................................................ 674
16.2.281 XML_StreamingStatus ......................................................................................... 674
16.2.282 XML_StreamingSessionStatusList ....................................................................... 675
16.2.283 XML_SubscribeEvent ........................................................................................... 675
16.2.284 XML_SubscribeEventCap .................................................................................... 676
16.2.285 XML_SubscribeEventResponse ........................................................................... 677
16.2.286 XML_SupplementLight ........................................................................................ 678
16.2.287 XML_SyncSignalOutputList ................................................................................. 679
16.2.288 XML_TargetEnhancement ................................................................................... 681
16.2.289 XML_TargetEnhancementCap ............................................................................. 681
16.2.290 XML_Telnetd ....................................................................................................... 681

xxxvii

Intelligent Security API (General Application) Developer Guide
16.2.291 XML_tempRange ................................................................................................. 682
16.2.292 XML_TextOverlay ................................................................................................ 682
16.2.293 XML_TextOverlayList ........................................................................................... 682
16.2.294 XML_ThermalCap ................................................................................................ 683
16.2.295 XML_Time ........................................................................................................... 684
16.2.296 XML_TimeTaskList ............................................................................................... 685
16.2.297 XML_trackDailyParam ......................................................................................... 685
16.2.298 XML_trackDailyDistribution ................................................................................ 686
16.2.299 XML_TrackList ..................................................................................................... 686
16.2.300 XML_Track ........................................................................................................... 686
16.2.301 XML_TwoWayAudioChannel ............................................................................... 688
16.2.302 XML_TwoWayAudioChannelCap ......................................................................... 689
16.2.303 XML_TwoWayAudioChannelList ......................................................................... 690
16.2.304 XML_TwoWayAudioSession ................................................................................ 690
16.2.305 XML_upgradeStatus ............................................................................................ 690
16.2.306 XML_UPnP .......................................................................................................... 690
16.2.307 XML_User ............................................................................................................ 691
16.2.308 XML_userCheck .................................................................................................. 691
16.2.309 XML_UserList ...................................................................................................... 692
16.2.310 XML_UserPermission .......................................................................................... 692
16.2.311 XML_UserPermissionCap .................................................................................... 692
16.2.312 XML_UserPermissionList ..................................................................................... 693
16.2.313 XML_WDR ........................................................................................................... 693
16.2.314 XML_WhiteBalance ............................................................................................. 693
16.2.315 XML_WirelessServer ........................................................................................... 694
16.2.316 XML_WirelessServerStatus ................................................................................. 695
16.2.317 XML_WirelessStatus ........................................................................................... 696
16.2.318 XML_Wireless ..................................................................................................... 697

xxxviii

Intelligent Security API (General Application) Developer Guide
16.2.319 XML_VCAResource .............................................................................................. 698
16.2.320 XML_VideoCap .................................................................................................... 698
16.2.321 XML_VideoInput ................................................................................................. 699
16.2.322 XML_VideoInputChannel .................................................................................... 699
16.2.323 XML_VideoInputChannelList ............................................................................... 700
16.2.324 XML_VideoOutput .............................................................................................. 700
16.2.325 XML_VideoOutputChannel ................................................................................. 701
16.2.326 XML_VideoOutputChannelList ............................................................................ 701
16.2.327 XML_VideoOverlay ............................................................................................. 701
16.2.328 XML_VideoSourceActivation ............................................................................... 702
16.2.329 XML_VideoSourceActivationCapability ............................................................... 703
16.2.330 XML_VideoSourceList ......................................................................................... 703
16.2.331 XML_ZoomFocus ................................................................................................. 704
Appendix A. Appendixes ......................................................................................................... 705
A.1 Log Types for ISAPI ............................................................................................................. 705
A.2 Supported Alarm/Event Types ........................................................................................... 720
A.3 Error Codes in ResponseStatus .......................................................................................... 725

xxxix

Intelligent Security API (General Application) Developer Guide

Chapter 1 Overview
This manual mainly introduces the protocol architecture, interaction or security specifications,
general integrations (e.g., devie management and maintenance, alarm or event receiving,
parameter configuration, etc.), and so on.

1.1 Introduction
The OPEN Intelligent Security Application Programming Interface (ISAPI) is a text protocol in
RESTful style based on HTTP for communicating between security devices/servers (e.g., cameras,
DVR, NVR, etc.) and client software/system. It defines the communication standard between
device/server and client software/system via the Internet Protocol (IP), see the network topology
and communication protocol layer framework in the figures below.
Note
REST (REpresentational State Transfer) is a protocol design method which abstracts all information
as the resources. The abstracted resources are marked by the uniform identifies, i.e., URI (Uniform
Resource Identifiers) for simple and extendable management.

Figure 1-1 Network Topology

1

Intelligent Security API (General Application) Developer Guide

Figure 1-2 Communication Protocol Layer Framework

1.2 Update History
Summary of Changes in Version 2.0_Sept., 2019
Related Product: DS-2CD50 Series and DS-2CD70 Series Box Camera with Software Version 5.6.10;
DS-2CD51 Series, DS-2CD55 Series, DS-2CD71 Series, and DS-2CD75 Series Dome Camera with
Software Version 5.6.10; DS-2CD7A Series and DS-2CD5A Series Bullet Camera with Software
Version 5.6.10
1. Extended device capability message XML_DeviceCap (related URL: /ISAPI/System/capabilities ):
added a sub node <supportSmartOverlapChannles> (whether it supports stream configuration
of smart events) to the node <SysCap>;
added a node <streamEncryptionType> (stream encryption type).
2. Added URLs of configuring stream for displaying VCA rules of smart events:
Get the capability: GET /ISAPI/Streaming/channels/<ID>/smartOverlap/capabilities?
format=json ;
Get or set stream parameters: GET or PUT /ISAPI/Streaming/channels/<ID>/smartOverlap?
format=json .
3. Extended configuration capability message of IP address filter XML_Cap_IPFilter (related URL: /
ISAPI/System/Network/ipFilter/capabilities ):
added a sub node <bitMaskIPV6> (IPv6 prefix length) to the node <AddressMask> of
<IPFilterAddressList>.
4. Extended e-PTZ parameter message XML_EPTZ (related URL: /ISAPI/Image/channels/<ID>/
EPTZ ):
added a node <streamType> (stream type).
5. Extended parameter message of a privacy mask region XML_PrivacyMaskRegion (related URL: /
ISAPI/System/Video/inputs/channels/<ID>/privacyMask/regions/<ID> ):
added a mask type "black" to the node <maskType>.
6. Added URLs of switching e-PTZ mode:
Get capability: GET /ISAPI/Image/channels/<ID>/EPTZ/mode/capabilities?format=json ;
Get or set parameters: GET or PUT /ISAPI/Image/channels/<ID>/EPTZ/mode?format=json .
7. Extended configuration capability message XML_LogServerCap and parameter message
XML_LogServer of log server (related URLs: /ISAPI/System/logServer/capabilities and /ISAPI/
System/logServer ):
added a node <transmissionEncryption> (whether to enable transmission encryption).

2

Intelligent Security API (General Application) Developer Guide
8. Extended parameter message of security log server test XML_LogServerTestDescription (related
URL: /ISAPI/System/logServer/test ):
added a node <transmissionEncryption> (whether to enable transmission encryption).
9. Extended FTP capability message XML_Cap_FTPNotificationList (related URL: /ISAPI/System/
Network/ftp/capabilities ):
added a sub node <BrokenNetHttp> (whether it supports ANR (automatic network
replenishment)) to the node <FTPNotification>.
10. Extended parameter message of a specific FTP server XML_FTPNotification (related URL: /
ISAPI/System/Network/ftp/<ID> ):
added a node <brokenNetHttp> (whether to enable ANR (automatic network replenishment)).
11. Extended configuration capability message XML_Cap_Track and parameter message
XML_Track of a specific recording schedule (related URLs: /ISAPI/ContentMgmt/record/
tracks/<ID>/capabilities and /ISAPI/ContentMgmt/record/tracks/<ID> ):
added a node <durationEnabled> (whether to enable video expiry time).
12. Extended parameter message of all recording schedules XML_TrackList (related URL: /ISAPI/
ContentMgmt/record/tracks ):
added a sub node <durationEnabled> (whether to enable video expiry time) to the node
<Track>.
13. Extended HDD management capability message XML_Cap_hddList (related URL: /ISAPI/
ContentMgmt/Storage/hdd/capabilities ):
added a sub node <Encryption> (encryption configuration) to the node <hdd>.
14. Extended parameter message of a specific HDD XML_hdd (related URL: /ISAPI/ContentMgmt/
Storage/hdd/<ID> ):
added a node <encryptionStatus> (encryption status).
15. Added a URL of formatting an encrypted HDD: PUT /ISAPI/ContentMgmt/Storage/hdd/<ID>/
encryptFormat?format=json .
16. Added a URL of verifying HDD encryption password: PUT /ISAPI/ContentMgmt/Storage/hdd/
<ID>/encryptVerfy?format=json .
17. Extended message of event capability supported by channel XML_ChannelEventCap (related
URL: /ISAPI/Event/channels/<ID>/capabilities ):
added an event type "certificateRevocation" (certificate is expired) to the node <eventType>.
18. Extended device event capability message XML_EventCap (related URL: /ISAPI/Event/
capabilities ):
added a node <isSupportCertificateRevocation> (whether it supports certificate expiry alarm).
19. Added the function of configuring certificate expiry alarm, refer to Configure Certificate Expiry
Alarm .
20. Extended device protocol capability message XML_Cap_AdminAccessProtocolList and
parameter message of all protocols supported by the device XML_AdminAccessProtocolList
(related URLs: /ISAPI/Security/adminAccesses/capabilities and /ISAPI/Security/
adminAccesses ):
added a protocol type "SRTP" (Secure Real-Time Transport Protocol) to the sub node
<protocol> of the node <AdminAccessProtocol>.

3

Intelligent Security API (General Application) Developer Guide
21. Extended parameter message of a specific protocol supported by the device
XML_AdminAccessProtocol (related URL: /ISAPI/Security/adminAccesses/<ID> ):
added a protocol type "SRTP" (Secure Real-Time Transport Protocol) to the node <protocol>.
22. Extended parameter message of a specific UPnP port XML_port and mapping status message
of a specific UPnP port XML_portStatus (related URLs: /ISAPI/System/Network/UPnP/ports/
<ID> and /ISAPI/System/Network/UPnP/ports/<ID>/status ):
added a protocol type "SRTP" to the node <internalPort>.
23. Extended encoding capability message XML_Cap_StreamingChannel and encoding parameter
message XML_StreamingChannel of a specific channel (related URLs: /ISAPI/Streaming/
channels/<ID>/capabilities and /ISAPI/Streaming/channels/<ID> ):
added a protocol type "SRTP" to the sub node <streamingTransport> of the node
<ControlProtocol> of <ControlProtocolList> of <Transport>;
added a sub node <SRTPMulticast> (SRTP multicast configuration) to the node <Transport>.
24. Extended storage capability message XML_RacmCap (related URL: /ISAPI/ContentMgmt/
capabilities ):
added two picture search conditions: "personQueueCounting" (people queuing-up detection)
and "personQueueTime" (waiting time detection) to the node <pictureSearchType>.
25. Extended device security capability message XML_SecurityCap (related URL: /ISAPI/Security/
capabilities ):
added a node <isSupportCertificateCustomID> (whether it supports certificate configuration
with custom ID).
26. Added a URL of getting CA (Certificate Authority) certificate capability: GET /ISAPI/Security/
deviceCertificate/capabilities?format=json .
27. Added a URL of importing CA (Certificate Authority) certificate to device: PUT /ISAPI/Security/
deviceCertificate?customID= .
28. Extended information message of multiple device certificates JSON_DeviceCertificates (related
URL: /ISAPI/Security/deviceCertificate/certificates?format=json ):
added two sub nodes: status (certificate status) and customID (custom certificate ID) to the
node CertificateInfo of CertificateInfoList.
29. Added a URL of getting or deleting information of a specific device certificate: GET or DELETE /
ISAPI/Security/deviceCertificate/certificates/<customID>?format=json .
30. Added URLs of configuring and managing client/server certificate:
Get client/server certificate capability: GET /ISAPI/Security/serverCertificate/capabilities?
format=json ;
Get or generate PKCS#10 signature request of client/server self-signed certificate: GET or PUT /
ISAPI/Security/serverCertificate/selfSignCert?customID= ;
Generate PKCS#10 signature request: POST /ISAPI/Security/serverCertificate/certSignReq?
customID= ;
Get information of multiple client/server certificates in a batch: GET /ISAPI/Security/
serverCertificate/certificates?format=json ;
Get or delete information of a specific client/server certificate: GET or DELETE /ISAPI/Security/
serverCertificate/certificates/<customID>?format=json ;

4

Intelligent Security API (General Application) Developer Guide
Import client/server certificate to device: POST /ISAPI/Security/serverCertificate/certificate?
customID= ;
Export client/server certificate: GET /ISAPI/Security/serverCertificate/downloadCertSignReq?
customID= .
31. Added URLs of selecting certificate:
Get capability: GET /ISAPI/Security/certificate/select/capabilities?format=json ;
Get or set parameters: GET or PUT /ISAPI/Security/certificate/select/<functinName>?
format=json .
32. Added an alarm type "certificateRevocation" (certificate expiry alarm) in Supported Alarm/
Event Types .

Summary of Changes in Version 2.0_Sept., 2019
Related Product: PanoVu PT Series Target Capture Camera in Version 5.5.23
1. Extended the rapid focus capability XML_Cap_EagleFocusing (related URL: GET /ISAPI/PTZCtrl/
channels/<ID>/EagleFocusing/capabilities ):
added one node <isSupportAuto> (whether device supports automatic calibration of rapid
focus)
2. Added the function of automatically calibrating for rapid focus:
Get capability: GET /ISAPI/PTZCtrl/channels/<ID>/EagleFocusing/auto/capabilities?
format=json ;
Automatically calibrate for rapid focus: GET /ISAPI/PTZCtrl/channels/<ID>/EagleFocusing/
auto?format=json .
3. Extended the device capability message XML_DeviceCap (related URL: GET /ISAPI/System/
capabilities ):
added two nodes <guideEventSupport> (events which support quick setup by instruction) and
<isSupportDevStatus> (whether device supports getting device status).
4. Added the function of configuring quick setup instruction for specified event:
Get capability: GET /ISAPI/System/guideConfig/<guideEvent>/capabilities?format=json ;
Get parameters: GET /ISAPI/System/guideConfig/<guideEvent>?format=json .
5. Extended the device status message XML_DeviceStatus (related URL: GET /ISAPI/System/
status ):
added one node <AlertStreamServerList> (user of arming device).

Summary of Changes in Version 2.0_Sept., 2019
Related Product: iDS-TDI300-A and iDS-TDI900-A Portable Speed Detector with Software Version
4.3.0
1. Extended device capability message XML_DeviceCap (related URL: /ISAPI/System/capabilities ):
added a node <isSupportGuardAgainstTheft> (whether it supports device anti-theft
configuration);
added a sub node <isSupportShutdown> (whether it supports shutdown configuration) to the
node <SysCap>.
2. Extended downloading capability message XML_DownloadAbility (related URL: /ISAPI/
ContentMgmt/download/capabilities ):

5

Intelligent Security API (General Application) Developer Guide
added a node <isSupportDownloadToUSB> (whether it supports exporting files to devices via
USB).
3. Added URLs of exporting files to devices via USB:
Get capability: GET /ISAPI/ContentMgmt/download/toUSB/capabilities?format=json ;
Export files: POST /ISAPI/ContentMgmt/download/toUSB?format=json ;
Get exporting progress: GET /ISAPI/ContentMgmt/download/toUSB/<taskId>/progress?
format=json .
4. Added URLs of configuring device anti-theft parameters:
Get configuration capability: GET /ISAPI/System/guardAgainstTheft/capabilities ;
Get or set parameters: GET or PUT /ISAPI/System/guardAgainstTheft .
5. Extended device status parameter message XML_DeviceStatus (related URL: /ISAPI/System/
status ):
added three nodes: <dialSignalStrength> (4G signal strength), <USBStatusList> (USB status list),
and <WifiStatusList> (Wi-Fi status list).
6. Added a URL of shutting down the device: PUT /ISAPI/System/shutdown?format=json .
7. Extended configuration capability message XML_Cap_DeviceInfo and parameter message
XML_DeviceInfo of device information (related URLs: /ISAPI/System/deviceInfo/capabilities
and /ISAPI/System/deviceInfo ):
added a node <powerOnMode> (device startup mode).
8. Added an event type "radarMeasurement" (radar measurement data) in Supported Alarm/
Event Types .
9. Added a sub status code "0x40000010"-USBNotExist (USB device is not connected) to status
code 4 (Invalid Operation) in Error Codes in ResponseStatus .

Summary of Changes in Version 2.0_Aug., 2019
Related Product: DS-K1T640 Series, DS-K1T671 Series, and DS-K5671 Series Face Recognition
Terminal with Software Version 2.1.1
1. Added URLs of configuring audio input or output parameters of a specific channel:
Get audio input capability: GET /ISAPI/System/Audio/AudioIn/channels/<ID>/capabilities ;
Get or set audio input parameters: GET or PUT /ISAPI/System/Audio/AudioIn/channels/<ID> ;
Get audio output capability: GET /ISAPI/System/Audio/AudioOut/channels/<ID>/capabilities ;
Get or set audio output parameters: GET or PUT /ISAPI/System/Audio/AudioOut/channels/
<ID> .
2. Extended device capability message XML_DeviceCap (related URL: /ISAPI/System/capabilities ):
added a node <isSupportIDCardInfoEvent> (whether it supports ID card swiping event).

Summary of Changes in Version 2.0_Aug., 2019
Related Product Type: DS-76XXNI-I Series, DS-77XXNI-I Series, DS-86XXNI-I Series, and DS-96XXNI-I
Series NVR in Version 4.22.000
1. Extended device capability message XML_DeviceCap (related URL: /ISAPI/System/capabilities ):
added a node <SHMCap> (SHM (SkyHawk Health Management) capability).
2. Extended configuration capability message of alarm linkage actions XML_EventTriggersCap
(related URL: /ISAPI/Event/triggersCap ):

6

Intelligent Security API (General Application) Developer Guide
added five nodes: <HighHDTemperatureTriggerCap> (HDD high temperature detection),
<LowHDTemperatureTriggerCap> (HDD low temperature detection), <HDImpactTriggerCap>
(HDD impact detection), <HDBadBlockTriggerCap> (HDD bad sector detection), and
<SevereHDFailureTriggerCap> (HDD severe fault detection).
3. Extended alarm linkage capability type ( XML_EventTriggerCapType ):
added a node <isNotSupportCenterModify> (whether editing configuration parameters of the
surveillance center is not supported).
4. Added the function of configuring SHM (SkyHawk Health Management) alarm linkage:
Get or set linkage parameters of HDD high temperature detection: GET or PUT /ISAPI/Event/
triggers/highHDTemperature ;
Get or set linkage parameters of HDD low temperature detection: GET or PUT /ISAPI/Event/
triggers/lowHDTemperature ;
Get or set linkage parameters of HDD impact detection: GET or PUT /ISAPI/Event/triggers/
hdImpact ;
Get or set linkage parameters of HDD bad sector detection: GET or PUT /ISAPI/Event/triggers/
hdBadBlock ;
Get or set linkage parameters of HDD severe fault detection: GET or PUT /ISAPI/Event/triggers/
severeHDFailure .
5. Extended VCA search capability message JSON_IntelligentSearchCap (related URL: /ISAPI/SDT/
Management/IntelligentSearch/capabilities?format=json ):
added a value "unknown" to the node vehicleType (vehicle type).
6. Extended VCA search condition message JSON_IntelligentSearchCondition and VCA search
result message JSON_IntelligentSearchResult (related URL: /ISAPI/SDT/Management/
IntelligentSearch?format=json ):
added a value "unknown" to the sub node vehicleType (vehicle type) of the node vehicleInfo.
7. Extended condition message of exporting VCA search results JSON_VCASearchExportCond
(related URL: /ISAPI/SDT/Management/IntelligentSearch/export?format=json ):
added a value "unknown" to the sub node vehicleType (vehicle type) of the node vehicleInfo of
targetInfo.
8. Extended capability message XML_Cap_ExtraInfo and parameter message XML_ExtraInfo of
storing additional information (related URLs: /ISAPI/ContentMgmt/Storage/ExtraInfo/
capabilities and /ISAPI/ContentMgmt/Storage/ExtraInfo ):
added a disk mode "RAID" to the node <diskMode>.
9. Extended supported alarm and event types in Supported Alarm/Event Types :
added five event types: "highHDTemperature" (HDD High Temperature), "lowHDTemperature"
(HDD Low Temperature), "hdImpact" (HDD Impact), "hdBadBlock" (HDD Bad Sector), and
"severeHDFailure" (HDD Severe Fault).
10. Extended the log types in Log Types for ISAPI :
added five exception log types: "highHDTemperature" (HDD High Temperature),
"lowHDTemperature" (HDD Low Temperature), "hdImpact" (HDD Impact), "hdBadBlock" (HDD
Bad Sector), and "severeHDFailure" (HDD Severe Fault);
added two additional log types: "hdFormatStart" (Formatting HDD Started) and
"hdFormatStop" (Formatting HDD Stopped).

7

Intelligent Security API (General Application) Developer Guide
Summary of Changes in Version 2.0_Aug., 2019
Related Product Type: Thermal & Optical Bi-spectrum Positioning System in Version 5.5.21
1. Extended the device capability XML_DeviceCap (related URL: GET /ISAPI/System/capabilities ):
added two nodes <isSupportInstallationAngleCalibration> (whether it supports installation
angle calibration) and <isSupportZeroBiasCalibration> (whether it supports zero bias
calibration).
2. Added the function of calibrating accelerometer zero bias: PUT /ISAPI/System/
zeroBiasCalibration/channels/<ID>?format=json .
3. Added the function of installation angle calibration:
Get the calibration capabilities: GET /ISAPI/System/installationAngleCalibration/channels/
<ID>/capabilities?format=json ;
Get the calibration status: GET /ISAPI/System/installationAngleCalibration/channels/<ID>?
format=json ;
Calibrate installation angle: PUT /ISAPI/System/installationAngleCalibration/channels/<ID>?
format=json .
4. Extended the log types Log Types for ISAPI :
added one log "scheduledAngleCalibration" (scheduled angle calibration) to operation log type;
added two logs "overvoltage" (high supply voltage) and "undervoltage"(low supply voltage) to
exception log type.
5. Extended the device event capability message XML_EventCap (related URL: GET /ISAPI/Event/
capabilities ):
added one node <isSupportVoltageInstable> (whether device supports supply voltage
exception alarm).
6. Extended the configuration capability of alarm linkage actions XML_EventTriggersCap (related
URL: GET /ISAPI/Event/triggersCap ):
added one node <voltageInstableTriggerCap> (supply voltage exception).
7. Added one alarm/event type: "voltageinstable" (supply voltage exception), see details in
Configure Exception Alarm .

Summary of Changes in Version 2.0_Aug., 2019
Related Product: Traffic Terminal Server in Version 5.0.0
1. Added a URL to configure control parameters of a digital channel: /ISAPI/ContentMgmt/
InputProxy/channels/<ID>/chanCtrl
2. Added a URL to reboot digital channel: /ISAPI/ContentMgmt/InputProxy/channels/<ID>/
reboot
3. Added a URL to check port mapping is required for connecting to a digital channel: /ISAPI/
ContentMgmt/InputProxy/channels/<ID>/portMapParam
4. Added a URL to configure static routing parameters: /ISAPI/System/Network/StaticRoute .
5. Added URLs to configure log parameters:
Get capability: GET /ISAPI/ContentMgmt/logConfig/capabilities

8

Intelligent Security API (General Application) Developer Guide
Get or set parameters: GET or PUT /ISAPI/ContentMgmt/logConfig
6. Added a URL to export the device log files: POST /ISAPI/ContentMgmt/logSearch/
dataPackage .

Summary of Changes in Version 2.0_July, 2019
Related Product: DeepinMind NVR in Version 4.1.70
1. Added one alarm type "LFPD" (low frequency person detection alarm) to Supported Alarm/
Event Types .
2. Extended log types Log Types for ISAPI :
added one minor log type "remoteLFPDconfig" (remote configuration of low frequency person
detection) to operation logs;
added two minor log types "LFPDAlarmStart" (low frequency person alarm started) and
"LFPDAlarmStop" (low frequency person alarm stopped) to alarm logs.
3. Extended the error codes, see details in Error Codes in ResponseStatus :
added two error codes "0x60001051"-noSupportDeleteStrangerLib (deleting stranger library is
not supported) and "0x60001052"-noSupportCreateStrangerLib (creating stranger library is not
supported) to status code 6 (Invalid Message Content);
added two error code "0x30001013"-SSDFileSystemIsError (SSD file system error) and
"0x30001014"-insufficientSSDCapacityForFPD (insufficient SSD space for person frequency
detection) to status code 3 (Device Error).
4. Extended the network resource statistics message JSON_resourceStatistics (related URL: /
ISAPI/System/Network/resourceStatistics?format=json ):
added two nodes inputPictureBandwidth (picture input bandwidth) and
outputPictureBandwidth (picture output bandwidth).
5. Extended the intelligent capability message XML_IntelliCap :
added one node <isSupportFaceScore> (whether camera supports face grading configuration).

Summary of Changes in Version 2.0_July, 2019
Related Product Type: DS-2TA03-7AVI, DS-2TA03-15VI, DS-2TA03-15SVI, DS-2TA06-25SVI,
DS-2TA06-25VI, and DS-2TA03-25SVI Thermographic Automation Thermal Camera in Version 2.2
1. Added a request URL for getting image adjustment capability: GET /ISAPI/Image/channels/
<ID>/color/capabilities .
2. Extended the image configuration capability of a specified channel XML_Cap_ImageChannel
and the image configuration parameters message XML_ImageChannel (related URL: GET /
ISAPI/Image/channels/<ID>/capabilities and /ISAPI/Image/channels/<ID> ):
added one node <TempRange> (temperature range).
3. Added the function of configuring temperature range of a specified channel:
Get capability: GET /ISAPI/Image/channels/<ID>/tempRange/capabilities ;
Get temperature range parameters: GET /ISAPI/Image/channels/<ID>/tempRange ;
Set temperature range: PUT /ISAPI/Image/channels/<ID>/tempRange .
4. Added a request URL for getting focus configuration capability:

9

Intelligent Security API (General Application) Developer Guide
GET /ISAPI/Image/channels/<ID>/focusConfiguration/capabilities .
5. Extended the focus parameters message XML_FocusConfiguration (related URL: /ISAPI/Image/
channels/<ID>/focusConfiguration ):
added one node <highTemperaturePriority> (whether to enable high temperature priority
mode).

Summary of Changes in Version 2.0_July, 2019
Related Product Type: DS-PRI120 Security Radar
1. Extended the device capability message XML_DeviceCap (related URL: /ISAPI/System/
capabilities ):
added a node <isSupportRadar> (whether to support security radar).
2. Added seven sub status codes to status code 4 (Invalid Operation) in Error Codes in
ResponseStatus :
"0x4000802c"-masterSlaveIsEnable (The master-slave relationship has taken effect, the slave
radar does not support this operation), "0x4000802d"-forceTrackNotEnabled (Mandatory
tracking is disabled), "0x4000802e"-isNotSupportZoneConfigByLocalArea (This area does not
support the zone type), "0x4000802f"-alarmLineCross (Trigger lines are overlapped),
"0x40008030"-zoneDrawingOutOfRange (The drawn zone is out of detection range),
"0x40008031"-alarmLineDrawingOutOfRange (The drawn trigger line is out of detection range),
and "0x40008032"-hasTargetInWarningArea (The warning zone already contains targets.
Whether to enable mandatory arming?).
3. Extended the log types Log Types for ISAPI :
added six operation log types: "addZone" (Added Zone), "modZone" (Edited Zone), "delZone"
(Deleted Zone), "addAlarmLine" (Added Trigger Line), "modAlarmLine" (Edited Trigger Line), and
"delAlarmLine" (Deleted Trigger Line).

Summary of Changes in Version 2.0_July, 2019
Related Product: Thermographic Cube Camera in Version 1.0
1. Extended the device hardware configuration capabilities XML_Cap_HardwareService and
XML_HardwareService :
added one node <captureWithSupplimentLightEnabled> (enable snapshot supplement light or
not).
2. Extended the PTZ control capability XML_PTZChanelCap and the PTZ control parameters
XML_PTZChannel (related URL: GET /ISAPI/PTZCtrl/channels/<ID>/capabilities and /ISAPI/
PTZCtrl/channels/<ID> ):
added two control protocols "modbus-RTU" and "modbus-ASCII" to node <controlProtocol>.
3. Extended the palettes parameters XML_Palettes (related URL: /ISAPI/Image/channels/<ID>/
Palettes ):
added one mode "Color3" to node <mode>.

10

Intelligent Security API (General Application) Developer Guide
Summary of Changes in Version 2.0_July, 2019
Related Products: DS-K1A802 Series, DS-K1A802A Series, and DS-K1A8503 Series Fingerprint Time
Attendance Terminal; DS-K1T804 Series, DS-K1T8003 Series, and DS-K1T8004 Series Fingerprint
Access Control Terminal.
1. Extended the query parameter of the URL for upgrading the slave device's firmware /ISAPI/
System/updateFirmware?type=&id= :
added a module type "uboot" to the query parameter type.
2. Extended the peripherals upgrade capability message XML_Cap_AcsUpdate (related URL: /
ISAPI/System/AcsUpdate/capabilities ):
added a upgrade type "uboot" to the node <type>.

Summary of Changes in Version 2.0_June, 2019
Related Products: DS-PHA Series Hybrid Security Control Panel, DS-PKG Series Wired Keypad, and
DS-PM-RSWR Series RS-485 Wireless Receiver
1. Added a URL to upgrade peripheral module's firmware: PUT or POST /ISAPI/System/
updateFirmware?type=&moduleAddress= .
2. Extended peripherals upgrade capability message XML_Cap_AcsUpdate (related URL: /ISAPI/
System/AcsUpdate/capabilities ):
added three upgrading types to the node <type>: "keypad", "wirelessRecv" (wireless receiving
module), and "wiredZone" (wired zone module);
added three nodes: <keypadAddress> (range of keypad module address),
<wirelessRecvAddress> (range of wireless receiving module address), and <wiredZoneAddress>
(range of wired zone module address).
3. Extended device information message XML_DeviceInfo (related URL: /ISAPI/System/
deviceInfo ):
added a device type "PHA" (Axiom hybrid security control panel) to the node <deviceType>.
4. Extended the log types Log Types for ISAPI :
added four alarm log types: "RS-485AlarmInputModuleEvident" (RS-485 Zone Module
Tampered), "RS-485AlarmInputModuleTamperReset" (RS-485 Zone Module Tampering Reset),
"RS-485WirelessReceiverTamperEvident" (RS-485 Wireless Receiver Module Tampered), and
"RS-485WirelessReceiverTamperEvidentReset" (RS-485 Wireless Receiver Module Tampering
Reset);
added six exception log types: "RS-485AlarmInputModuleDisconnected" (RS-485 Zone Module
Offline), "RS-485AlarmInputModuleConnected" (RS-485 Zone Module Online),
"RS-485WirelessReceiverDisconnected" (RS-485 Wireless Receiver Module Offline),
"RS-485WirelessReceiverConnected" (RS-485 Wireless Receiver Module Online),
"keypadDisconnected" (Keypad Offline), and "keypadConnected" (Keypad Online);
added 9 operation log types: "delRS-485InputModule" (RS-485 Zone Module Deleted),
"delRS-485OutputModule" (RS-485 Output Module Deleted), "delRS-485WirelessReceiver"
(RS-485 Wireless Receiver Module Deleted), "enrollRS-485InputModule" (RS-485 Zone Module
Registered), "enrollRS-485OutputModule" (RS-485 Output Module Registered),
"delRS-485OutputModule" (RS-485 Output Module Deleted), "enrollRS-485WirelessReceiver"

11

Intelligent Security API (General Application) Developer Guide
(RS-485 Wireless Receiver Module Registered), "enrollKeypad" (Keypad Registered), and
"delKeypad" (Keypad Deleted).

Summary of Changes in Version 2.0_June, 2019
Related Products: Thermal Network Bullet Camera; Thermal Bi-spectrum Network Bullet Camera;
Thermal & Optical Network Turret Camera; Thermal Box Camera; Thermal Network Turret Camera
in Version 5.5.20
1. Extended the capability of supplement light alarm linkage JSON_WhiteLightAlarmCap (related
URL: GET /ISAPI/Event/triggers/notifications/whiteLightAlarm/capabilities?format=json ):
added one node "whiteLightMode" (supplement light mode).
2. Extended the parameters of supplement light alarm linkage JSON_WhiteLightAlarm (related
URL: /ISAPI/Event/triggers/notifications/whiteLightAlarm?format=json ):
added one node "whiteLightMode" (supplement light mode).
3. Extended the encoding capability of a specific channel XML_Cap_StreamingChannel (related
URL: GET /ISAPI/Streaming/channels/<ID>/capabilities ):
added one node <minimumResolutionSupportedBySmartCode> (minimum resolution
supported by smart coding).

Summary of Changes in Version 2.0_July, 2019
Related Product: Thermal & Optical Bi-spectrum Network Speed Dome; Thermal & Optical Bispectrum Positioning System; Thermal & Optical Bi-spectrum Network Stable PTZ Camera in
Version 5.5.19
1. Added the function of target enhancement:
Get the target enhancement capability: GET /ISAPI/Image/channels/<ID>/
targetEnhancement/capabilities ;
Get the target enhancement parameters: GET /ISAPI/Image/channels/<ID>/
targetEnhancement ;
Set the target enhancement parameters: PUT /ISAPI/Image/channels/<ID>/
targetEnhancement .
2. Extended the on-screen display parameters of PTZ status XML_PTZOSDDisplay (related URL: /
ISAPI/PTZCtrl/channels/<ID>/PTZOSDDisplay ):
added one node: <actionStatusDisplayEnabled> (whether to display status or not).
3. Extended the configuration capability of alarm linkage actions XML_EventTriggersCap (related
URL: /ISAPI/Event/triggersCap ):
added two nodes: <ShipsFlowDetectionTriggerCap> (ship flow detection) and
<dredgerDetectionTriggerCap> (dredger detection).
4. Added one sub type "dredgerDetectionAlarm" (dredger detection alarm) to alarm logs in Log
Types for ISAPI .
5. Added one file search condition "dredgerDetection" to node <metadataDescriptor> in message
XML_CMSearchDescription .

12

Intelligent Security API (General Application) Developer Guide
Summary of Changes in Version 2.0_June, 2019
Related Products: DS-2CD6845 Series and DS-2XM6825 Series Network Camera in Software Version
5.5.90
1. Extended wireless service capability message XML_Cap_WirelessServer and wireless service
configuration message XML_WirelessServer (related URLs: /ISAPI/System/Network/interfaces/
<ID>/wirelessServer/capabilities and /ISAPI/System/Network/interfaces/<ID>/
wirelessServer ):
added a node <wifiApModeType> (current wireless access point modes: "true, false, auto").
2. Extended device algorithm parameter message XML_AlgorithmsVersion (related URL: /ISAPI/
System/algorithmsVersion ):
added an algorithm name "depthMap" to the sub node <name>.
3. Extended capability message XML_Cap_VCAResource and configuration message
XML_VCAResource of intelligent resource switching (related URLs: /ISAPI/System/Video/
inputs/channels/<ID>/VCAResource/capabilities and /ISAPI/System/Video/inputs/channels/
<ID>/VCAResource ):
added an intelligent resource "verticalPeopleCounting" to the node <type>.
4. Extended video input mode message XML_CaptureMode (related URL: /ISAPI/Image/
channels/<ID>/capturemode ):
added two video input modes "26"-1944×1212@24fps and "27"-1944×1212@25fps to the node
<mode>.
5. Extended two-way audio parameter message XML_TwoWayAudioChannel (related URL: /ISAPI/
System/TwoWayAudio/channels/<ID> ):
added two nodes <lineOutForbidden> (whether the audio output is not supported) and
<micInForbidden> (whether the audio input is not supported).
6. Added six error codes, refer to Error Codes in ResponseStatus for details: 0x60000085
(DetectionLineOutofDetectionRegion), 0x60000086 (DetectionRegionError), 0x60000087
(DetectionRegionOutOfCountingRegion), 0x60000088 (PedalAreaError), 0x60000089
(DetectionAreaABError), and 0x6000008a (ABRegionCannotIntersect).

Summary of Changes in Version 2.0_June, 2019
Related Products: DS-PWA32 Series Wireless Security Control Panel
1. Extended the parameter message of a specific wireless hotspot XML_accessPoint (related
URL: /ISAPI/System/Network/interfaces/<ID>/wireless/accessPointList/<ID> ):
added a node <connecting> (whether the device is connecting to the Wi-Fi).
2. Extended the device capability message XML_DeviceCap (related URL: /ISAPI/System/
capabilities ):
added a node <isSupportModuleLock> (whether to support locking the module).
3. Extended the log types Log Types for ISAPI :
added four alarm log types: "wirelessKeypadTamperEvident" (Wireless Keypad Tampered),
"wirelessKeypadTamperEvidentReset" (Wireless Keypad Tamper Restored),
"wirelessCardReaderTamperEvident" (Wireless Card Reader Tampered), and
"wirelessCardReaderTamperEvidentReset" (Wireless Card Reader Tamper Restored);

13

Intelligent Security API (General Application) Developer Guide
added 12 exception logs: "wirelessKeypadOffline" (Wireless Keypad Disconnected),
"wirelessKeypadOnline" (Wireless Keypad Connected), "wirelessCardReaderOffline" (Wireless
Card Reader Disconnected), "wirelessCardReaderOnline" (Wireless Card Reader Connected),
"keypadLowPower" (Low Keypad Battery), "keypadLowPowerRecovery" (Low Keypad Battery
Recovered), "cardReaderLowPower" (Low Card Reader Battery),
"cardReaderLowPowerRecovery" (Low Card Reader Battery Recovered), "wKeypadOvertime"
(Wireless Keypad Heartbeat Timed Out), "wKeypadOvertimeRecovery" (Wireless Keypad
Heartbeat Timeout Recovered), "wCardReaderOvertime" (Wireless Card Reader Heartbeat
Timed Out), and "wCardReaderOvertimeRecovery" (Wireless Card Reader Heartbeat Timeout
Recovered).

Summary of Changes in Version 2.0_May, 2019
Related Products: DS-K2600 Series Access Controller in Version 2.1.0
1. Extended device information message XML_DeviceInfo (related URL: /ISAPI/System/
deviceInfo ):
added a device type "ACS" to the node <deviceType>;
added three nodes <relayNum> (number of local relays), <electroLockNum> (number of local
electronic locks), and <RS485Num> (number of local RS-485).
2. Added two URLs for upgrading peripherals firmware:
Get capability: GET /ISAPI/System/AcsUpdate/capabilities .
Upgrade firmware: PUT or POST /ISAPI/System/updateFirmware?type=&id= .
3. Extended the remote permission message XML_remotePermission (related URL: /ISAPI/
Security/UserPermission/<ID> ):
added four nodes <factoryReset> (restore default parameters), <arm> (arm), <disarm>
(disarm), and <accessControl> (access control).
4. Added the URLs to configure security mode level of the private protocol:
Get the configuration capability: GET /ISAPI/Security/CommuMode/capabilities?format=json ;
Get the parameters: GET /ISAPI/Security/CommuMode?format=json ;
Set the parameters: PUT /ISAPI/Security/CommuMode?format=json .
5. Extended configuration capability message of EHome server access XML_Cap_EHome (related
URL: /ISAPI/System/Network/Ehome/capabilities ):
added two nodes: <id> (center ID) and <GPRSAddressingFormatType> (GPRS address type);
added a protocol version "v2.6" to the node <protocolVersion>.
6. Extended the EHome server access configuration URL:
added centerID query parameter to the EHome server access configuration URL: /ISAPI/
System/Network/Ehome?centerID= .
7. Extended EHome server access parameter message XML_Ehome (related URLs: /ISAPI/System/
Network/Ehome?centerID= and /ISAPI/System/Network/Ehome ):
added a protocol version "v2.6" to the node <protocolVersion>.
8. Add the URLs to configure the report uploading method:
Get the configuration capability of the report uploading method: GET /ISAPI/SecurityCP/
ReportCenterCfg/capabilities?format=json ;

14

Intelligent Security API (General Application) Developer Guide
Get the parameters of the report uploading method: GET /ISAPI/SecurityCP/ReportCenterCfg/
<ID>?format=json ;
Set the report uploading method: PUT /ISAPI/SecurityCP/ReportCenterCfg/<ID>?format=json .
9. Extended device capability message XML_DeviceCap (related URL: /ISAPI/System/capabilities ):
added two nodes <isSupportAcsUpdate> (whether to support upgrading slave access control
device) and <isSupportAccessControlCap> (whether to support access control capability).
10. Extended event/alarm subscription capability message XML_SubscribeEventCap and
subscription parameter message XML_SubscribeEvent (related URLs: /ISAPI/Event/
notification/subscribeEventCap and /ISAPI/Event/notification/subscribeEvent ):
added four nodes <minorAlarm> (minor alarm type), <minorException> (minor exception
type), <minorOperation> (minor operation type), and <minorEvent> (minor event type) to the
node <EventList>.
11. Extended subscription response message XML_SubscribeEventResponse (related URL: /ISAPI/
Event/notification/subscribeEvent ):
added four nodes <minorAlarm> (minor alarm type), <minorException> (minor exception
type), <minorOperation> (minor operation type), and <minorEvent> (minor event type) to the
node <FailedEventList>.
12. Added a sub status code 0x60001024-"eventNotSupport" (event subscription is not supported)
to status code 6 (Invalid Message Content) in Error Codes in ResponseStatus .

Summary of Changes in Version 2.0_May, 2019
Related Products: DS-2CD50 Series and DS-2CD70 Series Box Camera with Software Version 5.6.0;
DS-2CD51 Series, DS-2CD55 Series, DS-2CD71 Series, and DS-2CD75 Series Dome Camera with
Software Version 5.6.0; DS-2CD7A Series and DS-2CD5A Series Bullet Camera with Software Version
5.6.0
1. Added the URL to search for security logs: POST /ISAPI/ContentMgmt/security/logSearch .
2. Added the URLs to configure log server:
Get capability: GET /ISAPI/System/logServer/capabilities ;
Get parameter: GET /ISAPI/System/logServer ;
Set parameter: PUT /ISAPI/System/logServer .
3. Added the URL to perform log server test: POST /ISAPI/System/logServer/test .
4. Extended security capability message XML_SecurityCap (related URL: /ISAPI/Security/
capabilities ): added a node <isSupportDeviceCertificatesManagement> (whether supports
device certificate management).
5. Added the URL to get the capability of searching device certificates in batch: GET /ISAPI/
Security/deviceCertificate/certificates?format=json .
6. Added the URL to get the status of a device certificate or all certificates:
For a certificate: GET /ISAPI/Security/deviceCertificate/certificates/<ID>/status?format=json ;
For all certificates: GET /ISAPI/Security/deviceCertificate/certificates/status?format=json .
7. Added the URLs to regenerate an abnormal certificate or all abnormal certificates:
For an abnormal certificate: PUT /ISAPI/Security/deviceCertificate/certificates/<ID>/recreate?
format=json ;

15

Intelligent Security API (General Application) Developer Guide
For all abnormal certificates: PUT /ISAPI/Security/deviceCertificate/certificates/recreate?
format=json .
8. Added the following certificate related and HDD formatting related error codes to the major
error type of invalid operation, refer to Error Codes in ResponseStatus for details: 0x40002036
(noClientCertificate), 0x40002037 (noCACertificate), 0x40002038 (authenticationFailed),
0x40002039 (clientCertificateExpired), 0x4000203A (clientCertificateRevocation), 0x4000203B
(CACertificateExpired), 0x4000203C (CACertificateRevocation), 0x4000203D (connectFail),
0x4000203F (loginNumExceedLimit), and hdFormatFail.
9. Extended steaming channel capability message ( XML_Cap_StreamingChannel ) and streaming
channel parameter message ( XML_StreamingChannel ) (related URLs: /ISAPI/Streaming/
channels/<ID>/capabilities and /ISAPI/Streaming/channels/<ID> ):
added a sub node <FecInfo> (FEC information) to the node <Multicast>.
10. Added a URL of RTSP to start and stop multicast based on NPQ (Network Protocol Quality):
Request for getting basic parameters: DESCRIBE rtsp://<host>[:port]/ISAPI/Streaming/
channels/<ID>?npq= ;
Request for getting session information: SETUP rtsp://<host>[:port]/ISAPI/Streaming/
channels/<ID>?npq= ;
Start multicast: PLAY rtsp://<host>[:port]/ISAPI/Streaming/channels/<ID>?npq= ;
Stop multicast: TEARDOW rtsp://<host>[:port]/ISAPI/Streaming/channels/<ID>?npq= .
11. Extended HDD management capability message ( XML_Cap_hddList ) and HDD parameter
message ( XML_hdd ) (related URLs: /ISAPI/ContentMgmt/Storage/hdd/capabilities and /
ISAPI/ContentMgmt/Storage/hdd/<ID> ):
added a node <formatType> (HDD formatting type).
12. Extended the HDD formatting URL /ISAPI/ContentMgmt/Storage/hdd/<ID> :
added a query parameter to the URL for specifying formatting type to format HDD: PUT /
ISAPI/ContentMgmt/Storage/hdd/<ID>/format?formatType= .
13. Added an URL to format multiple specified HDDs in batch: PUT /ISAPI/ContentMgmt/
Storage/hdd/specifyHddFormat?format=json .
14. Extended exposure parameter message XML_Exposure (related URL: /ISAPI/Image/channels/
<ID>/exposure ):
added an exposure type "pIris-General" to the node <ExposureType>;
added a node <PIrisGeneral> (general iris configuration).
15. Extended event/alarm subscription capability message ( XML_SubscribeEventCap ) and
subscription parameter message ( XML_SubscribeEvent ) (related URLs: /ISAPI/Event/
notification/subscribeEventCap and /ISAPI/Event/notification/subscribeEvent ):
added a node <identityKey> (subscription interaction command).

Summary of Changes in Version 2.0_May., 2019
Related Product Type: Thermal Network Bullet Camera; Thermal Bi-spectrum Network Bullet
Camera; Thermal & Optical Network Turret Camera; Thermal Box Camera V5.5.18
1. Extended the device capability XML_DeviceCap (request URL: GET /ISAPI/System/capabilities ):
added four nodes <isSupportDisplayTrajectory> (whether supports displaying trajectory),
<maximumSuperPositionTime> (the maximum time of trajectory displaying),

16

Intelligent Security API (General Application) Developer Guide
<isSupportCalibrationFile> (whether supports importing calibration file), and
<isSupportUnitConfig> (whether supports unit configuration).
2. Extended the audible warning configuration capability JSON_AudioAlarmCap (request URL:
GET /ISAPI/Event/triggers/notifications/AudioAlarm/capabilities?format=json ):
added one node <alarmType>; added three audible warning types to node <audioDescription>:
13-"Temperature abnormality, please deal with it as soon as possible", 14-"Smoking is
prohibited in this area", 15-"Fire detected, please deal with it as soon as possible".
3. Extended the audible warning parameters JSON_AudioAlarm (request URL: /ISAPI/Event/
triggers/notifications/AudioAlarm?format=json ):
added one node <alarmType>; added three audible warning types to node <audioID>:
13-"Temperature abnormality, please deal with it as soon as possible", 14 -"Smoking is
prohibited in this area", 15-"Fire detected, please deal with it as soon as possible".
4. Added one sub error code "unitConfigurationNotInEffect" (unit configuration is invalid) to 6status code (invalid message content).
5. Added the function of unit unified configuration:
Get the capability of unit unified configuration: GET /ISAPI/System/unitConfig/capabilities?
format=json ;
Get the unit unified configuration: GET /ISAPI/System/unitConfig?format=json ;
Set the unit unified parameters: PUT /ISAPI/System/unitConfig?format=json .

Summary of Changes in Version 2.0_Mar., 2019
Related Product Type: DS-PWA32 Series Wireless Security Control Panel
1. Added the function of device diagnosis.
Get the device diagnosis capability: GET /ISAPI/System/diagnosis/capabilities?format=json ;
Diagnose the device: POST /ISAPI/System/diagnosis?format=json
2. Added the function of serial port log redirection.
Get the configuration capability of serial port log redirection: GET /ISAPI/System/serialLogCfg/
capabilities?format=json ;
Get the redirection parameters of serial port log: GET /ISAPI/System/serialLogCfg?
format=json ;
Set the redirection parameters of serial port log: PUT /ISAPI/System/serialLogCfg?format=json
3. Added the function of exporting files from the device.
Get the capability of exporting files from the device: GET /ISAPI/System/fileExport/
capabilities?format=json ;
Export files from the device: POST /ISAPI/System/fileExport?format=json
4. Extended the security capability XML_SecurityCap (related URL: GET /ISAPI/Security/
capabilities ):
added two nodes: <isSptUserEnabled> (whether to support configuration of enabling user) and
<isSptAdminCap> (whether to support getting administrator permission capability).
5. Extended the user parameters XML_User (related URL: GET or PUT /ISAPI/Security/users/
<ID> ):
added one node: <enabled> (whether to enable the user); added a value "manufacturer" to the
node <userLevel> (user level).

17

Intelligent Security API (General Application) Developer Guide
6. Extended the user permission capability XML_UserPermissionCap (related URL: GET /ISAPI/
Security/UserPermission/operatorCap ) and user permission parameters XML_UserPermission
(related URL: GET or PUT /ISAPI/Security/UserPermission/<ID> ):
added two values "installer" and "manufacturer" to the node <userType> (user type);
added five sub nodes <subSysOrZoneArm> (partition or zone arming permission),
<subSysOrZoneDisarm> (partition or zone disarming permission), <subSysOrZoneClearArm>
(permission to clear partition or zone alarms), <zoneBypass> (permission to bypass zone), and
<zoneBypassRecover> (permission to recover bypassing zone) to the node
<remotePermission>.
7. Added a URL to get administrator's permission capability: GET /ISAPI/Security/UserPermission/
adminCap .
8. Extended the EHome server access configuration capability XML_Cap_EHome (related URL:
GET /ISAPI/System/Network/Ehome/capabilities ) and EHome server access configuration
parameters XML_Ehome (related URL: GET or PUT /ISAPI/System/Network/Ehome ):
added one node <netWork> (network type).
9. Extended the configuration capability message of listening host servers
XML_HttpHostNotificationCap (related URL: GET /ISAPI/Event/notification/httpHosts/
capabilities ) and parameter message of a listening server XML_HttpHostNotification (related
URL: POST /ISAPI/Event/notification/httpHosts ):
added a value "EHome" to the node <protocolType> (protocol type).
10. Extended the device capability XML_DeviceCap (related URL: GET /ISAPI/System/
capabilities ):
added five nodes <isSptDiagnosis> (whether to support device diagnosis), <isSptSerialLogCfg>
(whether to support configuring serial port log redirection), <isSptFileExport> (whether to
support exporting files from the device), <isSptCertificationStandard> (whether to support
configuring authentication standard for security control panel), and <isSptKeypadLock>
(whether to support locking keypad).
11. Extended the response message XML_ResponseStatus :
added one node <AdditionalErr> (additional error status information);
added a value "9-Additional Error" to the node <statusCode> (status code);
added a value "Additional Error" to the node <statusString> (status description).
12. Extended the response message JSON_ResponseStatus :
added one node <AdditionalErr> (additional error status information)
13. Extended error codes (see details in Error Codes in ResponseStatus ):
added a sub status code 0x10000005-"armProcess" (arming process) to status code 1 (OK);
added two sub status codes: 0x4000801C-"inPaceTest" (pacing mode) and
0x4000801D-"arming" (armed) to status code 4 (Invalid Operation).
14. Extended the log type :
added 16 exception logs: "keyfobLowPower" (low keyfob battery), "keyfobPowerRecovery"
(normal keyfob battery), "detectorOvertime" (detector heartbeat timed out),
"detectorOvertimeRecovery" (detector heartbeat timeout restored), "wSirenOvertime"
(wireless siren heartbeat timed out), "wSirenOvertimeRecovery" (wireless siren heartbeat
timeout restored), "wOutputOvertime" (wireless output module heartbeat timed out),

18

Intelligent Security API (General Application) Developer Guide
"wOutputOvertimeRecovery" (wireless output module heartbeat timeout restored),
"wRepeaterOvertime" (wireless repeater heartbeat timed out), "wRepeaterOvertimeRecovery"
(wireless repeater heartbeat timeout restored), "rfJamming" (RF wireless communication
blocked), "rfJammingRecovery" (RF wireless communication blocking restored), "batteryMiss"
(storage battery loss), "batteryMissRecovery" (storage battery restored), "ARCUploadFailed"
(ARC uploading failed), and "ARCUploadRecovery" (ARC uploading restored); added 18
operation logs: "armWithFault" (armed with fault), "entryDelay" (entering and exiting delay),
"modArmConfig" (edit arming parameters), "modCertificateStandard" (edit authentication
standard), "entryPaceTest" (pacing mode entered), "exitPaceTest" (pacing mode exited),
"addNetOperator" (add operator), "modNetOperator" (edit operator information),
"delNetOperator" (delete operator), "addNetInstaller" (add installer), "modNetInstaller" (edit
installer information), "delNetInstaller" (delete installer), "addManufacturer" (add
manufacturer), "modManufacturer" (edit manufacturer information), "delManufacturer"
(delete manufacturer), "upgradeSuccessed" (upgraded), "upgradeFailed" (upgrading failed),
and "zoneDisabled" (zone shielded); added five event logs: "keyPADlocked" (keypad locked),
"keyPADunlocked" (keypad unlocked), "timeSynchronization" (time synchronization),
"armFailed" (arming failed), and "ARCStart" (ARC connected).

Summary of Changes in Version 2.0_Mar., 2019
Related Product Type: Turing Series NVR V4.2.10
1. Extended the device capability XML_DeviceCap (related URL: GET /ISAPI/System/capabilities ):
added six node <isSupportAutoMaintenance> (whether supports automatic maintenance),
<isSupportTimeCap> (whether supports time capability), <isSupportIntelligentSearch>
(whether supports intelligent search), <IOTCap> (IoT device access capability),
<isSupportChannelFullEventListCap> (whether supports getting event capabilities of all
channels) and <isSupportAUXInfoCap> (whether supports getting attributes capabilities of all
channels)
2. Extended the device capability set XML_RacmCap (related URL: GET /ISAPI/ContentMgmt/
capabilities ):
added three nodes <isSupportCountingSearchByUTC> (whether supports whether supports
UTC for people counting statistics search), <isSupportPlaybackReverseByUTC> (whether
supports UTC for playback by time), <recordSearchType> (video file search condition)
3. Extended the device video capability set XML_VideoCap (related URL: GET /ISAPI/System/
Video/capabilities ):
added four nodes <isSupportCounting>, <isSupportMultiChannelCounting> (whether supports
people counting of multiple channels), <isSupportCountingCollection> (whether supports
people counting data replenishment), and <isSupportHeatmapCollection> (whether supports
heat map data replenishment).
4. Extended the network capability sets XML_NetworkCap (related URL: GET /ISAPI/System/
Network/capabilities ) :
added two nodes <isSupportPOEConfiguration> (whether supports PoE port configuration),
<EZVIZSecretKey> (whether supports editing verification code for Hik-Connect).
5. Added the function of PoE configuration.

19

Intelligent Security API (General Application) Developer Guide
Get PoE port configuration capability: GET /ISAPI/System/Network/POE/capabilities?
format=json ;
Get PoE port parameters: GET /ISAPI/System/Network/POE?format=json ;
Set PoE port: PUT /ISAPI/System/Network/POE?format=json .
6. Extended the access protocol XML_AdminAccessProtocol (related URL: GET: /ISAPI/Security/
adminAccesses/<ID> ):
added three protocols to node <protocol>: "IoT", "TLS1_1Enable", "TLS1_2Enable".
7. Added the function of automatic maintenance.
Get the capability of automatic maintenance configuration: GET /ISAPI/System/
autoMaintenance/capabilities?format=json ;
Get automatic maintenance configuration parameters: GET /ISAPI/System/autoMaintenance?
format=json ;
Set automatic maintenance: PUT /ISAPI/System/autoMaintenance?format=json .
8. Extended the time capability of device XML_Cap_Time (related URL: GET /ISAPI/System/time/
capabilities ):
added one node <timeType> (time type).
9. Added the function of IP address/MAC address filter configuration:
Get IP address configuration capability: GET /ISAPI/System/Network/ipFilter/capabilities ;
Get/Set the IP address filter configuration parameters: GET/PUT /ISAPI/System/Network/
ipFilter ;
Get MAC address configuration capability: GET /ISAPI/System/Network/MACFilter/
capabilities ;
Get/Set the MAC address filter configuration parameters: GET/PUT /ISAPI/System/Network/
MACFilter .
10. Extended the log type Log Types for ISAPI :
added two log types: "doubleVerificationPass" (doubel verification completed) and
"eventUploadException" (uploading event failed or uploaded event lost); added one operation
log: "localAddressFilterConfig/remoteAddressFilterConfig" (local/remote address filter
configuration); added one minor alarm type: "securityControlPanelEvent" (security control
panel event).
11. Extended the I/O capability XML_IOCap (related URL: GET /ISAPI/System/IO/capabilities ):
added one node <isSupportCombinationAlarm> (whether supports composite alarm).
12. Extended the alarm input configuration capability XML_Cap_IOInputPortList (reltaed URL:
GET /ISAPI/System/IO/inputs/capabilities ):
added one node <CombinationAlarmCap> (composite alarm capability).
13. Extended the alarm input parameters XML_IOInputPort (related URL: GET /ISAPI/System/IO/
inputs/<ID> ):
added two nodes <IODescriptor> (I/O port description) and <CombinationAlarm> (composite
alarm list).
14. Extended the device security capability XML_SecurityCap (related URL: GET /ISAPI/Security/
capabilities ):
added one node <DoubleVerificationCap> (double verification capability).
15. Added the function of double verification, see details in Configure Double Verification .

20

Intelligent Security API (General Application) Developer Guide
16. Extended the local permission XML_localPermission :
added two nodes <playBackDoubleVerification> (whether supports double verification for
playback) and <backupDoubleVerification> (whether supports double verification for backup).
17. Extended the remote permission XML_remotePermission :
added one node <playBackDoubleVerification> (whether supports double verification for
playback and download).
18. Extended the file download condition XML_downloadRequest :
added two nodes <userName> (double verification user name), <password> (double
verification password).
19. Extended error codes (see details in Error Codes in ResponseStatus ):
added six sub status codes: 0x60001034-invalidEZVIZSecretKey (invalid verification code for
Hik-Connect), 0x60001042- needDoubleVerification (double verification required),
0x60001043-noDoubleVerificationUser (no double verification user), 0x60001044timeSpanNumOverLimit (max. number of time buckets reached), 0x60001045channelNumOverLimit (max. number of channels reached), and 0x60001046noSearchIDResource(insufficient searchID resources) to status code 6 (Invalid Message
Content).
20. Added the data replenishment function, including people counting, heat map, temperature,
and vehicle detection. Refer to Data Replenishment for details.
21. Extended the network camera information XML_InputProxyChannel :
added three nodes <deviceTypeName> (device type name), <serialNumber> (device serial
No.), and <firmwareVersion> (firmware code).
22. Extended the event/alarm subscription capability XML_SubscribeEventCap and event/alarm
subscription messsage XML_SubscribeEvent :
added one node: <pictureURLType> (alarm picture format).
23. Extended the device online upgrade capability XML_OnlineUpgradeCap :
added one node <isSupportTimingUpgrade> (whether supports scheduled upgrade).
24. Extended the online upgrade parameters JSON_OnlineUpgradeParameter :
added two parameters "timingUpgrade" (enable scheduled upgrade or not) and
"upgradeTime" (upgrade time).
25. Added the function of IoT device access, for details refer to IoT Devices Access .
26. Extended the Hik-Connect access configurations XML_EZVIZ :
added one node <offlineStatus> (device offline status).
27. Added the function of editing verification code for Hik-Connect:
Request URL: PUT /ISAPI/System/Network/EZVIZ/secretKey?format=json .

Summary of Changes in Version 2.0_Feb., 2019
Related Product Type: Security Radar with Model DS-PR1-60
1. Added URL to set SSH server for access: /ISAPI/System/Network/ssh , refer to Network Access
for details.
2. Extended network capability ( XML_NetworkCap , related URL: GET /ISAPI/System/Network/
capabilities ):
added a node <isSupportEhome> (whether supports EHome protocol).

21

Intelligent Security API (General Application) Developer Guide
Summary of Changes in Version 2.0_Jan., 2019
Related Product Type: Speed Dome V5.6.0 (H3)
1. Extended PTZ channel capability ( XML_PTZChanelCap , related URL: GET /ISAPI/PTZCtrl/
channels/<ID>/capabilities ):
added two nodes <pqrsZoom> (zooming coordinates of Sony zoom camera module) and
<mnstFocus>(focus coordinates of Sony zoom camera module).
2. Added URL to configure zoom and focus coordinates for Sony zoom camera module: /ISAPI/
PTZCtrl/channels/<ID>/zoomFocus .
3. Added URL to configure OSD language: /ISAPI/System/Video/inputs/OSDLanguage
4. Extended wireless configuration capability ( XML_Cap_Wireless , related URL: GET /ISAPI/
System/Network/interfaces/<ID>/wireless/capabilities ):
added node <isSupportNullSsid> (whether supports setting SSID to null).
5. Extended streaming channel capability ( XML_Cap_StreamingChannel , related URL: /ISAPI/
Streaming/channels/<ID>/capabilities ):
edited the minimum values of sub nodes <videoDestPortNo> and <audioDestPortNo> to "1"
and added default values (8860) for these two nodes;
added two sub nodes <activeMulticastEnabled> (whether to enable active multicast) and
<packagingFormat> (container format) to the node <Multicast>.
6. Extended streaming channel parameter message ( XML_StreamingChannel , related URL: /
ISAPI/Streaming/channels/<ID> ): added two sub nodes <activeMulticastEnabled> (whether to
enable active multicast) and <packagingFormat> (container format) to the node <Multicast>.
7. Extended network access protocol capability and configuration message( and
XML_AdminAccessProtocol , related URLs: /ISAPI/Security/adminAccesses/capabilities and /
ISAPI/Security/adminAccesses/<ID> ):
added a value "SDK_OVER_TLS" to the node <protocol> (protocol type);
added three nodes <TLS1_0Enable> (whether to enable TLS v1.0), <TLS1_1Enable> (whether to
enable TLS v1.1), and <TLS1_2Enable> (whether to enable TLS v1.2).
8. Extended UDnP interface configuration message ( XML_port , related URL: /ISAPI/System/
Network/UPnP/ports/<ID> ) and mapping status message ( XML_portStatus , related URL: /
ISAPI/System/Network/UPnP/ports/<ID>/status ):
added a value "SDK_OVER_TLS" to the node <internalPort> (internal interface).
9. Added URL to get the socket IP of current connection: GET /ISAPI/System/Network/socketIP .
10. Extended alarm linkage capability ( XML_EventTriggersCap , related URL: GET /ISAPI/Event/
triggersCap ):
added two nodes <isSupportWhiteLightAction> (whether supports supplement light alarm
linkage) and <isSupportAudioAction> (whether supports audible warning linkage).
11. Extended alarm linkage capability type ( XML_EventTriggerCapType ):
added two node <isSupportBeep> (whether supports audible warning linkage) and
<isSupportWhiteLight> (whether supports supplement light alarm linkage).
12. Extended alarm linkage action message ( XML_EventTriggerNotification ):
added two linkage actions to the node <notificationMethod>, i.e., "beep"-audible warning and
"whiteLight"-supplement light.

22

Intelligent Security API (General Application) Developer Guide
13. Added URLs to get configuration capability and configure parameters of supplement light
alarm output:
Get Capability: GET /ISAPI/Event/triggers/notifications/whiteLightAlarm/capabilities?
format=json ;
Get Parameter: GET /ISAPI/Event/triggers/notifications/whiteLightAlarm?format=json ;
Set Parameter: PUT /ISAPI/Event/triggers/notifications/whiteLightAlarm?format=json .
14. Added URLs to get configuration capability and configure parameters of audible warning alarm
output:
Get Capability: GET /ISAPI/Event/triggers/notifications/AudioAlarm/capabilities?
format=json ;
Get Parameter: GET ;
Set Parameter: PUT .
15. Extended dynamic capability ( XML_DynamicCap , related URL: /ISAPI/Streaming/channels/
<ID>/dynamicCap ):
added a audible prompt type, i.e., "prompt25" to the nodes <smart264EnabledPrompt>
(audible prompt for Smart264 enabled) and <smart265EnabledPrompt> (audible prompt for
Smart265 enabled).
16. Extended video capability ( XML_VideoCap , related URL: GET /ISAPI/System/Video/
capabilities ):
added nodes <OSDLanguage> (OSD language), <channelFlexible> (capability of getting channel
status by condition).
17. Extended device capability ( XML_DeviceCap , related URL: GET /ISAPI/System/capabilities ):
added nodes <isSupportActiveMulticast> (whether supports active multicast),
<isSupportGetLinkSocketIP> (whether supports getting the socketIP of current connection),
<isSupportChangedUpload> (whether supports uploading status changes),
<isSupportSimpleDevStatus> (whether supports getting device working status),
<isSupportFlexible> (whether supports getting channel status by condition), and
<isSupportTimeCap> (whether supports time configuration).
18. Extended time configuration capability ( XML_Cap_Time , related URL: GET ):
added node <timeType> (time type, local or UTC time).
19. Added the function of alarm/event subscription, refer to Subscribe Alarm/Event in Arming
Mode for details.

Summary of Changes in Version 2.0_Jan., 2019
Related Product Type: AX Panel
1. Extended the security capability XML_SecurityCap :
added four nodes: <keypadPassword> (keypad password length), <installerKeypadPassword>
(installer's keypad password length), <operatorKeypadPassword> (operator's keypad password
length), and <userOperateType> (user operation type).
2. Extended the user parameters XML_User :
added one node: <userOperateType> (user operation type).
3. Extended the search result parameters for log files XML_CMSearchResult :

23

Intelligent Security API (General Application) Developer Guide
added three nodes: <object> (operation object), <params> (parameters), and <seq> (serial No.)
to <logDescriptor>.
4. Added an error code to : 0x4000801B-"inProgramMode" (The keypad is in programming mode).
5. Added two minor log types to operation logs in Log Types for ISAPI : "enterProgramMode"-The
keypad programming mode is enabled; "existProgramMode"-The keypad programming mode is
disabled.

Summary of Changes in Version 2.0_Dec., 2018
Related Product Type: Thermal Network Bullet Camera; Thermal Bi-spectrum Network Bullet
Camera; Thermal & Optical Network Dome Camera V5.5.16
Related Product Model: DS-2TD21xx/V1 series, DS-2TD21xx/VP series, DS-2TD26xx series,
DS-2TD26xx/V1 series, DS-2TD28xx series, DS-2TD28xx/V1 series, DS-2TD12xx/V1 series
1. Extended the alarm output capability XML_IOOutputPortList and alarm output port parameters
XML_IOOutputPort :
added one node normalStatus (normal status).
2. Added one URL of getting I/O output capability: /ISAPI/System/IO/outputs/capabilities

Summary of Changes in Version 2.0_Oct., 2018
Related Product Type: Thermographic Automation Thermal Camera with Models DS-2TA03-15SVI
and DS2TA06-25SVI
1. Added the function of lens correction:
Get capability of lens correction configuration: GET /ISAPI/PTZCtrl/channels/<ID>/
lensCorrection/capabilities?format=json
Get lens correction configuration parameters: GET /ISAPI/PTZCtrl/channels/<ID>/
lensCorrection?format=json
Set lens correction: PUT /ISAPI/PTZCtrl/channels/<ID>/lensCorrection?format=json
2. Extended the PTZ control capability XML_PTZChanelCap :
added one node <isSupportLensCorrection> (whether supports lens correction).
3. Extended the attributes of specific channel XML_ChannelInfo :
added two nodes: <PanoramaCamera>, <GlobalCamera>, added three sub nodes
<LensCorrection> (lens correction), <BurningPrevention> (burning prevention) to <thermal> .

Summary of Changes in Version 2.0_Sept., 2018
Related Product Type: Network Thermographic Automation Camera DS-2TA03-4AUM
Extended the focus parameters configuration XML_FocusConfiguration : added two nodes
<focusStyle> (focus type) and <relativeFocusPos> (relative focus value).

24

Intelligent Security API (General Application) Developer Guide

Chapter 2 Protocol
The design of ISAPI protocol adopts RESTful style, so this part introduces the predefined resource
operation methods, protocol API (URL) format, interaction message format, time format,
namespace, and error processing method.

2.1 Operation Method
The resource operation methods of ISAPI protocol are same as those of HTTP (Hyper Text Transport
Protocol) and RTSP (Real Time Streaming Protocol), see details in the following table.
Note
The RTSP operation methods are mainly used to get the real-time stream for live view, two-way
audio, and playback in this manual. For details about HTTP and RTSP, please refer to https://
tools.ietf.org/html/rfc2612 and https://tools.ietf.org/html/rfc2326 .
Table 2-1 HTTP Operation Method
Method

Description

POST

Create resources. This method is only available for adding resource that does
not exist before.

GET

Retrieve resources. This method cannot change the system status, only return
data as the response to the requester.

PUT

Update resources. This method is usually for update the resource that already
exists, but it can also be used to create the resource if the specific resource
does not exist.

DELETE

Delete resources.
Table 2-2 RTSP Operation Method

Method
OPTIONS

Description
Get the supported RTSP operation methods. See the request and response
message format below when interacting between client software and server.
OPTIONS %s RTSP/1.0\r\n //Request URL
CSeq:%u\r\n
//Command No.
User-Agent:%s\r\n
//Client software name
\r\n
/*Succeeded*/
RTSP/1.0 200 OK\r\n
//Succeeded
CSeq: %u\r\n
//Command No.

25

Intelligent Security API (General Application) Developer Guide
Method

Description
Public: %s\r\n
Date:%s\r\n
\r\n

//Supported operation methods
//Date and time

/*Failed*/
RTSP/1.0 4XX/5XX %s\r\n //Failed
CSeq: %u\r\n
//Command No.
Date:%s\r\n
//Date and time
\r\n

DESCRIBE

Transfer basic information by SDP (Session Description Protocol, see https://
tools.ietf.org/html/rfc2327 ) files, such as URL with SETUP command and so
on. See the request and response message format below when interacting
between client software and server.
DESCRIBE %s RTSP/1.0\r\n //URL
CSeq:%u\r\n
//Command No.
Accept: application/sdp\r\n
//The SDP description is accepted
Authorization:%s\r\n
//Authentication information
User-Agent:%s\r\n
//Client software name
\r\n
/*Succeeded*/
RTSP/1.0 200 OK\r\n
//Succeeded or failed
CSeq: %u\r\n
//Command No.
Content-Type: application/sdp\r\n //The SDP description exists behind the command
Content-Base:%s\r\n
//URL
Content-Length: %d\r\n
//The length of contents behind the command
\r\n
[content]
//SDP description
/*Failed*/
RTSP/1.0 4XX/5XX %s\r\n
//Failed
CSeq: %u\r\n
//Command No.
\r\n

SETUP

Interact the session information, such as transmission mode, port number,
and so on. See the request and response message format below when
interacting between client software and server.
SETUP %s RTSP/1.0\r\n //URL
CSeq:%u\r\n
//Command No.
Authorization:%s\r\n
//Authentication information
Session:%s\r\n
//Session ID is only returned at the even number of times
Transport: %s\r\n
//Transmission protocol
User-Agent:%s\r\nv
//Client software name
\r\n
/*Succeeded*/
RTSP/1.0 200 OK \r\n

//Succeeded

26

Intelligent Security API (General Application) Developer Guide
Method

Description
CSeq: %u\r\n
Session:%s\r\n
Transport: s%
Date: s%

//Session ID
//Transmission method
//Date and time

/*Failed*/
RTSP/1.0 4XX/5XX %s\r\n
//Failed
CSeq: %u\r\n
//Command No.
\r\n

PLAY

Start the stream transmission. See the request and response message format
below when interacting between client software and server.
PLAY %s RTSP/1.0\r\n
CSeq:%u\r\n
Authorization:%s\r\n
Session:%s\r\n
Range: npt=%f-%f\r\n
User-Agent:%s\r\n
\r\n
/*Succeeded*/
RTSP/1.0 200 OK \r\n
CSeq: %u\r\n
Session:%s\r\n
RTP-Info:%s
Date: %s

//URL
//Command No.
//Authentication information
//Session ID
//Determine the play range
//Client software name

//Succeeded

/*Failed*/
RTSP/1.0 4XX/5XX %s\r\n
//Failed
CSeq: %u\r\n
//Command No.
Session:%s\r\n
\r\n

PAUSE

Pause the stream transmission.

TEARDOWN

Stop the stream transmission. See the request and response message format
below when interacting between client software and server.
TEARDOWN %s RTSP/1.0\r\n //URL
CSeq: %u\r\n
//Command No.
Authorization:%s\r\n
//Authentication information
Session:%s\r\n
//Session ID
User-Agent:%s\r\n
//Client software name
\r\n
/*Succeeded*/
RTSP/1.0 200 OK \r\n
CSeq: %u\r\n
Session:%s\r\n

//Succeeded

27

Intelligent Security API (General Application) Developer Guide
Method

Description
Date:%s\r\n
\r\n
/*Failed*/
RTSP/1.0 4XX/5XX %s\r\n
//Failed
CSeq: %u\r\n
//Command No.
Session:%s\r\n
\r\n

2.2 URL Format
URL (Uniform Resource Locator) is a further class of URIs, it can identify a resource and locate the
resource by describing its primary access mechanism.
The format of URL is defined as the follows: <protocol>://<host>[:port][abs_path [?query]].
protocol
Protocol types, i.e., HTTP (version 1.1) and RTSP (version 1.0).
host
Host name, IP address, or the FQDN (Fully Qualified Domain Name) of network devices.
port
Port number of host service for listening the connection status of TCP (Transmission Control
Protocol, see https://tools.ietf.org/html/rfc793 ) or UDP (User Datagram Protocol, see https://
tools.ietf.org/html/rfc768 ). If this field is not configured, the default port number will be
adopted. For HTTP, the default port number is 80, and for RTSP, the default port number is 554.
abs_path
Resource URI: /ServiceName/ResourceType/resource. Here, the ServiceName is ISAPI; the
ResourceType is predefined with upper camel case according to different functions , see details
in the following table; the resource is defined with lower camel case and can be extended in
actual applications. E.g., /ISAPI/System/Network/interfaces.
Predefined URI Model

Description

/ISAPI/System/...

System related resources

/ISAPI/Security/...

Security related resources

/ISAPI/Streaming/...

Video streaming and management related resources

/ISAPI/Event...

Event/alarm related resources

/ISAPI/PTZCtrl/...

PTZ control related resources

28

Intelligent Security API (General Application) Developer Guide
Predefined URI Model
/ISAPI/Image/...

Description
Video encoding and image related resources

/ISAPI/ContentMgmt/ Storage management related resources
...
query
Strings for describing resources information, including related parameters. The parameter
names and values must be listed as the following format in this field: ?p1=v1&p2=v2&…&pn=vn.
Note
• To locate the connected device, when operating lower-level device via the URL, the query
field should be filled as ?devIndex=uuid&p1=v1&p2=v2&…&pn=vn. The uuid (or guid) is a 32byte (128 bits) random number, which is unique and generated by operating system when
adding device, and its format is "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx".
• For message in JSON format, the query field should be filled as ?
format=json&p1=v1&p2=v2&…&pn=vn. For details about message format, refer to the next
section below. E.g.,http://10.17.132.22/ISAPI/System/time?
foramt=json&devIndex=550e8400e29b41d4a716446655440000.

2.3 Message Format
For ISAPI protocol, the request and response messages generated among the interaction between
devices and platform are data in XML format or JSON format.
Note
The message format here is only available for URLs based on HTTP.

XML Format
• For the previous integration, XML is a common format which may only cause a little changes in
the later integration.
• Generally, for configuration information, the Content-Type in the XML format message is
"application/xml; charset='UTF-8'", see details below.
//Request Message
GET /ISAPI/System/status HTTP/1.1
…
//Response Message
HTTP/1.1 200 OK
…
Content-Type: application/xml; charset="UTF-8"
…
<?xml version="1.0" encoding="UTF-8"?>

29

Intelligent Security API (General Application) Developer Guide
<DeviceStatus version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
…
</DeviceStatus>

For data (e.g., firmware, configuration files), the Content-Type in the XML format message is
"application/octet-stream", see details below.
//Request Message
PUT /ISAPI/System/configurationData HTTP/1.1
…
Content-Type: application/octet-stream
…
[proprietary configuration file data content]
//Response Message
HTTP/1.1 200 OK
…
Content-Type: application/xml; charset="UTF-8"
…
<?xml version="1.0" encoding="UTF-8"?>
<ResponseStatus version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
…
</ResponseStatus>

JSON Format Message
• The leaf node (without any sub node) in the message is named by lower camel case, while the
non-leaf node in the message in named by upper camel case.
• To communicate by the messages in JSON format, the devices must support the public
specifications in http://www.ecma-international.org/publications/files/ECMA-ST/
ECMA-404.pdf and HTTP with version 1.1.
Note
JSON is a lightweight data format which is a subset of JavaScript language and is small, fast, and
easy to be parsed.
• Generally, for configuration information, the Content-Type of message is "application/json", see
the example below:
//Request message
GET /ISAPI/System/status HTTP/1.1
…
//Response message
HTTP/1.1 200 OK
…
Content-Type: application/json
…
"DeviceStatus":""
…

30

Intelligent Security API (General Application) Developer Guide
For data (e.g., firmware, configuration files), the Content-Type of message is "application/octetstream", see the example below:
//Request message
PUT /ISAPI/System/configurationData HTTP/1.1
…
Content-Type: application/octet-stream
…
[proprietary configuration file data content]
//Response message
HTTP/1.1 200 OK
…
Content-Type: application/json
…
"ResponseStatus":""
…

2.4 Others
Time Format
The time format in the ISAPI protocol adopts ISO8601 standard (see details in http://
www.w3.org/TR/NOTE-datetime-970915 ), that is, YYY-MM-DDThh:mm:ss.sTZD (e.g.,
2017-08-16T20:17:06+08:00).

Namespace
For message in XML format, namespace is required. The following namespaces are available:
• xmlns=http://www.isapi.org/ver20/XMLSchema
• xmlns:xs="http://www.w3.org/2001/XMLSchema"
• xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
• xmlns:xlink="http://www.w3.org/1999/xlink"

Error Processing
During the integration applications of ISAPI protocol, when the error of URL based on HTTP
occurred, the ResponseStatus message (in XML or JSON format) which contains error code will be
returned. If the error of URL based on RTSP occurs, the corresponding status code will directly be
returned, for details, refer to https://tools.ietf.org/html/rfc2326 .

31

Intelligent Security API (General Application) Developer Guide

Chapter 3 Security
This part mainly introduces the authentication, user permission, and encryption in the integration
applications of ISAPI.

3.1 Authentication
When communicating via ISAPI protocol, the digest of the session must be authenticated.
Note
• The authentication must based on HTTP Authentication: Basic and Digest Access Authentication,
see https://tools.ietf.org/html/rfc2617 for details.
• The request session must contain authentication information, otherwise, device will return 401
error code.
The message digest, which contains user name, password, specific nonce value, HTTP or RTSP
operation methods, and request URL, is generated by the MD5 algorithm, see the calculation rules
below.
qop=Undefined
Digest=MD5(MD5(A1):<nonce>:MD5(A2))
qop="auth:"
Digest=MD5(MD5(A1):<nonce>:<nc>:<cnonce>:<qop>:MD5(A2))
qop="auth-int:"
Digest=MD5(MD5(A1):<nonce>:<nc>:<cnonce>:<qop>:MD5(A2))
Note
• The qop is a value for determining whether the authentication is required.
• A1 and A2 are two data blocks required for digest calculation.
A1: Data block about security, which contains user name, password, security domain, random
number, and so on. If the digest calculation algorithm is MD5, A1=<user>:<realm>:<password>;
if the algorithm is MD5-sess, A1=MD5(<user>:<realm>:<password>):<nonce>:<cnonce>.
A2: Data block about message, such as URL, repeated requests, message body, and so on, it
helps to prevent repeated, and realize the resource/message tamper-proof. If the qop is not
defined or it is "auth:", A2=<request-method>:<uri-directive-value>; if the qop is "auth-int:",
A2=<request-method>:<uri-directive-value>:MD5(<request-entity-body>).
• The nonce is the random number generated by service, the following generation formula is
suggested: nonce = BASE64(time-stamp MD5(time-stamp ":" ETag ":" private-key)). The timestamp in the formula is the time stamp generated by service or the unique serial No.; the ETag is

32

Intelligent Security API (General Application) Developer Guide
the value of HTTP ETag header in the request message; the priviate-key is the data that only
known by service.
If authentication failed, the device will return the XML_ResponseStatus_AuthenticationFailed
message, and the remaining authentication attempts will also be returned. If the remaining
attempts is 0, the user will be locked at the next authentication attempt.

3.2 User Permission
Three user types with different permissions are adopted in the security specifications to control
the access.
Administrator
The account of this user type is called "admin", which has the permissions to access all supported
resources. And it must be activated at any time.
Operator
The account of this user type has the permissions to access common resources and less advanced
resources, see details in the description of each resource.
Viewer
The account of this user type has the permissions to access common resources only, see details in
the description of each resource.

3.3 Encryption
Two encryption modes are available, including all information encryption (based on HTTPs) and
sensitive information (e.g., user name, password, card No. and so on) encryption.
Note
• The sensitive information varies with different applications, see details in the description of
protocol messages.
• Encryption will not affect the escape behavior of contents in XML format, which means that the
contents should be escaped before encrypting.
Encryption Capability
Before encrypting the information, the encryption capability of devices or client software should
be obtained via the URL: GET /ISAPI/Security/capabilities to know the available encryption
algorithm. The encryption algorithm information is returned by the securityVersion node in
response message XML_SecurityCap .

33

Intelligent Security API (General Application) Developer Guide
Note
Different values of securityVersion node correspond to different encrypted contents and
encryption modes. If node value is 1, it indicates that the encryption mode is AES128 CBC, and
only the password will be encrypted; if the node value is 2, the AES256 CBC mode is adopted, and
both the user name and password will be encrypted.
Encryption Flow
Flow of encrypting source data: Source Data → Encode by Base64 Method → Encrypt in AES128/
AEC256 CBC Mode .
Note
Encoding data by Base64 method is to be compatible with binary data and get the data size
before encrypting by AES128/AEC256 CBC mode (the data size is not real after encrypting as 0 will
be supplied).
Encryption Key
The key used for encryption is generated by iteratively encrypting the (Password
+"AaBbCcDd1234!@#$") according to SHA256 algorithm. E.g., if the device password is
abcd1234, then the key is SHA(SHA(SHA("abcd1234AaBbCcDd1234!@#$"))…).
Note
• The number of iterations is determined by device capability, see the node keyIterateNum in
XML_SecurityCap message.
• If the password is changed when generating the key, the previous password will be used.
• The device gets the key when it is authenticated, and the client software/system calculates the
key after logging in.
Encryption URL Format
The encryption modes are displayed by adding query parameters, i.e., security and iv, to the URL
(e.g., /ISAPI/xxx?security=1&iv=xxx).
Note
• The parameter security is the version No. of encryption scheme. When security does not exist,
it indicates that the data is not encrypted; when security=1, it indicates that the nodes of
sensitive information in the message are encrypted in AES128 CBC mode; when security=2, it
indicates that the nodes of sensitive information in the message are encrypted in AES256 CBC
mode.
• The parameter iv is the initialization vector, and it is required when security=1 or 2. The 16byte hexadecimal iv of AES128/AES256 CBC mode is generated by client software or system,
and it will be transformed to 32-byte characters when transmitting it to devices via URL. When
encrypting in AES128/AES256 CBC mode, loop encryption by data block size is not required,

34

Intelligent Security API (General Application) Developer Guide
and after encrypting for once, the iv will be changed, so if there are two or more nodes to be
encrypted, you should copy the iv during encoding to make sure the iv is same for encrypting
each node.
• When you want to determine the value of security in the URL, you must compare the
encryption scheme version No. of client software and device. If the supported versions are
different, you should adopt the lower version. E.g., if the client software supports security=2,
the device supports security=1, then security=1 will be adopted.
Suggestion About Extension
If there are other existing nodes in the message are regarded as sensitive information, you can
add values to the parameter security in the URL, e.g., security=3 (encrypt added sensitive
information in AES128 CBC mode) and security=4 (encrypt added sensitive information in AES256
CBC mode).

3.3.1 Encrypt Stream
To improve the security of real-time or history stream from devices and comply with the laws and
regulations of some parts of oversea markets, we have provided the stream encryption function
based on AES algorithm to encrypt the stream.

35

Intelligent Security API (General Application) Developer Guide
Steps

Figure 3-1 Programming Flow of Encrypting Stream
Note
• For devices with Hisilicon chips, up to 16 channels' stream can be encrypted. If the number of
channels is larger than 16, the error "insufficient resources" will be returned when starting live
view or playback.
• For Sky series devices, all channels' stream can be encrypted.
• The PlayCtrl library will not check if the stream is encrypted. If the stream is encrypted, but the
decryption key is not configured or incorrect decryption key is configured, the display image will
be black.
• If the encryption algorithm of the external stream is known, you can decrypt and play the stream
without the PlayCtrl library.
1. Get device capability or encryption capability to check if the device or channel supports stream
encryption by the request URL: GET /ISAPI/System/capabilities or /ISAPI/Streaming/
encryption/capabilities?format=json .

36

Intelligent Security API (General Application) Developer Guide
- The node <isSupportEncryption> is not returned in the capability message XML_DeviceCap
or the value of node <enable> in the capability message JSON_EncryptionCap is "false":
perform the steps below.
a. Get network capability to check if the device supports encrypting EZVIZ stream by the
request URL: GET /ISAPI/System/Network/capabilities .
Note
If the node <isSupportEZVIZ> is returned in the capability message XML_NetworkCap and
its value is "true", it indicates that encrypting EZVIZ stream is supported. Otherwise,
please end this task.
b. Log in to Hik-Connect and set encryption key to enable EZVIZ stream encryption by the
request URL: PUT /ISAPI/System/Network/EZVIZ .
- The node <isSupportEncryption> is returned in the capability message XML_DeviceCap and
its value is "true" or the value of node <enable> in the capability message
JSON_EncryptionCap is "true": the device or channel supports stream encryption, and
continue to perform the steps below.
a. Set encryption key by the request URL: PUT /ISAPI/Streaming/encryption/secretKey?
format=json .
b. Enable stream encryption by the request URL: PUT /ISAPI/Streaming/encryption?
format=json .
2. Get real-time or history stream, refer to Live View and Playback for details.
3. Verify the encryption key by the request URL: POST /ISAPI/System/Network/
verificationCodeCheck .
Note
To check if verifying verification code is supported, you can call the URL: GET /ISAPI/System/
Network/capabilities to get the device network capability ( XML_NetworkCap ). If supports, the
node <isSupportVerificationCodeCheck> is returned in the capability and its value is "true".
4. Receive the encrypted stream by calling encrypted stream callback function
(PlayM4_SetEncryptTypeCallBack) of PlayCtrl Library SDK and decrypt the stream by the
encryption key.
Note
Refer to Cross-Platform PlayCtrl Library SDK User Manual for details of the encrypted stream
callback function and playing of the decrypted stream.

3.3.2 Encrypt Sensitive Information
Some sensitive information (such as user name, password, and so on) in the messages should be
encrypted to improve security during interaction with devices via ISAPI.

37

Intelligent Security API (General Application) Developer Guide
Steps

Figure 3-2 Programming Flow of Encrypting Sensitive Information
Note
Values of the following parameters in query parameters, XML messages, and JSON messages are
sensitive information that needs to be encrypted.
Table 3-1 Sensitive Information to be Encrypted
Format

Parameters

Query

identityKey (identity key, which is the key of the private face picture
library) and secretkey (secret key)

XML

<userName> (user name), <password> (password), <loginPassword>
(login password), <snmpAuthenticationPassword> (SNMP
authentication password), <snmpPrivacyPassword> (SNMP
encryption password), <accountName> (account name),
<encryptionKey> (encryption key), <sharedKey> (shared key),
<Username> (user name), <passwd>(password), <name> (name),

38

Intelligent Security API (General Application) Developer Guide
Format

Parameters
<authPasswd> (authentication password), <passWord> (password),
<key> (key), <tokenKey> (token key), <oldPwd> (old password),
<newPwd> (new password), and <terminalPwd> (terminal
password)

JSON

"userName" (user name), "password" (password), "loginPassword"
(login password), "snmpAuthenticationPassword" (SNMP
authentication password), "snmpPrivacyPassword" (SNMP
encryption password), "accountName" (account name),
"encryptionKey" (encryption key), "sharedKey" (shared key),
"Username" (user name), "passwd" (password), "authPasswd" (authentication
password), "passWord" (password), "key" (key), "tokenKey" (token
key), "randomCode" (random code), "AK" (access key), "SK" (encryption
key), "Card" (card No.), "Password" (password), "FingerPrint" (fingerprint),
"TemporaryPassword" (temporary password), "RemoteControl"
(remote control), and "WirelessInfo" (wireless information)
1. Get the device security capability by the request URL: GET /ISAPI/Security/capabilities to know
the encryption parameters.
The security capability is returned in the message XML_SecurityCap . Nodes of encryption
parameters include <securityVersion> (encryption scheme version), <keyIterateNum> (iteration
times), <isIrreversible> (whether the password is irreversible), and <salt> (salt value).
Note
The salt value will be returned only when the request URL contains the query parameter
username.
2. Calculate and generate the key for encryption and decryption according to the encryption
parameters.
- If <isIrreversible> is "true" and <salt> is also configured, the key is calculated and generated
by iteratively encrypting the value of (user name+salt+password) with SHA256 algorithm.
Note
• The value of <salt> should be different for different users.
• The password encrypted by this method is irreversible.
- If <isIrreversible> is "false" or does not exist, and <salt> is null, the key is calculated and
generated by iteratively encrypting the password with SHA256 algorithm.
Note
The password encrypted by this method is reversible.
3. Generate a byte array containing 16 elements randomly as the initialization vector (iv) and
covert the byte array to character array.
4. Encrypt the data.

39

Intelligent Security API (General Application) Developer Guide
1) Convert iv from character array to byte array.
2) Encode the data to be encrypted by using base64.
3) Set the AES key based on the encryption key and the encryption version.
Note
Currently, only AES-128 encryption is supported, which indicates that the securityVersion is
1.
4) Encrypt the data by using iv and AES key in AES-CBC mode.
5) Convert the encrypted data to character array.
5. Decrypt the encrypted data.
1) Convert iv from character array to byte array.
2) Convert the encrypted data from character array to byte array.
3) Set the AES key based on the encryption key and the encryption version.
Note
Currently, only AES-128 encryption is supported, which indicates that the securityVersion is
1.
4) Decrypt the encrypted data by using iv and AES key in AES-CBC mode.
5) Decode the decrypted data by using base64.
Example
Sample Code of Encrypting Sensitive Information
using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Cryptography;
using System.Text;
using System.Threading.Tasks;
namespace SystemManagement.InformationEncryption
{
class InfoEncryption
{
/// <summary>
/// Generate initialization vector (iv)
/// </summary>
/// <param name="strInitVector"></param>
/// <returns></returns>
public static void GetInitVector(out string strInitVector)
{
byte[] szInitVector = new byte[16];
Random ra = new Random();
ra.NextBytes(szInitVector);
byte[] byHexAes = AESEncryption.converByteArrayToCharArray(szInitVector, szInitVector.Length);
strInitVector = Encoding.UTF8.GetString(byHexAes).ToLower();//This must be in lowercase.
}
/// <summary>

40

Intelligent Security API (General Application) Developer Guide
/// Encrypt data with SHA256 algorithm. The data encrypted by this algorithm is reversible.
/// </summary>
/// <param name="strData"></param>
/// <returns></returns>
public static string sha256(string strData)
{
byte[] szData = Encoding.UTF8.GetBytes(strData);
byte[] szHash = SHA256Managed.Create().ComputeHash(szData);
byte[] szSha256 = AESEncryption.converByteArrayToCharArray(szHash, 32);//The standard algorithm is Hash. The
length 32 is set according to the sample document.
return Encoding.UTF8.GetString(szSha256);
}
/// <summary>
/// Encrypt (user name+salt+password) with SHA256 algorithm. The password encrypted by this algorithm is
irreversible.
/// </summary>
/// <param name="strUser"></param>
/// <param name="szSalt"></param>
/// <param name="strPassword"></param>
/// <returns></returns>
public static string calcSha256(string strUser, byte[] szSalt, string strPassword)
{
string strSrcData = strUser;
byte[] szRealSalt = new byte[64];//The size of the salt value is 64 bits.
if (szSalt.Length > 64)
{
return null;
}
Array.Copy(szSalt, szRealSalt, szSalt.Length);
strSrcData = strSrcData + Encoding.UTF8.GetString(szRealSalt) + strPassword;
return sha256(strSrcData);
}
/// <summary>
/// Generate encryption key
/// </summary>
/// <param name="strUserName"></param>
/// <param name="strSalt"></param>
/// <param name="strPassword"></param>
/// <param name="szOut"></param>
/// <param name="iKeyIterateNum"></param>
/// <param name="bIrreversible"></param>
/// <returns></returns>
public static void getEncryptKey(string strUserName, string strSalt, string strPassword, out byte[] szOut, int
iKeyIterateNum, bool bIrreversible)
{
byte[] szSalt = null;
if (strSalt != null)
{
szSalt = Encoding.UTF8.GetBytes(strSalt);
}

41

Intelligent Security API (General Application) Developer Guide
string strSrcData = string.Empty;
if (bIrreversible && szSalt.Length > 0)
{
string strIrrPsw = calcSha256(strUserName, szSalt, strPassword);
if (strIrrPsw.Length > 64)
{
strSrcData = strIrrPsw.Substring(0,64);
}
else
{
strSrcData = strIrrPsw;
}
}
else
{
if (strPassword.Length > 64)
{
strSrcData = strPassword.Substring(0,64);
}
else
{
strSrcData = strPassword;
}
}
strSrcData +="AaBbCcDd1234!@#$";
if (iKeyIterateNum <= 0)//Iterations
{
iKeyIterateNum = 100;
}
//For the SHA256 iteration, iKeyIterateNum represents the number of iterations returned by the capability set.
for (int i = 0; i < iKeyIterateNum; i++)
{
strSrcData = sha256(strSrcData);
}
byte[] szSHA256 = Encoding.UTF8.GetBytes(strSrcData);
//The result calculated with SHA256 algorithm is converted to a byte array for the last time.
byte[] szByteArray = AESEncryption.convertCharArrayToByteArray(szSHA256, szSHA256.Length);

}

if (szByteArray.Length > 32)
{
szOut = new byte[32];
Array.Copy(szByteArray, szOut, 32);
}
else
{
szOut = new byte[szByteArray.Length];
Array.Copy(szByteArray, szOut, szByteArray.Length);
}

42

Intelligent Security API (General Application) Developer Guide
/// <summary>
/// Encrypt content (sensitive information)
/// </summary>
/// <param name="strInitVextor"></param>
/// <param name="szAESKey"></param>
/// <param name="strSrcContent"></param>
/// <param name="strOut"></param>
/// <param name="iSecurityVersion"></param>
/// <returns></returns>
public static void getEncryptContent(string strInitVextor, byte[] szAESKey, string strSrcContent, out string strOut, int
iSecurityVersion)
{
if (iSecurityVersion != 1)//1 refers to the AES-128 algorithm. Currently only 1 is supported.
{
strOut = strSrcContent;
return;
}
//Convert to UTF-8
byte[] szInitVextor = Encoding.UTF8.GetBytes(strInitVextor);
byte[] szInitVextorByteArray = AESEncryption.convertCharArrayToByteArray(szInitVextor, szInitVextor.Length);
byte[] szSrcBytes = Encoding.UTF8.GetBytes(strSrcContent);
string strSrcBase64 = Convert.ToBase64String(szSrcBytes);

}

//AES encryption
byte[] szAesData = AESEncryption.AesEncrypt(strSrcBase64, szAESKey, szInitVextorByteArray);
byte[] szOut = AESEncryption.converByteArrayToCharArray(szAesData, szAesData.Length);
strOut = Encoding.UTF8.GetString(szOut);

/// <summary>
/// Decrypt content (sensitive information)
/// </summary>
/// <param name="strInitVextor"></param>
/// <param name="szAESKey"></param>
/// <param name="strSrcContent"></param>
/// <param name="strOut"></param>
/// <param name="iSecurityVersion"></param>
/// <returns></returns>
public static void getDecryptContent(string strInitVextor, byte[] szAESKey, string strSrcContent, out string strOut, int
iSecurityVersion)
{
if (iSecurityVersion != 1)//1 refers to the AES-128 algorithm. Currently only 1 is supported.
{
strOut = strSrcContent;
return;
}
//Convert to UTF-8
byte[] szInitVextor = Encoding.UTF8.GetBytes(strInitVextor);
byte[] szInitVextorByteArray = AESEncryption.convertCharArrayToByteArray(szInitVextor, szInitVextor.Length);
byte[] szSrcBytes = Encoding.UTF8.GetBytes(strSrcContent);

43

Intelligent Security API (General Application) Developer Guide

}

}

}

byte[] szSrcByteArray = AESEncryption.convertCharArrayToByteArray(szSrcBytes, szSrcBytes.Length);
string strAesData = AESEncryption.AesDecrypt(szSrcByteArray, szAESKey, szInitVextorByteArray);
byte[] szOut = Convert.FromBase64String(strAesData);
strOut = Encoding.UTF8.GetString(szOut);

Note
The sample code of the class AESEncryption is as shown below.
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Security.Cryptography;
using System.Text;
using System.Threading.Tasks;
namespace SystemManagement.InformationEncryption
{
class AESEncryption
{
/// <summary>
/// Convert hexadecimal to binary
/// </summary>
/// <param name="chstr"></param>
/// <returns></returns>
public static byte hexToBinary(byte chstr)
{
char crtn = '\0';
if (('0' <= chstr) && ('9' >= chstr))
{
crtn = (char)(chstr & 0x0F);
}
else if (('A' <= chstr) && ('F' >= chstr))
{
crtn = (char)(chstr - 'A' + 10);
}
else if (('a' <= chstr) && ('f' >= chstr))
{
crtn = (char)(chstr - 'a' + 10);
}
return (byte)crtn;
}
/// <summary>
/// Convert a character array to a byte array
/// </summary>
/// <param name="pSrc"></param>

44

Intelligent Security API (General Application) Developer Guide
/// <param name="nSrcLen"></param>
/// <returns></returns>
public static byte[] convertCharArrayToByteArray(byte[] pSrc, int nSrcLen)
{
byte[] byChallengeDst2 = new byte[nSrcLen / 2];
for (int i = 0; i < nSrcLen; i = i + 2)
{
byChallengeDst2[i / 2] = (byte)(hexToBinary(pSrc[i]) << 4);
byChallengeDst2[i / 2] += (byte)hexToBinary(pSrc[i + 1]);
}
return byChallengeDst2;
}
/// <summary>
/// Convert a byte array to a character array
/// </summary>
/// <param name="pSrc"></param>
/// <param name="nSrcLen"></param>
/// <returns></returns>
public static byte[] converByteArrayToCharArray(byte[] pSrc, int nSrcLen)
{
StringBuilder strB = new StringBuilder();
for (int i = 0; i < nSrcLen; i++)
{
strB.Append(pSrc[i].ToString("x2"));//Here x must be in lowercase, which means converting to a lowercase
hexadecimal character.
}
return Encoding.UTF8.GetBytes(strB.ToString());
}
/// <summary>
/// Encrypt in AES-CBC mode
/// </summary>
/// <param name="strSrcContent"></param>
/// <param name="szAESKey"></param>
/// <param name="iv"></param>
/// <returns></returns>
public static byte[] AesEncrypt(string strSrcContent, byte[] szAESKey, byte[] iv)
{
RijndaelManaged rijndaelCipher = new RijndaelManaged();
rijndaelCipher.Mode = CipherMode.CBC;
rijndaelCipher.Padding = PaddingMode.Zeros;//The end is all-zero padding
rijndaelCipher.KeySize = 128;
rijndaelCipher.BlockSize = 128;
byte[] keyBytes = new byte[16];
int len = szAESKey.Length;
if (len > keyBytes.Length)
{
len = keyBytes.Length;
}

45

Intelligent Security API (General Application) Developer Guide

}

System.Array.Copy(szAESKey, keyBytes, len);
rijndaelCipher.Key = keyBytes;
rijndaelCipher.IV = iv;
ICryptoTransform transform = rijndaelCipher.CreateEncryptor();
byte[] szSrcContent = Encoding.UTF8.GetBytes(strSrcContent);
byte[] szDstContent = transform.TransformFinalBlock(szSrcContent, 0, szSrcContent.Length);
return szDstContent;

/// <summary>
/// Decrypt in AES-CBC mode
/// </summary>
/// <param name="szSrcContent"></param>
/// <param name="szAESKey"></param>
/// <param name="iv"></param>
/// <returns></returns>
public static string AesDecrypt(byte[] szSrcContent, byte[] szAESKey, byte[] iv)
{
RijndaelManaged rijndaelCipher = new RijndaelManaged();
rijndaelCipher.Mode = CipherMode.CBC;
rijndaelCipher.Padding = PaddingMode.Zeros;//The end is all-zero padding
rijndaelCipher.KeySize = 128;
rijndaelCipher.BlockSize = 128;
byte[] keyBytes = new byte[16];
int len = szAESKey.Length;
if (len > keyBytes.Length)
{
len = keyBytes.Length;
}
System.Array.Copy(szAESKey, keyBytes, len);
rijndaelCipher.Key = keyBytes;
rijndaelCipher.IV = iv;
ICryptoTransform transform = rijndaelCipher.CreateDecryptor();
byte[] szDstContent = transform.TransformFinalBlock(szSrcContent, 0, szSrcContent.Length);
//After decrypting the last 16 bytes of the ciphertext, the decrypted data of the last 16 bytes will be checked.
//If the value of the last byte is 16, the 16-byte string data will be discarded.
//If the value of the last byte is smaller than 16, it indicates that the original text was padded during encryption.
The padding will be discarded.
for (int i = 0; i < szDstContent.Length; i++)
{
if (szDstContent[i] <= 16)
{
szDstContent[i] = 0;
}
}
//The \0 at the end needs to be removed.
return Encoding.UTF8.GetString(szDstContent).Replace("\0", "");
}
}
}

46

Intelligent Security API (General Application) Developer Guide

3.4 Security Service
Management and Configuration
• Get or set advanced parameters of security management
Request URL: GET or PUT /ISAPI/Security/advanced?format=json
• Get or set security questions in batch
Request URL: GET or PUT /ISAPI/Security/questionConfiguration
• Search for security logs
Request URL: POST /ISAPI/ContentMgmt/security/logSearch
• Security Mode Level of Private Protocol
• Get configuration capability of security mode level of private protocol
Request URL: GET /ISAPI/Security/CommuMode/capabilities?format=json
• Get parameters of security mode level of private protocol
Request URL: GET /ISAPI/Security/CommuMode?format=json
• Set parameters of security mode level of private protocol
Request URL: PUT /ISAPI/Security/CommuMode?format=json
• Get capability of selecting certificate
Request URL: GET /ISAPI/Security/certificate/select/capabilities?format=json
• Get or set parameters of selecting certificate
Request URL: GET or PUT /ISAPI/Security/certificate/select/<functinName>?format=json

Network Certificate
• Get CA (Certificate Authority) certificate capability
Request URL: GET /ISAPI/Security/deviceCertificate/capabilities?format=json
• Import network certificate to device
Request URL: PUT /ISAPI/Security/deviceCertificate
• Import CA (Certificate Authority) certificate to device
Request URL: PUT /ISAPI/Security/deviceCertificate?customID=
• Network Certificate Search
• Get capability of certificate search
Request URL: GET /ISAPI/Security/deviceCertificate/certificates/capabilities?format=json
• Search for certificate information in a batch
Request URL: GET /ISAPI/Security/deviceCertificate/certificates?format=json
• Search for information of a specific device certificate
Request URL: GET /ISAPI/Security/deviceCertificate/certificates/<customID>?format=json
• Delete network certificate
Request URL: DELETE /ISAPI/Security/deviceCertificate/certificates/<ID> or /ISAPI/Security/
deviceCertificate/certificates/<customID>?format=json

Authentication Certificate
• Get, generate, or delete certificate signature request

47

Intelligent Security API (General Application) Developer Guide
Request URL: GET, PUT , or DELETE /ISAPI/Security/serverCertificate/certSignReq
• Download authentication certificate
Request URL: GET /ISAPI/Security/serverCertificate/downloadCertSignReq
• Get, install, or delete authentication certificate
Request URL: GET, PUT , or DELETE /ISAPI/Security/serverCertificate/certificate
• Authentication Certificate Status Search
• Get status of one authentication certificate
Request URL: GET /ISAPI/Security/deviceCertificate/certificates/<ID>/status?format=json
• Get status of all authentication certificates
Request URL: GET /ISAPI/Security/deviceCertificate/certificates/status?format=json
• Generate one authentication certificate
Request URL: PUT /ISAPI/Security/deviceCertificate/certificates/<ID>/recreate?format=json
• Generate all authentication certificates
Request URL: PUT /ISAPI/Security/deviceCertificate/certificates/recreate?format=json

Client/Server Certificate
• Get client/server certificate capability
Request URL: GET /ISAPI/Security/serverCertificate/capabilities?format=json
• Generate PKCS#10 signature request of client/server certificate
Request URL: POST /ISAPI/Security/serverCertificate/certSignReq?customID=
• Get or generate PKCS#10 signature request of client/server self-signed certificate
Request URL: GET or PUT /ISAPI/Security/serverCertificate/selfSignCert?customID=
• Get information of multiple client/server certificates in a batch
Request URL: GET /ISAPI/Security/serverCertificate/certificates?format=json
• Get or delete information of a specific client/server certificate
Request URL: GET or DELETE /ISAPI/Security/serverCertificate/certificates/<customID>?
format=json
• Import client/server certificate to device
Request URL: POST /ISAPI/Security/serverCertificate/certificate?customID=
• Export client/server certificate
Request URL: GET /ISAPI/Security/serverCertificate/downloadCertSignReq?customID=

48

Intelligent Security API (General Application) Developer Guide

Chapter 4 Login
• Login by digest
Request URL: GET /ISAPI/Security/userCheck
• Lock for illegal login
Request URL: GET or PUT /ISAPI/Security/illegalLoginLock
• Get or set maximum failed login attempts
Request URL: GET or PUT /ISAPI/Security/loginLinkNum?format=json

49

Intelligent Security API (General Application) Developer Guide

Chapter 5 Device Management
This chapter lists the request URLs for getting device information, managing network cameras,
getting the capabilities of network cameras, and so on.
• Get device capability
Request URL: GET /ISAPI/System/deviceInfo/capabilities
• Get device information
Request URL: GET /ISAPI/System/deviceInfo

5.1 Device Activation
5.1.1 Directly Activate Device
For the connected devices, you must activate them to make sure the device password is
reconfigured and the password string conforms to the security rule.

50

Intelligent Security API (General Application) Developer Guide
Steps

Figure 5-1 Direct Activation Sequence Diagram
1. Client software generates public and private key.
Note
The size of public key is 1024 bits (128 bytes). When transforming to the hexadecimal string,
each byte corresponds to two characters (e.g., 127 → FF ), so the public key is transformed to a
256-byte string finally.
2. Client software encodes the public key (a 256-byte string) by Base64 method and sends it to
device.
3. Device decodes the encoded public key by Base64 method and generates random strings.
4. Device encrypts the random strings based on RSA algorithm and encodes the encrypted strings
by Base64 method.
5. Client software gets the encrypted and encoded random strings via the URL: POST /ISAPI/
Security/challenge .
6. Client software decodes the obtained random strings by Base64 method and decrypts the
random strings by using private key.

51

Intelligent Security API (General Application) Developer Guide
7. Client software encrypts the activation password with the random strings in AES128 CBC mode
and encodes the password by Base64 method.
8. Client software sends the activation password strings to device via the URL: PUT /ISAPI/System/
activate .
Note
The sent activation password strings consist of first 16 characters of random strings and actual
password.
Example
If the first 16 characters of random strings is "aaaabbbbccccdddd", and the actual password is
"Abc12345", the encrypted activation password strings is "aaaabbbbccccddddAbc12345".
9. Device decodes the activation password by Base64 method and decrypts the password with the
random string in AES128 CBC mode for verification.
10. Device starts activating and sends the activation result to client software.

5.1.2 Activate Network Camera via NVR
For network devices, except directly activating them, you can also activate them via NVR if they can
be searched on the same network domain of NVR.
Steps
1. Call /ISAPI/ContentMgmt/InputProxy/search by GET method to search for the online network
devices in the same network domain with the NVR.
2. Optional: Call /ISAPI/ContentMgmt/InputProxy/channels/activate/capabilities by GET
method to get the activation capability of network devices for reference.
3. Call /ISAPI/ContentMgmt/InputProxy/channels/activate by PUT method to activate the
searched online devices via NVR.

5.2 Reset Password by Setting Recovery Email
A recovery email is added or configured for resetting the password as required. The admin user can
set a recovery email after activating the device, and then receive the verification code from the
manufacturer via the recovery email to reset the device password.
Before You Start
Make sure you have activated the device.

52

Intelligent Security API (General Application) Developer Guide
Steps

Figure 5-2 Programming Flow of Resetting Password by Setting Recovery Email
Note
You can reset password by other methods, such as answering security question, importing GUID
files, and so on. But all methods should be supported by device, so you should call the request
URL: GET /ISAPI/Security/extern/capabilities to get the other security capability
( XML_externSecurityCap ) before choosing method to reset password.
1. Check if the device supports setting recovery email by the request URL: GET /ISAPI/Security/
capabilities .
The security capability is returned in the message XML_SecurityCap .
If the node <isSupportSecurityEmail> exits in the returned message and its value is "true", it
indicates that setting recovery email is supported by the device, and you can continue to
perform the following steps; otherwise, end this task.
2. Optional: Get recovery email configuration capability by the request URL: GET /ISAPI/Security/
email/parameter/capabilities?format=json .

53

Intelligent Security API (General Application) Developer Guide
The recovery email configuration capability is returned in the message JSON_SecurityEmailCap
by the output parameter pointer (lpOutputParam).
3. Optional: Get the existing or configured recovery email parameters for reference by the request
URL: GET /ISAPI/Security/email/parameter?format=json .
4. Set the recovery email for the device by the request URL: PUT /ISAPI/Security/email/
parameter?format=json .
5. Get the QR code of the recovery email by the request URL: GET /ISAPI/Security/email/qrCode?
format=json .
6. Send the QR code to manufacturer service email address by any other emails for verification.
7. Receive the verification code in the configured recovery email.
8. Enter the received verification code for resetting the device password by the request URL: PUT /
ISAPI/Security/emailCertification?format=json .

5.3 Online Upgrade Device
For the devices that can connect to Guarding Vision Server, you can online upgrade their firmware
via Guarding Vision Client, and get the upgrade progress. Besides, in the condition of bad network,
you can also enable automatic download of upgrade package in the background to improve the
upgrade speed.
Before You Start
Make sure you have activated the device.

54

Intelligent Security API (General Application) Developer Guide
Steps

Figure 5-3 Programming Flow of Online Upgrade Device
1. Check if the device support online upgrade via the URL: GET /ISAPI/System/onlineUpgrade/
capabilities .
The online upgrade capability set is returned in XML_OnlineUpgradeCap .
2. Get the connection status of online upgrade server via the URL: GET /ISAPI/System/
onlineUpgrade/server .
Note
Only when the node <connectStatus> is returned and values "true", you can go on for next step.
Otherwise, you should end this task.
The upgrade server connection status is returned in XML_OnlineUpgradeServer .
3. Optional: Set the device online upgrade parameters via the URL: PUT /ISAPI/System/
onlineUpgrade/deviceParameter?format=json .

55

Intelligent Security API (General Application) Developer Guide
Note
Before setting the device online upgrade parameters, you can get these parameters via the URL:
GET /ISAPI/System/onlineUpgrade/deviceParameter?format=json .
4. Get the new upgrade package information via the URL: GET /ISAPI/System/onlineUpgrade/
version .
5. Download the upgrade package via the URL: PUT /ISAPI/System/onlineUpgrade/
downloadPackage?format=json .
6. Optional: During downloading the upgrade package, you can perform the following operations.
Pause Download

URL: PUT /ISAPI/System/onlineUpgrade/downloadPackage/pause?
format=json

Resume Download

URL: PUT /ISAPI/System/onlineUpgrade/downloadPackage/resume?
format=json

Cancel Download

URL: DELETE /ISAPI/System/onlineUpgrade/downloadPackage?
format=json
7. Get the upgrade package download progress via the URL: GET /ISAPI/System/onlineUpgrade/
downloadPackage/status?format=json .
8. Start upgrade when the upgrade package is downloaded via the URL: PUT /ISAPI/System/
onlineUpgrade/upgradeWithoutDownload?format=json .
9. Get the upgrade status via the URL: GET /ISAPI/System/onlineUpgrade/status .

5.4 IoT Devices Access
The IoT devices here include access control terminal, security control panel, video intercom, analog
camera RF, etc. The NVR/DVR supports accessing IoT devices for device management, status
search, event/alarm linkage, and alarm receiving. When the IoT devices are added to NVR/DVR, the
NVR/DVR can receive the alarm of IoT device, link the channel for recording, and receive the realtime stream when alarm is triggered.
This chapter mainly introduces the methods of adding IoT devices, and configuring event/alarm of
IoT devices.

Application Scenario

56

Intelligent Security API (General Application) Developer Guide
5.4.1 Add IoT Devices to NVR/DVR
For convenient management of IoT device, such as status searching, event/alarm linkage, alarm
receiving, and so on, you should add the IoT device to NVR/DVR first.
Before You Start
Make sure you have logged in to the device.
Steps

Figure 5-4 Programming Flow of Adding IoT Device to NVR/DVR
1. Get the device capability by the URL: GET /ISAPI/System/capabilities to check if the IoT device
access function is supported via the node <IOTCap>.
The device capability XML_DeviceCap is returned.
2. Configure listening port before adding the OPTEX and Luminite IoT devices by the URL: PUT /
ISAPI/Security/adminAccesses/<ID> , and set the value of <protocol> in
XML_AdminAccessProtocol to "IOT".
3. Get the supported IoT devices types of device by the URL: GET /ISAPI/System/IOT/
sourceSupport/capabilities?format=json .
The supported IoT devices types are returned in JSON_IOTSourceSupport .

57

Intelligent Security API (General Application) Developer Guide
4. Get information of IoT devices which can be added by the URL: GET /ISAPI/System/IOT/search?
format=json .
The IoT devices which can be added is returned in JSON_IOTSourceList .
5. Get the number of IoT device channels which can be added by the URL: POST /ISAPI/
System/IOT/sourceCapabilities?format=json .
The supported source capability is returned in JSON_SourceCapabilities .
6. Optional: Get the information of added IoT devices.
- Get the information of added IoT devices by the URL: GET /ISAPI/System/IOT/channels?
format=json .
- Get the information of added IoT devices according to inductive type by the URL: GET /ISAPI/
System/IOT/channels?format=json&deviceInductiveType= .
7. Add the IoT device to NVR/DVR by the URL: POST /ISAPI/System/IOT/channels?format=json .
8. Set the basic parameters of added IoT device according to channel ID by the URL: PUT /ISAPI/
System/IOT/channels/<ID>/basicParam?format=json .
9. Optional: Set the specified added IoT device according to channel ID by the URL: PUT /ISAPI/
System/IOT/channels/<ID>?format=json .
Note
Before setting the specified IoT device, you can get the IoT device by the URL: GET /ISAPI/
System/IOT/channels/<ID>?format=json .
10. Optional: Delete the added IoT device.
- Delete the specified IoT channel by the URL: DELETE /ISAPI/System/IOT/channels/<ID>?
format=json .
- Delete all channels (video channel and IoT channel) of added IoT device by the URL: DELETE /
ISAPI/System/IOT/channels/<ID>/all?format=json .
11. Get the status of added IoT device.
- Get the status of added IoT device by the URL: GET /ISAPI/System/IOT/channels/status?
format=json .
- Get the status of added IoT device according to inductive type by the URL: GET /ISAPI/
System/IOT/channels/status?format=json&deviceInductiveType= .
- Get the status of specified channel of added IoT device by the URL: GET /ISAPI/System/IOT/
channels/<ID>/status?format=json
12. Get the alarm statistics of added IoT device according to channel ID by the URL: GET /ISAPI/
System/IOT/channels/<ID>/alarmStatistics?format=json
13. Optional: Get the linked channel informaiton of added IoT device by the URL: POST /ISAPI/
System/accessDevice/associatedChannel?format=json
14. Optional: Import or export the list of added IoT devices.
Import

Import the list of added IoT devices by the URL: PUT /ISAPI/System/IOT/
channelConfig?format=json

Export

Export the list of added IoT devices by the URL: GET /ISAPI/System/IOT/
channelConfig?format=json

58

Intelligent Security API (General Application) Developer Guide
Example
PUT /ISAPI/System/IOT/channelConfig?format=json
Accept: text/html, application/xhtml+xml,
Accept-Language: us-EN
Content-Type: File/ Opaque Data
User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)
Accept-Encoding: gzip, deflate
Host: 10.10.36.29:8080
Content-Length: 9907
Connection: Keep-Alive
Cache-Control: no-cache
Content-Disposition: form-data; name="XX";
Content-Length: 9907
......JFIF.....`.`.....C........... .
..
................. $.’ “,#..(7),01444.’9=82<.342...C.

....

5.4.2 Configure Alarm of IoT Device
When the IoT device is added to NVR/DVR, you can configure the alarm parameters such as arming
schedule, linkage method, OSD, and so on for receiving the alarm of IoT device.
Before You Start
• Make sure you have logged in to the device.
• Make sure the IoT device is added to NVR/DVR.

59

Intelligent Security API (General Application) Developer Guide
Steps

Figure 5-5 Programming Flow of Configuring Alarm of IoT Device
1. Get the IoT device channel capability by the URL: GET /ISAPI/Event/IOT/channels/<ID>/
capabilities?format=json .
The event capability supported by IoT device channel is returned in
JSON_IOTChannelEventCap .
2. Get the event/alarm linkage configuration capability of IoT device by the URL: GET /ISAPI/
Event/triggersCap/IOT .
The capability is returned in XML_IOTTriggersCap .
3. Get the event configuration capability by the URL: GET /ISAPI/System/IOT/channels/<ID>/
<EventType>/capabilities?format=json .
The event configuration capability is returned in JSON_XXCap .
4. Set the event/alarm parameters by the URL: PUT /ISAPI/System/IOT/channels/<ID>/
<EventType>?format=json .
5. Set the arming schedule by the URL: PUT /ISAPI/Event/schedules/<EventType>/<ID>
6. Set the event/alarm linkage parameters by the URL: PUT /ISAPI/Event/triggers/<ID> .
7. Configure OSD.

60

Intelligent Security API (General Application) Developer Guide
1) Get the OSD configuration capability by the URL: GET /ISAPI/System/IOT/channels/
<ID>/OSD/capabilities?format=json .
2) Get the OSD parameters by the URL: GET /ISAPI/System/IOT/channels/<ID>/OSD?
format=json .
3) Set the OSD parameters by the URL: PUT /ISAPI/System/IOT/channels/<ID>/OSD?
format=json .
8. Receive event/alarm information.
- Receive event/alarm in arming mode, see details in Receive Alarm/Event in Arming Mode .
- Receive event/alarm in listening mode, see details in Receive Alarm/Event in Listening
Mode .
9. Search for the picture of linked event/alarm by the URL: POST /ISAPI/SDT/Management/
EventSearch?format=json .
Note
Before searching for event, you can get the event search capability by the URL: GET /ISAPI/SDT/
Management/EventSearch/capabilities?format=json .
10. Optional: Get linked channel of searched event by the URL: POST /ISAPI/System/IOT/
linkageChannels?format=json .

61

Intelligent Security API (General Application) Developer Guide

Chapter 6 Device Maintenance
6.1 Basic
Shut Down, Reboot and Restore to Default Settings
• Shut down device
Request URL: PUT /ISAPI/System/shutdown?format=json
• Reboot device
Request URL: PUT /ISAPI/System/reboot
• Restore device to default settings
Request URL: PUT /ISAPI/System/factoryReset?mode=

Upgrade
• Get upgrade capability of peripherals' firmwares
Request URL: GET /ISAPI/System/AcsUpdate/capabilities
• Upgrade device's firmware
Request URL: PUT or POST /ISAPI/System/updateFirmware
• Upgrade slave device's firmware
Request URL: PUT or POST /ISAPI/System/updateFirmware?type=&id=
• Upgrade peripheral module's firmware
Request URL: PUT or POST /ISAPI/System/updateFirmware?type=&moduleAddress=
• Get device upgrading status
Request URL: GET /ISAPI/System/upgradeStatus

Configuration File
• Get capability of exporting files from device
Request URL: GET /ISAPI/System/fileExport/capabilities?format=json
• Securely export files from device
Request URL: POST /ISAPI/System/fileExport?format=json
Note
To check if exporting files from device is supported by the device, you can call GET /ISAPI/
System/capabilities to get the device capability ( XML_DeviceCap ). If supports, the node
<isSptFileExport> will be returned.

Algorithm Version
Get algorithm version information of device
Request URL: GET /ISAPI/System/algorithmsVersion

62

Intelligent Security API (General Application) Developer Guide
6.1.1 Securely Export and Import Configuration Files
You can export configuration files of devices to back up basic device parameters (such as network
parameters, stream parameters, etc.) timely, and the configuration files will be encrypted with the
encryption key when being exported. If several devices adopt the same configuration, you can
import configuration files to configure multiple devices in a batch. The devices will decrypt the
encrypted configuration file using the encryption key which ensures that the configuration file
cannot be used by unauthorized devices.
Steps

Figure 6-1 Programming Flow of Securely Exporting and Importing Configuration Files
1. Call GET /ISAPI/Security/capabilities to get the device security capability for checking whether
the device supports securely exporting configuration files.
The device security capability is returned in the message XML_SecurityCap .
If this function is supported by the device, the node <isSupportConfigFileExport> will be
returned and its value is "true", then you can perform the following steps.
Otherwise, please end this task.
2. Call GET /ISAPI/System/configurationData?secretkey= to export the configuration file from the
device securely.

63

Intelligent Security API (General Application) Developer Guide
Note
The query parameter secretKey is the sensitive information that should be encrypted for
transmission, and the parameter range to be encrypted is determined by the attributes "min"
and "max" of the node <cfgFileSecretKeyLenLimit> in message XML_SecurityCap . For details
about encrypting sensitive information, refer to Encrypt Sensitive Information .
3. Call GET /ISAPI/Security/capabilities to get the device security capability for checking whether
the device supports securely importing configuration files.
The device security capability is returned in the message XML_SecurityCap .
If this function is supported by the device, the node <isSupportConfigFileImport> will be
returned and its value is "true", then you can perform the following steps.
Otherwise, please end this task.
4. Call PUT /ISAPI/System/configurationData?secretkey= to import the configuration file to the
device securely.
Note
• The query parameter secretKey is the sensitive information that should be encrypted for
transmission, and the parameter range to be encrypted is determined by the attributes "min"
and "max" of the field <cfgFileSecretKeyLenLimit> in the message XML_SecurityCap . For
details about encrypting sensitive information, refer to Encrypt Sensitive Information .
• The value of secretKey for importing the configuration file should be the same as that for
exporting the file. Otherwise, importing will fail.

6.2 Log
Log Search
• Search for logs
Request URL: POST /ISAPI/ContentMgmt/logSearch
• Export log files
Request URL: POST /ISAPI/ContentMgmt/logSearch/dataPackage

Serial Port Log Redirection
• Get configuration capability of serial port log redirection
Request URL: GET /ISAPI/System/serialLogCfg/capabilities?format=json
• Get or set parameters of serial port log redirection
Request URL: GET or PUT /ISAPI/System/serialLogCfg?format=json

64

Intelligent Security API (General Application) Developer Guide
Note
To check if configuring serial port log redirection is supported by the device, you can call GET /
ISAPI/System/capabilities to get the device capability ( XML_DeviceCap ). If supports, the node
<isSptSerialLogCfg> will be returned.

Log Configuration
• Get log configuration capability
Request URL: GET /ISAPI/ContentMgmt/logConfig/capabilities
• Get or set log parameters
Request URL: GET or PUT /ISAPI/ContentMgmt/logConfig

6.3 Status
• Get device status capability
Request URL: GET /ISAPI/System/workingstatus/capabilities?format=json
• Get all statuses of device
Request URL: GET /ISAPI/System/workingstatus?format=json
• Channel Status
• Get status(es) of all channels or one channel
Request URL: GET or POST /ISAPI/System/workingstatus/chanStatus?format=json
• Get statuses of all channels by condition
Request URL: POST /ISAPI/System/Video/inputs/channels?format=json
• Get status of one channel by condition
Request URL: POST /ISAPI/System/Video/inputs/channels/<ID>?format=json
Note
To check if getting channel status by condition is supported by device, you can call GET /ISAPI/
System/capabilities to get the device capability ( XML_DeviceCap ). If supports, the node
<isSupportFlexible> will be returned.
• Get status(es) of all HDDs or one HDD
Request URL: GET or POST /ISAPI/System/workingstatus/hdStatus?format=json
• Get triggered I/O status
Request URL: GET /ISAPI/System/workingstatus/IOStatus?format=json
• Get CPU and memory status
Request URL: GET /ISAPI/System/status
• Upload status changes
Refer to Subscribe Alarm/Event in Arming Mode for integration process of uploading device
status changes, and the node <type> in the request message XML_SubscribeEvent for the URLs
(POST /ISAPI/Event/notification/subscribeEvent and PUT /ISAPI/Event/notification/
subscribeEvent/<ID> ) should be set to "statusChanged".

65

Intelligent Security API (General Application) Developer Guide
The changes details can be obtained by calling the URL GET /ISAPI/Event/notification/
alertStream .
Note
To check if getting device status and uploading status changes are supported by device, you can
call GET /ISAPI/System/capabilities to get the device capability ( XML_DeviceCap ). If supports,
the nodes <isSupportSimpleDevStatus>, <isSupportSimpleDevStatus>, and
<isSupportChangedUpload> will be returned and their values are "true".

6.4 Calibration
Accelerometer Zero Bias Calibration
• Get device capability to check if device supports accelerometer zero bias calibration
Request URL: GET /ISAPI/System/capabilities ; the device capability is returned in the message
XML_DeviceCap .
If supports, the node <isSupportZeroBiasCalibration> is returned in the message
XML_DeviceCap and its value is "true".
• Calibrate accelerometer zero bias
Request URL: PUT /ISAPI/System/zeroBiasCalibration/channels/<ID>?format=json

Installation Angle Calibration
• Get the device capability to check if device supports installation angle calibration
Request URL: GET /ISAPI/System/capabilities ; the device capability is returned in the message
XML_DeviceCap .
If supports, the node <isSupportInstallationAngleCalibration> is returned in the message
XML_DeviceCap and its value is "true".
• Get capability of installation angle calibration
Request URL: GET /ISAPI/System/installationAngleCalibration/channels/<ID>/capabilities?
format=json
• Get installation angle calibration status or calibrate installation angle
Request URL: GET or PUT /ISAPI/System/installationAngleCalibration/channels/<ID>?
format=json

6.5 Advanced
Automatic Maintenance
• Get configuration capability of automatic maintenance
Request URL: GET /ISAPI/System/autoMaintenance/capabilities?format=json
• Get or set parameters of automatic maintenance
Request URL: GET or PUT /ISAPI/System/autoMaintenance?format=json

66

Intelligent Security API (General Application) Developer Guide
Note
To check if the device supports automatic maintenance, you can call the request URL: GET /ISAPI/
System/capabilities to get the device capability ( XML_DeviceCap ). If supports, the node
<isSupportAutoMaintenance> will be returned.

Device Diagnosis
• Get device diagnosis capability
Request URL: GET /ISAPI/System/diagnosis/capabilities?format=json
• Diagnose device
Request URL: POST /ISAPI/System/diagnosis?format=json
Note
To check if configuring device diagnosis is supported by the device, you can call GET /ISAPI/
System/capabilities to get the device capability ( XML_DeviceCap ). If supports, the node
<isSptDiagnosis> will be returned.

Device Anti-Theft
• Get device anti-theft configuration capaiblity
Request URL: GET /ISAPI/System/guardAgainstTheft/capabilities
• Get or set device anti-theft parameters
Request URL: GET or PUT /ISAPI/System/guardAgainstTheft
Note
To check if the anti-theft configuration is supported by the device, you can call GET /ISAPI/System/
capabilities to get the device capability ( XML_DeviceCap ). If this function is supported, the node
<isSupportGuardAgainstTheft> will be returned and its value is "true".

67

Intelligent Security API (General Application) Developer Guide

Chapter 7 User Management
You can add, edit, and delete users to manage for logging in to the device via ISAPI protocol. And
you can also assign permission to users according to actual needs.

Manage Users
• Add one user
Request URL: GET /ISAPI/Security/users
• Get, edit, or delete all users
Request URL: GET, PUT, or DELETE /ISAPI/Security/users
• Get, edit, or delete one user
Request URL: GET, PUT, or DELETE /ISAPI/Security/users/<ID>

User Permission
• Get guest's permission capability
Request URL: GET /ISAPI/Security/UserPermission/viewerCap
• Get operator's permission capability
Request URL: GET /ISAPI/Security/UserPermission/operatorCap
• Get administrator's permission capability
Request URL: GET /ISAPI/Security/UserPermission/adminCap
• Get User Permission
• Get permissions of all users
Request URL: GET /ISAPI/Security/UserPermission
• Get permission of one user
Request URL: GET /ISAPI/Security/UserPermission/<ID>
• Get local permission of one user
Request URL: GET /ISAPI/Security/UserPermission/<ID>/localPermission
• Get remote permission of one user
Request URL: GET /ISAPI/Security/UserPermission/<ID>/remotePermission
• Assign Permission
• Assign permission to all users
Request URL: PUT /ISAPI/Security/UserPermission
• Assign permission to one user
Request URL: PUT /ISAPI/Security/UserPermission/<ID>
• Assign local permission to one user
Request URL: PUT /ISAPI/Security/UserPermission/<ID>/localPermission
• Assign remote permission to one user
Request URL: PUT /ISAPI/Security/UserPermission/<ID>/remotePermission

Lock and Unlock User
• Get configuration capability of user locking and unlocking

68

Intelligent Security API (General Application) Developer Guide
Request URL: GET /ISAPI/System/userLock/config/capabilities?format=json .
• Get information of all locked users
Request URL: GET /ISAPI/System/userLock/lockedUsers?format=json
• Get user locking parameter
Request URL: GET /ISAPI/System/userLock/config?format=json
• Lock user
Request URL: PUT /ISAPI/System/userLock/config?format=json
• Unlock user
Request URL: PUT /ISAPI/System/userLock/unlockUser?format=json

7.1 Configure Double Verification
Double verification helps to protect the critical video files of NVR/DVR by limiting playback and
download. The basic concept is that two users should always be required to start playback and
download. For example, when a normal user A (operator or guest) wants to play back the video of
a channel which requires double verification, he/she should ask a double verification user to enter
the correct user name and password for double verification.
Before You Start
Make sure you have logged in to the device.

69

Intelligent Security API (General Application) Developer Guide
Steps

Figure 7-1 Programming Flow of Configuring Double Verification

70

Intelligent Security API (General Application) Developer Guide
Note
• Only the admin can configure double verification.
• The admin is not required for double verification.
• The double verification user name and password is only for double verification, and cannot be
used for login.
1. Optional: Get the device security capability via the URL: GET /ISAPI/Security/capabilities to
check whether the double verification function is supported.
The security capability XML_SecurityCap is returned.
2. Enable double verification via the URL: PUT /ISAPI/Security/doubleVerification?format=json
Note
Before enabling double verification, you can check whether double verification is enabled via
the URL: GET /ISAPI/Security/doubleVerification?format=json .
3. Optional: Get the capability of double verification user configuration via the URL: GET /ISAPI/
Security/doubleVerification/users/capabilities?format=json .
4. Add a double verification user via the URL: POST /ISAPI/Security/doubleVerification/users?
format=json .
Note
Before adding a double verification user, you can get all verification users via the URL: GET /
ISAPI/Security/doubleVerification/users?format=json .
The ID of added double verification user is returned in JSON_id .
5. Edit a specified double verification user via the URL: PUT /ISAPI/Security/doubleVerification/
users/<ID>?format=json .
Note
Before editing the double verification user, you can get the user information via the URL: GET /
ISAPI/Security/doubleVerification/users/<ID>?format=json .
6. Optional: Delete a specified double verification user via the URL: DELETE /ISAPI/Security/
doubleVerification/users/<ID>?format=json .
7. Optional: Get the capability of permission configuration for double verification users via the
URL: GET /ISAPI/Security/doubleVerification/UsersPermission/capabilities?format=json .
8. Set the permission of a specified double verification user via the URL: PUT /ISAPI/Security/
doubleVerification/UsersPermission/<ID>?format=json .
Note
Before setting the permission of a double verification user, you can get the permission
parameters via the URL: GET /ISAPI/Security/doubleVerification/UsersPermission/<ID>?
format=json .

71

Intelligent Security API (General Application) Developer Guide
What to do next
Configure the user permission, determine whether double verification are required for them
during playback and download.

72

Intelligent Security API (General Application) Developer Guide

Chapter 8 Video and Audio
This part provides the request URLs to implement the video and audio related functions, such as
video search, live view, playback, two-way audio, control video in live view (e.g., focus and iris
adjustment), and so on.

8.1 Video Search and Downloading
The continuously recorded video files, or videos stored in the local storage of devices, or videos
recorded based on event/alarm or command, can be searched for playback as required. You can
also download the video files.

Search Video
• Get search conditions
Request URL: GET /ISAPI/ContentMgmt/search/profile
• Search video files
Request URL: POST /ISAPI/ContentMgmt/search
Note
This URL is not only used to search video files, it can also be used to search any resources stored
in the device.
• Search video files by time
Request URL: POST /ISAPI/ContentMgmt/record/tracks/<ID>/dailyDistribution
• Search VCA Event
• Get capability of searching video files by VCA event
Request URL: GET /ISAPI/ContentMgmt/SmartSearch/capabilities
• Search video files by VCA event
Request URL: POST /ISAPI/ContentMgmt/SmartSearch

Download Video
• Get downloading capability
Request URL: GET /ISAPI/ContentMgmt/download/capabilities
• Download video files
Request URL: POST /ISAPI/ContentMgmt/download
• Get capability of exporting video or picture files to devices via USB
Request URL: GET /ISAPI/ContentMgmt/download/toUSB/capabilities?format=json
• Export video or picture files to devices via USB
Request URL: POST /ISAPI/ContentMgmt/download/toUSB?format=json
• Get progress of exporting video or picture files to devices via USB
Request URL: GET /ISAPI/ContentMgmt/download/toUSB/<taskId>/progress?format=json

73

Intelligent Security API (General Application) Developer Guide
Note
To check if exporting video or picture files to devices via USB is supported by the device, you can
call the request URL: GET /ISAPI/ContentMgmt/download/capabilities to get the downloading
capability ( XML_DownloadAbility ). If this function is supported, the node
<isSupportDownloadToUSB> will be returned and its value is "true".

8.1.1 VCA Search
After enabling dual-VCA on the camera, you can search video files for behavior analysis (such as
line crossing detection, intrusion detection, loitering detection, fast movement, and so on.) and
feature object (such as people, vehicles, human face, license plates, and so on), which is helpful for
searching quickly and locating alarm event.
Before You Start
Make sure you have activated the device.
Steps

Figure 8-1 Programming Flow of VCA Search

74

Intelligent Security API (General Application) Developer Guide
1. Optional: Get the VCA management capability to check whether the VCA search function is
supported by request URL: GET /ISAPI/SDT/Management/capabilities?format=json .
The VCA management capability is returned in JSON_Cap_IntelliManagement .
If the node isSuportIntelligentSearch exits in the returned message and its value is "true", it
indicates that VCA search is supported by the device, and you can continue to perform the
following steps; otherwise, end this task.
2. Get the VCA search capability by the request URL: GET /ISAPI/SDT/Management/
IntelligentSearch/capabilities?format=json
The VCA capability is returned in JSON_IntelligentSearchCap .
3. Start VCA search by the request URL: POST /ISAPI/SDT/Management/IntelligentSearch?
format=json .
Note
You should repeatedly call this URL until the node "progress" in returned message
JSON_IntelligentSearchResult values "100". It indicates the VCA search is completed.
The searched result will be returned in JSON_IntelligentSearchResult .
4. Export the searched result the request URL: POST /ISAPI/SDT/Management/IntelligentSearch/
export?format=json .
The exporting task information is returned in JSON_VCASearchExportTaskInfo .
5. Get the progress of exporting VCA search result by the request URL: GET /ISAPI/SDT/
Management/IntelligentSearch/export/progress?format=json&taskID= .
Note
Only when the node "progress" in returned message values "100", it indicates exporting is
completed.
The progress information is returned in JSON_VCASearchExportProgress .
6. Optional: Stop exporting the VCA search result by the request URL: PUT /ISAPI/SDT/
Management/IntelligentSearch/export/stop?format=json .

8.2 Live View and Playback
Live view helps to remotely get the real-time video or audio of monitoring area and know the
status of human, vehicle, object, and so on. During live view, you can record and store the
remarkable videos for remotely playback.

Live View
• Start or stop live view
Request URL: PLAY or TEARDOW
• Auto-Switch in Live View

75

Intelligent Security API (General Application) Developer Guide
• Get configuration capability of live view auto-switch
Request URL: GET /ISAPI/System/Video/outputs/PreviewSwitch/capabilities
• Get configuration capability of live view auto-switch by video output
Request URL: GET /ISAPI/System/Video/outputs/PreviewSwitch/capabilities?videoOutType=
• Get or set parameters of live view auto-switch
Request URL: GET or PUT /ISAPI/System/Video/outputs/PreviewSwitch?
groupID=&videoOutType=
Request URL: GET /ISAPI/System/Video/outputs/PreviewSwitch?
groupID=&videoOutType=&previewFrameNo=
• Control in Live View
• Perform manual focus
Request URL: PUT /ISAPI/System/Video/inputs/channels/<ID>/focus
• Manually adjust iris
Request URL: PUT /ISAPI/System/Video/inputs/channels/<ID>/iris

Playback
• Start or stop playback
Request URL: PLAY or TEARDOW rtsp://<host>[:port]/ISAPI/Streaming/tracks/<ID>?
starttime=&endtime=
• Refresh video index before playback for instant playback
Request URL: PUT /ISAPI/ContentMgmt/record/control/manualRefresh/channels/<ID>
Example
Sample Code for Starting and Stopping Live View
Start Live View:
DESCRIBE rtsp://10.17.133.46:554/ISAPI/streaming/channels/101 RTSP/1.0
CSeq: 0
Accept:application/sdp
User-Agent:NKPlayer-1.00.00.081112
RTSP/1.0 401 Unauthorized
CSeq: 0
WWW-Authenticate: Digest realm="4419b66d2485", nonce="47f172cffa4ce6e6942bbdcfa5931d0f", stale="FALSE"
Date: Tue, Mar 14 2017 10:42:35 GMT
DESCRIBE rtsp://10.17.133.46:554/ISAPI/streaming/channels/101 RTSP/1.0
CSeq:1
Accept:application/sdp
Authorization: Digest username="admin",
realm="4419b66d2485",
nonce="47f172cffa4ce6e6942bbdcfa5931d0f",
uri="rtsp://10.17.133.46:554/ISAPI/streaming/channels/101",
response="da5deb4033515f74ed0483d2da3f7fe0"
User-Agent:NKPlayer-1.00.00.081112
RTSP/1.0 200 OK
CSeq: 1

76

Intelligent Security API (General Application) Developer Guide
Content-Type: application/sdp
Content-Length: 604
v=0
o=- 1489488155469547 1489488155469547 IN IP4 10.17.133.46
s=Media Presentation
e=NONE
b=AS:5100
t=0 0
a=control:*
m=video 0 RTP/AVP 96
c=IN IP4 0.0.0.0
b=AS:5000
a=recvonly
a=x-dimensions:1280,720
a=control:trackID=1
a=rtpmap:96 H264/90000
a=fmtp:96 profile-level-id=420029;
packetization-mode=1;
sprop-parameter-sets=Z2QAH6wXKgFAFuhAAAHCAABX5CE=,
aP44sA==
m=audio 0 RTP/AVP 8
c=IN IP4 0.0.0.0
b=AS:50
a=recvonly
a=control:trackID=2
a=rtpmap:8 PCMA/8000
a=Media_header:MEDIAINFO=494D4B48010200000400000111710110401F000000FA00000000000000000000000000
0000000000;
a=appversion:1.0
SETUP rtsp://10.17.133.46:554/ISAPI/streaming/channels/101/trackID=1 RTSP/1.0
CSeq:2
Authorization: Digest username="admin", realm="4419b66d2485",
nonce="47f172cffa4ce6e6942bbdcfa5931d0f",
uri="rtsp://10.17.133.46:554/ISAPI/streaming/channels/101",
response="db78bce6e6883ed2a7fb3adbd1631b1d"
Transport:RTP/AVP/UDP;unicast;client_port=20044-20045;ssrc=0
User-Agent:NKPlayer-1.00.00.081112
RTSP/1.0 200 OK
CSeq: 2
Session: 846509115;timeout=60
Transport: RTP/AVP/UDP;unicast;client_port=20044-20045;ssrc=2933ec5a;server_port=8372-8373;mode="play"
Date: Tue, Mar 14 2017 10:42:35 GMT
SETUP rtsp://10.17.133.46:554/ISAPI/streaming/channels/101/trackID=2 RTSP/1.0
CSeq:3
Authorization: Digest username="admin", realm="4419b66d2485",
nonce="47f172cffa4ce6e6942bbdcfa5931d0f",
uri="rtsp://10.17.133.46:554/ISAPI/streaming/channels/101",
response="db78bce6e6883ed2a7fb3adbd1631b1d"
Session:846509115;timeout=60

77

Intelligent Security API (General Application) Developer Guide
Transport:RTP/AVP/UDP;unicast;client_port=20046-20047;ssrc=0
User-Agent:NKPlayer-1.00.00.081112
RTSP/1.0 200 OK
CSeq: 3
Session: 846509115;timeout=60
Transport: RTP/AVP/UDP;unicast;client_port=20046-20047;ssrc=439bd478;server_port=8374-8375;mode="play"
Date: Tue, Mar 14 2017 10:42:35 GMT
PLAY rtsp://10.17.133.46:554/ISAPI/streaming/channels/101 RTSP/1.0
CSeq:4
Authorization: Digest username="admin",
realm="4419b66d2485",
nonce="47f172cffa4ce6e6942bbdcfa5931d0f",
uri="rtsp://10.17.133.46:554/ISAPI/streaming/channels/101",
response="66fcea1521a99fba336fd0c4e444a732"
Session:846509115;timeout=60
Rate-Control:yes
Scale:1.000
User-Agent:NKPlayer-1.00.00.081112
RTSP/1.0 200 OK
CSeq: 4
Session: 846509115
Scale: 1.0
RTP-Info: url=trackID=1;seq=55143,url=trackID=2;seq=38217
Date: Tue, Mar 14 2017 10:42:35 GMT
Stop Live View
TEARDOWN rtsp://10.17.133.46:554/ISAPI/streaming/channels/101 RTSP/1.0
CSeq: 5
Authorization: Digest username="admin",
realm="4419b66d2485",
nonce="47f172cffa4ce6e6942bbdcfa5931d0f",
uri="rtsp://10.17.133.46:554/ISAPI/streaming/channels/101",
response="31d5e172b87db528aa5b1dc07af3f530"
Session:846509115;timeout=60
User-Agent: NKPlayer-1.00.00.081112
RTSP/1.0 200 OK
CSeq: 5
Session: 846509115
Date: Tue, Mar 14 2017 10:42:36 GMT

Example
Sample Code for Starting and Stopping Playback
Enable:
DESCRIBE rtsp://10.17.133.46:554/ISAPI/streaming/tracks/101?
starttime=20170313T230652Z&endtime=20170314T025706Z RTSP/1.0
CSeq:0
Accept:application/sdp

78

Intelligent Security API (General Application) Developer Guide
User-Agent:NKPlayer-1.00.00.081112
RTSP/1.0 401 Unauthorized
CSeq: 0
WWW-Authenticate: Digest realm="4419b66d2485",
nonce="a0ecd9b1586ff9461f02f910035d0486",
stale="FALSE"
Date: Tue, Mar 14 2017 10:57:23 GMT
DESCRIBE rtsp://10.17.133.46:554/ISAPI/streaming/tracks/101?
starttime=20170313T230652Z&endtime=20170314T025706Z RTSP/1.0
CSeq:1
Accept:application/sdp
Authorization: Digest username="admin",
realm="4419b66d2485",
nonce="a0ecd9b1586ff9461f02f910035d0486",
uri="rtsp://10.17.133.46:554/ISAPI/streaming/tracks/101?
starttime=20170313T230652Z&endtime=20170314T025706Z",
response="1ebae505abbafd431fb433cec6e85189"
User-Agent:NKPlayer-1.00.00.081112
RTSP/1.0 200 OK
CSeq: 1
Content-Type: application/sdp
Content-Length: 604
v=0
o=- 1489489043122939 1489489043122939 IN IP4 10.17.133.46
s=Media Presentation
e=NONE
b=AS:5100
t=0 0
a=control:*
m=video 0 RTP/AVP 96
c=IN IP4 0.0.0.0
b=AS:5000
a=recvonly
a=x-dimensions:1280,720
a=control:trackID=1
a=rtpmap:96 H264/90000
a=fmtp:96 profile-level-id=420029; packetization-mode=1; sprop-parametersets=Z2QAH6wXKgFAFuhAAAHCAABX5CE=,aP44sA==
m=audio 0 RTP/AVP 8
c=IN IP4 0.0.0.0
b=AS:50
a=recvonly
a=control:trackID=2
a=rtpmap:8 PCMA/8000
a=Media_header:MEDIAINFO=494D4B48010200000400000111710110401F000000FA00000000000000000000000000
0000000000;
a=appversion:1.0

79

Intelligent Security API (General Application) Developer Guide
SETUP rtsp://10.17.133.46:554/ISAPI/streaming/tracks/101?
starttime=20170313T230652Z&endtime=20170314T025706Z/trackID=1 RTSP/1.0
CSeq:2
Authorization: Digest username="admin",
realm="4419b66d2485",
nonce="a0ecd9b1586ff9461f02f910035d0486",
uri="rtsp://10.17.133.46:554/ISAPI/streaming/tracks/101?
starttime=20170313T230652Z&endtime=20170314T025706Z",
response="6a7a733b41908bd9549a4ac07c498509"
Transport:RTP/AVP/UDP;unicast;client_port=20056-20057;ssrc=0
User-Agent:NKPlayer-1.00.00.081112
RTSP/1.0 200 OK
CSeq: 2
Session: 2049381566;timeout=60
Transport: RTP/AVP/UDP;unicast;client_port=20056-20057;ssrc=7d3c07bc;server_port=8220-8221;mode="play"
Date: Tue, Mar 14 2017 10:57:23 GMT
SETUP rtsp://10.17.133.46:554/ISAPI/streaming/tracks/101?
starttime=20170313T230652Z&endtime=20170314T025706Z/trackID=2 RTSP/1.0
CSeq:3
Authorization: Digest username="admin",
realm="4419b66d2485",
nonce="a0ecd9b1586ff9461f02f910035d0486",
uri="rtsp://10.17.133.46:554/ISAPI/streaming/tracks/101?
starttime=20170313T230652Z&endtime=20170314T025706Z",
response="6a7a733b41908bd9549a4ac07c498509"
Session:2049381566;timeout=60
Transport:RTP/AVP/UDP;unicast;client_port=20058-20059;ssrc=0
User-Agent:NKPlayer-1.00.00.081112
RTSP/1.0 200 OK
CSeq: 3
Session: 2049381566;timeout=60
Transport: RTP/AVP/UDP;unicast;client_port=20058-20059;ssrc=06557745;server_port=8226-8227;mode="play"
Date: Tue, Mar 14 2017 10:57:23 GMT
PLAY rtsp://10.17.133.46:554/ISAPI/streaming/tracks/101?
starttime=20170313T230652Z&endtime=20170314T025706Z RTSP/1.0
CSeq:4
Authorization: Digest username="admin",
realm="4419b66d2485",
nonce="a0ecd9b1586ff9461f02f910035d0486",
uri="rtsp://10.17.133.46:554/ISAPI/streaming/tracks/101?
starttime=20170313T230652Z&endtime=20170314T025706Z",
response="fb986d385a7d839052ec4f0b2b70c631"
Session:2049381566;timeout=60
Range:clock=20170313T230652Z-20170314T025706Z
Rate-Control:yes
Scale:1.000
User-Agent:NKPlayer-1.00.00.081112

80

Intelligent Security API (General Application) Developer Guide
RTSP/1.0 200 OK
CSeq: 4
Session: 2049381566
Scale: 1.000
RTP-Info: url=trackID=1;seq=1,url=trackID=2;seq=1
Date: Tue, Mar 14 2017 10:57:23 GMT
Pause:
PAUSE rtsp://10.17.133.46:554/ISAPI/streaming/tracks/101?
starttime=20170313T230652Z&endtime=20170314T025706Z RTSP/1.0
CSeq: 5
Authorization: Digest username="admin",
realm="4419b66d2485",
nonce="a0ecd9b1586ff9461f02f910035d0486",
uri="rtsp://10.17.133.46:554/ISAPI/streaming/tracks/101?
starttime=20170313T230652Z&endtime=20170314T025706Z",
response="d229c4d2419df553212bc7d74bbfd432"
Session:2049381566;timeout=60
User-Agent: NKPlayer-1.00.00.081112
RTSP/1.0 200 OK
CSeq: 5
Session: 2049381566
Date: Tue, Mar 14 2017 10:57:24 GMT
Play in 2× Speed:
PLAY rtsp://10.17.133.46:554/ISAPI/streaming/tracks/101?
starttime=20170313T230652Z&endtime=20170314T025706Z RTSP/1.0
CSeq:6
Authorization: Digest username="admin",
realm="4419b66d2485",
nonce="a0ecd9b1586ff9461f02f910035d0486",
uri="rtsp://10.17.133.46:554/ISAPI/streaming/tracks/101?
starttime=20170313T230652Z&endtime=20170314T025706Z",
response="fb986d385a7d839052ec4f0b2b70c631"
Session:2049381566;timeout=60
Scale:2.000
User-Agent:NKPlayer-1.00.00.081112
RTSP/1.0 200 OK
CSeq: 6
Session: 2049381566
Scale: 2.000
RTP-Info: url=trackID=1;seq=1,url=trackID=2;seq=1
Date: Tue, Mar 14 2017 10:57:24 GMT
Pause:
PAUSE rtsp://10.17.133.46:554/ISAPI/streaming/tracks/101?
starttime=20170313T230652Z&endtime=20170314T025706Z RTSP/1.0
CSeq: 7
Authorization: Digest username="admin",
realm="4419b66d2485",

81

Intelligent Security API (General Application) Developer Guide
nonce="a0ecd9b1586ff9461f02f910035d0486",
uri="rtsp://10.17.133.46:554/ISAPI/streaming/tracks/101?
starttime=20170313T230652Z&endtime=20170314T025706Z",
response="d229c4d2419df553212bc7d74bbfd432"
Session:2049381566;timeout=60
User-Agent: NKPlayer-1.00.00.081112
RTSP/1.0 200 OK
CSeq: 7
Session: 2049381566
Date: Tue, Mar 14 2017 10:57:25 GMT
Play in 4× Speed:
PLAY rtsp://10.17.133.46:554/ISAPI/streaming/tracks/101?
starttime=20170313T230652Z&endtime=20170314T025706Z RTSP/1.0
CSeq:8
Authorization: Digest username="admin",
realm="4419b66d2485",
nonce="a0ecd9b1586ff9461f02f910035d0486",
uri="rtsp://10.17.133.46:554/ISAPI/streaming/tracks/101?
starttime=20170313T230652Z&endtime=20170314T025706Z",
response="fb986d385a7d839052ec4f0b2b70c631"
Session:2049381566;timeout=60
Scale:4.000
User-Agent:NKPlayer-1.00.00.081112
RTSP/1.0 200 OK
CSeq: 8
Session: 2049381566
Scale: 4.000
RTP-Info: url=trackID=1;seq=1,url=trackID=2;seq=1
Date: Tue, Mar 14 2017 10:57:25 GMT
Disable:
TEARDOWN rtsp://10.17.133.46:554/ISAPI/streaming/tracks/101?
starttime=20170313T230652Z&endtime=20170314T025706Z RTSP/1.0
CSeq: 9
Authorization: Digest username="admin",
realm="4419b66d2485",
nonce="a0ecd9b1586ff9461f02f910035d0486",
uri="rtsp://10.17.133.46:554/ISAPI/streaming/tracks/101?
starttime=20170313T230652Z&endtime=20170314T025706Z",
response="50c86f44780a497ee07622b70c050bcd"
Session:2049381566;timeout=60
User-Agent: NKPlayer-1.00.00.081112
RTSP/1.0 200 OK
CSeq: 9
Session: 2049381566
Date: Tue, Mar 14 2017 10:57:28 GMT

82

Intelligent Security API (General Application) Developer Guide

8.3 Start Two-Way Audio
Two-way audio function enables the voice talk of the camera. You can get not only the live video
but also the real-time audio from the camera. If the device has multiple two-way audio channels,
you can select the channel to start two-way audio.
Steps

Figure 8-2 Programming Flow of Starting Two-Way Audio
1. Optional: Get parameters, including channel No., encoding mode, and so on, of all two-way
audio channels by the request URL: GET /ISAPI/System/TwoWayAudio/channels .
2. Specify a channel of device to start the two-way audio by the request URL: PUT /ISAPI/System/
TwoWayAudio/channels/<ID>/open
3. Perform the following operations to transmit the audio data between platform and device.
Send Audio Data to Device

Request URL: PUT /ISAPI/System/TwoWayAudio/channels/
<ID>/audioData

Receive Audio Data from
Request URL: GET /ISAPI/System/TwoWayAudio/channels/
Device
<ID>/audioData
4. Stop two-way audio of the specific channel by the request URL: PUT /ISAPI/System/
TwoWayAudio/channels/<ID>/close .

8.4 Stream Encoding
The following request URLs are used for configuring encoding parameters of video and audio
stream by one channel or multiple channels.

83

Intelligent Security API (General Application) Developer Guide
Encode Stream of Multiple Channels
• Get or set encoding parameters of multiple channels
Request URL: GET or PUT /ISAPI/Streaming/channels
• Get encoding status of multiple channels
Request URL: GET /ISAPI/Streaming/status

Encode Stream of One Channel
• Get encoding capability of one channel
Request URL: GET /ISAPI/Streaming/channels/<ID>/capabilities
• Get dynamic encoding capability of one channel
Request URL: GET /ISAPI/Streaming/channels/<ID>/dynamicCap .
• Get or set encoding parameters of one channel
Request URL: GET or PUT /ISAPI/Streaming/channels/<ID>
• Get encoding status of one channel
Request URL: GET /ISAPI/Streaming/channels/<ID>/status

84

Intelligent Security API (General Application) Developer Guide

Chapter 9 Capture and Recording
For some remarkable views in the live view, you can manually capture the views or record the
video segments and save the captured pictures or videos to the configured storage. For recording,
you can also configure recording schedule to record videos continuously or based on command or
event.

Capture
Request URL: GET /ISAPI/Streaming/channels/<ID>/picture

Recording
• Get video track type
Request URL: GET /ISAPI/ContentMgmt/record/profile
• Set storage for recorded files
Request URL: /ISAPI/ContentMgmt/record/storageMounts
Note
To check if setting recording storage is supported, you can call the request URL: GET /ISAPI/
ContentMgmt/capabilities to get the device storage management capability ( XML_RacmCap ).
• Recording Schedule
• Get configuration capability of a recording schedule
Request URL: GET /ISAPI/ContentMgmt/record/tracks/<ID>/capabilities
• Get all recording schedules
Request URL: GET /ISAPI/ContentMgmt/record/tracks
• Add a recording schedule
Request URL: POST /ISAPI/ContentMgmt/record/tracks
• Set a recording schedule
Request URL: PUT /ISAPI/ContentMgmt/record/tracks/<ID>
• Manual Recording
• Start manual recording
Request URL: POST /ISAPI/ContentMgmt/record/control/manual/start/tracks/<ID>
• Stop manual recording
Request URL: POST /ISAPI/ContentMgmt/record/control/manual/stop/tracks/<ID>

85

Intelligent Security API (General Application) Developer Guide

Chapter 10 PTZ Control
PTZ control is to implement the panning, tilting, zoom functions of cameras, set presets for specific
monitoring areas to fast switch the cameras as needed, and group the user-defined presets as a
scanning track for patrol.

Basic PTZ Parameters
• Get PTZ control capability
Request URL: GET /ISAPI/PTZCtrl/channels/<ID>/capabilities
• Get or set zoom/focus coordinate parameters
Request URL: GET or PUT /ISAPI/PTZCtrl/channels/<ID>/zoomFocus
• Maximum Tilt Angle
• Get configuration capability of maximum tilt angle
Request URL: GET /ISAPI/PTZCtrl/channels/<ID>/maxelevation/capabilities
• Get or set parameters of maximum tilt angle
Request URL: GET or PUT /ISAPI/PTZCtrl/channels/<ID>/maxelevation .
• Get PTZ position information of current channel
Request URL: GET /ISAPI/PTZCtrl/channels/<ID>/save
• Set PTZ position information of current channel
Request URL: PUT /ISAPI/PTZCtrl/channels/<ID>/save?format=json
• Get PTZ status of a specific channel
Request URL: GET /ISAPI/PTZCtrl/channels/<ID>/status

Other PTZ Parameters
• Lens
• Initialize lens
Request URL: PUT /ISAPI/PTZCtrl/channels/<ID>/onepushfoucs/reset
• Get lens correction capability
Request URL: GET /ISAPI/PTZCtrl/channels/<ID>/lensCorrection/capabilities?format=json
• Get or set lens correction parameters
Request URL: GET or PUT /ISAPI/PTZCtrl/channels/<ID>/lensCorrection?format=json
Note
To check if the lens correction is supported by device, you can call the request URL: GET /
ISAPI/PTZCtrl/channels/<ID>/capabilities to get the PTZ control capability
( XML_PTZChanelCap ). If supports, the node <isSupportLensCorrection> will be returned.
• Get or set PTZ locking time duration
Request URL: GET or PUT /ISAPI/PTZCtrl/channels/<ID>/lockPTZ

86

Intelligent Security API (General Application) Developer Guide
Note
You can call the request URL: GET /ISAPI/PTZCtrl/channels/<ID>/capabilities to get the
supported locking time duration (<lockTime>) from the PTZ control capability
( XML_PTZChanelCap ).
• Get or set PTZ OSD parameters
Request URL: GET or PUT /ISAPI/PTZCtrl/channels/<ID>/PTZOSDDisplay

PTZ Auxiliaries Control
• Get or set all PTZ auxiliaries status
Request URL: GET or PUT /ISAPI/PTZCtrl/channels/<ID>/auxcontrols
• Get or set the status of single PTZ auxiliary
Request URL: GET or PUT /ISAPI/PTZCtrl/channels/<ID>/auxcontrols/<ID>

E-PTZ Parameters
• Get or set e-PTZ parameters
Request URL: GET or PUT /ISAPI/Image/channels/<ID>/EPTZ
• Get capability of switching e-PTZ mode
Request URL: GET /ISAPI/Image/channels/<ID>/EPTZ/mode/capabilities?format=json
• Get or set parameters of switching e-PTZ mode
Request URL: GET or PUT /ISAPI/Image/channels/<ID>/EPTZ/mode?format=json

87

Intelligent Security API (General Application) Developer Guide

Chapter 11 Storage Management
• Get capability of storing additional information
Request URL: GET /ISAPI/ContentMgmt/Storage/ExtraInfo/capabilities
• Get or set parameters for storing additional information
Request URL: GET or PUT /ISAPI/ContentMgmt/Storage/ExtraInfo

11.1 HDD Management
The HDD (Hard Disk Drive) is used for storage. Before storing information in HDD, you must format
it, and you can also reallocate its space for better storage management.

HDD Configuration
• Get HDD management capability
Request URL: GET /ISAPI/ContentMgmt/Storage/hdd/capabilities
• Get parameters of all HDDs
Request URL: GET /ISAPI/ContentMgmt/Storage/hdd
• Get or set parameters of one HDD
Request URL: GET or PUT /ISAPI/ContentMgmt/Storage/hdd/<ID>
• Get parameters of all HDD quotas
Request URL: /ISAPI/ContentMgmt/Storage/quota
• Verify HDD encryption password
Request URL: PUT /ISAPI/ContentMgmt/Storage/hdd/<ID>/encryptVerfy?format=json

HDD Formatting
• Format all HDDs
Request URL: PUT /ISAPI/ContentMgmt/Storage/hdd/format
• Specify formatting type to format one HDD
Request URL: PUT /ISAPI/ContentMgmt/Storage/hdd/<ID>/format?formatType=
• Format multiple specified HDDs
Request URL: PUT /ISAPI/ContentMgmt/Storage/hdd/specifyHddFormat?format=json
• Format an encrypted HDD
Request URL: PUT /ISAPI/ContentMgmt/Storage/hdd/<ID>/encryptFormat?format=json
• Get formatting status of one HDD
Request URL: GET /ISAPI/ContentMgmt/Storage/hdd/<ID>/formatStatus

HDD Checking
• Get or set parameters for checking HDD status
Request URL: GET or PUT /ISAPI/ContentMgmt/Storage/hdd/SMARTTest/config
• Start checking HDD status
Request URL: PUT /ISAPI/ContentMgmt/Storage/hdd/<ID>/SMARTTest/start

88

Intelligent Security API (General Application) Developer Guide
• Get HDD checking status
Request URL: GET /ISAPI/ContentMgmt/Storage/hdd/<ID>/SMARTTest/status
• Start checking bad sectors of a HDD
Request URL: PUT /ISAPI/ContentMgmt/Storage/hdd/<ID>/BadSectorsTest/start
• Get bad sector checking status of a HDD
Request URL: GET /ISAPI/ContentMgmt/Storage/hdd/<ID>/BadSectorsTest/status
• Pause checking bad sectors of a HDD
Request URL: PUT /ISAPI/ContentMgmt/Storage/hdd/<ID>/BadSectorsTest/pause
• Resume checking bad sectors of a HDD
Request URL: PUT /ISAPI/ContentMgmt/Storage/hdd/<ID>/BadSectorsTest/resume
• Stop checking bad sectors of a HDD
Request URL: PUT /ISAPI/ContentMgmt/Storage/hdd/<ID>/BadSectorsTest/stop

SHM (SkyHawk Health Management) Alarm Linkage
• Get or set linkage parameters of HDD high temperature detection
Request URL: GET or PUT /ISAPI/Event/triggers/highHDTemperature
• Get or set linkage parameters of HDD low temperature detection
Request URL: GET or PUT /ISAPI/Event/triggers/lowHDTemperature
• Get or set linkage parameters of HDD impact detection
Request URL: GET or PUT /ISAPI/Event/triggers/hdImpact
• Get or set linkage parameters of HDD bad sector detection
Request URL: GET or PUT /ISAPI/Event/triggers/hdBadBlock
• Get or set linkage parameters of HDD severe fault detection
Request URL: GET or PUT /ISAPI/Event/triggers/severeHDFailure

89

Intelligent Security API (General Application) Developer Guide

Chapter 12 Alarm/Event
When the alarm is triggered or the event occurred, if you have configured alarm/event uploading
parameters, you can receive and process the alarm/event information in the third-party platform
or system by calling the request URLs of ISAPI. Two modes are available for receiving alarms,
including arming mode and listening mode.
Arming Mode
When the alarm is triggered or event occurred, the third-party platform or system can send the
request URL to the device for getting the alarm/event stream, and then the device uploads the
response message with alarm/event information.
Listening Mode
When alarm is triggered or event occurred, the device uploads the alarm information
automatically, and then the third-party platform or system can receives the alarm/event by
configuring listening port of HTTP host server.

12.1 Receive Alarm/Event in Arming Mode
When alarm is triggered or event occurred, and the alarm/event linkage is configured, you can
send request message to device for getting the alarm/event stream, and then the device uploads
the corresponding response message, which contains alarm/event information.
Before You Start
Make sure you have configured alarm/event and triggered the alarm/event. For configuring alarm/
event parameters, refer to the some typical applications of alarm/event configuration.

90

Intelligent Security API (General Application) Developer Guide
Steps

Figure 12-1 Programming Flow of Receiving Alarm/Event in Arming Mode
1. Call /ISAPI/Event/notification/alertStream by GET to get the alarm/event stream.
2. Check if the heartbeat receiving timed out or network disconnected.
- If the heartbeat keeps alive and the network still connected, perform the following step to
continue.
- If the heartbeat receiving timed out or network disconnected, perform the above step
repeatedly until reconnected.
3. Receive and process the alarm/event information.
Example
Sample Code of Receiving Alarm/Event in Arming Mode (without Binary Picture Data)
GET /ISAPI/Event/notification/alertStream HTTP/1.1
Host: data_gateway_ip
Connection: Keep-Alive
HTTP/1.1 401 Unauthorized
Date: Sun, 01 Apr 2018 18:58:53 GMT
Server:
Content-Length: 178
Content-Type: text/html
Connection: keep-alive
Keep-Alive: timeout=10, max=99
WWW-Authenticate: Digest qop="auth",
realm="IP Camera(C2183)",
nonce="4e5468694e7a42694e7a4d364f4449354d7a6b354d54513d",
stale="FALSE"
GET /ISAPI/Event/notification/alertStream HTTP/1.1
Authorization: Digest username="admin",

91

Intelligent Security API (General Application) Developer Guide
realm="IP Camera(C2183)",
nonce="4e5468694e7a42694e7a4d364f4449354d7a6b354d54513d",
uri="/ISAPI/Event/notification/alertStream",
cnonce="3d183a245b8729121ae4ca3d41b90f18",
nc=00000001,
qop="auth",
response="f2e0728991bb031f83df557a8f185178"
Host: 10.6.165.192
HTTP/1.1 200 OK
MIME-Version: 1.0
Connection: close
Content-Type: multipart/mixed; boundary=<frontier>
--<frontier>
Content-Type: application/xml; charset="UTF-8"
Content-Length: text_length
<EventNotificationAlert/>
--<frontier>

Note
Some alarm data is in JSON format, so the Content-Type may be "application/xml" or "application/
json".

12.2 Receive Alarm/Event in Listening Mode
When alarm is triggered or event occurred, and the alarm/event linkage is configured, the device
uploads the alarm/event information automatically, you can receive the alarm/event by
configuring the listening port of HTTP host server.
Before You Start
Make sure you have configured alarm/event and triggered the alarm/event. For configuring alarm/
event parameters, refer to the some typical applications of alarm/event configuration.

92

Intelligent Security API (General Application) Developer Guide
Steps

Figure 12-2 Programming Manual of Receiving Alarm/Event in Listening Mode
1. Optional: Call /ISAPI/Event/notification/httpHosts/capabilities by GET method to get the
capability of HTTP listening server.
2. Call /ISAPI/Event/notification/httpHosts by PUT method to set the parameters (including
listening address and listening port) of HTTP listening server.
Note
Before setting the listening server, you'd better perform GET operation on the above URL to get
default or configured parameters for reference.
3. Call /ISAPI/Event/notification/httpHosts/<ID>/test by POST method to check if the listening
server is working normally.
4. Call http://ipAddress:portNo/url by POST method to receive the alarm/event information from
the listening server.
Example
Sample Code of Receiving Alarm/Event in Listening Mode
• with Binary Picture Data
//Request
POST requestUrl HTTP/1.1
Host: data_gateway_ip:port
Accept-Language: en-US
Date: YourDate
Content-Type: multipart/form-data;boundary=<frontier>
Content-Length: body_length
Connection: keep-alive
--<frontier>

93

Intelligent Security API (General Application) Developer Guide
Content-Disposition: form-data; name="Event_Type"
Content-Type: text/xml
Content-Length: xml_length
<EventNotificationAlert/>
--<frontier>
Content-Disposition: form-data; name="Picture_Name"
Content-Length: image_length
Content-Type: image/pjpeg
[binary picture data]
--<frontier>-//Response
HTTP/1.1 HTTP statusCode
Date: YourDate
Connection: close

• without Binary Picture Data
//Request
POST requestUrl HTTP/1.1
Host: data_gateway_ip:port
Accept-Language: en-US
Date: YourDate
Content-Type: text/xml;
Content-Length: text_length
Connection: Close
<EventNotificationAlert/>
//Response
HTTP/1.1 HTTP statusCode
Date: YourDate
Connection: close

Note
• The Host is the HTTP server domain name or IP address and port No.
• Some alarm data is in JSON format, so the Content-Type may be "text/xml" or "text/json".

12.3 Subscribe Alarm/Event in Arming Mode
For arming mode, the platform will connect to the devices automatically and send commands to
the devices for uploading alarm/event information when the alarm is triggered or event occurred.
To reduce the CPU and bandwidth usage of platform, and improve the device processing
performance, the platform can subscribe alarm/event types to receive alarm/event information as
required.

94

Intelligent Security API (General Application) Developer Guide
Before You Start
Configure alarm/event and trigger the alarm/event. For configuring alarm/event parameters, refer
to the some typical applications of alarm/event configuration.
Steps

Figure 12-3 Programming Flow of Subscribing Alarm/Event in Arming Mode
1. Get device capability to check if alarm/event subscription is supported by the request URL:
GET /ISAPI/System/capabilities .
The device capability is returned in the message XML_DeviceCap .
If the node <isSupportSubscribeEvent> is also returned in the message and its value is "true", it
indicates that alarm/event subscription is supported by device, and you can continue to
perform the following steps;
Otherwise, alarm/event subscription is not supported, please end the task.
2. Get subscription capability to get supported alarm/event types by the request URL: GET /ISAPI/
Event/notification/subscribeEventCap .
The alarm/event subscription capability is returned in the message XML_SubscribeEventCap .
3. Enable alarm/event uploading by the request URL: POST /ISAPI/Event/notification/
subscribeEvent .

95

Intelligent Security API (General Application) Developer Guide
Note
The sub node <type> of event type list (EventList) in the request message XML_SubscribeEvent
for the URL can be set to different values (refer to Supported Alarm/Event Types for details) to
subscribe different types of alarm/event information.
4. Optional: Get subscribed alarm/event types for reference by the request URL: GET /ISAPI/
Event/notification/subscribeEvent/<ID> .
5. Set alarm/event type to subscribe by the request URL: PUT /ISAPI/Event/notification/
subscribeEvent/<ID> .
Note
The sub node <type> of event type list (EventList) in the request message XML_SubscribeEvent
for the URL can be set to different values (refer to Supported Alarm/Event Types for details) to
subscribe different types of alarm/event information.
6. Receive the alarm/event information by the request URL: GET /ISAPI/Event/notification/
alertStream .
7. Check if the heartbeat receiving timed out or network disconnected.
- If the heartbeat keeps alive and the network still connected, perform the following step to
continue.
- If the heartbeat receiving timed out or network disconnected, perform the above step
repeatedly until reconnected.
8. Cancel subscribing alarm/event by the request URL: PUT /ISAPI/Event/notification/
unSubscribeEvent .

12.4 Configure Exception Alarm
To monitor the device status, you can configure the exception alarm, such as supply voltage
exception, PoE power exception, and so on. When the exception occurs, the configured linkage
action will be triggered and the alarm information will be uploaded automatically.

Supply Voltage Exception
• Get configuration capability of alarm linkage action
Request URL: GET /ISAPI/Event/triggersCap
• Get or set the linkage action of supply voltage exception alarm
Request URL: GET or PUT /ISAPI/Event/triggers/<ID> , and the <ID> in the URL is
"voltageinstable"
• Receive supply voltage exception alarm in listening mode
Refer to Receive Alarm/Event in Listening Mode for details, the event type is "voltageinstable",
and the alarm information is returned in message JSON_EventNotificationAlert_voltageinstable

96

Intelligent Security API (General Application) Developer Guide
Note
To check if the device supports supply voltage exception alarm, you can call the request URL: GET /
ISAPI/Event/capabilities to get the device event capability ( XML_EventCap ). If supports, the node
<isSupportVoltageInstable> will be returned.

12.5 Configure Certificate Expiry Alarm
Generally, the device certificate is only valid in a specific period of time. You can configure the
certificate expiry alarm to remind the user a few days in advance. When the certificate is expired,
the alarm will be triggered and uploaded automatically.

97

Intelligent Security API (General Application) Developer Guide
Steps

Figure 12-4 Programming Flow of Configuring Certificate Expiry Alarm

98

Intelligent Security API (General Application) Developer Guide
1. Get the event capability of the device by the request URL: GET /ISAPI/Event/capabilities to
check whether the device supports certificate expiry alarm.
The event capability of the device is returned in the message XML_EventCap . If the certificate
expiry alarm is supported, the node <isSupportCertificateRevocation> will be returned and its
value is "true", then you can perform the following steps. Otherwise, please end this task.
2. Get the event capability of the channel by the request URL: GET /ISAPI/Event/channels/<ID>/
capabilities to check whether the certificate expiry alarm is supported by the channel.
The event capability supported by the channel is returned in the message
XML_ChannelEventCap . If the certificate expiry alarm is supported, the node <eventType> will
be returned and it contains "certificateRevocation".
3. Get the configuration capability of certificate expiry alarm by the request URL: GET /ISAPI/
Security/deviceCertificate/certificateRevocation/capabilities?format=json to know the
supported parameters of certificate expiry alarm that can be configured.
4. Optional: Get the parameters of certificate expiry alarm by the request URL: GET /ISAPI/
Security/deviceCertificate/certificateRevocation?format=json to get the existing or configured
parameters for reference.
5. Set the parameters of certificate expiry alarm by the request URL: PUT /ISAPI/Security/
deviceCertificate/certificateRevocation?format=json .
6. Optional: Get the linkage parameters of certificate expiry alarm by the request URL: GET /ISAPI/
Event/triggers/<ID> or /ISAPI/Event/triggers/<ID>/notifications to get the existing or
configured parameters for reference.
Note
The <ID> in the request URL refers to the channel No., and it should be set to the format
"certificateRevocation-<channelID>".
7. Set the linkage parameters of certificate expiry alarm by the request URL: PUT /ISAPI/Event/
triggers/<ID> or /ISAPI/Event/triggers/<ID>/notifications .
Note
The <ID> in the request URL refers to the channel No., and it should be set to the format
"certificateRevocation-<channelID>".
8. Optional: Receive the uploaded certificate expiry alarm in arming mode (see details in Receive
Alarm/Event in Arming Mode ) or in listening mode (see details in Receive Alarm/Event in
Listening Mode ) when the certificate is expired.
The certificate expiry alarm details are returned in the message
JSON_EventNotificationAlert_CertificateExpiryAlarmMsg , and the corresponding alarm type
(eventType) is "certificateRevocation".

99

Intelligent Security API (General Application) Developer Guide

Chapter 13 Parameter Configuration
13.1 I/O Settings
I/O (Alarm Input and Output)
• Get I/O configuration capability
Request URL: GET /ISAPI/System/IO/capabilities .
• Get I/O status
Request URL: GET /ISAPI/System/IO/status

Alarm Input
• Get configuration capability of alarm inputs
Request URL: GET /ISAPI/System/IO/inputs/capabilities .
• Get parameters of all alarm inputs
Request URL: GET /ISAPI/System/IO/inputs
• Get or set parameters of one alarm input
Request URL: GET or PUT /ISAPI/System/IO/inputs/<ID>
• Get status of one alarm input
Request URL: GET /ISAPI/System/IO/inputs/<ID>/status
• Alarm Input Configuration of Digital Channel
Note
To check if the alarm input configuration of digital channel is supported, you can call the request
URL: GET /ISAPI/ContentMgmt/capabilities to get the device storage management capability
( XML_RacmCap ).
If this function is supported, the node <isSupportIOInputProxy> is returned and its value is
"true".
• Get or set alarm input parameters of all digital channels
Request URL: GET or PUT /ISAPI/ContentMgmt/IOProxy/inputs
• Added alarm input configuration of a specific digital channel
Request URL: POST /ISAPI/ContentMgmt/IOProxy/inputs
• Get or set alarm input parameters of a specific digital channel
Request URL: GET or PUT /ISAPI/ContentMgmt/IOProxy/inputs/<ID>
• Delete alarm input configuration of a specific digital channel
Request URL: DELETE /ISAPI/ContentMgmt/IOProxy/inputs/<ID>
• Get alarm input status of a specific digital channel
Request URL: GET /ISAPI/ContentMgmt/IOProxy/inputs/<ID>/status

Alarm Output
• Basic Alarm Output Parameters

100

Intelligent Security API (General Application) Developer Guide
• Get configuration capability of alarm outputs
Request URL: GET /ISAPI/System/IO/outputs/capabilities
• Get parameters of all alarm outputs
Request URL: GET /ISAPI/System/IO/outputs
• Get or set parameters of one alarm output
Request URL: GET or PUT /ISAPI/System/IO/outputs/<ID>
• Get status of one alarm output
Request URL: GET /ISAPI/System/IO/outputs/<ID>/status
• Supplement Light Alarm Output
• Get configuration capability of supplement light alarm outputs
Request URL: GET /ISAPI/Event/triggers/notifications/whiteLightAlarm/capabilities?
format=json
• Get or set parameters of supplement light alarm outputs
Request URL: GET or PUT /ISAPI/Event/triggers/notifications/whiteLightAlarm?format=json
• Audible Alarm Output
• Get configuration capability of audible alarm outputs
Request URL: GET /ISAPI/Event/triggers/notifications/AudioAlarm/capabilities?format=json
• Get or set parameters of audible alarm outputs
Request URL: GET or PUT /ISAPI/Event/triggers/notifications/AudioAlarm?format=json
• Manually trigger an alarm output
Request URL: PUT /ISAPI/System/IO/outputs/<ID>/trigger
• Alarm Output Configuration of Digital Channel
Note
To check if the alarm output configuration of digital channel is supported, you can call the
request URL: GET /ISAPI/ContentMgmt/capabilities to get the device storage management
capability ( XML_RacmCap ).
If this function is supported, the node <isSupportIOOutputProxy> is returned and its value is
"true".
• Get or set alarm output parameters of all digital channels
Request URL: GET or PUT /ISAPI/ContentMgmt/IOProxy/outputs
• Added alarm output configuration of a specific digital channel
Request URL: POST /ISAPI/ContentMgmt/IOProxy/outputs
• Get or set alarm output parameters of a specific digital channel
Request URL: GET or PUT /ISAPI/ContentMgmt/IOProxy/outputs/<ID>
• Delete alarm output configuration of a specific digital channel
Request URL: DELETE /ISAPI/ContentMgmt/IOProxy/outputs/<ID>
• Get alarm output status of a specific digital channel
Request URL: GET /ISAPI/ContentMgmt/IOProxy/outputs/<ID>/status
• Trigger alarm output of a specific digital channel
Request URL: PUT /ISAPI/ContentMgmt/IOProxy/outputs/<ID>/trigger

101

Intelligent Security API (General Application) Developer Guide
Note
The alarm details are uploaded by the message
XML_EventNotificationAlert_IOSensorAlarmMsg .

13.2 Video/Image Settings
Basic Image Parameters
• Get image configuration capability
Request URL: GET /ISAPI/Image/channels/<ID>/capabilities .
• Get or set image parameters of all channels
Request URL: GET or PUT /ISAPI/Image/channels
• Get or set image parameters of one channel
Request URL: GET or PUT /ISAPI/Image/channels/<ID>
• Get basic image parameters of all channels
Request URL: GET /ISAPI/Image/channels/<ID>/imageModes
• Get basic image parameters of one channel
Request URL: GET /ISAPI/Image/channels/<ID>/imageMode/<ID>
• Reset image parameters
Request URL: PUT /ISAPI/Image/channels/<ID>/reset
• Restore to default image settings
Request URL: PUT /ISAPI/Image/channels/<ID>/restore

Camera Video/Image Parameters
• Get or set day/night mode parameters
Request URL: GET or PUT /ISAPI/Image/channels/<ID>/ISPMode
• Get or set image auto flip parameters
Request URL: GET or PUT /ISAPI/Image/channels/<ID>/ImageFlip
• Get or set wide dynamic range (WDR) parameters
Request URL: GET or PUT /ISAPI/Image/channels/<ID>/WDR
• Get or set backlight compensation (BLC) parameters
Request URL: GET or PUT /ISAPI/Image/channels/<ID>/BLC
• Get or set day/night auto switch parameters
Request URL: GET or PUT /ISAPI/Image/channels/<ID>/IrcutFilter
• Get or set 3-dimention digital noise reduction (3D DNR) parameters
Request URL: GET or PUT /ISAPI/Image/channels/<ID>/noiseReduce
• Get or set white balance (WB) parameters
Request URL: GET or PUT /ISAPI/Image/channels/<ID>/whiteBalance
• Exposure
• Get or set exposure parameters

102

Intelligent Security API (General Application) Developer Guide
Request URL: GET or PUT /ISAPI/Image/channels/<ID>/exposure
• Get or set shutter parameters in exposure mode
Request URL: GET or PUT /ISAPI/Image/channels/<ID>/shutter
• Get or set gain parameters in exposure mode
Request URL: GET or PUT /ISAPI/Image/channels/<ID>/gain
• Get or set sharpness parameters
Request URL: GET or PUT /ISAPI/Image/channels/<ID>/sharpness
• Get or set defog parameters
Request URL: GET or PUT /ISAPI/Image/channels/<ID>/dehaze
• Get or set image standard
Request URL: GET or PUT /ISAPI/Image/channels/<ID>/powerLineFrequency
• Image Adjustment
• Get image adjustment capability
Request URL: GET /ISAPI/Image/channels/<ID>/color/capabilities
• Get or set image adjustment parameters
Request URL: GET or PUT /ISAPI/Image/channels/<ID>/color
• Get or set image rotate mode parameters
Request URL: GET or PUT /ISAPI/Image/channels/<ID>/corridor

Other Video/Image Parameters
• Focus
• Get focus configuration capability
Request URL: GET /ISAPI/Image/channels/<ID>/focusConfiguration/capabilities
• Get or set focus parameters
Request URL: GET or PUT /ISAPI/Image/channels/<ID>/focusConfiguration
• Perform regional focus
Request URL: PUT /ISAPI/Image/channels/<ID>/regionalFocus
Note
To check if the regional focus is supported by device, you can call the request URL: GET to get
the image capability ( XML_ImageCap ). If supports, the node <isSupportRegionalFocus> will
be returned in the capability.
• Get or set target colorating parameters
Request URL: GET or PUT /ISAPI/Image/channels/<ID>/Palettes
• On Screen Display (OSD)
• Get or set OSD parameters
Request URL: GET or PUT /ISAPI/System/Video/inputs/channels/<ID>/overlays
• Get or set text language of OSD
Request URL: GET /ISAPI/System/Video/inputs/OSDLanguage

103

Intelligent Security API (General Application) Developer Guide
Note
To check if the OSD language configuration is supported by device, you can call the request
URL: GET / to get the video capability ( XML_VideoCap ). If supports, the node
<OSDLanguage> will be returned.
• Stream Configuration for Displaying VCA Rules of Smart Events
• Get capability of configuring stream for displaying VCA rules of smart events
Request URL: GET /ISAPI/Streaming/channels/<ID>/smartOverlap/capabilities?format=json
• Get or set stream parameters for displaying VCA rules of smart events
Request URL: GET or PUT /ISAPI/Streaming/channels/<ID>/smartOverlap?format=json
Note
To check if the stream configuration for displaying VCA rules of smart events is supported by the
device, you can call the request URL: GET /ISAPI/System/capabilities to get the device capability
( XML_DeviceCap ). If this function is supported, the node <supportSmartOverlapChannles> will
be returned and its value is "true".
• Target Enhancement
• Get target enhancement capability
Request URL: GET /ISAPI/Image/channels/<ID>/targetEnhancement/capabilities
• Get or set target enhancement parameters
Request URL: GET or PUT /ISAPI/Image/channels/<ID>/targetEnhancement
• Privacy Mask
• Get configuration capability of privacy mask
Request URL: GET /ISAPI/System/Video/inputs/channels/<ID>/privacyMask/
privacyMaskCap
• Get or set privacy mask parameters
Request URL: GET or PUT /ISAPI/System/Video/inputs/channels/<ID>/privacyMask
• Get or set multiple privacy mask regions
Request URL: GET or PUT /ISAPI/System/Video/inputs/channels/<ID>/privacyMask/regions
• Get or set one privacy mask region
Request URL: GET or PUT /ISAPI/System/Video/inputs/channels/<ID>/privacyMask/regions/
<ID>
• Get or set video input mode parameters
Request URL: GET or PUT /ISAPI/Image/channels/<ID>/capturemode
• Distortion Correction
• Get configuration capability of distortion correction
Request URL: GET /ISAPI/Image/channels/<ID>/lensDistortionCorrection/capabilities
• Get or set distortion correction parameters
Request URL: GET or PUT /ISAPI/Image/channels/<ID>/lensDistortionCorrection
• Target Cropping
• Get configuration capability of target cropping

104

Intelligent Security API (General Application) Developer Guide
Request URL: GET /ISAPI/Streaming/channels/<ID>/regionClip/capabilities
• Get or set target cropping parameters
Request URL: GET or PUT /ISAPI/Streaming/channels/<ID>/regionClip
• Temperature Range
• Get temperature range configuration capability
Request URL: GET /ISAPI/Image/channels/<ID>/tempRange/capabilities
• Get or set temperature range
Request URL: GET or PUT /ISAPI/Image/channels/<ID>/tempRange

13.3 Audio Settings
Basic Audio Configuration
• Get audio capability
Request URL: GET /ISAPI/System/Audio/capabilities
• Get dynamic audio capability by channel
Request URL: GET /ISAPI/System/Audio/channels/<ID>/dynamicCap
• Get parameters of all audio channels
Request URL: GET /ISAPI/System/Audio/channels
• Get parameters of a specific audio channel
Request URL: GET /ISAPI/System/Audio/channels/<ID>

Audio Input Configuration
• Get audio input capability of a specific channel
Request URL: GET /ISAPI/System/Audio/AudioIn/channels/<ID>/capabilities
• Get or set audio input parameters of a specific channel
Request URL: GET or PUT /ISAPI/System/Audio/AudioIn/channels/<ID>

Audio Output Configuration
• Get audio output capability of a specific channel
Request URL: GET /ISAPI/System/Audio/AudioOut/channels/<ID>/capabilities
• Get or set audio output parameters of a specific channel
Request URL: GET or PUT /ISAPI/System/Audio/AudioOut/channels/<ID>

13.4 Channel Settings
Basic Channel Parameters
• Get all channels' attributes
Request URL: GET /ISAPI/AUXInfo/attributes/Channels
• Get one channel's attributes
Request URL: GET /ISAPI/AUXInfo/attributes/Channels/<ID>

105

Intelligent Security API (General Application) Developer Guide
Video Input Channel
• Get configuration capability by video input channel
Request URL: GET /ISAPI/System/Video/inputs/channels/<ID>/capabilities
• Get parameters of all video input channels
Request URL: GET /ISAPI/System/Video/inputs/channels?format=json
• Get parameters of one video input channel
Request URL: /ISAPI/System/Video/inputs/channels/<ID>?format=json

Video Output Channel
• Get parameters of all video outputs
Request URL: GET /ISAPI/System/Video/outputs
• Get configuration capability by video output channel
Request URL: GET /ISAPI/System/Video/outputs/channels/<ID>/capabilities
• Get parameters of all video output channels
Request URL: GET /ISAPI/System/Video/outputs/channels
• Get parameters of one video output channel
Request URL: GET /ISAPI/System/Video/outputs/channels/<ID>

Digital Channel
Note
To check if the digital channel management or configuration is supported, you can call the request
URL: GET /ISAPI/ContentMgmt/capabilities to get the device storage management capability
( XML_RacmCap ).
• Get management capability of all digital channels
GET /ISAPI/ContentMgmt/InputProxy/channels/capabilities
• Get management capability of one digital channel
GET /ISAPI/ContentMgmt/InputProxy/channels/<ID>/capabilities
• Get supported number of digital channels
Request URL: POST /ISAPI/ContentMgmt/InputProxy/sourceCapability
• Get parameters of all digital channels
Request URL: GET /ISAPI/ContentMgmt/InputProxy/channels
• Get status of all digital channels
Request URL: GET /ISAPI/ContentMgmt/InputProxy/channels/status
• Get, add, or delete parameters of one digital channel
Request URL: GET, POST, or PUT /ISAPI/ContentMgmt/InputProxy/channels
• Get status of one digital channel
Request URL: GET /ISAPI/ContentMgmt/InputProxy/channels/<ID>/status
• Get or set control parameters of a digital channel
Request URL: GET or PUT /ISAPI/ContentMgmt/InputProxy/channels/<ID>/chanCtrl
• Reboot a digital channel

106

Intelligent Security API (General Application) Developer Guide
Request URL: GET /ISAPI/ContentMgmt/InputProxy/channels/<ID>/reboot
• Check if port mapping is required for connecting to a digital channel
Request URL: POST /ISAPI/ContentMgmt/InputProxy/channels/<ID>/portMapParam

13.5 Peripherals Settings
• Get configuration capability of built-in supplement light
Request URL: GET /ISAPI/Image/channels/<ID>/SupplementLight/capabilities
• Get or set parameters of built-in supplement light
Request URL: GET or PUT /ISAPI/Image/channels/<ID>/SupplementLight
Note
To check if configuring built-in supplement light is supported, you can call the request URL: GET /
ISAPI/Image/channels/<ID>/capabilities to get the image channel capability
( XML_Cap_ImageChannel ). If supports, the node <SupplementLight> will be returned in the
message.

107

Intelligent Security API (General Application) Developer Guide

Chapter 14 System Configuration
14.1 Network Settings
This chapter lists the request URLs for communication and network configurations of devices,
including network interface settings, wireless network settings, network access settings, email
settings, and so on.
• Get network capability
Request URL: GET /ISAPI/System/Network/capabilities
• Import network certificate
Request URL: GET /ISAPI/Security/deviceCertificate
• Remotely get connection socket IP
Request URL: GET /ISAPI/System/Network/socketIP
Note
To check if getting socket IP is supported by device, you can call the request URL: GET /ISAPI/
System/Network/capabilities to get the device capability ( XML_DeviceCap ). If supports, the
node <isSupportGetLinkSocketIP> will be returned.
• Network Self-Adaptive
• Get self-adaptive configuration capability
Request URL: GET /ISAPI/System/Network/adaption/capabilities?format=json
• Get self-adaptive parameters
Request URL: GET /ISAPI/System/Network/adaption?format=json&streamType=
• Set self-adaptive parameters
Request URL: PUT /ISAPI/System/Network/adaption?format=json&streamType=
Note
To check if network self-adaptive configuration is supported, you can get the network
capability XML_NetworkCap by the request URL: /ISAPI/System/Network/capabilities . If
supports, the node <Adaption> will be returned in the capability message.

14.1.1 Email
• Get email configuration capability
Request URL: GET /ISAPI/System/Network/mailing/capabilities
• Get or set parameters of multiple emails
Request URL: GET or PUT /ISAPI/System/Network/mailing
• Get or set parameters of one email

108

Intelligent Security API (General Application) Developer Guide
Request URL: GET or PUT /ISAPI/System/Network/mailing/<ID>
• Execute email test
Request URL: POST /ISAPI/System/Network/mailing/test

14.1.2 Network Access
Protocol Access
• Get configuration capability of protocol access
Request URL: /ISAPI/Security/adminAccesses/capabilities
• Get or set access parameters of multiple protocols
Request URL: GET or PUT /ISAPI/Security/adminAccesses
• Get or set access parameters of one protocol
Request URL: GET or PUT /ISAPI/Security/adminAccesses/<ID>
• 802.1 Protocol Access
• Get 802.1 protocol access capability
Request URL: GET /ISAPI/System/Network/interfaces/<ID>/ieee802.1x/capabilities
• Get or set access parameters of 802.1 protocol
Request URL: GET or PUT /ISAPI/System/Network/interfaces/<ID>/ieee802.1x

Hik-Connect Access
• Get or set access parameters of Hik-Connect
Request URL: GET or PUT /ISAPI/System/Network/EZVIZ
Note
To check if the device supports accessing to Hik-Connect, you can call the request URL: GET /
ISAPI/System/Network/capabilities to get the network capability ( XML_NetworkCap ). If
supports, the node <isSupportEhome> will be returned in the capability and its value is "true".
• Edit verification code for Hik-Connect
Request URL: PUT /ISAPI/System/Network/EZVIZ/secretKey?format=json
Note
To check if the device supports editing verification code for Hik-Connect, you can call the request
URL: GET /ISAPI/System/Network/capabilities to get the network capability sets
XML_NetworkCap . If supports, the node <secretKey> will be returned.

EHome Server Access
• Get configuration capability of EHome server access
Request URL: GET /ISAPI/System/Network/Ehome/capabilities
• Get or set access parameters of EHome server
Request URL: GET or PUT /ISAPI/System/Network/Ehome

109

Intelligent Security API (General Application) Developer Guide
• Get or set access parameters of EHome server according to the center ID
Request URL: GET or PUT /ISAPI/System/Network/Ehome?centerID=
• Get configuration capability of report uploading method
Request URL: GET /ISAPI/SecurityCP/ReportCenterCfg/capabilities?format=json
• Get or set parameters of report uploading method
Request URL: GET or PUT /ISAPI/SecurityCP/ReportCenterCfg/<ID>?format=json
Note
To check if the device supports accessing to EHome server, you can call the request URL: GET /
ISAPI/System/Network/capabilities to get the network capability ( XML_NetworkCap ). If
supports, the node <isSupportEZVIZ> will be returned in the capability and its value is "true".

SSH Server Access
Get or set access parameters of SSH server
Request URL: GET or PUT /ISAPI/System/Network/ssh
Note
To check if the device supports accessing to SSH server, you can call the request URL: GET /ISAPI/
System/Network/capabilities to get the network capability ( XML_NetworkCap ). If supports, the
node <isSupportSSH> will be returned in the capability and its value is "true".

14.1.3 Network Interface
Network Interface
• Get configuration capability of one network interface
Request URL: GET /ISAPI/System/Network/interfaces/<ID>/capabilities
• Get information of multiple network interfaces
Request URL: GET /ISAPI/System/Network/interfaces
• Get or set parameters of one network interface
Request URL: GET or PUT /ISAPI/System/Network/interfaces/<ID>
• Get IP address of one network interface
Request URL: GET or PUT /ISAPI/System/Network/interfaces/<ID>/ipAddress

PoE
• Get configuration capability of PoE port
Request URL: GET /ISAPI/System/Network/POE/capabilities?format=json
• Get or set PoE port parameters
Request URL: GET or PUT /ISAPI/System/Network/POE?format=json

UPnP
• Get or set UPnP parameters

110

Intelligent Security API (General Application) Developer Guide
Request URL: GET or PUT /ISAPI/System/Network/UPnP
• Get or set parameters of all UPnP ports
Request URL: GET or PUT /ISAPI/System/Network/UPnP/ports
• Get or set parameters of one UPnP port
Request URL: GET or PUT /ISAPI/System/Network/UPnP/ports/<ID>
• Get mapping statuses of all UPnP ports
Request URL: GET /ISAPI/System/Network/UPnP/ports/status
• Get mapping status of one UPnP port
Request URL: GET /ISAPI/System/Network/UPnP/ports/<ID>/status

14.1.4 Wireless Network
Wi-Fi
• Get Wi-Fi configuration capability
Request URL: GET /ISAPI/System/Network/interfaces/<ID>/wireless/capabilities
• Get or set Wi-Fi parameters of one network interface
Request URL: GET or PUT /ISAPI/System/Network/interfaces/<ID>/wireless

Wireless Hotspot
• Get configuration capability of wireless hotspot
Request URL: GET /ISAPI/System/Network/interfaces/<ID>/wirelessServer/capabilities
• Get or set wireless hotspot parameters
Request URL: GET or PUT /ISAPI/System/Network/interfaces/<ID>/wirelessServer
• Get list of devices connected to hotspot
Request URL: GET
• Get information of a device connected to hotspot
Request URL: GET /ISAPI/System/Network/interfaces/<ID>/wireless/accessDeviceList/<ID>
• Get capability of devices connected to hotspot
Request URL: GET /ISAPI/System/Network/interfaces/<ID>/wireless/accessDeviceList/
capabilities
• Get hotspot list
Request URL: GET /ISAPI/System/Network/interfaces/<ID>/wireless/accessPointList
• Get one hotspot information
Request URL: GET /ISAPI/System/Network/interfaces/<ID>/wireless/accessPointList/<ID>

Wireless Dial
• Get configuration capability of wireless dial
Request URL: GET /ISAPI/System/Network/WirelessDial/Interfaces/<ID>/dial/capabilities
• Get or set wireless dial parameters
Request URL: GET or PUT /ISAPI/System/Network/WirelessDial/Interfaces/<ID>/dial

111

Intelligent Security API (General Application) Developer Guide
14.1.5 Network Service
Software Service
• Get configuration capability of software service
Request URL: GET /ISAPI/System/Software/channels/<ID>/capabilities
• Get or set parameters of software service
Request URL: GET or PUT /ISAPI/System/Software/channels/<ID>

Session Initialization Protocol (SIP) Server
• Get SIP server capability
Request URL: GET /ISAPI/System/Network/SIP/<ID>/capabilities
• Get or set parameters of all SIP servers
Request URL: GET or PUT /ISAPI/System/Network/SIP
• Get or set parameters of one SIP server
Request URL: GET or PUT /ISAPI/System/Network/SIP/<ID>
• Get configuration capability of SIP server
Request URL: GET /ISAPI/System/Network/SIP/<ID>/SIPInfo/capabilities
• Get or set information of one SIP server
Request URL: GET or PUT /ISAPI/System/Network/SIP/<ID>/SIPInfo
• Get or set information of all SIP servers
Request URL: GET or PUT /ISAPI/System/Network/SIP/<ID>/SIPInfo/multiInfo

File Transfer Protocol (FTP) Server
• Get configuration capability of FTP server
Request URL: GET /ISAPI/System/Network/ftp/capabilities
• Get or set parameters of one FTP server
Request URL: GET or PUT /ISAPI/System/Network/ftp/<ID>
• Get or set parameters of all FTP servers
Request URL: GET or PUT /ISAPI/System/Network/ftp
• Perform FTP server test
Request URL: POST /ISAPI/System/Network/ftp/test

Dynamic Domain Name Server (DDNS)
• Get DDNS configuration capability
Request URL: GET /ISAPI/System/Network/DDNS/capabilities
• Get or set parameters of all DDNSs
Request URL: GET or PUT /ISAPI/System/Network/DDNS
• Get or set parameters of one DDNS
Request URL: GET or PUT /ISAPI/System/Network/DDNS/<ID>
• Get configuration capability of dynamic domain name

112

Intelligent Security API (General Application) Developer Guide
Request URL: GET /ISAPI/System/Network/interfaces/<ID>/dynamicHostName/capabilities?
format=json
• Get or set dynamic domain name
Request URL: GET or PUT /ISAPI/System/Network/interfaces/<ID>/dynamicHostName?
format=json
Note
To check if setting dynamic domain name is supported, you can call the request URL: GET /ISAPI/
System/Network/capabilities to get the network capability ( XML_NetworkCap ). If supports,
the node <isSupportDynamicHostName> is returned and its value is "true".

Log Server
• Get log server configuration capability
Request URL: GET /ISAPI/System/logServer/capabilities
• Get or set log server parameters
Request URL: GET or PUT /ISAPI/System/logServer
• Perform log server text
Request URL: POST /ISAPI/System/logServer/test

Static Routing
Get, set, or delete static routing parameters
Request URL: GET, PUT, or DELETE /ISAPI/System/Network/StaticRoute

14.2 Time Settings
This chapter lists the request URLs for device time configuration, including setting time, setting
time zone, and so on.
• Get time configuration capability
Request URL: GET /ISAPI/System/time/capabilities
Note
To check if time configuration is supported, you can call the request URL: GET /ISAPI/System/
capabilities to get the device capability ( XML_DeviceCap ). If supports, the node
<isSupportTimeCap> will be returned.
• Get or set time type
Request URL: GET or PUT /ISAPI/System/time/timeType?format=json
• Get or set time parameters
Request URL: GET or PUT /ISAPI/System/time
• Get or set time zone
Request URL: GET or PUT /ISAPI/System/time/timeZone
• Get or set local time parameters

113

Intelligent Security API (General Application) Developer Guide
Request URL: GET or PUT /ISAPI/System/time/localTime
• NTP Server
• Get NTP server capability
Request URL: GET /ISAPI/System/time/ntpServers/capabilities
• Get, set, or delete multiple NTP servers
Request URL: GET, PUT, or DELETE /ISAPI/System/time/ntpServers
• Get set, or delete one NTP server
Request URL: GET, PUT, or DELETE /ISAPI/System/time/ntpServers/<ID>
• Add one NTP server
Request URL: POST /ISAPI/System/time/ntpServers
• Execute NTP server test
Request URL: POST /ISAPI/System/time/ntpServers/test

14.3 System Diagnose
This chapter lists the request URLs for getting system diagnose information and the exporting
status.
• Get diagnose information
Request URL: GET /ISAPI/System/diagnosedData
• Get process of exporting diagnose information
URL: GET /ISAPI/System/diagnosedData/exportStatus
Note
To check if getting disgnose information is supported, you can call the request URL: GET /ISAPI/
System/capabilities to get the device capability ( XML_DeviceCap >. If supports, the node
<isSupportDiagnosedData> will be returned.

14.4 Data Replenishment
In the condition of disconnection between platform and NVR, the NVR saves the data of people
counting, heat map, temperature, and vehicle. When the connection is resumed, the platform can
get the specified data from NVR during disconnection period.

People Counting Data Replenishment
• Get data replenishment capability of people counting
Request URL: GET /ISAPI/System/Video/inputs/channels/counting/collection/capabilities?
format=json

114

Intelligent Security API (General Application) Developer Guide
Note
Before getting people counting data replenishment capability, you should check whether this
function is supported by the device via the node <isSupportCountingCollection> in
XML_VideoCap , URL: GET /ISAPI/System/Video/capabilities .
• Perform data replenishment of people counting
Request URL: POST /ISAPI/System/Video/inputs/channels/counting/collection?format=json

Heat Map Data Replenishment
• Get data replenishment capability of heat map
Request URL: GET /ISAPI/System/Video/inputs/channels/heatMap/collection/capabilities?
format=json
Note
Before getting people counting data replenishment capability, you should check whether this
function is supported by the device via the node <isSupportHeatmapCollection> in
XML_VideoCap , URL: GET /ISAPI/System/Video/capabilities .
• Perform data replenishment of heat map
Request URL: POST /ISAPI/System/Video/inputs/channels/heatMap/collection?format=json

Temperature Data Replenishment
• Get data replenishment capability of temperature
Request URL: GET /ISAPI/Thermal/temperature/collection/capabilities?format=json
Note
Before getting temperature data replenishment capability, you should check whether this
function is supported by the device via the node <isSupportTemperatureCollection> in
XML_ThermalCap , URL: GET /ISAPI/Thermal/capabilities .
• Perform temperature data replenishment
Request URL: POST /ISAPI/Thermal/temperature/collection?format=json

Vehicle Detection Data Replenishment
• Get VCA search capability
Request URL: GET /ISAPI/SDT/Management/IntelligentSearch/capabilities?format=json
• Search for vehicle detection data
Request URL: POST /ISAPI/SDT/Management/IntelligentSearch?format=json
Note
Before searching for vehicle detection data, you should check whether the device supports this
function. When the node <isSupportIntelligentSearch> is returned in device capability sets
XML_DeviceCap , and values "true".

115

Intelligent Security API (General Application) Developer Guide

Chapter 15 Request URL
The intelligent security API in request URL format for realizing the functions in this manual are
listed here for reference. You can search for the URLs and view their definitions.

15.1 /ISAPI/AUXInfo
15.1.1 /ISAPI/AUXInfo/attributes/Channels
Get the attributes of channels.

Request URL Definition
Table 15-1 GET /ISAPI/AUXInfo/attributes/Channels
Method

GET

Description

Get the attributes of channels.

Query

None.

Request

None.

Response

XML_ChannelInfoList

15.1.2 /ISAPI/AUXInfo/attributes/Channels/<ID>
Get the attributes of a specific channel according to channel ID.

Request URL Definition
Table 15-2 GET /ISAPI/AUXInfo/attributes/Channels/<ID>
Method

GET

Description

Get the attributes of a specific channel according to channel ID.

Query

None.

Request

None.

Response

XML_ChannelInfo

Remarks
The <ID> in the request URL is the channel ID.

116

Intelligent Security API (General Application) Developer Guide

15.2 /ISAPI/ContentMgmt
15.2.1 /ISAPI/ContentMgmt/capabilities
Get storage capability.

GET /ISAPI/ContentMgmt/capabilities
Method

GET

Description

Get storage capability.

Query

None.

Request

None.

Response

Succeeded: XML_RacmCap
Failed: XML_ResponseStatus

15.2.2 /ISAPI/ContentMgmt/download
Download the file via plug-in.

Request URL Definition
Table 15-3 GET /ISAPI/ContentMgmt/download
Method

GET

Description

Download the file.

Query

security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.

Request

XML_downloadRequest

Response

File

117

Intelligent Security API (General Application) Developer Guide
15.2.3 /ISAPI/ContentMgmt/download/capabilities
Get the downloading capability sets.

Request URL Definition
Table 15-4 GET /ISAPI/ContentMgmt/download/capabilities
Method

GET

Description

Get the downloading capability sets.

Query

None.

Request

None.

Response

Succeeded: XML_DownloadAbility
Failed: XML_ResponseStatus

15.2.4 /ISAPI/ContentMgmt/download/toUSB/<taskId>/progress?format=json
Get the progress of exporting files to devices via USB.

Request URL Definition
Table 15-5 GET /ISAPI/ContentMgmt/download/toUSB/<taskId>/progress?format=json
Method

GET

Description

Get the progress of exporting files to devices via USB.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_ProgressInfo
Failed: JSON_ResponseStatus

Remarks
The <taskId> in the request URL refers to the task ID, and it is returned in the message
JSON_ExporttoUSB_TaskInfo after calling the request URL: POST /ISAPI/ContentMgmt/download/
toUSB?format=json .

15.2.5 /ISAPI/ContentMgmt/download/toUSB/capabilities?format=json
Get the capability of exporting files to devices via USB.

118

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-6 GET /ISAPI/ContentMgmt/download/toUSB/capabilities?format=json
Method

GET

Description

Get the capability of exporting files to devices via USB.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_Cap_ExportInfo
Failed: JSON_ResponseStatus

15.2.6 /ISAPI/ContentMgmt/download/toUSB?format=json
Export files to devices via USB.

Request URL Definition
Table 15-7 POST /ISAPI/ContentMgmt/download/toUSB?format=json
Method

POST

Description

Export files to devices via USB.

Query

format: determine the format of request or response message.

Request

JSON_ExportInfo

Response

Succeeded: JSON_ExporttoUSB_TaskInfo
Failed: JSON_ResponseStatus

15.2.7 /ISAPI/ContentMgmt/InputProxy/channels
Operations about management of all digital channels.

Request URL Definition
Table 15-8 GET /ISAPI/ContentMgmt/InputProxy/channels
Method

GET

Description

Get parameters of all digital channels.

Query

None.

119

Intelligent Security API (General Application) Developer Guide
Request

None.

Response

XML_InputProxyChannelList
Table 15-9 PUT /ISAPI/ContentMgmt/InputProxy/channels

Method

PUT

Description

Set parameters of all digital channels.

Query

None.

Request

XML_InputProxyChannelList

Response

XML_ResponseStatus
Table 15-10 POST /ISAPI/ContentMgmt/InputProxy/channels

Method

POST

Description

Add a digital channel.

Query

None.

Request

XML_InputProxyChannel

Response

XML_ResponseStatus

15.2.8 /ISAPI/ContentMgmt/InputProxy/channels/<ID>
Operations about management of a specific digital channel.

Request URL Definition
Table 15-11 GET /ISAPI/ContentMgmt/InputProxy/channels/<ID>
Method

GET

Description

Get parameter of a specific digital channel.

Query

None.

Request

None.

Response

Succeeded: XML_InputProxyChannel
Failed: XML_ResponseStatus
Table 15-12 PUT /ISAPI/ContentMgmt/InputProxy/channels/<ID>

Method

PUT

Description

Set parameters of a specific digital channel.

Query

None.

120

Intelligent Security API (General Application) Developer Guide
Request

XML_InputProxyChannel

Response

XML_ResponseStatus
Table 15-13 DELETE /ISAPI/ContentMgmt/InputProxy/channels/<ID>

Method

DELETE

Description

Delete a specific digital channel.

Query

None.

Request

None.

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the digital channel ID.

15.2.9 /ISAPI/ContentMgmt/InputProxy/channels/<ID>/capabilities
Get management capability of a specific digital channel.

Request URL Definition
Table 15-14 GET /ISAPI/ContentMgmt/InputProxy/channels/<ID>/capabilities
Method

GET

Description

Get management capability of a specific digital channel.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_InputProxyChannel
Failed: XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the digital channel ID.

15.2.10 /ISAPI/ContentMgmt/InputProxy/channels/<ID>/chanCtrl
Get or set control parameters of a specific channel.

121

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-15 GET /ISAPI/ContentMgmt/InputProxy/channels/<ID>/chanCtrl
Method

GET

Description

Get control parameters of a specific channel.

Query

None.

Request

None.

Response

Succeeded: XML_ChanCtrl
Failed: XML_ResponseStatus
Table 15-16 PUT /ISAPI/ContentMgmt/InputProxy/channels/<ID>/chanCtrl

Method

PUT

Description

Set control parameters of a specific channel.

Query

None.

Request

XML_ChanCtrl

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel ID.

15.2.11 /ISAPI/ContentMgmt/InputProxy/channels/<ID>/portMapParam
Check if port mapping is required for connecting to camera.

Request URL Definition
Table 15-17 POST /ISAPI/ContentMgmt/InputProxy/channels/<ID>/portMapParam
Method

POST

Description

Check if port mapping is required for connecting to camera according
to the IP address of terminal.

Query

None.

Request

XML_PortMapParam

Response

Succeeded: XML_PortMapParamRet
Failed: XML_ResponseStatus

122

Intelligent Security API (General Application) Developer Guide
Remarks
The <ID> in the request URL refers to the channel ID.

15.2.12 /ISAPI/ContentMgmt/InputProxy/channels/<ID>/reboot
Reboot a specific channel.

Request URL Definition
Table 15-18 GET /ISAPI/ContentMgmt/InputProxy/channels/<ID>/reboot
Method

GET

Description

Reboot a specific channel.

Query

None.

Request

None.

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel ID.

15.2.13 /ISAPI/ContentMgmt/InputProxy/channels/<ID>/status
Get status of a specific digital channel.

Request URL Definition
Table 15-19 GET /ISAPI/ContentMgmt/InputProxy/channels/<ID>/status
Method

GET

Description

Get status of a specific digital channel.

Query

None.

Request

None.

Response

XML_InputProxyChannelStatus

Remarks
The <ID> in the request URL refers to the digital channel ID.

123

Intelligent Security API (General Application) Developer Guide
15.2.14 /ISAPI/ContentMgmt/InputProxy/channels/activate
Activate the network devices.

Request URL Definition
Table 15-20 PUT /ISAPI/ContentMgmt/InputProxy/channels/activate
Method

PUT

Description

Activate the network devices.

Query

None

Request

XML_VideoSourceActivation

Response

XML_ResponseStatus

15.2.15 /ISAPI/ContentMgmt/InputProxy/channels/activate/capabilities
Get capability of activating network devices.

Request URL Definition
Table 15-21 GET /ISAPI/ContentMgmt/InputProxy/channels/activate/capabilities
Method

GET

Description

Get capability of activating network devices.

Query

None

Request

None.

Response

Succeeded: XML_VideoSourceActivationCapability
Failed: XML_ResponseStatus

15.2.16 /ISAPI/ContentMgmt/InputProxy/channels/capabilities
Get management capability of all digital channels.

Request URL Definition
Table 15-22 GET /ISAPI/ContentMgmt/InputProxy/channels/capabilities
Method

GET

Description

Get management capability of all digital channels.

Query

None.

124

Intelligent Security API (General Application) Developer Guide
Request

None.

Response

15.2.17 /ISAPI/ContentMgmt/InputProxy/channels/status
Get status of all digital channels.

Request URL Definition
Table 15-23 GET /ISAPI/ContentMgmt/InputProxy/channels/status
Method

GET

Description

Get status of all digital channels.

Query

None.

Request

None.

Response

XML_InputProxyChannelStatusList

15.2.18 /ISAPI/ContentMgmt/InputProxy/search
Search for network cameras in the LAN (Local Area Network) that can be connected.

Request URL Definition
Table 15-24 GET /ISAPI/ContentMgmt/InputProxy/search
Method

GET

Description

Search for network cameras in the LAN (Local Area Network) that can
be connected.

Query

None.

Request

None.

Response

Succeeded: XML_VideoSourceList
Failed: XML_ResponseStatus

15.2.19 /ISAPI/ContentMgmt/InputProxy/sourceCapability
Get supported number of digital channels.

125

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-25 POST /ISAPI/ContentMgmt/InputProxy/sourceCapability
Method

POST

Description

Get supported number of digital channels.

Query

None.

Request

XML_sourceDescriptor

Response

XML_sourceCapability

15.2.20 /ISAPI/ContentMgmt/IOProxy/inputs
Operations about the alarm input configuration of all digital channels.

Request URL Definition
Table 15-26 GET /ISAPI/ContentMgmt/IOProxy/inputs
Method

GET

Description

Get the alarm input parameters of all digital channels.

Query

None.

Request

None.

Response

Succeeded: XML_IOProxyInputPortList
Failed: XML_ResponseStatus
Table 15-27 PUT /ISAPI/ContentMgmt/IOProxy/inputs

Method

PUT

Description

Set the alarm input parameters of all digital channels.

Query

None.

Request

XML_IOProxyInputPortList

Response

XML_ResponseStatus
Table 15-28 POST /ISAPI/ContentMgmt/IOProxy/inputs

Method

POST

Description

Add the alarm input configuration of a specific digital channel.

Query

None.

126

Intelligent Security API (General Application) Developer Guide
Request

XML_IOProxyInputPort

Response

XML_ResponseStatus

15.2.21 /ISAPI/ContentMgmt/IOProxy/inputs/<ID>
Operations about the alarm input configuration of a specific digital channel.

Request URL Definition
Table 15-29 GET /ISAPI/ContentMgmt/IOProxy/inputs/<ID>
Method

GET

Description

Get the alarm input parameters of a specific digital channel.

Query

None.

Request

None.

Response

Succeeded: XML_IOProxyInputPort
Failed: XML_ResponseStatus
Table 15-30 PUT /ISAPI/ContentMgmt/IOProxy/inputs/<ID>

Method

PUT

Description

Set the alarm input parameters of a specific digital channel.

Query

None.

Request

XML_IOProxyInputPort

Response

XML_ResponseStatus
Table 15-31 DELETE /ISAPI/ContentMgmt/IOProxy/inputs/<ID>

Method

DELETE

Description

Delete the alarm input configuration of a specific digital channel.

Query

None.

Request

None.

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the digital channel No.

127

Intelligent Security API (General Application) Developer Guide
15.2.22 /ISAPI/ContentMgmt/IOProxy/inputs/<ID>/status
Get the alarm input status of a specific digital channel.

Request URL Definition
Table 15-32 GET /ISAPI/ContentMgmt/IOProxy/inputs/<ID>/status
Method

GET

Description

Get the alarm input status of a specific digital channel.

Query

None.

Request

None.

Response

Succeeded: XML_IOPortStatus
Failed: XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the digital channel No.

15.2.23 /ISAPI/ContentMgmt/IOProxy/outputs
Operations about the alarm output configuration of all digital channels.

Request URL Definition
Table 15-33 GET /ISAPI/ContentMgmt/IOProxy/outputs
Method

GET

Description

Get the alarm output parameters of all digital channels.

Query

None.

Request

None.

Response

Succeeded: XML_IOProxyOutputPortList
Failed: XML_ResponseStatus
Table 15-34 PUT /ISAPI/ContentMgmt/IOProxy/outputs

Method

PUT

Description

Set the alarm output parameters of all digital channels.

Query

None.

128

Intelligent Security API (General Application) Developer Guide
Request

XML_IOProxyOutputPortList

Response

XML_ResponseStatus
Table 15-35 POST /ISAPI/ContentMgmt/IOProxy/outputs

Method

POST

Description

Add the alarm output configuration of a specific digital channel.

Query

None.

Request

XML_IOProxyOutputPort

Response

XML_ResponseStatus

15.2.24 /ISAPI/ContentMgmt/IOProxy/outputs/<ID>
Operations about the alarm output configuration of a specific digital channel.

Request URL Definition
Table 15-36 GET /ISAPI/ContentMgmt/IOProxy/outputs/<ID>
Method

GET

Description

Get the alarm output parameters of a specific digital channel.

Query

None.

Request

None.

Response

Succeeded: XML_IOProxyOutputPort
Failed: XML_ResponseStatus
Table 15-37 PUT /ISAPI/ContentMgmt/IOProxy/outputs/<ID>

Method

PUT

Description

Set the alarm output parameters of a specific digital channel.

Query

None.

Request

XML_IOProxyOutputPort

Response

XML_ResponseStatus
Table 15-38 DELETE /ISAPI/ContentMgmt/IOProxy/outputs/<ID>

Method

DELETE

Description

Delete the alarm output configuration of a specific digital channel.

Query

None.

129

Intelligent Security API (General Application) Developer Guide
Request

None.

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the digital channel No.

15.2.25 /ISAPI/ContentMgmt/IOProxy/outputs/<ID>/status
Get the alarm output status of a specific digital channel.

Request URL Definition
Table 15-39 GET /ISAPI/ContentMgmt/IOProxy/outputs/<ID>/status
Method

GET

Description

Get the alarm output status of a specific digital channel.

Query

None.

Request

None.

Response

Succeeded: XML_IOPortStatus
Failed: XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the digital channel No.

15.2.26 /ISAPI/ContentMgmt/IOProxy/outputs/<ID>/trigger
Trigger alarm output of a specific digital channel.

Request URL Definition
Table 15-40 PUT /ISAPI/ContentMgmt/IOProxy/outputs/<ID>/trigger
Method

PUT

Description

Trigger alarm output of a specific digital channel.

Query

None.

Request

XML_IOPortData

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the digital channel No.

130

Intelligent Security API (General Application) Developer Guide
15.2.27 /ISAPI/ContentMgmt/logConfig
Get or set log parameters.

Request URL Definition
Table 15-41 GET /ISAPI/ContentMgmt/logConfig
Method

GET

Description

Get log parameters.

Query

None.

Request

None.

Response

Succeeded: XML_LogConfig
Failed: XML_ResponseStatus
Table 15-42 PUT /ISAPI/ContentMgmt/logConfig

Method

PUT

Description

Set log parameters.

Query

None.

Request

XML_LogConfig

Response

XML_ResponseStatus

15.2.28 /ISAPI/ContentMgmt/logConfig/capabilities
Get log configuration capability.

Request URL Definition
Table 15-43 GET /ISAPI/ContentMgmt/logConfig/capabilities
Method

GET

Description

Get log configuration capability.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_LogConfig
Failed: XML_ResponseStatus

131

Intelligent Security API (General Application) Developer Guide
15.2.29 /ISAPI/ContentMgmt/logSearch
Search for log files.

Request URL Definition
Table 15-44 POST /ISAPI/ContentMgmt/logSearch
Method

POST

Description

Search for log files.

Query

None.

Request

XML_CMSearchDescription

Response

Succeeded: XML_CMSearchResult
Failed: XML_ResponseStatus

15.2.30 /ISAPI/ContentMgmt/logSearch/dataPackage
Export device log files.

Request URL Definition
Table 15-45 POST /ISAPI/ContentMgmt/logSearch/dataPackage
Method

POST

Description

Export device log files.

Query

None.

Request

XML_CMSearchDataPackage

Response

Succeeded: XML_CMSearchDataPackageResult
Failed: XML_ResponseStatus

15.2.31 /ISAPI/ContentMgmt/record/control/manualRefresh/channels/<ID>
Refresh the video mode manually before playback.

Request URL Definition
Table 15-46 PUT /ISAPI/ContentMgmt/record/control/manualRefresh/channels/<ID>
Method

PUT

Description

Refresh the video mode manually before playback.

132

Intelligent Security API (General Application) Developer Guide
Query

None.

Request

None.

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel No.

15.2.32 /ISAPI/ContentMgmt/record/control/manual/start/tracks/<ID>
Start manual recording.

Request URL Definition
Table 15-47 POST /ISAPI/ContentMgmt/record/control/manual/start/tracks/<ID>
Method

POST

Description

Start manual recording.

Query

None.

Request

None.

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the recording channel ID.

15.2.33 /ISAPI/ContentMgmt/record/control/manual/stop/tracks/<ID>
Stop manual recording of a specific channel.

Request URL Definition
Table 15-48 POST /ISAPI/ContentMgmt/record/control/manual/stop/tracks/<ID>
Method

POST

Description

Stop manual recording of a specific channel.

Query

None.

Request

None.

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the recording channel ID.

133

Intelligent Security API (General Application) Developer Guide
15.2.34 /ISAPI/ContentMgmt/record/profile
Get video track type.

Request URL Definition
Table 15-49 GET /ISAPI/ContentMgmt/record/profile
Method

GET

Description

Get video track type.

Query

None.

Request

None.

Response

Succeeded: XML_CMSRecordProfile
Failed: XML_ResponseStatus

15.2.35 /ISAPI/ContentMgmt/record/storageMounts
Set recording storage parameters.

Request URL Definition
Table 15-50 PUT /ISAPI/ContentMgmt/record/storageMounts
Method

PUT

Description

Set recording storage parameters, including root directory, size, and
so on.

Query

None.

Request

XML_MountList

Response

XML_ResponseStatus

15.2.36 /ISAPI/ContentMgmt/record/tracks
Operations about recording schedule configuration.

Request URL Definition
Table 15-51 GET /ISAPI/ContentMgmt/record/tracks
Method

GET

Description

Get all recording schedules.

134

Intelligent Security API (General Application) Developer Guide
Query

None.

Request

None.

Response

Succeeded: XML_TrackList
Failed: XML_ResponseStatus
Table 15-52 PUT /ISAPI/ContentMgmt/record/tracks

Method

PUT

Description

Set all recording schedules.

Query

None.

Request

XML_TrackList

Response

XML_ResponseStatus
Table 15-53 POST /ISAPI/ContentMgmt/record/tracks

Method

POST

Description

Add a recording schedule.

Query

None.

Request

XML_Track

Response

XML_ResponseStatus

15.2.37 /ISAPI/ContentMgmt/record/tracks/<ID>
Operations about a recording schedule.

Request URL Definition
Table 15-54 GET /ISAPI/ContentMgmt/record/tracks/<ID>
Method

GET

Description

Get a recording schedule.

Query

None.

Request

None.

Response

Succeeded: XML_Track
Failed: XML_ResponseStatus

135

Intelligent Security API (General Application) Developer Guide
Table 15-55 PUT /ISAPI/ContentMgmt/record/tracks/<ID>
Method

PUT

Description

Set a recording schedule.

Query

None.

Request

XML_Track

Response

XML_ResponseStatus
Table 15-56 DELETE /ISAPI/ContentMgmt/record/tracks/<ID>

Method

DELETE

Description

Delete a recording schedule.

Query

None.

Request

None.

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the recording schedule ID.

15.2.38 /ISAPI/ContentMgmt/record/tracks/<ID>/capabilities
Get the configuration capability of the recording schedule.

Request URL Definition
Table 15-57 GET /ISAPI/ContentMgmt/record/tracks/<ID>/capabilities
Method

GET

Description

Get the configuration capability of the recording schedule.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_Track
Failed: XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the recording schedule ID.

136

Intelligent Security API (General Application) Developer Guide
15.2.39 /ISAPI/ContentMgmt/record/tracks/<ID>/dailyDistribution
Search recorded video files by date.

Request URL Definition
Table 15-58 POST /ISAPI/ContentMgmt/record/tracks/<ID>/dailyDistribution
Method

POST

Description

Search recorded video files by date.

Query

None.

Request

XML_trackDailyParam

Response

XML_trackDailyDistribution

Remarks
The <ID> in the request URL refers to the recording channel ID.

15.2.40 /ISAPI/ContentMgmt/search
Search for specified resources.

Request URL Definition
Table 15-59 GET or POST /ISAPI/ContentMgmt/search
Method

GET or POST

Description

Search for specific resources.

Query

None.

Request

XML_CMSearchDescription

Response

Succeeded: XML_CMSearchResult
Failed: XML_ResponseStatus

Example
Sample Code for Searching Video Files Stored in Device
POST /ISAPI/ContentMgmt/search HTTP/1.1
Host: 10.17.132.49
Content-Length: 493
Connection: Keep-Alive
Authorization: Digest username="admin",
realm="DS-2CD2F12FWD-IWS",
nonce="4e7a46474e305a454d5445365a4445314e6a51345a54413d",
uri="/ISAPI/ContentMgmt/search",

137

Intelligent Security API (General Application) Developer Guide
cnonce="ce22590094d2f2bb352fc3c4cd2a1ca3",
nc=00000019,
response="ad6f2c23636f25c6db5911a113375ea9",
qop="auth"
<?xml version="1.0" encoding="utf-8"?>
<CMSearchDescription>
<searchID>C77384AD-66A0-0001-E7C2-1151F04F90B0</searchID>
<trackIDList>
<trackID>101</trackID>
</trackIDList>
<timeSpanList>
<timeSpan>
<startTime>2017-03-13T16:00:00Z</startTime>
<endTime>2017-03-16T15:59:59Z</endTime>
</timeSpan>
</timeSpanList>
<maxResults>40</maxResults>
<searchResultPostion>0</searchResultPostion>
<metadataList>
<metadataDescriptor>//recordType.meta.std-cgi.com</metadataDescriptor>
</metadataList>
</CMSearchDescription>
HTTP/1.1 200 OK
Date: Wed, 15 Mar 2017 09:40:02 GMT
Connection: close
Content-Length: 1649
Content-Type: application/xml
<?xml version="1.0" encoding="UTF-8"?>
<CMSearchResult version="2.0" xmlns="http://www.isapi.com/ver20/XMLSchema">
<searchID>{C77384AD-66A0-0001-E7C2-1151F04F90B0}</searchID>
<responseStatus>true</responseStatus>
<responseStatusStrg>OK</responseStatusStrg>
<numOfMatches>29</numOfMatches>
<matchList>
<searchMatchItem>
<sourceID>{0000000000-0000-0000-0000-000000000000}</sourceID>
<trackID>101</trackID>
<timeSpan>
<startTime>2017-03-14T10:32:01Z</startTime>
<endTime>2017-03-14T10:40:42Z</endTime>
</timeSpan>
<mediaSegmentDescriptor>
<contentType>video</contentType>
<codecType>H.264-BP</codecType>
<playbackURI>rtsp://10.17.132.49/Streaming/tracks/101/?
starttime=20170314T103201Z&amp;endtime=20170314T104042Z&amp;name=ch01_08000000016000000&amp;size
=260358144</playbackURI>
</mediaSegmentDescriptor>
<metadataMatches>

138

Intelligent Security API (General Application) Developer Guide
<metadataDescriptor>recordType.meta.isapi.com/timing</metadataDescriptor>
</metadataMatches>
</searchMatchItem>
<searchMatchItem>
<sourceID>{0000000000-0000-0000-0000-000000000000}</sourceID>
<trackID>101</trackID>
<timeSpan>
<startTime>2017-03-14T10:40:42Z</startTime>
<endTime>2017-03-14T10:53:14Z</endTime>
</timeSpan>
<mediaSegmentDescriptor>
<contentType>video</contentType>
<codecType>H.264-BP</codecType>
<playbackURI>rtsp://10.17.132.49/Streaming/tracks/101/?
starttime=20170314T104042Z&amp;endtime=20170314T105314Z&amp;name=ch01_08000000017000000&amp;size
=260603904</playbackURI>
</mediaSegmentDescriptor>
<metadataMatches>
<metadataDescriptor>recordType.meta.isapi.com/timing</metadataDescriptor>
</metadataMatches>
</searchMatchItem>
</matchList>
</CMSearchResult>

15.2.41 /ISAPI/ContentMgmt/search/profile
Get video search conditions.

Request URL Definition
Table 15-60 GET /ISAPI/ContentMgmt/search/profile
Method

GET

Description

Get video search conditions.

Query

None.

Request

None.

Response

Succeeded: XML_CMSearchProfile
Failed: XML_ResponseStatus

15.2.42 /ISAPI/ContentMgmt/security/logSearch
Search for security logs.

139

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-61 POST /ISAPI/ContentMgmt/security/logSearch
Method

POST

Description

Search for security logs.

Query

None.

Request

XML_CMSearchDescription

Response

Succeeded: XML_CMSearchResult
Failed: XML_ResponseStatus

15.2.43 /ISAPI/ContentMgmt/SmartSearch
Search for video files by VCA event.

Request URL Definition
Table 15-62 POST /ISAPI/ContentMgmt/SmartSearch
Method

POST

Description

Search for video files by VCA event.

Query

None.

Request

XML_SmartSearchDescription

Response

XML_SmartSearchResult

15.2.44 /ISAPI/ContentMgmt/SmartSearch/capabilities
Get capability of searching videos by VCA event.

Request URL Definition
Table 15-63 GET /ISAPI/ContentMgmt/SmartSearch/capabilities
Method

GET

Description

Get capability of searching videos by VCA event.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_SmartSearchDescription

140

Intelligent Security API (General Application) Developer Guide
Failed: XML_ResponseStatus

15.2.45 /ISAPI/ContentMgmt/Storage/ExtraInfo
Operations about the configuration for storing additional information.

Request URL Definition
Table 15-64 GET /ISAPI/ContentMgmt/Storage/ExtraInfo
Method

GET

Description

Get the parameters for storing additional information.

Query

None.

Request

None.

Response

Succeeded: XML_ExtraInfo
Failed: XML_ResponseStatus
Table 15-65 PUT /ISAPI/ContentMgmt/Storage/ExtraInfo

Method

PUT

Description

Set the parameters for storing additional information.

Query

None.

Request

XML_ExtraInfo

Response

XML_ResponseStatus

15.2.46 /ISAPI/ContentMgmt/Storage/ExtraInfo/capabilities
Get the capability of storing additional information.

Request URL Definition
Table 15-66 GET /ISAPI/ContentMgmt/Storage/ExtraInfo/capabilities
Method

GET

Description

Get the capability of storing additional information.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_ExtraInfo
Failed: XML_ResponseStatus

141

Intelligent Security API (General Application) Developer Guide
15.2.47 /ISAPI/ContentMgmt/Storage/hdd
Get configuration parameters of all HDDs.

Request URL Definition
Table 15-67 GET /ISAPI/ContentMgmt/Storage/hdd
Method

GET

Description

Get configuration parameters of all HDDs.

Query

None.

Request

None.

Response

Succeeded: XML_hddList
Failed: XML_ResponseStatus

15.2.48 /ISAPI/ContentMgmt/Storage/hdd/<ID>
Get and set parameters for a specific HDD.

Request URL Definition
Table 15-68 GET /ISAPI/ContentMgmt/Storage/hdd/<ID>
Method

GET

Description

Get parameters for a specific HDD.

Query

None.

Request

None.

Response

Succeeded: XML_hdd
Failed: XML_ResponseStatus
Table 15-69 PUT /ISAPI/ContentMgmt/Storage/hdd/<ID>

Method

PUT

Description

Set parameters for a specific HDD.

Query

None.

Request

XML_hdd

Response

XML_ResponseStatus

142

Intelligent Security API (General Application) Developer Guide
Remarks
The <ID> in the request URL refers to the HDD ID.

15.2.49 /ISAPI/ContentMgmt/Storage/hdd/<ID>/BadSectorsTest/pause
Pause checking bad sectors of a HDD.

Request URL Definition
Table 15-70 PUT /ISAPI/ContentMgmt/Storage/hdd/<ID>/BadSectorsTest/pause
Method

PUT

Description

Pause checking bad sectors of a HDD.

Query

None.

Request

None.

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the HDD No.

15.2.50 /ISAPI/ContentMgmt/Storage/hdd/<ID>/BadSectorsTest/resume
Resume checking dad sectors of a HDD.

Request URL Definition
Table 15-71 PUT /ISAPI/ContentMgmt/Storage/hdd/<ID>/BadSectorsTest/resume
Method

PUT

Description

Resume checking dad sectors of a HDD.

Query

None.

Request

None.

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the HDD No.

143

Intelligent Security API (General Application) Developer Guide
15.2.51 /ISAPI/ContentMgmt/Storage/hdd/<ID>/BadSectorsTest/start
Start checking bad sectors of a HDD.

Request URL Definition
Table 15-72 PUT /ISAPI/ContentMgmt/Storage/hdd/<ID>/BadSectorsTest/start
Method

PUT

Description

Start checking bad sectors of a HDD.

Query

None.

Request

XML_BadSectorsTest

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the HDD No.

15.2.52 /ISAPI/ContentMgmt/Storage/hdd/<ID>/BadSectorsTest/status
Get bad sector checking status of a HDD.

Request URL Definition
Table 15-73 GET /ISAPI/ContentMgmt/Storage/hdd/<ID>/BadSectorsTest/status
Method

GET

Description

Get bad sector checking status of a HDD.

Query

None.

Request

None.

Response

Succeeded: XML_BadSectorsTestStatus
Failed: XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the HDD No.

15.2.53 /ISAPI/ContentMgmt/Storage/hdd/<ID>/BadSectorsTest/stop
Stop checking bad sectors of a HDD.

144

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-74 PUT /ISAPI/ContentMgmt/Storage/hdd/<ID>/BadSectorsTest/stop
Method

PUT

Description

Stop checking bad sectors of a HDD.

Query

None.

Request

None.

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the HDD No.

15.2.54 /ISAPI/ContentMgmt/Storage/hdd/<ID>/encryptFormat?format=json
Format an encrypted HDD.

Request URL Definition
Table 15-75 PUT /ISAPI/ContentMgmt/Storage/hdd/<ID>/encryptFormat?format=json
Method

PUT

Description

Format an encrypted HDD.

Query

security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.
format: determine the format of request or response message.

Request

JSON_EncryptFormat

Response

JSON_ResponseStatus

Remarks
The <ID> in the request URL refers to the HDD ID.

145

Intelligent Security API (General Application) Developer Guide
15.2.55 /ISAPI/ContentMgmt/Storage/hdd/<ID>/encryptVerfy?format=json
Verify the HDD encryption password.

Request URL Definition
Table 15-76 PUT /ISAPI/ContentMgmt/Storage/hdd/<ID>/encryptVerfy?format=json
Method

PUT

Description

Verify the HDD encryption password.

Query

security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.
format: determine the format of request or response message.

Request

JSON_EncryptVerfy

Response

JSON_ResponseStatus

Remarks
The <ID> in the request URL refers to the HDD ID.

15.2.56 /ISAPI/ContentMgmt/Storage/hdd/<ID>/formatStatus
Get the formatting status of a specific HDD.

Request URL Definition
Table 15-77 GET /ISAPI/ContentMgmt/Storage/hdd/<ID>/formatStatus
Method

GET

Description

Get the formatting status of a specific HDD.

Query

None.

Request

None.

Response

Succeeded: XML_formatStatus
Failed: XML_ResponseStatus

146

Intelligent Security API (General Application) Developer Guide
Remarks
The <ID> in the request URL refers to the HDD ID.

15.2.57 /ISAPI/ContentMgmt/Storage/hdd/<ID>/format?formatType=
Format a specific HDD according to the specified formatting type. This URL is only available for SD
card.

Request URL Definition
Table 15-78 PUT /ISAPI/ContentMgmt/Storage/hdd/<ID>/format?formatType=
Method

PUT

Description

Format a specific HDD according to the specified formatting type.

Query

formatType: formatting type, the available values are "EXT4" and
"FAT32". But if you adopt the default formatting type "FAT32", this
query parameter is not required in the URL.

Request

None.

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the HDD ID.

15.2.58 /ISAPI/ContentMgmt/Storage/hdd/SMARTTest/config
Operations about the configuration of HDD SMART status detection.

Request URL Definition
Table 15-79 GET /ISAPI/ContentMgmt/Storage/hdd/SMARTTest/config
Method

GET

Description

Get the parameters of HDD SMART status detection.

Query

None.

Request

None.

Response

Succeeded: XML_SMARTTestConfig
Failed: XML_ResponseStatus

147

Intelligent Security API (General Application) Developer Guide
Table 15-80 PUT /ISAPI/ContentMgmt/Storage/hdd/SMARTTest/config
Method

PUT

Description

Set the parameters of HDD SMART status detection.

Query

None.

Request

XML_SMARTTestConfig

Response

XML_ResponseStatus

15.2.59 /ISAPI/ContentMgmt/Storage/hdd/<ID>/SMARTTest/start
Start checking HDD status.

Request URL Definition
Table 15-81 PUT /ISAPI/ContentMgmt/Storage/hdd/<ID>/SMARTTest/start
Method

PUT

Description

Start checking HDD status.

Query

None.

Request

XML_HDDSMARTTest

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the HDD No.

15.2.60 /ISAPI/ContentMgmt/Storage/hdd/<ID>/SMARTTest/status
Get HDD checking status.

Request URL Definition
Table 15-82 GET /ISAPI/ContentMgmt/Storage/hdd/<ID>/SMARTTest/status
Method

GET

Description

Get HDD checking status.

Query

None.

Request

None.

Response

Succeeded: XML_SMARTTestStatus
Failed: XML_ResponseStatus

148

Intelligent Security API (General Application) Developer Guide
Remarks
The <ID> in the request URL refers to the HDD No.

15.2.61 /ISAPI/ContentMgmt/Storage/hdd/capabilities
Get HDD management capability.

Request URL Definition
Table 15-83 GET /ISAPI/ContentMgmt/Storage/hdd/capabilities
Method

GET

Description

Get HDD management capability.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_hddList
Failed: XML_ResponseStatus

15.2.62 /ISAPI/ContentMgmt/Storage/hdd/format
Format all HDDs.

Request URL Definition
Table 15-84 PUT /ISAPI/ContentMgmt/Storage/hdd/format
Method

PUT

Description

Format all HDDs.

Query

None.

Request

None.

Response

XML_ResponseStatus

15.2.63 /ISAPI/ContentMgmt/Storage/hdd/specifyHddFormat?format=json
Specify multiple HDDs to be formatted.

149

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-85 PUT /ISAPI/ContentMgmt/Storage/hdd/specifyHddFormat?format=json
Method

PUT

Description

Specify multiple HDDs to format.

Query

format: determine the format of request or response message.

Request

JSON_HddFormatList

Response

JSON_ResponseStatus

15.2.64 /ISAPI/ContentMgmt/Storage/quota
Get parameters of all HDD quotas.

Request URL Definition
Table 15-86 GET /ISAPI/ContentMgmt/Storage/quota
Method

GET

Description

Get parameters of all HDD quotas.

Query

None.

Request

None.

Response

Succeeded: XML_diskQuota
Failed: XML_ResponseStatus

15.3 /ISAPI/Event
15.3.1 /ISAPI/Event/capabilities
Get the device event capability set.

Request URL Definition
Table 15-87 GET /ISAPI/Event/capabilities
Method

GET

Description

Get the device event capability set.

Query

None.

150

Intelligent Security API (General Application) Developer Guide
Request

None.

Response

Succeeded: XML_EventCap
Failed: XML_ResponseStatus

15.3.2 /ISAPI/Event/channels/<ID>/capabilities
Get event capabilities supported by the channel.

Request URL Definition
Table 15-88 GET /ISAPI/Event/channels/<ID>/capabilities
Method

GET

Description

Get event capabilities supported by the channel.

Query

None.

Request

None.

Response

Succeeded: XML_ChannelEventCap
Failed: XML_ResponseStatus

Remarks
The <ID> in the URL refers to the channel ID.

15.3.3 /ISAPI/Event/IOT/channels/<ID>/capabilities?format=json
Get the event capabilities supported by IoT device channel.

Request URL Definition
Table 15-89 GET /ISAPI/Event/IOT/channels/<ID>/capabilities?format=json
Method

GET

Description

Get the event capabilities supported by IoT device channel.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_IOTChannelEventCap
Filed: JSON_ResponseStatus

151

Intelligent Security API (General Application) Developer Guide
15.3.4 /ISAPI/Event/notification/alertStream
Get the uploaded heartbeat or alarm/event information.

Request URL Definition
Table 15-90 GET /ISAPI/Event/notification/alertStream
Method

GET

Description

Get the heartbeat or uploaded alarm/event information.

Query

None.

Request

None.

Response

Option 1: XML_EventNotificationAlert_AlarmEventInfo or
XML_EventNotificationAlert_HeartbeatInfo
Option 2: JSON_EventNotificationAlert_Alarm/EventInfo
Note
The messages here only show the format of alarm/event
information to be uploaded. For details, refer to the corresponding
alarm/event configuration chapters.

Remarks
• After calling this URL, a persistent connection is set up between the device and the platform, and
the alarm or event information will be uploaded from device continuously once the alarm is
triggered or event occurred.
• You can check if the XML response message is the heartbeat information according to the nodes
<eventType> and <eventState>. If the values of these two node are "videoloss" and "inactive",
respectively, the returned message is the heartbeat information.

15.3.5 /ISAPI/Event/notification/httpHosts
Get or set parameters of all listening servers, add a listening server, and delete all listening servers.

Request URL Definition
Table 15-91 GET /ISAPI/Event/notification/httpHosts
Method

GET

Description

Get parameters of all listening servers.

152

Intelligent Security API (General Application) Developer Guide
Query

security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.

Request

None.

Response

Succeeded: XML_HttpHostNotificationList
Failed: XML_ResponseStatus
Table 15-92 PUT /ISAPI/Event/notification/httpHosts

Method

PUT

Description

Set parameters of all listening servers.

Query

security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.

Request

XML_HttpHostNotificationList

Response

XML_ResponseStatus
Table 15-93 POST /ISAPI/Event/notification/httpHosts

Method

POST

Description

Add a listening server.

Query

security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.

Request

XML_HttpHostNotification

Response

XML_ResponseStatus
Table 15-94 DELETE /ISAPI/Event/notification/httpHosts

Method

DELETE

Description

Delete all listening servers.

153

Intelligent Security API (General Application) Developer Guide
Query

None.

Request

None.

Response

XML_ResponseStatus

15.3.6 /ISAPI/Event/notification/httpHosts/<ID>/test
Check if the listening server is working normally.

Request URL Definition
Table 15-95 POST /ISAPI/Event/notification/httpHosts/<ID>/test
Method

POST

Description

Check if the listening server is working normally.

Query

None.

Request

XML_HttpHostNotification

Response

Succeeded: XML_HttpHostTestResult
Failed: XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the listening server ID.

15.3.7 /ISAPI/Event/notification/httpHosts/capabilities
Get the configuration capabilities of all listening servers.

Request URL Definition
Table 15-96 GET /ISAPI/Event/notification/httpHosts/capabilities
Method

GET

Description

Get the configuration capabilities of all listening servers.

Query

None.

Request

None.

Response

Succeeded: XML_HttpHostNotificationCap
Failed: XML_ResponseStatus

154

Intelligent Security API (General Application) Developer Guide
15.3.8 /ISAPI/Event/notification/subscribeEvent
Subscribe events/alarms in arming mode.

Request URL Definition
Table 15-97 POST /ISAPI/Event/notification/subscribeEvent
Method

POST

Description

Subscribe events/alarms in arming mode.

Query

None.

Request

XML_SubscribeEvent

Response

Succeeded: XML_SubscribeEventResponse or
XML_EventNotificationAlert_SubscriptionHeartbeat or Alarm/
Event Details Message
Failed: XML_ResponseStatus

Remarks
The XML_EventNotificationAlert_SubscriptionHeartbeat and Alarm/Event Details Message is
uploaded repeatedly, and the default time interval of uploading heartbeat information is 30s.

15.3.9 /ISAPI/Event/notification/subscribeEvent/<ID>
Operations about configuring alarm/event subscription parameters.

Request URL Definition
Table 15-98 GET /ISAPI/Event/notification/subscribeEvent/<ID>
Method

GET

Description

Get alarm/event subscription parameters.

Query

None.

Request

None.

Response

Succeeded: XML_SubscribeEvent
Failed: XML_ResponseStatus
Table 15-99 PUT /ISAPI/Event/notification/subscribeEvent/<ID>

Method

PUT

Description

Set alarm/event subscription parameters.

155

Intelligent Security API (General Application) Developer Guide
Query

None.

Request

XML_SubscribeEvent

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the subscription No. which is returned by the device. After
the persistent connection for receiving events or alarms in arming mode is closed, the device will
release the resource used by the <ID>.

15.3.10 /ISAPI/Event/notification/subscribeEventCap
Get event/alarm subscription capability.

Request URL Definition
Table 15-100 GET /ISAPI/Event/notification/subscribeEventCap
Method

GET

Description

Get event/alarm subscription capability.

Query

None.

Request

None.

Response

Succeeded: XML_SubscribeEventCap
Failed: XML_ResponseStatus

15.3.11 /ISAPI/Event/notification/unSubscribeEvent
Cancel subscribing alarm/event.

Request URL Definition
Table 15-101 PUT /ISAPI/Event/notification/unSubscribeEvent
Method

PUT

Description

Cancel subscribing alarm/event.

Query

None.

Request

None.

Response

XML_ResponseStatus

156

Intelligent Security API (General Application) Developer Guide
15.3.12 /ISAPI/Event/schedules/<EventType>/<ID>
Operations about arming schedule of specified event type.

Request URL Definition
Table 15-102 GET /ISAPI/Event/schedules/<EventType>/<ID>
Method

GET

Description

Get the arming schedule of specified event type.

Query

None.

Request

None.

Response

Succeeded: XML_Schedule
Failed: XML_ResponseStatus
Table 15-103 PUT /ISAPI/Event/schedules/<EventType>/<ID>

Method

PUT

Description

Set the arming schedule of specified event type.

Query

None.

Request

XML_Schedule

Response

XML_ResponseStatus

Remarks
The <EventType> in the URL is defined as the specified event type.
The <ID> in the URL is defined as the ID of channel, which is triggered by alarm.

15.3.13 /ISAPI/Event/triggers/hdBadBlock
Operations about the linkage configuration of the HDD bad sector detection.

Request URL Definition
Table 15-104 GET /ISAPI/Event/triggers/hdBadBlock
Method

GET

Description

Get the linkage parameters of the HDD bad sector detection.

Query

None.

157

Intelligent Security API (General Application) Developer Guide
Request

None.

Response

Succeeded: XML_EventTrigger
Failed: XML_ResponseStatus
Table 15-105 PUT /ISAPI/Event/triggers/hdBadBlock

Method

PUT

Description

Set the linkage parameters of the HDD bad sector detection.

Query

None.

Request

XML_EventTrigger

Response

XML_ResponseStatus

15.3.14 /ISAPI/Event/triggers/hdImpact
Operations about the linkage configuration of the HDD impact detection.

Request URL Definition
Table 15-106 GET /ISAPI/Event/triggers/hdImpact
Method

GET

Description

Get the linkage parameters of the HDD impact detection.

Query

None.

Request

None.

Response

Succeeded: XML_EventTrigger
Failed: XML_ResponseStatus
Table 15-107 PUT /ISAPI/Event/triggers/hdImpact

Method

PUT

Description

Set the linkage parameters of the HDD impact detection.

Query

None.

Request

XML_EventTrigger

Response

XML_ResponseStatus

15.3.15 /ISAPI/Event/triggers/highHDTemperature
Operations about the linkage configuration of the HDD high temperature detection.

158

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-108 GET /ISAPI/Event/triggers/highHDTemperature
Method

GET

Description

Get the linkage parameters of the HDD high temperature detection.

Query

None.

Request

None.

Response

Succeeded: XML_EventTrigger
Failed: XML_ResponseStatus
Table 15-109 PUT /ISAPI/Event/triggers/highHDTemperature

Method

PUT

Description

Set the linkage parameters of the HDD high temperature detection.

Query

None.

Request

XML_EventTrigger

Response

XML_ResponseStatus

15.3.16 /ISAPI/Event/triggers/lowHDTemperature
Operations about the linkage configuration of the HDD low temperature detection.

Request URL Definition
Table 15-110 GET /ISAPI/Event/triggers/lowHDTemperature
Method

GET

Description

Get the linkage parameters of the HDD low temperature detection.

Query

None.

Request

None.

Response

Succeeded: XML_EventTrigger
Failed: XML_ResponseStatus
Table 15-111 PUT /ISAPI/Event/triggers/lowHDTemperature

Method

PUT

Description

Set the linkage parameters of the HDD low temperature detection.

Query

None.

159

Intelligent Security API (General Application) Developer Guide
Request

XML_EventTrigger

Response

XML_ResponseStatus

15.3.17 /ISAPI/Event/triggers/severeHDFailure
Operations about the linkage configuration of the HDD severe fault detection.

Request URL Definition
Table 15-112 GET /ISAPI/Event/triggers/severeHDFailure
Method

GET

Description

Get the linkage parameters of the HDD severe fault detection.

Query

None.

Request

None.

Response

Succeeded: XML_EventTrigger
Failed: XML_ResponseStatus
Table 15-113 PUT /ISAPI/Event/triggers/severeHDFailure

Method

PUT

Description

Set the linkage parameters of the HDD severe fault detection.

Query

None.

Request

XML_EventTrigger

Response

XML_ResponseStatus

15.3.18 /ISAPI/Event/triggers/<ID>
Operations about linkage action configuration of an alarm.

Request URL Definition
Table 15-114 GET /ISAPI/Event/triggers/<ID>
Method

GET

Description

Get the linkage actions of an alarm.

Query

None.

Request

None.

Response

Succeeded: XML_EventTrigger

160

Intelligent Security API (General Application) Developer Guide
Failed: XML_ResponseStatus
Table 15-115 PUT /ISAPI/Event/triggers/<ID>
Method

PUT

Description

Set the linkage actions for an alarm.

Query

None.

Request

XML_EventTrigger

Response

XML_ResponseStatus
Table 15-116 DELETE /ISAPI/Event/triggers/<ID>

Method

DELETE

Description

Delete the linkage actions of an alarm.

Query

None.

Request

None.

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL is defined as the No. of the alarm triggered channel. For example, if
the No. of the video input channel triggered by face capture alarm is 1, the <ID> is "faceSnap-1".

15.3.19 /ISAPI/Event/triggers/<ID>/notifications
Operations about configurations of alarm/event linkage actions.

Request URL Definition
Table 15-117 GET /ISAPI/Event/triggers/<ID>/notifications
Method

GET

Description

Get the configuration parameters of alarm/event linkage actions.

Query

None.

Request

None.

Response

Succeeded: XML_EventTriggerNotificationList
Failed: XML_ResponseStatus

161

Intelligent Security API (General Application) Developer Guide
Table 15-118 PUT /ISAPI/Event/triggers/<ID>/notifications
Method

PUT

Description

Set the configuration parameters for alarm/event linkage actions.

Query

None.

Request

XML_EventTriggerNotificationList

Response

XML_ResponseStatus
Table 15-119 DELETE /ISAPI/Event/triggers/<ID>/notifications

Method

DELETE

Description

Delete the configuration parameters of alarm/event linkage actions.

Query

None.

Request

None.

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to No. of alarm triggered channel.

15.3.20 /ISAPI/Event/triggersCap/IOT
Get the alarm linkage configuration capability of IoT device.

Request URL Definition
Table 15-120 GET /ISAPI/Event/triggersCap/IOT
Method

GET

Description

Get the alarm linkage configuration capability of IoT device.

Query

None.

Request

None.

Response

XML_IOTTriggersCap

15.3.21 /ISAPI/Event/triggers/notifications/AudioAlarm?format=json
Operations about audible warning configuration.

162

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-121 GET /ISAPI/Event/triggers/notifications/AudioAlarm?format=json
Method

GET

Description

Get parameters of audible warning.

Query

format: determine the format of request or response message.
alarmType: alarm type, including "behavior"-behavior analysis,
"thermometry"-thermometry, "dynamicFire"-​fire detection,
"smokingMode"-smoke detection.

Request

None.

Response

JSON_AudioAlarm

Note
For example, if you want to get the audible warning parameters of thermometry, the request URL
is: GET /ISAPI/Event/triggers/notifications/AudioAlarm?format=json&alarmType=thermometry
Table 15-122 PUT /ISAPI/Event/triggers/notifications/AudioAlarm?format=json
Method

PUT

Description

Set parameters of audible warning.

Query

format: determine the format of request or response message.

Request

JSON_AudioAlarm

Response

JSON_ResponseStatus

15.3.22 /ISAPI/Event/triggers/notifications/AudioAlarm/capabilities?format=json
Get audible warning configuration capability.

Request URL Definition
Table 15-123 GET /ISAPI/Event/triggers/notifications/AudioAlarm/capabilities?format=json
Method

GET

Description

Get audible warning configuration capability.

Query

format: determine the format of request or response message.

Request

None.

Response

JSON_AudioAlarmCap

163

Intelligent Security API (General Application) Developer Guide
15.3.23 /ISAPI/Event/triggers/notifications/whiteLightAlarm?format=json
Operations about configuration of supplement light alarm linkage.

Request URL Definition
Table 15-124 GET /ISAPI/Event/triggers/notifications/whiteLightAlarm?format=json
Method

GET

Description

Get parameters of supplement light alarm linkage.

Query

format: determine the format of request or response message.

Request

None.

Response

JSON_WhiteLightAlarm

Table 15-125 PUT /ISAPI/Event/triggers/notifications/whiteLightAlarm?format=json
Method

PUT

Description

Set parameters of supplement light alarm linkage.

Query

format: determine the format of request or response message.

Request

JSON_WhiteLightAlarm

Response

15.3.24 /ISAPI/Event/triggers/notifications/whiteLightAlarm/capabilities?
format=json
Get the configuration capability of supplement light alarm linkage.

Request URL Definition
Table 15-126 GET /ISAPI/Event/triggers/notifications/whiteLightAlarm/capabilities?format=json
Method

GET

Description

Get the configuration capability of supplement light alarm linkage.

Query

format: determine the format of request or response message.

Request

None.

Response

JSON_WhiteLightAlarmCap

164

Intelligent Security API (General Application) Developer Guide
15.3.25 /ISAPI/Event/triggersCap
Get configuration capability of alarm linkage actions.

Request URL Definition
Table 15-127 GET /ISAPI/Event/triggersCap
Method

GET

Description

Get configuration capability of alarm linkage actions.

Query

None.

Request

None.

Response

Succeeded: XML_EventTriggersCap
Failed: XML_ResponseStatus

15.3.26 http://ipAddress:portNo/url
Listening sever sends alarm information to alarm center.

Request URL Definition
Table 15-128 POST http://ipAddress:portNo/url
Method

POST

Description

Listening sever sends alarm information to alarm center.

Query

None.

Request

None.

Response

Succeeded: XML_EventNotificationAlert_AlarmEventInfo or
JSON_EventNotificationAlert_Alarm/EventInfo
Failed: XML_ResponseStatus

Remarks
The default port number in the URL is 80, so the URL without port No. is also valid.

165

Intelligent Security API (General Application) Developer Guide

15.4 /ISAPI/Image
15.4.1 /ISAPI/Image/channels
Operations about image configuration of all channels.

Request URL Definition
Table 15-129 GET /ISAPI/Image/channels
Method

GET

Description

Get image parameters of all channels.

Query

None.

Request

None.

Response

Succeeded: XML_ImageChannellist
Failed: XML_ResponseStatus
Table 15-130 PUT /ISAPI/Image/channels

Method

GET

Description

Set image parameters of all channels.

Query

None.

Request

XML_ImageChannellist

Response

XML_ResponseStatus

15.4.2 /ISAPI/Image/channels/<ID>
Operations about image configuration of a specific channel.

Request URL Definition
Table 15-131 GET /ISAPI/Image/channels/<ID>
Method

GET

Description

Get image parameters of a specific channel.

Query

None.

Request

None.

Response

Succeeded: XML_ImageChannel

166

Intelligent Security API (General Application) Developer Guide
Failed: XML_ResponseStatus
Table 15-132 PUT /ISAPI/Image/channels/<ID>
Method

PUT

Description

Set image parameters of a specific channel.

Query

None.

Request

XML_ImageChannel

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel ID.

15.4.3 /ISAPI/Image/channels/<ID>/BLC
Operations about BLC (Blacklist Compensation) configuration of a specific channel.

Request URL Definition
Table 15-133 GET /ISAPI/Image/channels/<ID>/BLC
Method

GET

Description

Get BLC (Blacklist Compensation) parameters of a specific channel.

Query

None.

Request

None.

Response

Succeeded: XML_BLC
Failed: XML_ResponseStatus
Table 15-134 PUT /ISAPI/Image/channels/<ID>/BLC

Method

PUT

Description

Set BLC (Blacklist Compensation) parameters of a specific channel.

Query

None.

Request

XML_BLC

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel ID.

167

Intelligent Security API (General Application) Developer Guide
15.4.4 /ISAPI/Image/channels/<ID>/capabilities
Get image configuration capability of a specific channel.

Request URL Definition
Table 15-135 GET /ISAPI/Image/channels/<ID>/capabilities
Method

GET

Description

Get image configuration capability of a specific channel.

Query

None.

Request

None.

Response

XML_Cap_ImageChannel

Remarks
The <ID> in the request URL refers to the channel No.

15.4.5 /ISAPI/Image/channels/<ID>/capturemode
Operations about video input mode configuration of a specific channel.

Request URL Definition
Table 15-136 GET /ISAPI/Image/channels/<ID>/capturemode
Method

GET

Description

Get video input modes of a specific channel.

Query

None.

Request

None.

Response

Succeeded: XML_CaptureMode
Failed: XML_ResponseStatus
Table 15-137 PUT /ISAPI/Image/channels/<ID>/capturemode

Method

PUT

Description

Set video input mode of a specific channel.

Query

None.

Request

XML_CaptureMode

Response

XML_ResponseStatus

168

Intelligent Security API (General Application) Developer Guide
Remarks
The <ID> in the request URL refers to the channel ID.

15.4.6 /ISAPI/Image/channels/<ID>/color
Operations about the image adjustment parameters of a specific channel.

Request URL Definition
Table 15-138 GET /ISAPI/Image/channels/<ID>/color
Method

GET

Description

Get the image adjustment parameters of a specific channel.

Query

None.

Request

None.

Response

Succeeded: XML_Color
Failed: XML_ResponseStatus
Table 15-139 PUT /ISAPI/Image/channels/<ID>/color

Method

PUT

Description

Set the image adjustment parameters of a specific channel.

Query

None.

Request

XML_Color

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel No.

15.4.7 /ISAPI/Image/channels/<ID>/color/capabilities
Get the image adjustment capability of a specified channel.

Request URL Definition
Table 15-140 GET /ISAPI/Image/channels/<ID>/color/capabilities
Method

GET

Description

Get the image adjustment capability of a specified channel.

Query

None.

169

Intelligent Security API (General Application) Developer Guide
Request

None.

Response

XML_Cap_Color

Remarks
The <ID> in the request URL refers to the channel No.

15.4.8 /ISAPI/Image/channels/<ID>/corridor
Operations about image rotate mode configuration of a specific channel.

Request URL Definition
Table 15-141 GET /ISAPI/Image/channels/<ID>/corridor
Method

GET

Description

Get image rotate mode of a specific channel.

Query

None.

Request

None.

Response

Succeeded: XML_corridor
Failed: XML_ResponseStatus
Table 15-142 PUT /ISAPI/Image/channels/<ID>/corridor

Method

PUT

Description

Get image rotate mode of a specific channel.

Query

None.

Request

XML_corridor

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel ID.

15.4.9 /ISAPI/Image/channels/<ID>/dehaze
Operations about defog mode configuration of a specific channel.

170

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-143 GET /ISAPI/Image/channels/<ID>/dehaze
Method

GET

Description

Get defog mode parameters of a specific channel.

Query

None.

Request

None.

Response

Succeeded: XML_Dehaze
Failed: XML_ResponseStatus
Table 15-144 PUT /ISAPI/Image/channels/<ID>/dehaze

Method

PUT

Description

Set defog mode parameters of a specific channel.

Query

None.

Request

XML_Dehaze

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel ID.

15.4.10 /ISAPI/Image/channels/<ID>/EPTZ
Get or set the e-PTZ configuration.

Request URL Definition
Table 15-145 GET /ISAPI/Image/channels/<ID>/EPTZ
Method

GET

Description

Get the e-PTZ parameters.

Query

None.

Request

None.

Response

Succeeded: XML_EPTZ
Failed: XML_ResponseStatus

171

Intelligent Security API (General Application) Developer Guide
Table 15-146 PUT /ISAPI/Image/channels/<ID>/EPTZ
Method

PUT

Description

Set the e-PTZ parameters.

Query

None.

Request

XML_EPTZ

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel No.

15.4.11 /ISAPI/Image/channels/<ID>/EPTZ/mode/capabilities?format=json
Get the capability of switching e-PTZ mode.

Request URL Definition
Table 15-147 GET /ISAPI/Image/channels/<ID>/EPTZ/mode/capabilities?format=json
Method

GET

Description

Get the capability of switching e-PTZ mode.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_EPTZModeCap
Failed: JSON_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel No.

15.4.12 /ISAPI/Image/channels/<ID>/EPTZ/mode?format=json
Get or set the configuration for switching e-PTZ mode.

Request URL Definition
Table 15-148 GET /ISAPI/Image/channels/<ID>/EPTZ/mode?format=json
Method

GET

Description

Get the parameters of switching e-PTZ mode.

Query

format: determine the format of request or response message.

172

Intelligent Security API (General Application) Developer Guide
Request

None.

Response

Succeeded: JSON_EPTZMode
Failed: JSON_ResponseStatus
Table 15-149 PUT /ISAPI/Image/channels/<ID>/EPTZ/mode?format=json

Method

PUT

Description

Set the parameters for switching e-PTZ mode.

Query

format: determine the format of request or response message.

Request

JSON_EPTZMode

Response

JSON_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel No.

15.4.13 /ISAPI/Image/channels/<ID>/exposure
Operations about exposure mode configuration of a specific channel.

Request URL Definition
Table 15-150 GET /ISAPI/Image/channels/<ID>/exposure
Method

GET

Description

Get the exposure mode of a specific channel.

Query

None.

Request

None.

Response

Succeeded: XML_Exposure
Failed: XML_ResponseStatus
Table 15-151 PUT /ISAPI/Image/channels/<ID>/exposure

Method

PUT

Description

Set the exposure mode of a specific channel.

Query

None.

Request

XML_Exposure

Response

XML_ResponseStatus

173

Intelligent Security API (General Application) Developer Guide
Remarks
The <ID> in the request URL refers to the channel ID.

15.4.14 /ISAPI/Image/channels/<ID>/focusConfiguration
Get or set the focus parameters of a specified channel.

Request URL Definition
Table 15-152 GET /ISAPI/Image/channels/<ID>/focusConfiguration
Method

GET

Description

Get the focus parameters of a specified channel.

Query

None.

Request

None.

Response

XML_FocusConfiguration
Table 15-153 PUT /ISAPI/Image/channels/<ID>/focusConfiguration

Method

PUT

Description

Set the focus parameters of a specified channel.

Query

None.

Request

XML_FocusConfiguration

Response

XML_ResponseStatus

15.4.15 /ISAPI/Image/channels/<ID>/focusConfiguration/capabilities
Get the focus configuration capability.

Request URL Definition
Table 15-154 GET /ISAPI/Image/channels/<ID>/focusConfiguration/capabilities
Method

GET

Description

Get the focus configuration capability.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_FocusConfiguration
Failed: XML_ResponseStatus

174

Intelligent Security API (General Application) Developer Guide
Remarks
The <ID> in the request URL refers to the channel No.

15.4.16 /ISAPI/Image/channels/<ID>/gain
Operations about gain configuration in exposure of a specific channel.

Request URL Definition
Table 15-155 GET /ISAPI/Image/channels/<ID>/gain
Method

GET

Description

Get gain parameters in exposure of a specific channel.

Query

None.

Request

None.

Response

Succeeded: XML_Gain
Failed: XML_ResponseStatus
Table 15-156 PUT /ISAPI/Image/channels/<ID>/gain

Method

PUT

Description

Set gain parameters in exposure of a specific channel.

Query

None.

Request

XML_Gain

Response

XML_ResponseStatus

Remarks
• The <ID> in the request URL refers to the channel ID.
• PUT method is only valid when the node <ExposureType> in the message XML_Exposure is set
to "GainFirst".

15.4.17 /ISAPI/Image/channels/<ID>/imageCap
Get the image capability of a specific channel.

175

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-157 GET /ISAPI/Image/channels/<ID>/imageCap
Method

GET

Description

Get the image capability of a specific channel.

Query

None.

Request

NULL.

Response

XML_ImageCap

15.4.18 /ISAPI/Image/channels/<ID>/ImageFlip
Operations about the image flipping status of a specific channel.

Request URL Definition
Table 15-158 GET /ISAPI/Image/channels/<ID>/ImageFlip
Method

GET

Description

Get the image flipping status of a specific channel.

Query

None.

Request

None.

Response

Succeeded: XML_ImageFlip
Failed: XML_ResponseStatus
Table 15-159 PUT /ISAPI/Image/channels/<ID>/ImageFlip

Method

PUT

Description

Update the image flipping status of a specific channel.

Query

None.

Request

XML_ImageFlip

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel No.

15.4.19 /ISAPI/Image/channels/<ID>/imageMode/<ID>
Get the default configuration parameters of a specific image mode of a specific channel.

176

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-160 GET /ISAPI/Image/channels/<ID>/imageMode/<ID>
Method

GET

Description

Get the default configuration parameters of a specific image mode of
a specific channel.

Query

None.

Request

None.

Response

XML_ImageMode

Remarks
This function is not supported by the traffic camera.

15.4.20 /ISAPI/Image/channels/<ID>/imageModes
Get the default image mode parameters of a specific channel.

Request URL Definition
Table 15-161 GET /ISAPI/Image/channels/<ID>/imageModes
Method

GET

Description

Get the default image mode parameters of a specific channel.

Query

None.

Request

None.

Response

XML_ImageModeList

Remarks
• This API is used to get default image mode configuration parameters. For different scenes, you
are recommended to set different image mode parameters for the device.
• The image mode is not supported by the traffic camera.

15.4.21 /ISAPI/Image/channels/<ID>/IrcutFilter
Operations about day/night auto switch configuration of a specific channel.

177

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-162 GET /ISAPI/Image/channels/<ID>/IrcutFilter
Method

GET

Description

Get day/night auto switch parameters of a specific channel.

Query

None.

Request

None.

Response

Succeeded: XML_IrcutFilter
Failed: XML_ResponseStatus
Table 15-163 PUT /ISAPI/Image/channels/<ID>/IrcutFilter

Method

PUT

Description

Set day/night auto switch parameters of a specific channel.

Query

None.

Request

XML_IrcutFilter

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel ID.

15.4.22 /ISAPI/Image/channels/<ID>/ISPMode
Operations about the day/night mode configuration of a specific channel.

Request URL Definition
Table 15-164 GET /ISAPI/Image/channels/<ID>/ISPMode
Method

GET

Description

Get the day/night mode parameters of a specific channel.

Query

None.

Request

None.

Response

Succeeded: XML_ISPMode
Failed: XML_ResponseStatus

178

Intelligent Security API (General Application) Developer Guide
Table 15-165 PUT /ISAPI/Image/channels/<ID>/ISPMode
Method

PUT

Description

Set the day/night mode parameters of a specific channel.

Query

None.

Request

XML_ISPMode

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel No.

15.4.23 /ISAPI/Image/channels/<ID>/lensDistortionCorrection
Get or set parameters of image distortion correction.

Request URL Definition
Table 15-166 GET /ISAPI/Image/channels/<ID>/lensDistortionCorrection
Method

GET

Description

Get parameters of image distortion correction.

Query

None.

Request

None.

Response

Succeeded: XML_LensDistortionCorrection
Failed: XML_ResponseStatus
Table 15-167 PUT /ISAPI/Image/channels/<ID>/lensDistortionCorrection

Method

PUT

Description

Set parameters of image distortion correction.

Query

None.

Request

XML_LensDistortionCorrection

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the video input channel ID.

179

Intelligent Security API (General Application) Developer Guide
15.4.24 /ISAPI/Image/channels/<ID>/lensDistortionCorrection/capabilities
Get capability of image distortion correction.

Request URL Definition
Table 15-168 GET /ISAPI/Image/channels/<ID>/lensDistortionCorrection/capabilities
Method

GET

Description

Get capability of image distortion correction.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_LensDistortionCorrection
Failed: XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the video input channel ID.

15.4.25 /ISAPI/Image/channels/<ID>/noiseReduce
Operations about 3D DNR (Digital Noise Reduction) configuration in auto mode of a specific
channel.

Request URL Definition
Table 15-169 GET /ISAPI/Image/channels/<ID>/noiseReduce
Method

GET

Description

Get 3D DNR (Digital Noise Reduction) parameters in auto mode of a
specific channel.

Query

None.

Request

None.

Response

Succeeded: XML_NoiseReduce
Failed: XML_ResponseStatus
Table 15-170 PUT /ISAPI/Image/channels/<ID>/noiseReduce

Method

PUT

Description

Set 3D DNR (Digital Noise Reduction) parameters in auto mode of a
specific channel.

180

Intelligent Security API (General Application) Developer Guide
Query

None.

Request

XML_NoiseReduce

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel ID.

15.4.26 /ISAPI/Image/channels/<ID>/Palettes
Get or set the palettes parameters.

Request URL Definition
Table 15-171 GET /ISAPI/Image/channels/<ID>/Palettes
Method

GET

Description

Get the palettes configuration parameters.

Query

None.

Request

None.

Response

XML_Palettes
Table 15-172 PUT /ISAPI/Image/channels/<ID>/Palettes

Method

PUT

Description

Set the palettes parameters.

Query

None.

Request

None.

Response

XML_ResponseStatus

15.4.27 /ISAPI/Image/channels/<ID>/powerLineFrequency
Operations about image standard configuration of a specific channel.

Request URL Definition
Table 15-173 GET /ISAPI/Image/channels/<ID>/powerLineFrequency
Method

GET

Description

Get image standard parameters of a specific channel.

181

Intelligent Security API (General Application) Developer Guide
Query

None.

Request

None.

Response

Succeeded: XML_powerLineFrequency
Failed: XML_ResponseStatus
Table 15-174 PUT /ISAPI/Image/channels/<ID>/powerLineFrequency

Method

PUT

Description

Set image standard parameters of a specific channel.

Query

None.

Request

XML_powerLineFrequency

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel ID.

15.4.28 /ISAPI/Image/channels/<ID>/regionalFocus
Focus on a specific region during live view.

Request URL Definition
Table 15-175 GET /ISAPI/Image/channels/<ID>/regionalFocus
Method

PUT

Description

Focus on a specific region during live view.

Query

None.

Request

XML_RegionalFocus

Response

XML_ResponseStatus

Remarks
The <ID> in the URL is the channel ID.

15.4.29 /ISAPI/Image/channels/<ID>/reset
Reset the image parameters of a specific channel.

182

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-176 PUT /ISAPI/Image/channels/<ID>/reset
Method

PUT

Description

Reset the image parameters of a specific channel.

Query

None.

Request

None.

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel ID.

15.4.30 /ISAPI/Image/channels/<ID>/restore
Restore the image parameters of a specific channel to default settings.

Request URL Definition
Table 15-177 PUT /ISAPI/Image/channels/<ID>/restore
Method

PUT

Description

Restore the image parameters of a specific channel to default
settings.

Query

None.

Request

None.

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel ID.

15.4.31 /ISAPI/Image/channels/<ID>/sharpness
Operations about the sharpness parameters of s specific channel.

183

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-178 GET /ISAPI/Image/channels/<ID>/sharpness
Method

GET

Description

Get the sharpness parameters of s specific channel.

Query

None.

Request

None.

Response

Succeeded: XML_Sharpness
Failed: XML_ResponseStatus
Table 15-179 PUT /ISAPI/Image/channels/<ID>/sharpness

Method

PUT

Description

Set the sharpness parameters of s specific channel.

Query

None.

Request

XML_Sharpness

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel ID.

15.4.32 /ISAPI/Image/channels/<ID>/shutter
Operations about shutter configuration in exposure of a specific channel.

Request URL Definition
Table 15-180 GET /ISAPI/Image/channels/<ID>/shutter
Method

GET

Description

Get shutter parameters in exposure of a specific channel.

Query

None.

Request

None.

Response

Succeeded: XML_Shutter
Failed: XML_ResponseStatus

184

Intelligent Security API (General Application) Developer Guide
Table 15-181 PUT /ISAPI/Image/channels/<ID>/shutter
Method

PUT

Description

Set shutter parameters in exposure of a specific channel.

Query

None.

Request

XML_Shutter

Response

XML_ResponseStatus

Remarks
• The <ID> in the request URL refers to the channel ID.
• PUT method is only valid when the node <ExposureType> in the message XML_Exposure is set
to "ShutterFirst".

15.4.33 /ISAPI/Image/channels/<ID>/SupplementLight
Get or set supplement light parameters by channel.

Request URL Definition
Table 15-182 GET /ISAPI/Image/channels/<ID>/SupplementLight
Method

GET

Description

Get supplement light parameters by channel.

Query

None.

Request

None.

Response

Succeeded: XML_SupplementLight
Failed: XML_ResponseStatus
Table 15-183 PUT /ISAPI/Image/channels/<ID>/SupplementLight

Method

PUT

Description

Set supplement light parameters by channel.

Query

None.

Request

XML_SupplementLight

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel ID.

185

Intelligent Security API (General Application) Developer Guide
15.4.34 /ISAPI/Image/channels/<ID>/SupplementLight/capabilities
Get supplement light configuration capability by channel.

Request URL Definition
Table 15-184 GET /ISAPI/Image/channels/<ID>/SupplementLight/capabilities
Method

GET

Description

Get supplement light configuration capability by channel.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_SupplementLight
Failed: XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel ID.

15.4.35 /ISAPI/Image/channels/<ID>/targetEnhancement
Get or set the target enhancement parameters.

Request URL Definition
Table 15-185 GET /ISAPI/Image/channels/<ID>/targetEnhancement
Method

GET

Description

Get the target enhancement parameters.

Query

None.

Request

None.

Response

Succeeded: XML_TargetEnhancement
Failed: XML_ResponseStatus
Table 15-186 PUT /ISAPI/Image/channels/<ID>/targetEnhancement

Method

PUT

Description

Set the target enhancement parameters.

Query

None.

186

Intelligent Security API (General Application) Developer Guide
Request

XML_TargetEnhancement

Response

XML_ResponseStatus

Remarks
• This URL is used in combination with URL /ISAPI/Image/channels/<ID> .
• The <ID> in the request URL refers to the channel No.

15.4.36 /ISAPI/Image/channels/<ID>/targetEnhancement/capabilities
Get the target enhancement capability.

Request URL Definition
Table 15-187 GET /ISAPI/Image/channels/<ID>/targetEnhancement/capabilities
Method

GET

Description

Get the target enhancement capability.

Query

None.

Request

None.

Response

Succeeded: XML_TargetEnhancementCap
Failed: XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel No.

15.4.37 /ISAPI/Image/channels/<ID>/tempRange
Operation about temperature range parameters of the specified channel.

Request URL Definition
Table 15-188 GET /ISAPI/Image/channels/<ID>/tempRange
Method

GET

Description

Get the temperature range parameters.

Query

None.

Request

None.

Response

Succeeded: XML_tempRange
Failed: XML_ResponseStatus

187

Intelligent Security API (General Application) Developer Guide
Table 15-189 PUT /ISAPI/Image/channels/<ID>/tempRange
Method

PUT

Description

Set the temperature range parameters.

Query

None.

Request

None.

Response

Succeeded: XML_tempRange
Failed: XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel No.

15.4.38 /ISAPI/Image/channels/<ID>/tempRange/capabilities
Get the temperature range configuration capability of a specified channel.

Request URL Definition
Table 15-190 GET
Method

GET

Description

Get the temperature range configuration capability of a specified
channel.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_tempRange
Failed: XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel No.

15.4.39 /ISAPI/Image/channels/<ID>/WDR
Operations about the WRD (Wide Dynamic Range) configuration of a specific channel.

188

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-191 GET /ISAPI/Image/channels/<ID>/WDR
Method

GET

Description

Get WRD (Wide Dynamic Range) parameters of a specific channel.

Query

None.

Request

None.

Response

Succeeded: XML_WDR
Failed: XML_ResponseStatus
Table 15-192 PUT /ISAPI/Image/channels/<ID>/WDR

Method

GET

Description

Set WRD (Wide Dynamic Range) parameters of a specific channel.

Query

None.

Request

XML_WDR

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel ID.

15.4.40 /ISAPI/Image/channels/<ID>/whiteBalance
Operations about the white balance parameters of s specific channel.

Request URL Definition
Table 15-193 GET /ISAPI/Image/channels/<ID>/whiteBalance
Method

GET

Description

Get the white balance parameters of s specific channel.

Query

None.

Request

None.

Response

Succeeded: XML_WhiteBalance
Failed: XML_ResponseStatus

189

Intelligent Security API (General Application) Developer Guide
Table 15-194 PUT /ISAPI/Image/channels/<ID>/whiteBalance
Method

PUT

Description

Set the white balance parameters of s specific channel.

Query

None.

Request

XML_WhiteBalance

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel No.

15.5 /ISAPI/SDT
15.5.1 /ISAPI/SDT/Management/capabilities?format=json
Get the intelligent management capability of the device.

Request URL Definition
Table 15-195 GET /ISAPI/SDT/Management/capabilities?format=json
Method

GET

Description

Get the intelligent management capability of the device to check the
intelligent functions supported by the device.

Query

None.

Request

None.

Response

JSON_Cap_IntelliManagement

15.5.2 /ISAPI/SDT/Management/EventSearch?format=json
Search for event.

Request URL Definition
Table 15-196 POST /ISAPI/SDT/Management/EventSearch?format=json
Method

POST

Description

Search for event.

Query

format: determine the format of request or response message.

190

Intelligent Security API (General Application) Developer Guide
Request

JSON_EventSearchCond

Response

Succeeded: JSON_EventSearchResult
Failed: JSON_ResponseStatus

15.5.3 /ISAPI/SDT/Management/EventSearch/capabilities?format=json
Get the event search capability.

Request URL Definition
Table 15-197 GET /ISAPI/SDT/Management/EventSearch/capabilities?format=json
Method

GET

Description

Get the event search capability.

Query

format: determine the format of request or response message.

Request

None.

Response

JSON_EventSearchCap

15.5.4 /ISAPI/SDT/Management/IntelligentSearch/export/stop?format=json
Stop exporting the VCA search result.

Request URL Definition
Table 15-198 PUT /ISAPI/SDT/Management/IntelligentSearch/export/stop?format=json
Method

PUT

Description

Stop exporting the VCA search result.

Query

format: determine the format of request or response message.

Request

JSON_StopTaskCond

Response

JSON_ResponseStatus

15.5.5 /ISAPI/SDT/Management/IntelligentSearch/export?format=json
Export the VCA search result.

191

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-199 POST /ISAPI/SDT/Management/IntelligentSearch/export?format=json
Method

POST

Description

Export the VCA search result.

Query

format: determine the format of request or response message.

Request

JSON_VCASearchExportCond

Response

JSON_VCASearchExportTaskInfo

15.5.6 /ISAPI/SDT/Management/IntelligentSearch/export/progress?
format=json&taskID=
Get the progress of exporting VCA search result.

Request URL Definition
Table 15-200 GET /ISAPI/SDT/Management/IntelligentSearch/export/progress?
format=json&taskID=
Method

GET

Description

Get the progress of exporting VCA search result.

Query

format: determine the format of request or response message.
taskID: the task ID of exporting intelligent search result, it is returned
in JSON_VCASearchExportTaskInfo .

Request

None.

Response

JSON_VCASearchExportProgress

15.5.7 /ISAPI/SDT/Management/IntelligentSearch/capabilities?format=json
Get the VCA search capabilities.

Request URL Definition
Table 15-201 GET /ISAPI/SDT/Management/IntelligentSearch/capabilities?format=json
Method

GET

Description

Get VCA search capabilities.

Query

format: determine the format of request or response message.

192

Intelligent Security API (General Application) Developer Guide
Request

None.

Response

Succeeded: JSON_IntelligentSearchCap
Failed: JSON_ResponseStatus

15.5.8 /ISAPI/SDT/Management/IntelligentSearch?format=json
Start VCA search.

Request URL Definition
Table 15-202 POST /ISAPI/SDT/Management/IntelligentSearch?format=json
Method

POST

Description

Start VCA search.

Query

format: determine the format of request or response message.

Request

JSON_IntelligentSearchCondition

Response

Succeeded: JSON_IntelligentSearchResult
Failed: JSON_ResponseStatus

15.6 /ISAPI/PTZCtrl
15.6.1 /ISAPI/PTZCtrl/channels/<ID>
Get or set the single PTZ control parameters.

Request URL Definition
Table 15-203 GET /ISAPI/PTZCtrl/channels/<ID>
Method

GET

Description

Get the single PTZ control parameters.

Query

None

Request

None

Response

Succeeded: XML_PTZChannel
Failed: XML_ResponseStatus

193

Intelligent Security API (General Application) Developer Guide
Table 15-204 PUT /ISAPI/PTZCtrl/channels/<ID>
Method

PUT

Description

Set the single PTZ control parameters.

Query

None

Request

XML_PTZChannel

Response

XML_ResponseStatus

Remarks
The <ID> in the URL refers to the channel No.

15.6.2 /ISAPI/PTZCtrl/channels/<ID>/auxcontrols
Get or set all PTZ auxiliaries status.

Request URL Definition
Table 15-205 GET /ISAPI/PTZCtrl/channels/<ID>/auxcontrols
Method

GET

Description

Get all PTZ auxiliaries status.

Query

None.

Request

None.

Response

Succeeded: XML_PTZAuxList
Failed: XML_ResponseStatus
Table 15-206 PUT /ISAPI/PTZCtrl/channels/<ID>/auxcontrols

Method

PUT

Description

Set all PTZ auxiliaries status.

Query

None.

Request

XML_PTZAuxList

Response

XML_ResponseStatus

Remarks
The <ID> in the URL refers to the channel No.

194

Intelligent Security API (General Application) Developer Guide
15.6.3 /ISAPI/PTZCtrl/channels/<ID>/auxcontrols/<ID>
Get or set the specified PTZ auxiliary status.

Request URL Definition
Table 15-207 GET /ISAPI/PTZCtrl/channels/<ID>/auxcontrols/<ID>
Method

GET

Description

Get the specified PTZ auxiliary status.

Query

None.

Request

None.

Response

Succeeded: XML_PTZAux
Failed: XML_ResponseStatus
Table 15-208 PUT /ISAPI/PTZCtrl/channels/<ID>/auxcontrols/<ID>

Method

PUT

Description

Set the specified PTZ auxiliary status.

Query

None.

Request

XML_PTZAux

Response

XML_ResponseStatus

Remarks
• The first <ID> in the URL refers to the channel number.
• The second <ID> in refers to the auxiliary number, e.g., when there is only one wiper, the second
<ID> is "1", when there are multiple wipers, the second <ID> varies according to the
requirement.

15.6.4 /ISAPI/PTZCtrl/channels/<ID>/capabilities
Get the PTZ control capabilities.

Request URL Definition
Table 15-209 GET /ISAPI/PTZCtrl/channels/ID/capabilities
Method

GET

Description

Get the PTZ control capabilities.

Query

None

195

Intelligent Security API (General Application) Developer Guide
Request

None.

Response

Succeeded: XML_PTZChanelCap
Failed: XML_ResponseStatus

15.6.5 /ISAPI/PTZCtrl/channels/<ID>/EagleFocusing/auto/capabilities?format=json
Get the capability of rapid focus automatic calibration.

Request URL Definition
Table 15-210 GET /ISAPI/PTZCtrl/channels/<ID>/EagleFocusing/auto/capabilities?format=json
Method

GET

Description

Get the capability of rapid focus automatic calibration.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_AutoEagleFocusingCap
Failed: JSON_ResponseStatus

Remarks
The <ID> in the URL refers to the channel ID.

15.6.6 /ISAPI/PTZCtrl/channels/<ID>/EagleFocusing/auto?format=json
Automatically calibrate for rapid focus.

Request URL Definition
Table 15-211 GET /ISAPI/PTZCtrl/channels/<ID>/EagleFocusing/auto?format=json
Method

GET

Description

Automatically calibrate for rapid focus.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_AutoEagleFocusing
Failed: JSON_ResponseStatus

Remarks
The <ID> in the URL refers to the channel ID.

196

Intelligent Security API (General Application) Developer Guide
15.6.7 /ISAPI/PTZCtrl/channels/<ID>/EagleFocusing/capabilities
Get the rapid focus capability.

Request URL Definition
Table 15-212 GET /ISAPI/PTZCtrl/channels/<ID>/EagleFocusing/capabilities
Method

GET

Description

Get the rapid focus capability.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_EagleFocusing
Failed: XML_ResponseStatus

Remarks
The <ID> in the URL refers to the channel ID.

15.6.8 /ISAPI/PTZCtrl/channels/<ID>/lensCorrection/capabilities?format=json
Get the lens correction capability.

Request URL Definition
Table 15-213 GET /ISAPI/PTZCtrl/channels/<ID>/lensCorrection/capabilities?format=json
Method

GET

Description

Get the lens correction capability.

Query

format: determine the format of request or response message.

Request

None.

Response

JSON_LensCorrectionCap

15.6.9 /ISAPI/PTZCtrl/channels/<ID>/lensCorrection?format=json
Get or set the configuration parameters of lens correction.

197

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-214 GET /ISAPI/PTZCtrl/channels/<ID>/lensCorrection?format=json
Method

GET

Description

Get the configuration parameters of lens correction.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_LensCorrection
Failed: XML_ResponseStatus

Table 15-215 PUT /ISAPI/PTZCtrl/channels/<ID>/lensCorrection?format=json
Method

PUT

Description

Set the lens correction parameters.

Query

format: determine the format of request or response message.

Request

JSON_LensCorrection

Response

XML_ResponseStatus

15.6.10 /ISAPI/PTZCtrl/channels/<ID>/lockPTZ
Operations about locking PTZ of a specific channel.

Request URL Definition
Table 15-216 GET /ISAPI/PTZCtrl/channels/<ID>/lockPTZ
Method

GET

Description

Get the remaining time before unlocking PTZ of a specific channel.

Query

None.

Request

None.

Response

XML_LockPTZ
Table 15-217 PUT /ISAPI/PTZCtrl/channels/<ID>/lockPTZ

Method

PUT

Description

Lock PTZ of a specific channel.

Query

None.

198

Intelligent Security API (General Application) Developer Guide
Request

XML_LockPTZ

Response

XML_ResponseStatus

15.6.11 /ISAPI/PTZCtrl/channels/<ID>/maxelevation
Get or set the max. tilt-angle parameters.

Request URL Definition
Table 15-218 GET /ISAPI/PTZCtrl/channels/<ID>/maxelevation
Method

GET

Description

Get the max. tilt-​angle configuration parameters

Query

None.

Request

None.

Response

XML_MaxElevation
Table 15-219 PUT /ISAPI/PTZCtrl/channels/<ID>/maxelevation

Method

PUT

Description

Set the max. tilt-​angle

Query

None.

Request

XML_MaxElevation

Response

XML_ResponseStatus

Remarks
The <ID> in the URL indicates the channel ID.

15.6.12 /ISAPI/PTZCtrl/channels/<ID>/maxelevation/capabilities
Get the max. tilt-angle capability.

Request URL Definition
Table 15-220 GET /ISAPI/PTZCtrl/channels/<ID>/maxelevation/capabilities
Method

GET

Description

Get the max. tilt-​angle capability.

Query

None.

199

Intelligent Security API (General Application) Developer Guide
Request

None.

Response

XML_Cap_MaxElevation

Remarks
The <ID> in the URL indicates the channel ID.

15.6.13 /ISAPI/PTZCtrl/channels/<ID>/onepushfoucs/reset
Initialize the lens.

Request URL Definition
Table 15-221 PUT /ISAPI/PTZCtrl/channels/<ID>/onepushfoucs/reset
Method

PUT

Description

Initialize the lens.

Query

None.

Request

None.

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel No.

15.6.14 /ISAPI/PTZCtrl/channels/<ID>/PTZOSDDisplay
Get or set the on-screen display parameters of the PTZ status.

Request URL Definition
Table 15-222 GET /ISAPI/PTZCtrl/channels/<ID>/PTZOSDDisplay
Method

GET

Description

Get the on-screen display parameters of the PTZ status.

Query

None.

Request

None.

Response

Succeeded: XML_PTZOSDDisplay
Failed: XML_ResponseStatus

200

Intelligent Security API (General Application) Developer Guide
Table 15-223 PUT /ISAPI/PTZCtrl/channels/<ID>/PTZOSDDisplay
Method

PUT

Description

Set the on-screen display parameters of the PTZ status.

Query

None.

Request

XML_PTZOSDDisplay

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the PTZ channel No.

15.6.15 /ISAPI/PTZCtrl/channels/<ID>/save
Get and save the PTZ position information of the current channel.

Request URL Definition
Table 15-224 GET /ISAPI/PTZCtrl/channels/<ID>/save
Method

GET

Description

Get and save the PTZ position information (including panning, tilting,
and zooming parameters) of the current channel.

Query

None.

Request

None.

Response

Succeeded: XML_PTZStatus
Failed: XML_ResponseStatus

15.6.16 /ISAPI/PTZCtrl/channels/<ID>/save?format=json
Save the PTZ position information of the current channel.

Request URL Definition
Table 15-225 PUT /ISAPI/PTZCtrl/channels/<ID>/save?format=json
Method

PUT

Description

Save the PTZ position information, including panning, tilting, and
zooming parameters, of the current channel.

Query

format: determine the format of request or response message.

201

Intelligent Security API (General Application) Developer Guide
Request

None.

Response

JSON_ResponseStatus

Remarks
The <ID> in the request URL refers to the PTZ channel No.

15.6.17 /ISAPI/PTZCtrl/channels/<ID>/status
Get the PTZ status of a specific channel of the device.

Request URL Definition
Table 15-226 GET /ISAPI/PTZCtrl/channels/<ID>/status
Method

GET

Description

Get the PTZ status of a specific channel of the device.

Query

None.

Request

None.

Response

Succeeded: XML_PTZStatus
Failed: XML_ResponseStatus

15.6.18 /ISAPI/PTZCtrl/channels/<ID>/zoomFocus
Operations about zoom and focus coordinates configuration for zoom camera module.

Request URL Definition
Table 15-227 GET /ISAPI/PTZCtrl/channels/<ID>/zoomFocus
Method

GET

Description

Get parameters of zoom and focus coordinates of zoom camera
module.

Query

None.

Request

None.

Response

XML_ZoomFocus

202

Intelligent Security API (General Application) Developer Guide
Table 15-228 PUT /ISAPI/PTZCtrl/channels/<ID>/zoomFocus
Method

PUT

Description

Set parameters of zoom and focus coordinates of zoom camera
module.

Query

None.

Request

XML_ZoomFocus

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel ID.

15.7 /ISAPI/Security
15.7.1 /ISAPI/Security/adminAccesses
Get or set parameters of all protocols supported by device.

Request URL Definition
Table 15-229 GET /ISAPI/Security/adminAccesses
Method

GET

Description

Get parameters of all protocols supported by device.

Query

None.

Request

None.

Response

Succeeded: XML_AdminAccessProtocolList
Failed: XML_ResponseStatus
Table 15-230 PUT /ISAPI/Security/adminAccesses

Method

PUT

Description

Set parameters of all protocols supported by device.

Query

None.

Request

XML_AdminAccessProtocolList

Response

XML_ResponseStatus

203

Intelligent Security API (General Application) Developer Guide
15.7.2 /ISAPI/Security/adminAccesses/<ID>
Get or set the parameters of a specific protocol that supported by device.

Request URL Definition
Table 15-231 GET /ISAPI/Security/adminAccesses/<ID>
Method

GET

Description

Get the parameters of a specific protocol that supported by device.

Query

None.

Request

None.

Response

Succeeded: XML_AdminAccessProtocol
Failed: XML_ResponseStatus
Table 15-232 PUT /ISAPI/Security/adminAccesses/<ID>

Method

PUT

Description

Set the parameters of a specific protocol that supported by device.

Query

None.

Request

XML_AdminAccessProtocol

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the protocol ID.

15.7.3 /ISAPI/Security/adminAccesses/capabilities
Get device protocol capability.

Request URL Definition
Table 15-233 GET /ISAPI/Security/adminAccesses/capabilities
Method

GET

Description

Get device protocol capability.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_AdminAccessProtocolList

204

Intelligent Security API (General Application) Developer Guide
Failed: XML_ResponseStatus

15.7.4 /ISAPI/Security/advanced?format=json
Get or set advacned parameters of security.

Request URL Definition
Table 15-234 GET /ISAPI/Security/advanced?format=json
Method

GET

Description

Get advanced configuration parameters of security.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_SecurityAdvanced
Failed: JSON_ResponseStatus
Table 15-235 PUT /ISAPI/Security/advanced?format=json

Method

PUT

Description

Set advanced parameters of security.

Query

format: determine the format of request or response message.

Request

JSON_SecurityAdvanced

Response

JSON_ResponseStatus

15.7.5 /ISAPI/Security/capabilities
Get the security capability of the device.

Request URL Definition
Table 15-236 GET /ISAPI/Security/capabilities
Method

GET

Description

Get the security capability of the device.

Query

username: user name, string, it should be encrypted.

Request

None.

Response

Succeeded: XML_SecurityCap
Failed: XML_ResponseStatus

205

Intelligent Security API (General Application) Developer Guide
15.7.6 /ISAPI/Security/certificate/select/<functinName>?format=json
Get or set the parameters of selecting the certificate.

Request URL Definition
Table 15-237 GET /ISAPI/Security/certificate/select/<functinName>?format=json
Method

GET

Description

Get the parameters of selecting the certificate.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_CertificateSelect
Failed: JSON_ResponseStatus

Table 15-238 PUT /ISAPI/Security/certificate/select/<functinName>?format=json
Method

PUT

Description

Set the parameters of selecting the certificate.

Query

format: determine the format of request or response message.

Request

JSON_CertificateSelect

Response

JSON_ResponseStatus

Remarks
The <functinName> in the request URL refers to the function name.

15.7.7 /ISAPI/Security/certificate/select/capabilities?format=json
Get the capability of selecting the certificate.

Request URL Definition
Table 15-239 GET /ISAPI/Security/certificate/select/capabilities?format=json
Method

GET

Description

Get the capability of selecting the certificate.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_Cap_CertificateSelect

206

Intelligent Security API (General Application) Developer Guide
Failed: JSON_ResponseStatus

15.7.8 /ISAPI/Security/challenge
Get the random challenge strings.

Request URL Definition
Table 15-240 POST /ISAPI/Security/challenge
Method

POST

Description

Get the random challenge strings.

Query

None.

Request

XML_PublicKey

Response

XML_Challenge

15.7.9 /ISAPI/Security/CommuMode/capabilities?format=json
Get the configuration capability of the security mode level of the private protocol.

Request URL Definition
Table 15-241 GET /ISAPI/Security/CommuMode/capabilities?format=json
Method

GET

Description

Get the configuration capability of the security mode level of the
private protocol.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_Cap_CommuMode
Failed: JSON_ResponseStatus

15.7.10 /ISAPI/Security/CommuMode?format=json
Operations about the configuration of the security mode level of the private protocol.

207

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-242 GET /ISAPI/Security/CommuMode?format=json
Method

GET

Description

Get the parameters of the security mode level of the private
protocol.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_CommuMode
Failed: JSON_ResponseStatus
Table 15-243 PUT /ISAPI/Security/CommuMode?format=json

Method

PUT

Description

Set the parameters of the security mode level of the private protocol.

Query

format: determine the format of request or response message.

Request

JSON_CommuMode

Response

JSON_ResponseStatus

15.7.11 /ISAPI/Security/deviceCertificate
Import network certificate to device.

Request URL Definition
Table 15-244 PUT /ISAPI/Security/deviceCertificate
Method

PUT

Description

Import network certificate to device.

Query

None.

Request

Certificate data (in binary format)

Response

XML_ResponseStatus

208

Intelligent Security API (General Application) Developer Guide
Remarks
• The imported certificate function is determined by "type" in binary certificate data, which
contains "wpa" (default) and "ieee802.1x". If no value is assigned to this parameter, it indicates
that the WPA certificate will be imported.
• The imported certificate type is determined by "Content-type" in binary certificate data, which
contains "x-x509-ca-cert", "x-x509-client-cert", and "x-x509-client-key".

15.7.12 /ISAPI/Security/deviceCertificate/capabilities?format=json
Get the CA (Certificate Authority) certificate capability.

Request URL Definition
Table 15-245 GET /ISAPI/Security/deviceCertificate/capabilities?format=json
Method

GET

Description

Get the CA (Certificate Authority) certificate capability.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_DeviceCertificateCap
Failed: JSON_ResponseStatus

15.7.13 /ISAPI/Security/deviceCertificate/certificateRevocation/capabilities?
format=json
Get the configuration capability of the certificate expiry alarm.

Request URL Definition
Table 15-246 GET /ISAPI/Security/deviceCertificate/certificateRevocation/capabilities?
format=json
Method

GET

Description

Get the configuration capability of the certificate expiry alarm.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_CertificateRevocationCap
Failed: JSON_ResponseStatus

209

Intelligent Security API (General Application) Developer Guide
15.7.14 /ISAPI/Security/deviceCertificate/certificateRevocation?format=json
Get or set the configuration of certificate expiry alarm.

Request URL Definition
Table 15-247 GET /ISAPI/Security/deviceCertificate/certificateRevocation?format=json
Method

GET

Description

Get the parameters of certificate expiry alarm.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_CertificateRevocation
Failed: JSON_ResponseStatus

Table 15-248 PUT /ISAPI/Security/deviceCertificate/certificateRevocation?format=json
Method

PUT

Description

Set the parameters of certificate expiry alarm.

Query

format: determine the format of request or response message.

Request

JSON_CertificateRevocation

Response

JSON_ResponseStatus

15.7.15 /ISAPI/Security/deviceCertificate/certificates/<customID>?format=json
Get or delete the information of a specific device certificate.

Request URL Definition
Table 15-249 GET /ISAPI/Security/deviceCertificate/certificates/<customID>?format=json
Method

GET

Description

Get the information of a specific device certificate.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_DeviceCertificate
Failed: JSON_ResponseStatus

210

Intelligent Security API (General Application) Developer Guide
Table 15-250 DELETE /ISAPI/Security/deviceCertificate/certificates/<customID>?format=json
Method

DELETE

Description

Delete the information of a specific device certificate.

Query

format: determine the format of request or response message.

Request

None.

Response

JSON_ResponseStatus

Remarks
The <customID> in the request URL refers to the custom certificate ID.

15.7.16 /ISAPI/Security/deviceCertificate/certificates/<ID>
Delete the certificate of a specific device.

Request URL Definition
Table 15-251 DELETE /ISAPI/Security/deviceCertificate/certificates/<ID>
Method

DELETE

Description

Delete the certificate of a specific device.

Query

None.

Request

None.

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL is the device ID returned when searching certificate information.

15.7.17 /ISAPI/Security/deviceCertificate/certificates/<ID>/recreate?format=json
Regenerate a specific abnormal certificate.

Request URL Definition
Table 15-252 PUT /ISAPI/Security/deviceCertificate/certificates/<ID>/recreate?format=json
Method

PUT

Description

Regenerate a specific certificate for authentication client.

Query

format: determine the format of request or response message.

211

Intelligent Security API (General Application) Developer Guide
Request

None.

Response

JSON_ResponseStatus

Remarks
• The <ID> in the request URL refers to the certificate ID.
• This URL is only supported by HTTPS certificate, and it is available when the certificate exception
is detected.

15.7.18 /ISAPI/Security/deviceCertificate/certificates/<ID>/status?format=json
Get the status of a specific certificate.

Request URL Definition
Table 15-253 GET /ISAPI/Security/deviceCertificate/certificates/<ID>/status?format=json
Method

GET

Description

Get the status of a specific certificate.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_DeviceCertificateStatus
Failed: JSON_ResponseStatus

Remarks
The <ID> in the request URL is the certificate ID, which is generated and returned by device.

15.7.19 /ISAPI/Security/deviceCertificate/certificates/capabilities?format=json
Get certificate search capability.

Request URL Definition
Table 15-254 GET /ISAPI/Security/deviceCertificate/certificates/capabilities?format=json
Method

GET

Description

Get certificate search capability.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_DeviceCertificatesCap

212

Intelligent Security API (General Application) Developer Guide
Failed: JSON_ResponseStatus

15.7.20 /ISAPI/Security/deviceCertificate/certificates/recreate?format=json
Regenerate all abnormal certificates.

Request URL Definition
Table 15-255 PUT /ISAPI/Security/deviceCertificate/certificates/recreate?format=json
Method

PUT

Description

Regenerate all abnormal certificates.

Query

format: determine the format of request or response message.

Request

None.

Response

JSON_ResponseStatus

Remarks
This URL is only supported by HTTPS certificate, and it is available when the certificate exception is
detected.

15.7.21 /ISAPI/Security/deviceCertificate/certificates/status?format=json
Get status of all certificates.

Request URL Definition
Table 15-256 GET /ISAPI/Security/deviceCertificate/certificates/status?format=json
Method

GET

Description

Get status of all certificates.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_DeviceCertificateStatusList
Failed: JSON_ResponseStatus

15.7.22 /ISAPI/Security/deviceCertificate/certificates?format=json
Get device certificate information in a batch.

213

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-257 GET /ISAPI/Security/deviceCertificate/certificates?format=json
Method

GET

Description

Get device certificate information in a batch.

Query

format: determine the format of request or response message.
type: certificate type, it can be set to "wpa" (get all WPA certificates),
"ieee802.1x" (get all ieee802.1x certificates), and "securityLog" (get
all CA certificates of security logs); if no value is assigned to type, all
CA certificates will be searched and obtained.

Request

None.

Response

Succeeded: JSON_DeviceCertificates
Failed: JSON_ResponseStatus

15.7.23 /ISAPI/Security/deviceCertificate?customID=
Import a CA (Certificate Authority) certificate to the device.

Request URL Definition
Table 15-258 PUT /ISAPI/Security/deviceCertificate?customID=
Method

PUT

Description

Import a CA (Certificate Authority) certificate to the device. The CA
certificate is used for 802.1x (radius) with various authentication
mechanism.

Query

customID: custom certificate ID, string, it consists of digits and
characters.

Request

Certificate data (its format depends on the device).

Response

XML_ResponseStatus

Remarks
• When importing CA certificate by calling this URL, the function of CA certificate will not be
distinguished. The CA certificate and its function will be bound together afterward.
• The imported certificate type is determined by "Content-type" in the certificate data, which
contains "x-x509-ca-cert" (CA certificate (root certificate)), "x-x509-client-cert" (client certificate),
and "x-x509-client-key" (client password).

214

Intelligent Security API (General Application) Developer Guide
15.7.24 /ISAPI/Security/doubleVerification/users/<ID>?format=json
Operations about a specified double verification user.

Request URL Definition
Table 15-259 GET /ISAPI/Security/doubleVerification/users/<ID>?format=json
Method

GET

Description

Get a double verification user.

Query

format: determine the format of request or response message.
security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.

Request

None.

Response

JSON_User

Table 15-260 PUT /ISAPI/Security/doubleVerification/users/<ID>?format=json
Method

PUT

Description

Set a double verification user.

Query

format: determine the format of request or response message.
security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.

Request

JSON_User

Response

JSON_ResponseStatus

Table 15-261 DELETE /ISAPI/Security/doubleVerification/users/<ID>?format=json
Method

DELETE

Description

Delete a double verification user.

215

Intelligent Security API (General Application) Developer Guide
Query

format: determine the format of request or response message.
security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.

Request

None.

Response

JSON_ResponseStatus

Remarks
The <ID> in the URL indicates the user ID.

15.7.25 /ISAPI/Security/doubleVerification/users/capabilities?format=json
Get the double verification configuration capability.

Request URL Definition
Table 15-262 GET /ISAPI/Security/doubleVerification/users/capabilities?format=json
Method

GET

Description

Get the double verification configuration capability.

Query

format: determine the format of request or response message.

Request

None.

Response

JSON_UserCap

15.7.26 /ISAPI/Security/doubleVerification/users?format=json
Get all double verification users and add a double verification user.

Request URL Definition
Table 15-263 GET /ISAPI/Security/doubleVerification/users?format=json
Method

GET

Description

Get all double verification users.

Query

format: determine the format of request or response message.

216

Intelligent Security API (General Application) Developer Guide
security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.
Request

None.

Response

JSON_UserList
Table 15-264 POST /ISAPI/Security/doubleVerification/users?format=json

Method

POST

Description

Add a double verification user.

Query

format: determine the format of request or response message.
security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.

Request

JSON_User

Response

Succeeded: JSON_ResponseStatus and JSON_id
Failed: JSON_ResponseStatus

15.7.27 /ISAPI/Security/doubleVerification/UsersPermission/<ID>?format=json
Get and set the permission of double verification user.

Request URL Definition
Table 15-265 GET /ISAPI/Security/doubleVerification/UsersPermission/<ID>?format=json
Method

GET

Description

Get the configuration parameters of double verification user
permission.

Query

format: determine the format of request or response message.

217

Intelligent Security API (General Application) Developer Guide
Request

None.

Response

Succeeded: JSON_UserPermission
Failed: JSON_ResponseStatus

Table 15-266 PUT /ISAPI/Security/doubleVerification/UsersPermission/<ID>?format=json
Method

PUT

Description

Set the double verification user permission.

Query

format: determine the format of request or response message.

Request

JSON_UserPermission

Response

JSON_ResponseStatus

Remarks
The <ID> in the URL indicates the user ID.

15.7.28 /ISAPI/Security/doubleVerification/UsersPermission/capabilities?
format=json
Get the capability of permission configuration for double verification user.

Request URL Definition
Table 15-267 GET /ISAPI/Security/doubleVerification/UsersPermission/capabilities?format=json
Method

GET

Description

Get the capability of permission configuration for double verification
user.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_UserPermissionCap
Failed: JSON_ResponseStatus

15.7.29 /ISAPI/Security/doubleVerification?format=json
Get the capability of double verification enabling configuration.

218

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-268 GET /ISAPI/Security/doubleVerification?format=json
Method

GET

Description

Get the capability of double verification enabling configuration.

Query

format: determine the format of request or response message.

Request

None.

Response

JSON_DoubleVerification
Table 15-269 PUT /ISAPI/Security/doubleVerification?format=json

Method

PUT

Description

Enable or disable the double verification.

Query

format: determine the format of request or response message.

Request

JSON_DoubleVerification

Response

JSON_ResponseStatus

15.7.30 /ISAPI/Security/email/parameter/capabilities?format=json
Get recovery email configuration capability (only available in LAN and for admin user).

Request URL Definition
Table 15-270 GET /ISAPI/Security/email/parameter/capabilities?format=json
Method

GET

Description

Get recovery email configuration capability.

Query

format: determine the format of request or response message.
security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.

Request

None.

Response

JSON_SecurityEmailCap

219

Intelligent Security API (General Application) Developer Guide
15.7.31 /ISAPI/Security/email/parameter?format=json
Operations about recovery email configuration (only available for LAN and for admin user).

Request URL Definition
Table 15-271 GET /ISAPI/Security/email/parameter?format=json
Method

GET

Description

Get recovery email parameters.

Query

format: determine the format of request or response message.
security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.

Request

None.

Response

JSON_SecurityEmail
Table 15-272 PUT /ISAPI/Security/email/parameter?format=json

Method

PUT

Description

Set recovery email parameters.

Query

format: determine the format of request or response message.
security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.

Request

JSON_SecurityEmail

Response

JSON_ResponseStatus

15.7.32 /ISAPI/Security/email/qrCode?format=json
Get the QR code of the configured recovery email (only available for LAN and for admin user).

220

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-273 GET /ISAPI/Security/email/qrCode?format=json
Method

GET

Description

Get the QR code of the configured recovery email.

Query

format: determine the format of request or response message.
security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.

Request

None.

Response

JSON_SecurityEmailQrCode

15.7.33 /ISAPI/Security/emailCertification?format=json
Reset password by the verification code via recovery email (only available for LAN and for admin
user).

Request URL Definition
Table 15-274 PUT /ISAPI/Security/emailCertification?format=json
Method

PUT

Description

Reset password by the verification code via recovery email.

Query

format: determine the format of request or response message.

Request

JSON_EmailCertification

Response

JSON_ResponseStatus

Remarks
For the encryption of passwords and security answers, first transform them by UTF8, and then
transcode them by BASE64, finally, encrypt them by AES128CB.

15.7.34 /ISAPI/Security/extern/capabilities
Get capability of other security configuration.

221

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-275 GET /ISAPI/Security/extern/capabilities
Method

GET

Description

Get capability of other security configuration.

Query

None.

Request

None.

Response

XML_externSecurityCap

15.7.35 /ISAPI/Security/illegalLoginLock
Get or set locking parameters of illegal login.

Request URL Definition
Table 15-276 GET /ISAPI/Security/illegalLoginLock
Method

GET

Description

Get locking parameters of illegal login.

Query

None.

Request

None.

Response

Succeeded: XML_IllegalLoginLock
Failed: XML_ResponseStatus
Table 15-277 PUT /ISAPI/Security/illegalLoginLock

Method

PUT

Description

Set locking parameters of illegal login.

Query

None.

Request

XML_IllegalLoginLock

Response

XML_ResponseStatus

15.7.36 /ISAPI/Security/loginLinkNum?format=json
Get or set maximum number of logged in accounts.

222

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-278 GET /ISAPI/Security/loginLinkNum?format=json
Method

GET

Description

Get maximum number of logged in accounts.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_LoginLinkNum
Failed: JSON_ResponseStatus
Table 15-279 PUT /ISAPI/Security/loginLinkNum?format=json

Method

PUT

Description

Set maximum number of logged in accounts.

Query

format: determine the format of request or response message.

Request

JSON_LoginLinkNum

Response

JSON_ResponseStatus

15.7.37 /ISAPI/Security/questionConfiguration
Get or set device security questions.

Request URL Definition
Table 15-280 GET /ISAPI/Security/questionConfiguration
Method

GET

Description

Get device security questions.

Query

None.

Request

None.

Response

Succeeded: XML_SecurityQuestion
Failed: XML_ResponseStatus
Table 15-281 PUT /ISAPI/Security/questionConfiguration

Method

PUT

Description

Set device security questions.

223

Intelligent Security API (General Application) Developer Guide
Query

security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.

Request

XML_SecurityQuestion

Response

XML_ResponseStatus

15.7.38 /ISAPI/Security/serverCertificate/capabilities?format=json
Get the client/server certificate capability.

Request URL Definition
Table 15-282 GET /ISAPI/Security/serverCertificate/capabilities?format=json
Method

GET

Description

Get the client/server certificate capability.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_ServerCertificateCap
Failed: JSON_ResponseStatus

15.7.39 /ISAPI/Security/serverCertificate/certificate
Get, upload, and delete device certificate information.

Request URL Definition
Table 15-283 GET /ISAPI/Security/serverCertificate/certificate
Method

GET

Description

Get device certificate information.

Query

type: certificate type, it can be set to "CCClentCertificate" (client
certificate for CC authentication);​ if no value is assigned to type, it
represents the HTTPS certificate.

224

Intelligent Security API (General Application) Developer Guide
Request

None.

Response

Succeeded: XML_CertificateInfo
XML_ResponseStatus
Table 15-284 PUT /ISAPI/Security/serverCertificate/certificate

Method

PUT

Description

Upload certificate to device.

Query

type: certificate type, it can be set to "CCClentCertificate" (client
certificate for CC authentication);​ if no value is assigned to type, it
represents the HTTPS certificate.

Request

Certificate data (binary)

Response

XML_ResponseStatus
Table 15-285 DELETE /ISAPI/Security/serverCertificate/certificate

Method

DELETE

Description

Delete the installed certificate of device.

Query

type: certificate type, it can be set to "CCClentCertificate" (client
certificate for CC authentication);​ if no value is assigned to type, it
represents the HTTPS certificate.

Request

None.

Response

XML_ResponseStatus

15.7.40 /ISAPI/Security/serverCertificate/certificate?customID=
Import the client/server certificate to the device.

Request URL Definition
Table 15-286 POST /ISAPI/Security/serverCertificate/certificate?customID=
Method

POST

Description

Import the client/server certificate to the device.

Query

security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.

225

Intelligent Security API (General Application) Developer Guide
iv: the initialization vector, and it is required when security is 1 or 2.
customID: custom certificate ID, string, it consists of digits and
characters.
Request

XML_CertificateReq_ImportCert +certificate data.

Response

XML_ResponseStatus

Remarks
• When the node <certificateMode> in the request message XML_CertificateReq_ImportCert is
set to "signingRequest", it means importing a self-signed certificate to the device.
• When the node <certificateMode> in the request message XML_CertificateReq_ImportCert is
set to "privateKey", it means importing the certificate along with the private key by the following
two steps.
1. Import the message XML_CertificateReq_ImportCert and the certificate file.
Note
The node <dataType> in the message XML_CertificateReq_ImportCert should be set to
"certificate".
2. Import the message XML_CertificateReq_ImportCert and the private key.
Note
- The node <dataType> in the message XML_CertificateReq_ImportCert should be set to
"privateKey".
- This step depends on the first step. If exception occurs, the device will return error.

15.7.41 /ISAPI/Security/serverCertificate/certificates?format=json
Get the information of multiple client/server certificates in a batch.

Request URL Definition
Table 15-287 GET /ISAPI/Security/serverCertificate/certificates?format=json
Method

GET

Description

Get the information of multiple client/server certificates in a batch.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_ServerCertificates
Failed: JSON_ResponseStatus

226

Intelligent Security API (General Application) Developer Guide
15.7.42 /ISAPI/Security/serverCertificate/certificates/<customID>?format=json
Get or delete the information of a specific client/server certificate.

Request URL Definition
Table 15-288 GET /ISAPI/Security/serverCertificate/certificates/<customID>?format=json
Method

GET

Description

Get the information of a specific client/server certificate.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_DeviceCertificate
Failed: JSON_ResponseStatus

Table 15-289 DELETE /ISAPI/Security/serverCertificate/certificates/<customID>?format=json
Method

DELETE

Description

Delete the information of a specific client/server certificate.

Query

format: determine the format of request or response message.

Request

None.

Response

JSON_ResponseStatus

Remarks
The <customID> in the request URL refers to the custom certificate ID.

15.7.43 /ISAPI/Security/serverCertificate/certSignReq
Get signature request information, generate, and delete signature request of device certificate.

Request URL Definition
Table 15-290 GET /ISAPI/Security/serverCertificate/certSignReq
Method

GET

Description

Get signature request information of device certificate.

Query

type: certificate type, it can be set to "CCClentCertificate" (client
certificate for CC authentication);​ if no value is assigned to type, it
represents the HTTPS certificate.

227

Intelligent Security API (General Application) Developer Guide
Request

None.

Response

Succeeded: XML_CertificateReqInfo
Failed: XML_ResponseStatus
Table 15-291 PUT /ISAPI/Security/serverCertificate/certSignReq

Method

PUT

Description

Generate signature request information of device certificate.

Query

type: certificate type, it can be set to "CCClentCertificate" (client
certificate for CC authentication);​ if no value is assigned to type, it
represents the HTTPS certificate.

Request

XML_CertificateReq

Response

XML_ResponseStatus
Table 15-292 DELETE /ISAPI/Security/serverCertificate/certSignReq

Method

DELETE

Description

Delete signature request of device certificate.

Query

type: certificate type, it can be set to "CCClentCertificate" (client
certificate for CC authentication);​ if no value is assigned to type, it
represents the HTTPS certificate.

Request

None.

Response

XML_ResponseStatus

15.7.44 /ISAPI/Security/serverCertificate/certSignReq?customID=
Create a PKCS#10 signature request of the client/server certificate.

Request URL Defintion
Table 15-293 POST /ISAPI/Security/serverCertificate/certSignReq?customID=
Method

POST

Description

Create a PKCS#10 signature request of the client/server certificate.

Query

customID: custom certificate ID, string, it consists of digits and
characters.

Request

XML_CertificateReq

Response

Succeeded: XML_CertificateResult
Failed: XML_ResponseStatus

228

Intelligent Security API (General Application) Developer Guide
15.7.45 /ISAPI/Security/serverCertificate/downloadCertSignReq
Download the certificate of authentication client.

Request URL Definition
Table 15-294 GET /ISAPI/Security/serverCertificate/downloadCertSignReq
Method

GET

Description

Download the certificate of authenticated client.

Query

type: certificate type, it can be set to "CCClentCertificate" (client
certificate for CC authentication);​ if no value is assigned to type, it
represents the HTTPS certificate.

Request

None.

Response

Certificate data (binary)

15.7.46 /ISAPI/Security/serverCertificate/downloadCertSignReq?customID=
Export the client/server certificate.

Request URL Definition
Table 15-295 GET /ISAPI/Security/serverCertificate/downloadCertSignReq?customID=
Method

GET

Description

Export the client/server certificate.

Query

customID: custom certificate ID, string, it consists of digits and
characters.

Request

None.

Response

Certificate data.

Remarks
The returned certificate data should be either formatted exactly according to PKCS#10 standard or
a PKCS#10 file encoded in PEM format.

15.7.47 /ISAPI/Security/serverCertificate/selfSignCert?customID=
Get or generate the PKCS#10 signature request of the client/server self-signed certificate.

229

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-296 GET /ISAPI/Security/serverCertificate/selfSignCert?customID=
Method

GET

Description

Get the PKCS#10 signature request of the client/server self-signed
certificate.

Query

customID: custom certificate ID, string, it consists of digits and
characters.

Request

None.

Response

Succeeded: XML_CertificateReq
Failed: XML_ResponseStatus
Table 15-297 PUT /ISAPI/Security/serverCertificate/selfSignCert?customID=

Method

PUT

Description

Generate the PKCS#10 signature request of the client/server selfsigned certificate.

Query

customID: custom certificate ID, string, it consists of digits and
characters.

Request

XML_CertificateReq

Response

XML_ResponseStatus

15.7.48 /ISAPI/Security/userCheck
Log in to the device by digest.

Request URL Definition
Table 15-298 GET /ISAPI/Security/userCheck
Method

GET

Description

Log in to the device by digest. This URL is used to check whether the
user name matches with the password.

Query

None.

Request

None.

Response

Succeeded: XML_userCheck
Failed: XML_ResponseStatus

230

Intelligent Security API (General Application) Developer Guide
15.7.49 /ISAPI/Security/UserPermission
Operations about the user permission of the device.

Request URL Definition
Table 15-299 GET /ISAPI/Security/UserPermission
Method

GET

Description

Get the user permission of the device.

Query

None.

Request

None.

Response

Succeeded: XML_UserPermissionList
Failed: XML_ResponseStatus
Table 15-300 PUT /ISAPI/Security/UserPermission

Method

PUT

Description

Set the user permission of the device.

Query

None.

Request

XML_UserPermissionList

Response

XML_ResponseStatus

15.7.50 /ISAPI/Security/UserPermission/<ID>
Operations about a specific user's permission.

Request URL Definition
Table 15-301 GET /ISAPI/Security/UserPermission/<ID>
Method

GET

Description

Get a specific user's permission.

Query

None.

Request

None.

Response

Succeeded: XML_UserPermission
Failed: XML_ResponseStatus

231

Intelligent Security API (General Application) Developer Guide
Table 15-302 PUT /ISAPI/Security/UserPermission/<ID>
Method

PUT

Description

Set a specific user's permission.

Query

None.

Request

XML_UserPermission

Response

XML_ResponseStatus

15.7.51 /ISAPI/Security/UserPermission/<ID>/localPermission
Get and set the local permission of a specified user.

Request URL Definition
Table 15-303 GET /ISAPI/Security/UserPermission/<ID>/localPermission
Method

GET

Description

Get the local permission of a specified user.

Query

None.

Request

None.

Response

XML_localPermission
Table 15-304 PUT /ISAPI/Security/UserPermission/<ID>/localPermission

Method

PUT

Description

Set the local permission of a specified user.

Query

None.

Request

XML_localPermission

Response

XML_ResponseStatus

15.7.52 /ISAPI/Security/UserPermission/<ID>/remotePermission
Get and set the remote permission of a specified user.

232

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-305 GET /ISAPI/Security/UserPermission/<ID>/remotePermission
Method

GET

Description

Get the remote permission of a specified user.

Query

None.

Request

None.

Response

XML_remotePermission
Table 15-306 PUT /ISAPI/Security/UserPermission/<ID>/remotePermission

Method

PUT

Description

Set the remote permission of a specified user.

Query

None.

Request

XML_remotePermission

Response

XML_ResponseStatus

15.7.53 /ISAPI/Security/UserPermission/adminCap
Get the user permission capability of the administrator.

Request URL Definiton
Table 15-307 GET /ISAPI/Security/UserPermission/adminCap
Method

GET

Description

Get the user permission capability of the administrator.

Query

None.

Request

None.

Response

Succeeded: XML_UserPermissionCap
Failed: XML_ResponseStatus

Remarks
Only permissions that can be configured by the admin user should be returned.

15.7.54 /ISAPI/Security/UserPermission/operatorCap
Get the user permission capability of the operator.

233

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-308 GET /ISAPI/Security/UserPermission/operatorCap
Method

GET

Description

Get the user permission capability of the operator.

Query

None.

Request

None.

Response

Succeeded: XML_UserPermissionCap
Failed: XML_ResponseStatus

Remarks
Only permissions that can be configured by the operator should be returned.

15.7.55 /ISAPI/Security/UserPermission/viewerCap
Get the user permission capability of the viewer.

Request URL Definition
Table 15-309 GET /ISAPI/Security/UserPermission/viewerCap
Method

GET

Description

Get the user permission capability of the viewer.

Query

None.

Request

None.

Response

XML_UserPermissionCap

15.7.56 /ISAPI/Security/users
Operations about the user list of the device.

Request URL Definition
Table 15-310 GET /ISAPI/Security/users
Method

GET

Description

Get the user list of the device.

234

Intelligent Security API (General Application) Developer Guide
Query

security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.

Request

None.

Response

Succeeded: XML_UserList
Failed: XML_ResponseStatus
Table 15-311 PUT /ISAPI/Security/users

Method

PUT

Description

Update the user list of the device.

Query

security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.

Request

XML_UserList

Response

XML_ResponseStatus
Table 15-312 POST /ISAPI/Security/users

Method

POST

Description

Add a user to the user list of the device.

Query

security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.

Request

XML_User

Response

XML_ResponseStatus

235

Intelligent Security API (General Application) Developer Guide
Table 15-313 DELETE /ISAPI/Security/users
Method

DELETE

Description

Delete the user list of the device.

Query

security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.
loginPassword: encrypted administrator password.

Request

None.

Response

XML_ResponseStatus

Remarks
• A default account "admin" must be provided with the administrator permission and it cannot be
deleted.
• Passwords can only be uploaded and cannot be displayed when getting the user list of the
device.
• The user ID should be returned when adding users to the user list.
Example
Sample Code for Adding User
POST /ISAPI/Security/users HTTP/1.1
Host: 10.17.132.49
Content-Length: 335
Connection: Keep-Alive
Authorization: Digest username="admin",
realm="DS-2CD2F12FWD-IWS",
nonce="4e6a4d774d6a63304f544936593255335a474d334f54673d",
uri="/ISAPI/Security/users",
cnonce="178e14d4977c835db891b5392b5d0a67",
nc=00000015,
response="d92518fb00cd2772cf212f5326b251be",
qop="auth"
<?xml version="1.0" encoding="UTF-8"?>
<User>
<id>0</id>
<userName>test</userName>
<password>1qaz2wsx</password>
<bondIpList>
<bondIp>
<id>1</id>

236

Intelligent Security API (General Application) Developer Guide
<ipAddress>0.0.0.0</ipAddress>
<ipv6Address>::</ipv6Address>
</bondIp>
</bondIpList>
<macAddress></macAddress>
<userLevel>Operator</userLevel>
<attribute>
<inherent>false</inherent>
</attribute>
</User>
HTTP/1.1 200 OK
Date: Tue, 14 Mar 2017 20:24:31 GMT
Server: App-webs/
Connection: close
Content-Length: 288
Content-Type: application/xml
<?xml version="1.0" encoding="UTF-8"?>
<ResponseStatus version="2.0" xmlns="http://www.isapi.com/ver20/XMLSchema">
<requestURL>/ISAPI/Security/users</requestURL>
<statusCode>1</statusCode>
<statusString>OK</statusString>
<id>2</id>
<subStatusCode>ok</subStatusCode>
</ResponseStatus>

Example
Sample Code for Setting User Permission
PUT /ISAPI/Security/UserPermission/2 HTTP/1.1
Host: 10.17.132.49
Content-Length: 891
Connection: Keep-Alive
Authorization: Digest username="admin",
realm="DS-2CD2F12FWD-IWS",
nonce="4e6a4d774d6a63304f544936593255335a474d334f54673d",
uri="/ISAPI/Security/UserPermission/2",
cnonce="178e14d4977c835db891b5392b5d0a67",
nc=00000016,
response="f69a20db00b36e9bb46c26c06e9bae80",
qop="auth"
<?xml version="1.0" encoding="utf-8"?>
<UserPermission>
<id>2</id>
<userID>2</userID>
<userType>operator</userType>
<remotePermission>
<parameterConfig>false</parameterConfig>
<logOrStateCheck>true</logOrStateCheck>
<upgrade>false</upgrade>

237

Intelligent Security API (General Application) Developer Guide
<voiceTalk>true</voiceTalk>
<restartOrShutdown>false</restartOrShutdown>
<alarmOutOrUpload>false</alarmOutOrUpload>
<contorlLocalOut>false</contorlLocalOut>
<transParentChannel>false</transParentChannel>
<preview>true</preview>
<record>true</record>
<ptzControl>true</ptzControl>
<playBack>true</playBack>
<videoChannelPermissionList>
<videoChannelPermission>
<id>1</id>
<preview>true</preview>
<record>true</record>
<playBack>true</playBack>
</videoChannelPermission>
</videoChannelPermissionList>
<ptzChannelPermissionList>
<ptzChannelPermission>
<id>1</id>
<ptzControl>true</ptzControl>
</ptzChannelPermission>
</ptzChannelPermissionList>
</remotePermission>
</UserPermission>
HTTP/1.1 200 OK
Date: Tue, 14 Mar 2017 20:24:31 GMT
Server: App-webs/
Connection: close
Content-Length: 288
Content-Type: application/xml
<?xml version="1.0" encoding="UTF-8"?>
<ResponseStatus version="2.0" xmlns="http://www.isapi.com/ver20/XMLSchema">
<requestURL>/ISAPI/Security/UserPermission/2</requestURL>
<statusCode>1</statusCode>
<statusString>OK</statusString>
<subStatusCode>ok</subStatusCode>
</ResponseStatus>

15.7.57 /ISAPI/Security/users/<ID>
Operations about the user's configuration of the device.

238

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-314 GET /ISAPI/Security/users/<ID>
Method

GET

Description

Get a specific user's configuration of the device.

Query

security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.

Request

None.

Response

Succeeded: XML_User
Failed: XML_ResponseStatus
Table 15-315 PUT /ISAPI/Security/users/<ID>

Method

PUT

Description

Set a specific user's configuration of the device.

Query

security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.

Request

XML_User

Response

XML_ResponseStatus
Table 15-316 DELETE /ISAPI/Security/users/<ID>

Method

DELETE

Description

Delete a specific user's configuration of the device.

Query

security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates

239

Intelligent Security API (General Application) Developer Guide
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.
loginPassword: encrypted administrator password.
Request

None.

Response

XML_ResponseStatus

Remarks
The administrator account cannot be deleted.

15.7.58 /ISAPI/SecurityCP/ReportCenterCfg/capabilities?format=json
Get the configuration capability of the report uploading method.

Request URL Definition
Table 15-317 GET /ISAPI/SecurityCP/ReportCenterCfg/capabilities?format=json
Method

GET

Description

Get the configuration capability of the report uploading method.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_Cap_ReportCenterCfg
Failed: JSON_ResponseStatus

15.7.59 /ISAPI/SecurityCP/ReportCenterCfg/<ID>?format=json
Operations about the configuration of the report uploading method.

Request URL Definition
Table 15-318 GET /ISAPI/SecurityCP/ReportCenterCfg/<ID>?format=json
Method

GET

Description

Get the parameters of the report uploading method.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_ReportCenterCfg

240

Intelligent Security API (General Application) Developer Guide
Failed: JSON_ResponseStatus
Table 15-319 PUT /ISAPI/SecurityCP/ReportCenterCfg/<ID>?format=json
Method

PUT

Description

Set the parameters of the report uploading method.

Query

format: determine the format of request or response message.

Request

JSON_ReportCenterCfg

Response

JSON_ResponseStatus

Remarks
The <ID> in the request URL refers to the center group No.

15.8 /ISAPI/Smart
15.8.1 /ISAPI/Smart/capabilities
Get the capability set of intelligent devices.

Request URL Definition
Table 15-320 GET /ISAPI/Smart/capabilities
Method

GET

Description

Get the capability set of intelligent devices.

Query

None.

Request

None.

Response

Succeeded: XML_SmartCap
Failed: XML_ResponseStatus

15.9 /ISAPI/Streaming
15.9.1 /ISAPI/Streaming/channels
Operations about the encoding configuration of multiple channels.

241

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-321 GET /ISAPI/Streaming/channels
Method

GET

Description

Get the encoding parameters of multiple channels.

Query

None.

Request

None.

Response

XML_StreamingChannelList
Table 15-322 PUT /ISAPI/Streaming/channels

Method

PUT

Description

Set the encoding parameters of multiple channels.

Query

None.

Request

XML_StreamingChannelList

Response

XML_ResponseStatus

15.9.2 /ISAPI/Streaming/channels/<ID>
Operations about the encoding configurations of a specific channel.

Request URL Definition
Table 15-323 GET /ISAPI/Streaming/channels/<ID>
Method

GET

Description

Get the encoding parameters of a specific channel.

Query

None.

Request

None.

Response

Succeeded: XML_StreamingChannel
Failed: XML_ResponseStatus
Table 15-324 PUT /ISAPI/Streaming/channels/<ID>

Method

PUT

Description

Set the encoding parameters of a specific channel.

Query

None.

242

Intelligent Security API (General Application) Developer Guide
Request

XML_StreamingChannel

Response

XML_ResponseStatus
Table 15-325 DELETE /ISAPI/Streaming/channels/<ID>

Method

DELETE

Description

Delete the encoding parameters of a specific channel.

Query

None

Request

None.

Response

XML_ResponseStatus

Remarks
The <ID> in the URL refers to the channel ID.
Example
Interaction Example of Getting Encoding Parameters of A Specific Channel
GET /ISAPI/Streaming/channels/444 HTTP/1.1
…
HTTP/1.1 200 OK
Content-Type: application/xml; charset=“UTF-8”
Content-Length: ISAPI
<?xml version="1.0" encoding="UTF-8"?>
<StreamingChannel version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id>444</id>
<channelName>Input 1 MPEG-4 ASP</channelName>
<enabled>true</enabled>
<Transport>
<rtspPortNo>554</rtspPortNo>
<maxPacketSize>1446</maxPacketSize>
<ControlProtocolList>
<ControlProtocol>
<streamingTransport>RTSP</streamingTransport>
</ControlProtocol>
<ControlProtocol>
<streamingTransport>HTTP</streamingTransport>
</ControlProtocol>
</ControlProtocolList>
</Transport>
<Video>
<enabled>true</enabled>
<videoInputChannelID>2</videoInputChannelID>
<videoCodecType>MPEG4</videoCodecType>
<videoScanType>progressive</videoScanType>
<videoResolutionWidth> 640</videoResolutionWidth>
<videoResolutionHeight>480</videoResolutionHeight>
<videoPositionX>0</videoPositionX>

243

Intelligent Security API (General Application) Developer Guide
<videoPositionY>0</videoPositionY>
<videoQualityControlType>CBR</videoQualityControlType>
<constantBitRate>2000</constantBitRate>
<maxFrameRate>2500</maxFrameRate>
<keyFrameInterval>1000</keyFrameInterval>
<rotationDegree>0</rotationDegree>
<mirrorEnabled>false</mirrorEnabled>
<snapShotImageType>JPEG</snapShotImageType>
</Video>
<Audio>
<enabled>false</enabled>
<audioInputChannelID>2</audioInputChannelID>
<audioCompressionType> G.726</audioCompressionType>
<audioBitRate>24</audioBitRate>
<audioSamplingRate>8</audioSamplingRate>
</Audio>
</StreamingChannel>

15.9.3 /ISAPI/Streaming/channels/<ID>/capabilities
Get encoding capability of a specific channel.

Request URL Definition
Table 15-326 GET /ISAPI/Streaming/channels/<ID>/capabilities
Method

GET

Description

Get the encoding capability of a specific channel.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_StreamingChannel
Failed: XML_ResponseStatus

Remarks
The <ID> in the URL refers to the channel ID.
Example
Interaction Example of Getting Encoding Capability of A Specific Channel
GET /ISAPI/Streaming/channels/444/capabilities HTTP/1.1
…
HTTP/1.1 200 OK
Content-Type: application/xml; charset="UTF-8"
Content-Length: ISAPI
<?xml version="1.0" encoding="UTF-8"?>
<StreamingChannel version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">

244

Intelligent Security API (General Application) Developer Guide
<id opt="111,222,333,444">444</id>
<channelName min="0" max="64">Input 1 MPEG-4 ASP</channelName>
<enabled opt="true,false" def="true">true</enabled>
<Transport>
<rtspPortNo min="0" max="65535" def="554">554</rtspPortNo>
<maxPacketSize min="0" max="1500">1446</maxPacketSize>
<audioPacketLength min="0" max="5000"/>
<audioInboundPacketLength min="0" max="5000"/>
<audioInboundPortNo min="0" max="65535"/>
<videoSourcePortNo min="0" max="65535"/>
<audioSourcePortNo min="0" max="65535"/>
<ControlProtocolList>
<ControlProtocol>
<streamingTransport opt="RTSP/RTP,HTTP">RTSP</streamingTransport>
</ControlProtocol>
<ControlProtocol>
<streamingTransport opt="RTSP/RTP,HTTP">HTTP</streamingTransport>
</ControlProtocol>
</ControlProtocolList>
<Unicast>
<enabled opt="true,false" def="false"/>
<rtpTransportType opt="RTP/UDP,RTP/TCP"/>
</Unicast>
<Multicast>
<enabled opt="true,false" def="false"/>
<userTriggerThreshold/>
<videoDestPortNo min="0" max="65535"/>
<audioDestPortNo min="0" max="65535"/>
<destIPAddress min="8" max="16"/>
<destIPv6Address min="15" max="39"/>
<ttl min="0" max="127" def="1"/>
</Multicast>
<Security>
<enabled opt="true,false" def="false"/>
</Security>
</Transport>
<Video>
<enabled opt="true,false">true</enabled>
<videoInputChannelID opt="1,2,3,4">2</videoInputChannelID>
<videoCodecType opt="MJPEG,MPEG4">MPEG4</videoCodecType>
<videoScanType opt="interlaced,progressive">progressive</videoScanType>
<videoResolutionWidth min="0" max="640">640</videoResolutionWidth>
<videoResolutionHeight min="0" max="480">480</videoResolutionHeight>
<videoPositionX min="0" max="640">0</videoPositionX>
<videoPositionY min="0" max="480">0</videoPositionY>
<videoQualityControlType opt="CBR,VBR">CBR</videoQualityControlType>
<constantBitRate min="50" max="4000" dynamic="true">2000</constantBitRate>
<maxFrameRate opt="2500,1250,625,312,156,78，830" dynamic="true">2500</maxFrameRate>
<keyFrameInterval min="0", max="10000">1000</keyFrameInterval>
<rotationDegree opt="0,90,180,270" def="0">0</rotationDegree>
<mirrorEnabled opt="true,false" def="false">false</mirrorEnabled>
<snapShotImageType opt="JPEG" def="JPEG">JPEG</snapShotImageType>

245

Intelligent Security API (General Application) Developer Guide
</Video>
<Audio>
<enabled opt="true,false" def="false">false</enabled>
<audioInputChannelID opt="1,2,3,4">2</audioInputChannelID>
<audioCompressionType opt="G.726,G.711ulaw" def="G.726">G.726</audioCompressionType>
<audioBitRate opt="16,24,32,40" def="32" dynamic="true">24</audioBitRate>
<audioSamplingRate opt="8" dynamic="true">8</audioSamplingRate>
<audioResolution opt="3,4,5,6" dynamic="true"/>
</Audio>
</StreamingChannel>

15.9.4 /ISAPI/Streaming/channels/<ID>/dynamicCap
Get the dynamic encoding capability of a specific channel.

Request URL Definition
Table 15-327 GET /ISAPI/Streaming/channels/<ID>/dynamicCap
Method

GET

Description

Get the dynamic encoding capability of a specific channel.

Query

None.

Request

None.

Response

XML_DynamicCap

Remarks
The <ID> in the URL refers to the channel ID.

15.9.5 /ISAPI/Streaming/channels/<ID>/picture
Manually capture picture in the video stream of a specific channel.

Request URL Definition
Table 15-328 GET /ISAPI/Streaming/channels/<ID>/picture
Method

GET

Description

Manually capture picture in the video stream of a specific channel.

Query

(Optional) videoResolutionWidth: width of captured picture
resolution.
(Optional) videoResolutionHeight: height of captured picture
resolution.

246

Intelligent Security API (General Application) Developer Guide
(Optional) snapShotImageType: captured picture format, only the
JPEG format is supported.
Request

None.

Response

Picture data, which is transmitted on HTTP.

Remarks
• The <ID> in the request URL refers to the streaming channel ID, which is equal to (channel No. ×
100 + 1). For example, if a camera only has one channel, its ID is 101.
• This URL only supports capturing picture in main stream, and only JPEG format is supported.
Example
Sample Code for Manually Capturing Picture
GET /ISAPI/Streaming/channels/1/picture HTTP/1.1
Host: 10.17.132.49
Connection: Keep-Alive
Authorization: Digest username="admin",
realm="DS-2CD2F12FWD-IWS",
nonce="4d305134517a55344d6a55365a4445324f544130597a453d",
uri="/ISAPI/Streaming/channels/1/picture",
cnonce="481bb1afa48b24e512778b084bfe4977",
nc=00000001,
response="e5670d5d9d40c522afabb11b5fa35268",
qop="auth"
HTTP/1.1 200 OK
Content-Type: image/jpeg; charset="UTF-8"
Content-Length:19991
......JFIF.............C.
.
...
.. .....'... .)10.)-,3:J>36F7,- (Binary picture data)

15.9.6 /ISAPI/Streaming/channels/<ID>/regionClip
Get or set target cropping parameters by streaming channel.

Request URL Definition
Table 15-329 GET /ISAPI/Streaming/channels/<ID>/regionClip
Method

GET

Description

Get target cropping parameters by streaming channel.

Query

None.

247

Intelligent Security API (General Application) Developer Guide
Request

None.

Response

Succeeded: XML_RegionClip
Failed: XML_ResponseStatus
Table 15-330 PUT /ISAPI/Streaming/channels/<ID>/regionClip

Method

PUT

Description

Set target cropping parameters by streaming channel.

Query

None.

Request

XML_RegionClip

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to streaming channel ID.

15.9.7 /ISAPI/Streaming/channels/<ID>/regionClip/capabilities
Get configuration capability of target cropping by streaming channel.

Request URL Definition
Table 15-331 GET /ISAPI/Streaming/channels/<ID>/regionClip/capabilities
Method

GET

Description

Get configuration capability of target cropping by streaming channel.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_RegionClip
Failed: XML_ResponseStatus

Remarks
The <ID> in the request URL refers to streaming channel ID.

15.9.8 /ISAPI/Streaming/channels/<ID>/smartOverlap/capabilities?format=json
Get the capability of configuring the stream for displaying VCA rules of smart events.

248

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-332 GET /ISAPI/Streaming/channels/<ID>/smartOverlap/capabilities?format=json
Method

GET

Description

Get the capability of configuring the stream for displaying VCA rules
of smart events.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_SmartOverlapCap
Failed: JSON_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel No.

15.9.9 /ISAPI/Streaming/channels/<ID>/smartOverlap?format=json
Get or set the stream parameters for displaying VCA rules of smart events.

Request URL Definition
Table 15-333 GET /ISAPI/Streaming/channels/<ID>/smartOverlap?format=json
Method

GET

Description

Get the stream parameters for displaying VCA rules of smart events.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_SmartOverlap
Failed: JSON_ResponseStatus

Table 15-334 PUT /ISAPI/Streaming/channels/<ID>/smartOverlap?format=json
Method

PUT

Description

Set the stream parameters for displaying VCA rules of smart events.

Query

format: determine the format of request or response message.

Request

JSON_SmartOverlap

Response

JSON_ResponseStatus

249

Intelligent Security API (General Application) Developer Guide
Remarks
The <ID> in the request URL refers to the channel No.

15.9.10 /ISAPI/Streaming/channels/<ID>/status
Get the streaming or encoding status of a specific channel.

Request URL Definition
Table 15-335 GET /ISAPI/Streaming/channels/<ID>/status
Method

GET

Description

Get the streaming or encoding status of a specific channel.

Query

None.

Request

None.

Response

Succeeded: XML_StreamingSessionStatusList
Failed: XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the streaming channel ID.

15.9.11 /ISAPI/Streaming/encryption/capabilities?format=json
Get stream encryption capability.

Request URL Definition
Table 15-336 GET /ISAPI/Streaming/encryption/capabilities?format=json
Method

GET

Description

Get stream encryption capability.

Query

format: determine the format of request or response message.

Request

None.

Response

JSON_EncryptionCap

15.9.12 /ISAPI/Streaming/encryption/secretKey?format=json
Operations about the configuration of stream encryption key.

250

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-337 GET /ISAPI/Streaming/encryption/secretKey?format=json
Method

GET

Description

Get the configuration parameters of stream encryption key.

Query

format: determine the format of request or response message.
security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.

Request

None.

Response

JSON_secretKey
Table 15-338 PUT /ISAPI/Streaming/encryption/secretKey?format=json

Method

GET

Description

Set stream encryption key.

Query

format: determine the format of request or response message.
security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.

Request

JSON_secretKey

Response

JSON_ResponseStatus

15.9.13 /ISAPI/Streaming/encryption?format=json
Operations about the configuration of stream encryption.

251

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-339 GET /ISAPI/Streaming/encryption?format=json
Method

GET

Description

Get the configuration parameters of stream encryption.

Query

format: determine the format of request or response message.

Request

None.

Response

JSON_EnableEncryption
Table 15-340 PUT /ISAPI/Streaming/encryption?format=json

Method

GET

Description

Enable stream encryption.

Query

format: determine the format of request or response message.

Request

JSON_EnableEncryption

Response

JSON_ResponseStatus

15.9.14 /ISAPI/Streaming/status
Get the streaming or encoding status of all channels.

Request URL Definition
Table 15-341 GET /ISAPI/Streaming/status
Method

GET

Description

Get the streaming or encoding status of all channels.

Query

None.

Request

None.

Response

Succeeded: XML_StreamingStatus
Failed: XML_ResponseStatus

15.9.15 rtsp://<host>[:port]/ISAPI/Streaming/channels/<ID>
Operations about live view of a specific channel.

252

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-342 DESCRIBE rtsp://<host>[:port]/ISAPI/Streaming/channels/<ID>
Method

DESCRIBE

Description

Get basic parameters for live view.

Query

None.

Request

None.

Response

None.
Table 15-343 SETUP rtsp://<host>[:port]/ISAPI/Streaming/channels/<ID>

Method

SETUP

Description

Get session information for live view.

Query

None.

Request

None.

Response

None.
Table 15-344 PLAY rtsp://<host>[:port]/ISAPI/Streaming/channels/<ID>

Method

PLAY

Description

Start live view.

Query

None.

Request

None.

Response

None.

Table 15-345 TEARDOW rtsp://<host>[:port]/ISAPI/Streaming/channels/<ID>
Method

TEARDOW

Description

Stop live view.

Query

None.

Request

None.

Response

None.

Remarks
The <ID> in the URL is defined as (channel No.)*100+(stream type value).
channel No.

253

Intelligent Security API (General Application) Developer Guide
For analog channel, the No. starts from 1, and for digital channel, the No. starts from the last
analog channel No.
E.g., if the device has 16 analog channels and 16 digital channels, the analog channel No. is
between 1 and 16, and the digital channel No. is between 17 and 32.
stream type value
The stream type values contain 1, 2, and 3. 1-main stream, 2-sub-stream, 3-third stream.
E.g., if ID is 101, it indicates the main stream of channel No.1; if ID is 102, it indicates the substream of channel No. 2; if ID is 1601, it indicates the main stream of channel 16;...

15.9.16 rtsp://<host>[:port]/ISAPI/Streaming/channels/<ID>?npq=
Operations about multicast based on network protocol quality (NPQ).

Request URL Definition
Table 15-346 DESCRIBE rtsp://<host>[:port]/ISAPI/Streaming/channels/<ID>?npq=
Method

DESCRIBE

Description

Request for getting basic parameters for multicast based on NPQ.

Query

npq: Network Protocol Quality (NPQ), this query parameter is used
to enable streaming according to NPQ and by FEC (Forward Error
Correction) method if its value is set to "fec".

Request

None.

Response

None.

Table 15-347 SETUP rtsp://<host>[:port]/ISAPI/Streaming/channels/<ID>?npq=
Method

SETUP

Description

Request for getting session information for multicast based on NPQ.

Query

npq: Network Protocol Quality (NPQ), this query parameter is used
to enable streaming according to NPQ and by FEC (Forward Error
Correction) method if its value is set to "fec".

Request

None.

Response

None.

Table 15-348 PLAY rtsp://<host>[:port]/ISAPI/Streaming/channels/<ID>?npq=
Method

PLAY

Description

Start multicast based on NPQ.

254

Intelligent Security API (General Application) Developer Guide
Query

npq: Network Protocol Quality (NPQ), this query parameter is used
to enable streaming according to NPQ and by FEC (Forward Error
Correction) method if its value is set to "fec".

Request

None.

Response

None.

Table 15-349 TEARDOW rtsp://<host>[:port]/ISAPI/Streaming/channels/<ID>?npq=
Method

TEARDOW

Description

Stop multicast based on NPQ.

Query

npq: Network Protocol Quality (NPQ), this query parameter is used
to enable streaming according to NPQ and by FEC (Forward Error
Correction) method if its value is set to "fec".

Request

None.

Response

None.

Remarks
The <ID> in the request URL is the value of (channel No. × 100 + stream type value), e.g., if the
channel No. is 1, and the stream type value is 1, the ID equals to 101.
• For channel No., if the device contains analog and digital channels, the analog channel No. starts
from 1, and the digital channel No. starts from the next No. of the end analog channel. For
example, if the device contains 16 analog channels and 16 digital channels, the analog channel
No. is between 1 and 16, while the digital channel No. is between 17 and 32.
• For stream type, only two values are available, that is, 1 (main stream) and 2 (sub-stream).

15.9.17 rtsp://<host>[:port]/ISAPI/Streaming/tracks/<ID>?starttime=&endtime=
Operations about playback of a specific channel.

Request URL Definition
Table 15-350 DESCRIBE rtsp://<host>[:port]/ISAPI/Streaming/tracks/<ID>?starttime=&endtime=
Method

DESCRIBE

Description

Request for getting basic parameters for playback.

Query

starttime: start time of the target stream, whose format is based on
the ISO 8601 standard.
(Optional) endtime: end time of the target stream, whose format is
based on the ISO 8601 standard. If this field is empty, the stream will

255

Intelligent Security API (General Application) Developer Guide
be continuously obtained until the session is terminated or paused
manually.
Request

None.

Response

None.

Table 15-351 SETUP rtsp://<host>[:port]/ISAPI/Streaming/tracks/<ID>?starttime=&endtime=
Method

SETUP

Description

Request for getting session information for playback.

Query

starttime: start time of the target stream, whose format is based on
the ISO 8601 standard.
(Optional) endtime: end time of the target stream, whose format is
based on the ISO 8601 standard. If this field is empty, the stream will
be continuously obtained until the session is terminated or paused
manually.

Request

None.

Response

None.

Table 15-352 PLAY rtsp://<host>[:port]/ISAPI/Streaming/tracks/<ID>?starttime=&endtime=
Method

PLAY

Description

Start playback.

Query

starttime: start time of the target stream, whose format is based on
the ISO 8601 standard.
(Optional) endtime: end time of the target stream, whose format is
based on the ISO 8601 standard. If this field is empty, the stream will
be continuously obtained until the session is terminated or paused
manually.

Request

None.

Response

None.
Table 15-353 TEARDOW rtsp://<host>[:port]/ISAPI/Streaming/tracks/<ID>?
starttime=&endtime=

Method

TEARDOW

Description

Stop playback.

Query

starttime: start time of the target stream, whose format is based on
the ISO 8601 standard.
(Optional) endtime: end time of the target stream, whose format is
based on the ISO 8601 standard. If this field is empty, the stream will

256

Intelligent Security API (General Application) Developer Guide
be continuously obtained until the session is terminated or paused
manually.
Request

None.

Response

None.

Remarks
The <ID> in the URL is defined as (channel No.)*100+(stream type value).
channel No.
For analog channel, the No. starts from 1, and for digital channel, the No. starts from the last
analog channel No.
E.g., if the device has 16 analog channels and 16 digital channels, the analog channel No. is
between 1 and 16, and the digital channel No. is between 17 and 32.
stream type value
The stream type values contain 1, 2, and 3. 1-main stream, 2-sub-stream, 3-third stream.
E.g., if ID is 101, it indicates the main stream of channel No.1; if ID is 102, it indicates the substream of channel No. 2; if ID is 1601, it indicates the main stream of channel 16;...

15.10 /ISAPI/System
15.10.1 /ISAPI/System/accessDevice/associatedChannel?format=json
Get the linked channel informaiton of added IoT device.

Request URL Definition
Table 15-354 GET /ISAPI/System/accessDevice/associatedChannel?format=json
Method

GET

Description

Get the linked channel informaiton of added IoT device.

Query

format: determine the format of request or response message.

Request

JSON_IOT_ChannelInfoList

Response

JSON_AssociatedChannelList

15.10.2 /ISAPI/System/AcsUpdate/capabilities
Get the capability of upgrading device (slave access control device, peripheral module, etc.).

257

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-355 GET /ISAPI/System/AcsUpdate/capabilities
Method

GET

Description

Get the capability of upgrading device (slave access control device,
peripheral module, etc.).

Query

None.

Request

None.

Response

Succeeded: XML_Cap_AcsUpdate
Failed: XML_ResponseStatus

15.10.3 /ISAPI/System/activate
Device activation.

Request URL Definition
Table 15-356 PUT /ISAPI/System/activate
Method

PUT

Description

Send activation password to activate the device.

Query

None.

Request

XML_ActivateInfo

Response

XML_ResponseStatus

15.10.4 /ISAPI/System/algorithmsVersion
Get the version information of algorithm library.

Request URL Definition
Table 15-357 GET /ISAPI/System/algorithmsVersion
Method

GET

Description

Get the version information of algorithm library.

Query

None.

Request

None.

Response

XML_AlgorithmsVersion

258

Intelligent Security API (General Application) Developer Guide
15.10.5 /ISAPI/System/Audio/AudioIn/channels/<ID>
Get or set audio input parameters of a specific channel.

Request URL Definition
Table 15-358 GET /ISAPI/System/Audio/AudioIn/channels/<ID>
Method

GET

Description

Get audio input parameters of a specific channel.

Query

None.

Request

None.

Response

Succeeded: XML_AudioIn
Failed: XML_ResponseStatus
Table 15-359 PUT /ISAPI/System/Audio/AudioIn/channels/<ID>

Method

PUT

Description

Set audio input parameters of a specific channel.

Query

None.

Request

XML_AudioIn

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel No.

15.10.6 /ISAPI/System/Audio/AudioIn/channels/<ID>/capabilities
Get the audio input capability of a specific channel.

Request URL Definition
Table 15-360 GET /ISAPI/System/Audio/AudioIn/channels/<ID>/capabilities
Method

GET

Description

Get the audio input capability of a specific channel.

Query

None.

Request

None.

Response

Succeeded: XML_AudioInCap

259

Intelligent Security API (General Application) Developer Guide
Failed: XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel No.

15.10.7 /ISAPI/System/Audio/AudioOut/channels/<ID>
Get or set audio output parameters of a specific channel.

Request URL Definition
Table 15-361 GET /ISAPI/System/Audio/AudioOut/channels/<ID>
Method

GET

Description

Get audio output parameters of a specific channel.

Query

None.

Request

None.

Response

Succeeded: XML_AudioOut
Failed: XML_ResponseStatus
Table 15-362 PUT /ISAPI/System/Audio/AudioOut/channels/<ID>

Method

PUT

Description

Set audio output parameters of a specific channel.

Query

None.

Request

XML_AudioOut

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel No.

15.10.8 /ISAPI/System/Audio/AudioOut/channels/<ID>/capabilities
Get the audio output capability of a specific channel.

Request URL Definition
Table 15-363 GET /ISAPI/System/Audio/AudioOut/channels/<ID>/capabilities
Method

GET

Description

Get the audio output capability of a specific channel.

260

Intelligent Security API (General Application) Developer Guide
Query

None.

Request

None.

Response

Succeeded: XML_AudioOutCap
Failed: XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel No.

15.10.9 /ISAPI/System/Audio/capabilities
Get the audio capability.

Request URL Definition
Table 15-364 GET /ISAPI/System/Audio/capabilities
Method

GET

Description

Get the audio capability.

Query

None.

Request

None.

Response

Succeeded: XML_AudioCap
Failed: XML_ResponseStatus

15.10.10 /ISAPI/System/Audio/channels
Get the configuration of all audio channels of the device.

Request URL Definition
Table 15-365 GET /ISAPI/System/Audio/channels
Method

GET

Description

Get the configuration of all audio channels of the device.

Query

None.

Request

None.

Response

Succeeded: XML_AudioChannelList
Failed: XML_ResponseStatus

261

Intelligent Security API (General Application) Developer Guide
15.10.11 /ISAPI/System/Audio/channels/<ID>
Get the configuration of a specific audio channel of the device.

Request URL Definition
Table 15-366 GET /ISAPI/System/Audio/channels/<ID>
Method

GET

Description

Get the configuration of a specific audio channel of the device.

Query

None.

Request

None.

Response

Succeeded: XML_AudioChannel
Failed: XML_ResponseStatus

15.10.12 /ISAPI/System/Audio/channels/<ID>/dynamicCap
Get dynamic audio capability by channel.

Request URL Definition
Table 15-367 GET /ISAPI/System/Audio/channels/<ID>/dynamicCap
Method

GET

Description

Get dynamic audio capability by channel.

Query

None.

Request

XML_AudioDscriptor

Response

Succeeded: XML_DynamicCap
Failed: XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the audio input channel ID.

15.10.13 /ISAPI/System/autoMaintenance/capabilities?format=json
Get the capability of automatic maintenance configuration.

262

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-368 GET /ISAPI/System/autoMaintenance/capabilities?format=json
Method

GET

Description

Get the capability of automatic maintenance configuration.

Query

format: determine the format of request or response message.

Request

None.

Response

JSON_AutoMaintenanceCap

15.10.14 /ISAPI/System/autoMaintenance?format=json
Get automatic maintenance configuration parameters.

Request URL Definition
Table 15-369 GET /ISAPI/System/autoMaintenance?format=json
Method

GET

Description

Get automatic maintenance configuration parameters.

Query

format: determine the format of request or response message.

Request

None.

Response

JSON_AutoMaintenance
Table 15-370 PUT /ISAPI/System/autoMaintenance?format=json

Method

PUT

Description

Set automatic maintenance parameters.

Query

format: determine the format of request or response message.

Request

JSON_AutoMaintenance

Response

JSON_ResponseStatus

15.10.15 /ISAPI/System/Bluetooth/capabilities
Get the bluetooth configuration capability.

263

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-371 GET /ISAPI/System/Bluetooth/capabilities
Method

GET

Description

Get the bluetooth configuration capability.

Query

None.

Request

None.

Response

Succeeded: XML_BluetoothCap
Failed: XML_ResponseStatus

15.10.16 /ISAPI/System/Bluetooth/ibeaconParam
Operations about the ibeacon bluetooth configuration.

Request URL Definition
Table 15-372 GET /ISAPI/System/Bluetooth/ibeaconParam
Method

GET

Description

Get the ibeacon bluetooth parameters.

Query

None.

Request

None.

Response

Succeeded: XML_IbeaconParam
Failed: XML_ResponseStatus
Table 15-373 PUT /ISAPI/System/Bluetooth/ibeaconParam

Method

PUT

Description

Set the ibeacon bluetooth parameters.

Query

None.

Request

XML_IbeaconParam

Response

XML_ResponseStatus

15.10.17 /ISAPI/System/Bluetooth/ibeaconParam/capabilities
Get the ibeacon bluetooth configuration capability.

264

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-374 GET /ISAPI/System/Bluetooth/ibeaconParam/capabilities
Method

GET

Description

Get the ibeacon bluetooth configuration capability.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_IbeaconParam
Failed: XML_ResponseStatus

15.10.18 /ISAPI/System/capabilities
Get device capability.

Request URL Definition
Table 15-375 GET /ISAPI/System/capabilities
Method

GET

Description

Get device capability.

Query

None.

Request

None.

Response

Succeeded: XML_DeviceCap
Failed: XML_ResponseStatus

15.10.19 /ISAPI/System/configurationData?secretkey=
Import or export configuration files securely.

Request URL Definition
Table 15-376 GET /ISAPI/System/configurationData?secretkey=
Method

GET

Description

Export the configuration files securely.

Query

security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message

265

Intelligent Security API (General Application) Developer Guide
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.
secretkey: the verification key, it is provided by the upper-layer and
should be encrypted for exporting.
Request

None.

Response

Opaque data (binary data).
Table 15-377 PUT or POST /ISAPI/System/configurationData?secretkey=

Method

PUT, POST

Description

Import the configuration files securely.

Query

security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.
secretkey: the verification key, it is provided by the upper-layer and
should be encrypted for importing.

Request

Opaque data (binary data for PUT method, data in form format for
POST method).

Response

XML_ResponseStatus

Remarks
The device may reboot after importing the configuration file.

15.10.20 /ISAPI/System/configurationData?type=
Import or export device configuration files safely.

Request URL Definition
Table 15-378 GET /ISAPI/System/configurationData?type=
Method

GET

Description

Export device configuration files safely.

266

Intelligent Security API (General Application) Developer Guide
Query

security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.
secretkey: the verification key, which is provided by the upper-layer
and should be encrypted for importing.
type: the type of configuration parameters to be exported or
imported, which contains "OSD", "MODE", "IMAGE" and "IOOUT"
types. For "OSD" type, the OSD (On Screen Display) parameters will
be imported or exported; for "MODE" type, the application mode
parameters will be imported or exported; for "IMAGE" type, the
image parameters will be imported or exported; for "IOOUT" type,
the IO output parameters will be imported or exported. Multiple
types can be selected and they should be separated by commas,
e.g., /​ISAPI/​System/​configurationData?
type=OSD,MODE,IMAGE,IOOUT. If no type is selected, it is
recommended to return failure response message or set type to
NULL.

Request

None.

Response

Succeeded: Opaque data.
Failed: XML_ResponseStatus
Table 15-379 PUT or POST /ISAPI/System/configurationData?type=

Method

PUT, POST

Description

Import device configuration files safely.

Query

security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.
secretkey: the verification key, which is provided by the upper-layer
and should be encrypted for importing.
type: the type of configuration parameters to be exported or
imported, which contains "OSD", "MODE", "IMAGE" and "IOOUT"

267

Intelligent Security API (General Application) Developer Guide
types. For "OSD" type, the OSD (On Screen Display) parameters will
be imported or exported; for "MODE" type, the application mode
parameters will be imported or exported; for "IMAGE" type, the
image parameters will be imported or exported; for "IOOUT" type,
the IO output parameters will be imported or exported. Multiple
types can be selected and they should be separated by commas,
e.g., /​ISAPI/​System/​configurationData?
type=OSD,MODE,IMAGE,IOOUT. If no type is selected, it is
recommended to return failure response message or set type to
NULL.
Request

Opaque data.

Response

XML_ResponseStatus

Remarks
• This URL will import or export all configuration parameters by default.
• The device needs to reboot for the imported parameters to take effect.

15.10.21 /ISAPI/System/deviceInfo
Operations about the device information.

Request URL Definition
Table 15-380 GET /ISAPI/System/deviceInfo
Method

GET

Description

Get the device information.

Query

None

Request

None.

Response

Succeeded: XML_DeviceInfo
Failed: XML_ResponseStatus
Table 15-381 PUT /ISAPI/System/deviceInfo

Method

PUT

Description

Set the device information.

Query

None

Request

XML_DeviceInfo

Response

XML_ResponseStatus

268

Intelligent Security API (General Application) Developer Guide
15.10.22 /ISAPI/System/deviceInfo/capabilities
Get the device information configuration capability.

Request URL Definition
Table 15-382 GET /ISAPI/System/deviceInfo/capabilities
Method

GET

Description

Get the device information configuration capability.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_DeviceInfo
Failed: XML_ResponseStatus

15.10.23 /ISAPI/System/diagnosedData
Get device diagnosis information.

Request URL Definition
Table 15-383 GET /ISAPI/System/diagnosedData
Method

GET

Description

Get device diagnosis information.

Query

None.

Request

None.

Response

Non-transparent data

Remarks
Before getting the device diagnosis information, you should get the information export status via
URL GET /ISAPI/System/diagnosedData/exportStatus , only when the node <status> in
XML_ExportStatus is "unexport", you can call this URL to get the device diagnosis information.

15.10.24 /ISAPI/System/diagnosedData/exportStatus
Get the export status of device diagnosis information.

269

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-384 GET /ISAPI/System/diagnosedData/exportStatus
Method

GET

Description

Get the export status of device diagnosis information.

Query

None.

Request

None.

Response

XML_ExportStatus

15.10.25 /ISAPI/System/diagnosis/capabilities?format=json
Get the device diagnosis capability.

Request URL Definition
Table 15-385 GET /ISAPI/System/diagnosis/capabilities?format=json
Method

GET

Description

Get the device diagnosis capability.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_DiagnosisCondCap
Failed: JSON_ResponseStatus

15.10.26 /ISAPI/System/diagnosis?format=json
Diagnose the device.

Request URL Definition
Table 15-386 POST /ISAPI/System/diagnosis?format=json
Method

POST

Description

Diagnose the device.

Query

format: determine the format of request or response message.

Request

JSON_DiagnosisCond

Response

JSON_DiagnosisResult

270

Intelligent Security API (General Application) Developer Guide
15.10.27 /ISAPI/System/doubleLensParking/capabilities
Get the capability of dual-lens parking space camera.

Request URL Definition
Table 15-387 GET /ISAPI/System/doubleLensParking/capabilities
Method

GET

Description

Get the capability of dual-lens parking space camera.

Query

None.

Request

None.

Response

Succeeded: XML_DoubleLensParkingCap
Failed: XML_ResponseStatus

15.10.28 /ISAPI/System/dumpData
Get the dump file data of the device.

Request URL Definition
Table 15-388 GET /ISAPI/System/dumpData
Method

GET

Description

Get the dump file data of the device.

Query

None.

Request

None.

Response

Opaque data.

Remarks
The dump file data of the device may be in binary format or other format.

15.10.29 /ISAPI/System/factoryReset?mode=
Restore the device to default settings.

271

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-389 PUT /ISAPI/System/factoryReset?mode=
Method

PUT

Description

Restore the device to default settings.

Query

mode: The recovery mode, which contains "full", "basic", and "part"
mode. The default mode is "full", and all the device parameters will
be restored to default settings;​ for "basic" mode, the device
parameters, except network and user parameters, will be restored to
default settings;​ for "part" mode, only a part of default settings will
be restored.

Request

None.

Response

XML_ResponseStatus

Remarks
• For access control devices, this URL is only supported by facial recognition terminal, and the
"full" and "basic" recovery modes are not supported by passthrough method.
• For facial recognition terminal, if the recovery mode is set to "part", i.e., /ISAPI/System/
factoryReset?mode=part, the settings of card, face, event, fingerprint, schedule template,
network, user name, and password will be reserved without being restored.

15.10.30 /ISAPI/System/fileExport/capabilities?format=json
Get the capability of exporting files from the device.

Request URL Definition
Table 15-390 GET /ISAPI/System/fileExport/capabilities?format=json
Method

GET

Description

Get the capability of exporting files from the device.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_FileExportCap
Failed: JSON_ResponseStatus

272

Intelligent Security API (General Application) Developer Guide
15.10.31 /ISAPI/System/fileExport?format=json
Export files from the device.

Request URL Definition
Table 15-391 POST /ISAPI/System/fileExport?format=json
Method

POST

Description

Export files from the device.

Query

format: determine the format of request or response message.

Request

JSON_FileExport

Response

JSON_FileExportResult

15.10.32 /ISAPI/System/guardAgainstTheft
Get or set device anti-theft parameters.

Request URL Definition
Table 15-392 GET /ISAPI/System/guardAgainstTheft
Method

GET

Description

Get the device anti-​theft parameters.

Query

None.

Request

None.

Response

Succeeded: XML_GuardAgainstTheft
Failed: XML_ResponseStatus
Table 15-393 PUT /ISAPI/System/guardAgainstTheft

Method

PUT

Description

Set the device anti-​theft parameters.

Query

None.

Request

XML_GuardAgainstTheft

Response

XML_ResponseStatus

273

Intelligent Security API (General Application) Developer Guide
15.10.33 /ISAPI/System/guardAgainstTheft/capabilities
Get the device anti-theft configuration capability.

Request URL Definition
Table 15-394 GET /ISAPI/System/guardAgainstTheft/capabilities
Method

GET

Description

Get the device anti-​theft configuration capability.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_GuardAgainstTheft
Failed: XML_ResponseStatus

15.10.34 /ISAPI/System/guideConfig/<guideEvent>/capabilities?format=json
Get the capability of quick setup instruction for specified event.

Request URL Definition
Table 15-395 GET /ISAPI/System/guideConfig/<guideEvent>/capabilities?format=json
Method

GET

Description

Get the capability of quick setup instruction for specified event.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_GuideConfigCap
Failed: JSON_ResponseStatus

Remarks
The <guideEvent> in the URL refers to the event, which supports quick setup, and now only
"linkageCapture" (capture by linkage) is supported, i.e., the URL is: /ISAPI/System/guideConfig/
linkageCapture/capabilities?format=json

15.10.35 /ISAPI/System/guideConfig/<guideEvent>?format=json
Get the parameters of quick setup instruction for specified event.

274

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-396 GET /ISAPI/System/guideConfig/<guideEvent>?format=json
Method

GET

Description

Get the parameters of quick setup instruction for specified event.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_GuideConfig
Failed: JSON_ResponseStatus

Remarks
The <guideEvent> in the URL refers to the event, which supports quick setup, and now only
"linkageCapture" (capture by linkage) is supported, i.e., the URL is: /ISAPI/System/guideConfig/
linkageCapture?format=json

15.10.36 /ISAPI/System/Hardware
Operations about the device hardware configuration.

Request URL Definition
Table 15-397 GET /ISAPI/System/Hardware
Method

GET

Description

Get the device hardware configuration parameters.

Query

None.

Request

None.

Response

Succeeded: XML_HardwareService
Failed: XML_ResponseStatus
Table 15-398 PUT /ISAPI/System/Hardware

Method

PUT

Description

Set the device hardware parameters.

Query

None.

Request

XML_HardwareService

Response

XML_ResponseStatus

275

Intelligent Security API (General Application) Developer Guide
15.10.37 /ISAPI/System/Hardware/defog
Operations about the defogging control configuration.

Request URL Definition
Table 15-399 GET /ISAPI/System/Hardware/defog
Method

GET

Description

Get the defogging control configuration parameters.

Query

None.

Request

None.

Response

Succeeded: XML_Defog
Failed: XML_ResponseStatus
Table 15-400 PUT /ISAPI/System/Hardware/defog

Method

PUT

Description

Set the defogging control parameters.

Query

None.

Request

XML_Defog

Response

XML_ResponseStatus

15.10.38 /ISAPI/System/installationAngleCalibration/channels/<ID>/capabilities?
format=json
Get the capability of installation angle calibration.

Request URL Definition
Table 15-401 GET /ISAPI/System/installationAngleCalibration/channels/<ID>/capabilities?
format=json
Method

GET

Description

Get the capability of installation angle calibration.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_Cap_CalibrationStatus
Failed: JSON_ResponseStatus

276

Intelligent Security API (General Application) Developer Guide
Remarks
The <ID> in the request URL refers to the channel No.

15.10.39 /ISAPI/System/installationAngleCalibration/channels/<ID>?format=json
Get the installation angle calibration status or calibrate the installation angle.

Request URL Definition
Table 15-402 GET /ISAPI/System/installationAngleCalibration/channels/<ID>?format=json
Method

GET

Description

Get the installation angle calibration status.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_CalibrationStatus
Failed: JSON_ResponseStatus

Table 15-403 PUT /ISAPI/System/installationAngleCalibration/channels/<ID>?format=json
Method

PUT

Description

Calibrate the installation angle.

Query

format: determine the format of request or response message.

Request

None.

Response

JSON_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel No.

15.10.40 /ISAPI/System/IO/capabilities
Get alarm input and output configuration capability.

Request URL Definition
Table 15-404 GET /ISAPI/System/IO/capabilities
Method

GET

Description

Get alarm input and output configuration capability.

Query

None.

277

Intelligent Security API (General Application) Developer Guide
Request

None.

Response

XML_IOCap

15.10.41 /ISAPI/System/IO/inputs
Get the information of all alarm input ports.

Request URL Definition
Table 15-405 Get the information of all alarm input ports.
Method

GET

Description

Get the information of all alarm input ports.

Query

None.

Request

None.

Response

XML_IOInputPortList

15.10.42 /ISAPI/System/IO/inputs/<ID>
Get or set an alarm input port.

Request URL Definition
Table 15-406 GET /ISAPI/System/IO/inputs/<ID>
Method

GET

Description

Get an alarm input's information.

Query

None.

Request

None.

Response

XML_IOInputPort
Table 15-407 PUT /ISAPI/System/IO/inputs/<ID>

Method

PUT

Description

Set an alarm input's information.

Query

None.

Request

XML_IOInputPort

Response

XML_ResponseStatus

278

Intelligent Security API (General Application) Developer Guide
15.10.43 /ISAPI/System/IO/inputs/<ID>/status
Get the status of a specific alarm input.

Request URL Definition
Table 15-408 GET /ISAPI/System/IO/inputs/<ID>/status
Method

GET

Description

Get the status of a specific alarm input.

Query

None.

Request

None.

Response

Succeeded: XML_IOPortStatus
Failed: XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the alarm input ID.

15.10.44 /ISAPI/System/IO/inputs/capabilities
Get alarm input configuration capability.

Request URL Definition
Table 15-409 GET /ISAPI/System/IO/inputs/capabilities
Method

GET

Description

Get the alarm input configuration capability.

Query

None.

Request

None.

Response

XML_Cap_IOInputPortList

15.10.45 /ISAPI/System/IO/outputs
Get the information of all I/O output ports.

279

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-410 GET /ISAPI/System/IO/outputs
Method

GET

Description

Get the information of all I/O output ports.

Query

None.

Request

None.

Response

XML_IOOutputPortList

15.10.46 /ISAPI/System/IO/outputs/capabilities
Get the I/O output capability.

Request URL Definition
Table 15-411 GET /ISAPI/System/IO/outputs/capabilities
Method

GET

Description

Get the I/O output capability.

Query

None.

Request

None.

Response

XML_Cap_IOOutputPortList

15.10.47 /ISAPI/System/IO/outputs/<ID>
Get or set the information of specified I/O output port.
Table 15-412 GET /ISAPI/System/IO/outputs/<ID>
Method

GET

Description

Get the information of specified I/O output port.

Query

None.

Request

None.

Response

XML_IOOutputPort

280

Intelligent Security API (General Application) Developer Guide
Table 15-413 PUT /ISAPI/System/IO/outputs/<ID>
Method

PUT

Description

Set the information of specified alarm output port.

Query

XML_IOOutputPort

Request

None.

Response

XML_ResponseStatus

15.10.48 /ISAPI/System/IO/outputs/<ID>/status
Get status of a specific alarm output.

Request URL Definition
Table 15-414 GET /ISAPI/System/IO/outputs/<ID>/status
Method

GET

Description

Get status of a specific alarm output.

Query

None.

Request

None.

Response

Succeeded: XML_IOPortStatus
Failed: XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the alarm output ID.

15.10.49 /ISAPI/System/IO/outputs/<ID>/trigger
Manually trigger a specific alarm output.

Request URL Definition
Table 15-415 PUT /ISAPI/System/IO/outputs/<ID>/trigger
Method

PUT

Description

Manually trigger a specific alarm output.

Query

none.

Request

XML_IOPortData

Response

XML_ResponseStatus

281

Intelligent Security API (General Application) Developer Guide
Remarks
The <ID> in the request URL refers to the alarm output ID.

15.10.50 /ISAPI/System/IO/status
Get alarm input and output status.

Request URL Definition
Table 15-416 GET /ISAPI/System/IO/status
Method

GET

Description

Get alarm input and output status.

Query

None.

Request

None.

Response

Succeeded: XML_IOPortStatusList
Failed: XML_ResponseStatus

15.10.51 /ISAPI/System/IOT/channelConfig?format=json
Import or export the list of added IoT devices.

Request URL Definition
Table 15-417 GET /ISAPI/System/IOT/channelConfig?format=json
Method

GET

Description

Export the list of added IoT devices.

Query

format: determine the format of request or response message.
security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.

Request

None.

Response

Succeeded: Opaque Data
Failed: JSON_ResponseStatus

282

Intelligent Security API (General Application) Developer Guide
Table 15-418 PUT /ISAPI/System/IOT/channelConfig?format=json
Method

PUT

Description

Import the list of added IoT devices.

Query

format: determine the format of request or response message.
security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.

Request

Opaque Data

Response

JSON_ResponseStatus
JSON_IOT_ErrorList

Remarks
The Opaque Data should be encrypted.

15.10.52 /ISAPI/System/IOT/channels/<ID>/<EventType>/capabilities?format=json
Get the event configuration capability of IoT device.

Request URL Definition
Table 15-419 GET /ISAPI/System/IOT/channels/<ID>/<EventType>/capabilities?format=json
Method

GET

Description

Get the event configuration capability of IoT device.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_XXCap
Failed: JSON_ResponseStatus

15.10.53 /ISAPI/System/IOT/channels/<ID>/<EventType>?format=json
Get or set the event/alarm parameters.

283

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-420 GET /ISAPI/System/IOT/channels/<ID>/<EventType>?format=json
Method

GET

Description

Get the event/alarm parameters.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_XX
Failed: JSON_ResponseStatus

Table 15-421 PUT /ISAPI/System/IOT/channels/<ID>/<EventType>?format=json
Method

PUT

Description

Set the event/alarm parameters.

Query

format: determine the format of request or response message.

Request

JSON_XX

Response

JSON_ResponseStatus

15.10.54 /ISAPI/System/IOT/channels/<ID>/alarmStatistics?format=json
Get the alarm statistics of added IoT device according to channel ID.

Request URL Definition
Table 15-422 GET /ISAPI/System/IOT/channels/<ID>/alarmStatistics?format=json
Method

GET

Description

Get the alarm statistics of added IoT device according to channel ID.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_AlarmStatistics
Failed: JSON_ResponseStatus

15.10.55 /ISAPI/System/IOT/channels/<ID>/all?format=json
Delete all channels (video channel and IoT channel) of added IoT device

284

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-423 DELETE /ISAPI/System/IOT/channels/<ID>/all?format=json
Method

DELETE

Description

Delete all channels (video channel and IoT channel) of added IoT
device

Query

format: determine the format of request or response message.

Request

None.

Response

JSON_ResponseStatus

15.10.56 /ISAPI/System/IOT/channels/<ID>/basicParam?format=json
Set the basic parameters of added IoT device according to channel ID.

Request URL Definition
Table 15-424 PUT /ISAPI/System/IOT/channels/<ID>/basicParam?format=json
Method

PUT

Description

Set the basic parameters of added IoT device according to channel
ID.

Query

format: determine the format of request or response message.

Request

JSON_BasicParam

Response

JSON_ResponseStatus

15.10.57 /ISAPI/System/IOT/channels/<ID>/OSD/capabilities?format=json
Get the OSD configuration capability of specified IoT device channel.

Request URL Definition
Table 15-425 GET /ISAPI/System/IOT/channels/<ID>/OSD/capabilities?format=json
Method

GET

Description

Get the OSD configuration capability of specified IoT device channel.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_OSDCap

285

Intelligent Security API (General Application) Developer Guide
Failed: JSON_ResponseStatus

15.10.58 /ISAPI/System/IOT/channels/<ID>/OSD?format=json
Get or set the OSD parameters.

Request URL Definition
Table 15-426 GET /ISAPI/System/IOT/channels/<ID>/OSD?format=json
Method

GET

Description

Get the OSD parameters.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_OSD
Failed: JSON_ResponseStatus
Table 15-427 PUT /ISAPI/System/IOT/channels/<ID>/OSD?format=json

Method

PUT

Description

Set the OSD parameters.

Query

format: determine the format of request or response message.

Request

JSON_OSD

Response

JSON_ResponseStatus

Remarks
The <ID> in the URL is defied as the channel ID.

15.10.59 /ISAPI/System/IOT/channels/<ID>/status?format=json
Get the status of specified channel of added IoT device.

Request URL Definition
Table 15-428 GET /ISAPI/System/IOT/channels/<ID>/status?format=json
Method

GET

Description

Get the status of specified channel of added IoT device.

Query

format: determine the format of request or response message.

286

Intelligent Security API (General Application) Developer Guide
security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.
Request

None.

Response

JSON_IOTChannelStatus

Remarks
The <ID> in the URL is defined as channel ID.

15.10.60 /ISAPI/System/IOT/channels/<ID>?format=json
Operations about specified added IoT device.

Request URL Definition
Table 15-429 GET /ISAPI/System/IOT/channels/<ID>?format=json
Method

GET

Description

Get the information of added IoT device according to channel ID.

Query

format: determine the format of request or response message.
security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.

Request

None.

Response

Succeeded: JSON_IOTChannel
Failed: JSON_ResponseStatus
Table 15-430 PUT /ISAPI/System/IOT/channels/<ID>?format=json

Method

PUT

Description

Set the added IoT device according to channel ID.

Query

format: determine the format of request or response message.

287

Intelligent Security API (General Application) Developer Guide
security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.
Request

JSON_IOTChannel

Response

JSON_ResponseStatus
Table 15-431 DELETE /ISAPI/System/IOT/channels/<ID>?format=json

Method

DELETE

Description

Delete the specified IoT device according to channel ID.

Query

format: determine the format of request or response message.

Request

None.

Response

JSON_ResponseStatus

Remarks
The <ID> in the URL is defined as channel ID.

15.10.61 /ISAPI/System/IOT/channels/status?format=json
Get the status of added IoT device.

Request URL Definition
Table 15-432 GET /ISAPI/System/IOT/channels/status?format=json
Method

GET

Description

Get the status of added IoT device.

Query

format: determine the format of request or response message.
security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.

288

Intelligent Security API (General Application) Developer Guide
Request

None.

Response

Succeeded: JSON_IOTChannelStatusList
Failed: JSON_ResponseStatus

15.10.62 /ISAPI/System/IOT/channels/status?format=json&deviceInductiveType=
Get the status of added IoT device according to inductive type.

Request URL Definition
Table 15-433 GET /ISAPI/System/IOT/channels/status?format=json&deviceInductiveType=
Method

GET

Description

Get the status of added IoT device according to inductive type.

Query

format: determine the format of request or response message.
security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.
deviceInductiveType: device inductive type, its value can be
obtained by URL: GET /ISAPI/System/IOT/sourceSupport/
capabilities?format=json , now there are two available values:
"inductiveType1" and "inductiveType2"

Request

None.

Response

JSON_IOTChannelStatusList

15.10.63 /ISAPI/System/IOT/channels?format=json
Operations about IoT devices.

Request URL Definition
Table 15-434 GET /ISAPI/System/IOT/channels?format=json
Method

GET

Description

Get the information of added IoT devices.

Query

format: determine the format of request or response message.

289

Intelligent Security API (General Application) Developer Guide
security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.
Request

None.

Response

JSON_IOTChannelList
Table 15-435 POST /ISAPI/System/IOT/channels?format=json

Method

POST

Description

Add the IoT devices to NVR/DVR.

Query

format: determine the format of request or response message.
security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.

Request

JSON_IOTChannel

Response

Succeeded: JSON_IOT_ChannelInfo
Failed: JSON_ResponseStatus

15.10.64 /ISAPI/System/IOT/channels?format=json&deviceInductiveType=
Get the informaiton of added IoT devices according to device inductive type.

Request URL Definition
Table 15-436 GET /ISAPI/System/IOT/channels?format=json&deviceInductiveType=
Method

GET

Description

Get the added IoT devices according to device inductive type.

Query

format: determine the format of request or response message.
deviceInductiveType: device inductive type, its value can be
obtained by URL: GET /ISAPI/System/IOT/sourceSupport/

290

Intelligent Security API (General Application) Developer Guide
capabilities?format=json , now there are two available values:
"inductiveType1" and "inductiveType2"
security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.
Request

None.

Response

JSON_IOTChannelList

15.10.65 /ISAPI/System/IOT/linkageChannels?format=json
Get the linked channel of searched event.

Request URL Definition
Table 15-437 POST /ISAPI/System/IOT/linkageChannels?format=json
Method

POST

Description

Get the linked channel of searched event.

Query

format: determine the format of request or response message.

Request

JSON_LinkageChansCond

Response

Succeeded: JSON_Result
Failed: JSON_ResponseStatus

15.10.66 /ISAPI/System/IOT/search?format=json
Get the IoT devices which can be added.

Request URL Definition
Table 15-438 GET /ISAPI/System/IOT/search?format=json
Method

GET

Description

Get the IoT devices which can be added.

Query

format: determine the format of request or response message.

291

Intelligent Security API (General Application) Developer Guide
security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.
Request

None.

Response

JSON_IOTSourceList

15.10.67 /ISAPI/System/IOT/sourceCapabilities?format=json
Get the number of IoT device channels.

Request URL Definition
Table 15-439 GET /ISAPI/System/IOT/sourceCapabilities?format=json
Method

GET

Description

Get the number of IoT device channels.

Query

format: determine the format of request or response message.
security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.

Request

JSON_IOTSourceDescription

Response

JSON_SourceCapabilities

15.10.68 /ISAPI/System/IOT/sourceSupport/capabilities?format=json
Get supported protocol type of IoT devices.

292

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-440 GET /ISAPI/System/IOT/sourceSupport/capabilities?format=json
Method

GET

Description

Get supported protocol type of IoT devices.

Query

format: determine the format of request or response message.

Request

None.

Response

JSON_IOTSourceSupport

15.10.69 /ISAPI/System/logServer
Get or set log server parameters.

Request URL Definition
Table 15-441 GET /ISAPI/System/logServer
Method

GET

Description

Get log server parameters.

Query

None.

Request

None.

Response

Succeeded: XML_LogServer
Failed: XML_ResponseStatus
Table 15-442 PUT /ISAPI/System/logServer

Method

PUT

Description

Set log server parameters.

Query

None.

Request

XML_LogServer

Response

XML_ResponseStatus

15.10.70 /ISAPI/System/logServer/capabilities
Get log server configuration capability.

293

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-443 GET /ISAPI/System/logServer/capabilities
Method

GET

Description

Get log server configuration capability.

Query

None.

Request

None.

Response

Succeeded: XML_LogServerCap
Failed: XML_ResponseStatus

15.10.71 /ISAPI/System/logServer/test
Perform security log server test.

Request URL Definition
Table 15-444 POST /ISAPI/System/logServer/test
Method

POST

Description

Perform security log server test.

Query

None.

Request

XML_LogServerTestDescription

Response

XML_ResponseStatus

15.10.72 /ISAPI/System/Network/adaption/capabilities?format=json
Get network self-adaptive configuration capability.

Request URL Definition
Table 15-445 GET /ISAPI/System/Network/adaption/capabilities?format=json
Method

GET

Description

Get network self-​adaptive configuration capability.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_AdaptionCap

294

Intelligent Security API (General Application) Developer Guide
Failed: JSON_ResponseStatus

15.10.73 /ISAPI/System/Network/adaption?format=json&streamType=
Operations about network self-adaptive configuration.

Request URL Definition
Table 15-446 GET /ISAPI/System/Network/adaption?format=json&streamType=
Method

GET

Description

Get network self-​adaptive parameters.

Query

format: determine the format of request or response message.
streamType: stream types, integer, the following values are available:
0-main stream, 1-sub-stream, 2-third stream, 3-virtual stream, 4stream 5, 5-stream 6, 7-stream 7, 8-stream 8, …, and so on.

Request

None.

Response

Succeeded: JSON_Adaption
Failed: JSON_ResponseStatus

Table 15-447 PUT /ISAPI/System/Network/adaption?format=json&streamType=
Method

GET

Description

Set network self-​adaptive parameters.

Query

format: determine the format of request or response message.
streamType: stream types, integer, the following values are available:
0-main stream, 1-sub-stream, 2-third stream, 3-virtual stream, 4stream 5, 5-stream 6, 7-stream 7, 8-stream 8, …, and so on.

Request

JSON_Adaption

Response

XML_ResponseStatus

15.10.74 /ISAPI/System/Network/Bond
Get all network bonding configuration parameters.

295

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-448 GET /ISAPI/System/Network/Bond
Method

GET

Description

Get all network bonding configuration parameters.

Query

None.

Request

None.

Response

Succeeded: XML_BondList
Failed: XML_ResponseStatus

15.10.75 /ISAPI/System/Network/Bond/<ID>
Operations about the bonding configuration of a specific network interface.

Request URL Definition
Table 15-449 GET /ISAPI/System/Network/Bond/<ID>
Method

GET

Description

Get the bonding parameters of a specific network interface.

Query

None.

Request

None.

Response

Succeeded: XML_Bond
Failed: XML_ResponseStatus
Table 15-450 PUT /ISAPI/System/Network/Bond/<ID>

Method

PUT

Description

Set the bonding parameters of a specific network interface.

Query

None.

Request

XML_Bond

Response

XML_ResponseStatus

15.10.76 /ISAPI/System/Network/capabilities
Get the network capability.

296

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-451 GET /ISAPI/System/Network/capabilities
Method

GET

Description

Get the network capability.

Query

None.

Request

None.

Response

Succeeded: XML_NetworkCap
Failed: XML_ResponseStatus

15.10.77 /ISAPI/System/Network/channels/<ID>/buletooth/status
Operations about the bluetooth status configuration of a specific channel.

Request URL Definition
Table 15-452 GET /ISAPI/System/Network/channels/<ID>/buletooth/status
Method

GET

Description

Get the bluetooth status parameters of a specific channel.

Query

None.

Request

None.

Response

Succeeded: XML_BluetoothStatus
Failed: XML_ResponseStatus
Table 15-453 PUT /ISAPI/System/Network/channels/<ID>/buletooth/status

Method

PUT

Description

Set the bluetooth status parameters of a specific channel.

Query

None.

Request

XML_BluetoothStatus

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel No.

297

Intelligent Security API (General Application) Developer Guide
15.10.78 /ISAPI/System/Network/DDNS
Operations about all DDNS configuration parameters.

Request URL Definition
Table 15-454 GET /ISAPI/System/Network/DDNS
Method

GET

Description

Get all DDNS configuration parameters.

Query

None.

Request

None.

Response

Succeeded: XML_DDNSList
Failed: XML_ResponseStatus
Table 15-455 PUT /ISAPI/System/Network/DDNS

Method

PUT

Description

Set all DDNS configuration parameters.

Query

None.

Request

XML_DDNSList

Response

XML_ResponseStatus

15.10.79 /ISAPI/System/Network/DDNS/capabilities
Get DDNS (Dynamic Domain Name Server) configuration capability.

Request URL Definition
Table 15-456 GET /ISAPI/System/Network/DDNS/capabilities
Method

GET

Description

Get DDNS (Dynamic Domain Name Server) configuration capability.

Query

None.

Request

None.

Response

Succeeded: XML_DDNSList
Failed: XML_ResponseStatus

298

Intelligent Security API (General Application) Developer Guide
15.10.80 /ISAPI/System/Network/DDNS/<ID>
Operations about the configuration of a specific DDNS.

Request URL Definition
Table 15-457 GET /ISAPI/System/Network/DDNS/<ID>
Method

GET

Description

Get the configuration parameters of a specific DDNS.

Query

None.

Request

None.

Response

Succeeded: XML_DDNS
Failed: XML_ResponseStatus
Table 15-458 PUT /ISAPI/System/Network/DDNS/<ID>

Method

PUT

Description

Set the parameters of a specific DDNS.

Query

None.

Request

XML_DDNS

Response

XML_ResponseStatus

15.10.81 /ISAPI/System/Network/DDNS/<ID>/capabilities
Get the configuration capability of a specific DDNS.

Request URL Definition
Table 15-459 GET /ISAPI/System/Network/DDNS/<ID>/capabilities
Method

GET

Description

Get the configuration capability of a specific DDNS.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_DDNS
Failed: XML_ResponseStatus

299

Intelligent Security API (General Application) Developer Guide
15.10.82 /ISAPI/System/Network/Ehome
Operations about the EHome server access configuration.

Request URL Definition
Table 15-460 GET /ISAPI/System/Network/Ehome
Method

GET

Description

Get the EHome server access parameters.

Query

None.

Request

None.

Response

Succeeded: XML_Ehome
Failed: XML_ResponseStatus
Table 15-461 PUT /ISAPI/System/Network/Ehome

Method

PUT

Description

Set the EHome server access parameters.

Query

None.

Request

XML_Ehome

Response

XML_ResponseStatus

15.10.83 /ISAPI/System/Network/Ehome/capabilities
Get the configuration capability of EHome server access.

Request URL Definition
Table 15-462 GET /ISAPI/System/Network/Ehome/capabilities
Method

GET

Description

Get the configuration capability of EHome server access.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_EHome
Failed: XML_ResponseStatus

300

Intelligent Security API (General Application) Developer Guide
15.10.84 /ISAPI/System/Network/Ehome?centerID=
Operations about the EHome server access configuration.

Request URL Definition
Table 15-463 GET /ISAPI/System/Network/Ehome?centerID=
Method

GET

Description

Get the EHome server access parameters.

Query

centerID: EHome center ID, and if there is only one center, centerID
is 1.

Request

None.

Response

Succeeded: XML_Ehome
Failed: XML_ResponseStatus
Table 15-464 PUT /ISAPI/System/Network/Ehome?centerID=

Method

PUT

Description

Set the EHome server access parameters.

Query

centerID: EHome center ID, and if there is only one center, centerID
is 1.

Request

XML_Ehome

Response

XML_ResponseStatus

15.10.85 /ISAPI/System/Network/EZVIZ
Operations about Hik-Connect access configurations.

Request URL Definition
Table 15-465 GET /ISAPI/System/Network/EZVIZ
Method

GET

Description

Get Hik-Connect parameters.

Query

security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates

301

Intelligent Security API (General Application) Developer Guide
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.
Request

None.

Response

XML_EZVIZ

PUT /ISAPI/System/Network/EZVIZ
Method

PUT

Description

Set Hik-Connect parameters.

Query

security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.

Request

XML_EZVIZ

Response

XML_ResponseStatus

15.10.86 /ISAPI/System/Network/EZVIZ/secretKey?format=json
Edit the verification code for Hik-Connect.

Request URL Definition
Table 15-466 PUT /ISAPI/System/Network/EZVIZ/secretKey?format=json
Method

PUT

Description

Edit the verification code for Hik-Connect.

Query

security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.
format: determine the format of request or response message.

302

Intelligent Security API (General Application) Developer Guide
Request

JSON_EZVIZSecretKey

Response

JSON_ResponseStatus

15.10.87 /ISAPI/System/Network/ftp
Operations about all FTP configurations.

Request URL Definition
Table 15-467 GET /ISAPI/System/Network/ftp
Method

GET

Description

Get all FTP parameters.

Query

None.

Request

None.

Response

Succeeded: XML_FTPNotificationList
Failed: XML_ResponseStatus
Table 15-468 PUT /ISAPI/System/Network/ftp

Method

PUT

Description

Set all FTP parameters.

Query

None.

Request

XML_FTPNotificationList

Response

XML_ResponseStatus

15.10.88 /ISAPI/System/Network/ftp/<ID>
Operations about the configuration of a specific FTP.

Request URL Definition
Table 15-469 GET /ISAPI/System/Network/ftp/<ID>
Method

GET

Description

Get the parameters of a specific FTP.

Query

None.

Request

None.

Response

Succeeded: XML_FTPNotification

303

Intelligent Security API (General Application) Developer Guide
Failed: XML_ResponseStatus
Table 15-470 PUT /ISAPI/System/Network/ftp/<ID>
Method

PUT

Description

Set the parameters of a specific FTP.

Query

None.

Request

XML_FTPNotification

Response

XML_ResponseStatus

15.10.89 /ISAPI/System/Network/ftp/capabilities
Get the FTP capability.

Request URL Definition
Table 15-471 GET /ISAPI/System/Network/ftp/capabilities
Method

GET

Description

Get the FTP capability.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_FTPNotificationList
Failed: XML_ResponseStatus

15.10.90 /ISAPI/System/Network/ftp/test
Perform test to check if the FTP server is available.

Request URL Definition
Table 15-472 POST /ISAPI/System/Network/ftp/test
Method

POST

Description

Perform test to check if the FTP server is available.

Query

None.

Request

XML_FTPTestDescription

Response

Succeeded: XML_FTPTestResult
Failed: XML_ResponseStatus

304

Intelligent Security API (General Application) Developer Guide
15.10.91 /ISAPI/System/Network/interfaces
Get the information of multiple network interfaces.

Request URL Definition
Table 15-473 GET /ISAPI/System/Network/interfaces
Method

GET

Description

Get the information of multiple network interfaces.

Query

None.

Request

None.

Response

Succeeded: XML_NetworkInterfaceList
Failed: XML_ResponseStatus

Example
Sample Code of Getting Information of Multiple Network Interfaces
GET /ISAPI/System/Network/interfaces HTTP/1.1
…
HTTP/1.1 200 OK
Content-Type: application/xml; charset="UTF-8"
Content-Length: xxx
<?xml version="1.0" encoding="UTF-8"?>
<NetworkInterfaceList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<NetworkInterface>
<id>1</id>
<IPAddress>
<ipVersion>v4</ipVersion>
<addressingType>static</addressingType>
<ipAddress>172.6.64.7</ipAddress>
<subnetMask>255.255.255.0</subnetMask>
<DefaultGateway>
<ipAddress>172.6.64.1</ipAddress>
</DefaultGateway>
<PrimaryDNS>
<ipAddress>192.0.0.200</ipAddress>
</PrimaryDNS>
</IPAddress>
<Discovery>
<UPnP>
<enabled>true</enabled>
</UPnP>
<Zeroconf>
<enabled>true</enabled>
</Zeroconf>
</Discovery>

305

Intelligent Security API (General Application) Developer Guide
<Link>
<MACAddress> 00:40:48:4C:7F:F2</MACAddress>
<autoNegotiation>true</autoNegotiation>
<speed>1000<speed>
<duplex>full</duplex>
<MTU>1500</MTU>
</Link>
</NetworkInterface>
</NetworkInterfaceList>

15.10.92 /ISAPI/System/Network/interfaces/<ID>
Operations about the configuration of a specific network interface.

Request URL Definitions
Table 15-474 GET /ISAPI/System/Network/interfaces/<ID>
Method

GET

Description

Get the information of a specific network interface.

Query

None.

Request

None.

Response

Succeeded: XML_NetworkInterface
Failed: XML_ResponseStatus

PUT /ISAPI/System/Network/interfaces/<ID>
Method

PUT

Description

Set a specific network interface.

Query

None.

Request

XML_NetworkInterface

Response

XML_ResponseStatus

15.10.93 /ISAPI/System/Network/interfaces/<ID>/capabilities
Get the capability of a specific network interface.

306

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-475 GET /ISAPI/System/Network/interfaces/<ID>/capabilities
Method

GET

Description

Get the capability of a specific network interface.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_NetworkInterface
Failed: XML_ResponseStatus

15.10.94 /ISAPI/System/Network/interfaces/<ID>/discovery
Operations about the network discovery configuration.

Request URL Definition
Table 15-476 GET /ISAPI/System/Network/interfaces/<ID>/discovery
Method

GET

Description

Get the network discovery configuration parameters.

Query

None.

Request

None.

Response

Succeeded: XML_Discovery
Failed: XML_ResponseStatus
Table 15-477 PUT /ISAPI/System/Network/interfaces/<ID>/discovery

Method

PUT

Description

Set the network discovery configuration parameters.

Query

None.

Request

XML_Discovery

Response

XML_ResponseStatus

15.10.95 /ISAPI/System/Network/interfaces/<ID>/discovery/capabilities
Get the configuration capability of network discovery.

307

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-478 GET /ISAPI/System/Network/interfaces/<ID>/discovery/capabilities
Method

GET

Description

Get the configuration capability of network discovery.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_Discovery
Failed: XML_ResponseStatus

15.10.96 /ISAPI/System/Network/interfaces/<ID>/dynamicHostName?
format=json
Get or set dynamic domain name.

Request URL Definition
Table 15-479 GET /ISAPI/System/Network/interfaces/<ID>/dynamicHostName?format=json
Method

GET

Description

Get dynamic domain name.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_DynamicHostName
Failed: JSON_ResponseStatus

Table 15-480 PUT /ISAPI/System/Network/interfaces/<ID>/dynamicHostName?format=json
Method

PUT

Description

Set dynamic domain name.

Query

format: determine the format of request or response message.

Request

JSON_DynamicHostName

Response

JSON_ResponseStatus

Remarks
The <ID> in the request URL refers to the network interface ID.

308

Intelligent Security API (General Application) Developer Guide
15.10.97 /ISAPI/System/Network/interfaces/<ID>/dynamicHostName/
capabilities?format=json
Get configuration capability of dynamic domain name.

Request URL Definition
Table 15-481 GET /ISAPI/System/Network/interfaces/<ID>/dynamicHostName/capabilities?
format=json
Method

GET

Description

Get configuration capability of dynamic domain name.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_DynamicHostNameCap
Failed: JSON_ResponseStatus

Remarks
The <ID> in the request URL refers to the network interface ID.

15.10.98 /ISAPI/System/Network/interfaces/<ID>/ieee802.1x
Operations about configuration of IEEE 802.1x protocol access.

Request URL Definition
Table 15-482 GET /ISAPI/System/Network/interfaces/<ID>/ieee802.1x
Method

GET

Description

Get parameters of IEEE 802.1x protocol access.

Query

None.

Request

None.

Response

Succeeded: XML_IEEE802_1x
Failed: XML_ResponseStatus
Table 15-483 PUT /ISAPI/System/Network/interfaces/<ID>/ieee802.1x

Method

PUT

Description

Set parameters of IEEE 802.1x protocol access.

Query

None.

309

Intelligent Security API (General Application) Developer Guide
Request

XML_IEEE802_1x

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the network interface ID.

15.10.99 /ISAPI/System/Network/interfaces/<ID>/ieee802.1x/capabilities
Get configuration capability of IEEE802.1x protocol access.

Request URL Definition
Table 15-484 GET /ISAPI/System/Network/interfaces/<ID>/ieee802.1x/capabilities
Method

GET

Description

Get configuration capability of IEEE802.1x protocol access.

Query

None.

Request

None.

Response

XML_Cap_IEEE802_1x

15.10.100 /ISAPI/System/Network/interfaces/<ID>/ipAddress
Operations about IP address configuration of a specific network interface.

Request URL Definition
Table 15-485 GET /ISAPI/System/Network/interfaces/<ID>/ipAddress
Method

GET

Description

Get the IP address of a specific network interface.

Query

None.

Request

None.

Response

Succeeded: XML_IPAddress
Failed: XML_ResponseStatus
Table 15-486 PUT /ISAPI/System/Network/interfaces/<ID>/ipAddress

Method

PUT

Description

Set IP address of a specific network interface.

Query

None.

310

Intelligent Security API (General Application) Developer Guide
Request

XML_IPAddress

Response

XML_ResponseStatus

Example
Sample Code of Setting IP Address of A Specific Network Interface
PUT /ISAPI/System/Network/interfaces/1/ipAddress HTTP/1.1
…
Content-Type: application/xml; charset="UTF-8"
Content-Length: xxx
<?xml version="1.0" encoding="UTF-8"?>
<IPAddress version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<ipVersion>v4</ipVersion>
<addressingType>static</addressingType>
<ipAddress>172.6.64.16</ipAddress>
<subnetMask>255.255.255.0</subnetMask>
<DefaultGateway>
<ipAddress>172.6.64.1</ipAddress>
</DefaultGateway>
<PrimaryDNS>
<ipAddress>192.0.0.200</ipAddress>
</PrimaryDNS>
</IPAddress>
HTTP/1.1 200 OK
…
Content-Type: application/xml; charset="UTF-8"
Content-Length:xxx
<?xml version="1.0" encoding="UTF-8"?>
<ResponseStatus version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<requestURL>/Network/interfaces/1/ipAddress</requestURL>
<statusCode>1</statusCode>
<statusString>OK</statusString>
</ResponseStatus>

15.10.101 /ISAPI/System/Network/interfaces/<ID>/ipAddress/capabilities
Get the IP address configuration capability of a specific network interface.

Request URL Definition
Table 15-487 GET /ISAPI/System/Network/interfaces/<ID>/ipAddress/capabilities
Method

GET

Description

Get the IP address configuration capability of a specific network
interface.

311

Intelligent Security API (General Application) Developer Guide
Query

None.

Request

None.

Response

Succeeded: XML_Cap_IpAddress
Failed: XML_ResponseStatus

15.10.102 /ISAPI/System/Network/interfaces/<ID>/link
Operations about the connection configuration of a specific network interface.

Request URL Definition
Table 15-488 GET /ISAPI/System/Network/interfaces/<ID>/link
Method

GET

Description

Get the connection parameters of a specific network interface.

Query

None.

Request

None.

Response

Succeeded: XML_Link
Failed: XML_ResponseStatus
Table 15-489 PUT /ISAPI/System/Network/interfaces/<ID>/link

Method

PUT

Description

Set the connection parameters of a specific network interface.

Query

None.

Request

XML_Link

Response

XML_ResponseStatus

15.10.103 /ISAPI/System/Network/interfaces/<ID>/link/capabilities
Get the connection configuration capability of a specific network interface.

Request URL Definition
Table 15-490 GET /ISAPI/System/Network/interfaces/<ID>/link/capabilities
Method

GET

Description

Get the connection configuration capability of a specific network
interface.

312

Intelligent Security API (General Application) Developer Guide
Query

None.

Request

None.

Response

Succeeded: XML_Cap_Link
Failed: XML_ResponseStatus

15.10.104 /ISAPI/System/Network/interfaces/<ID>/NetworkMode
Operations about the working mode configuration of the network connection.

Request URL Definition
Table 15-491 GET /ISAPI/System/Network/interfaces/<ID>/NetworkMode
Method

GET

Description

Get the working mode parameters of the network connection.

Query

None.

Request

None.

Response

Succeeded: XML_NetWorkMode
Failed: XML_ResponseStatus
Table 15-492 PUT /ISAPI/System/Network/interfaces/<ID>/NetworkMode

Method

PUT

Description

Set the working mode parameters of the network connection.

Query

None.

Request

XML_NetWorkMode

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the network interface ID.

15.10.105 /ISAPI/System/Network/interfaces/<ID>/wireless
Operations about Wi-Fi configuration of a specific network interface.

313

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-493 GET /ISAPI/System/Network/interfaces/<ID>/wireless
Method

GET

Description

Get the Wi-Fi parameters of a specific network interface.

Query

security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.

Request

None.

Response

Succeeded: XML_Wireless
Failed: XML_ResponseStatus
Table 15-494 PUT /ISAPI/System/Network/interfaces/<ID>/wireless

Method

PUT

Description

Set Wi-Fi parameters of a specific network interface.

Query

security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.

Request

XML_Wireless

Response

XML_ResponseStatus

15.10.106 /ISAPI/System/Network/interfaces/<ID>/wireless/accessDeviceList/
<ID>
Get the information of a specific device connected to the hotspot.

314

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-495 GET /ISAPI/System/Network/interfaces/<ID>/wireless/accessDeviceList/<ID>
Method

GET

Description

Get the information of a specific device connected to the hotspot.

Query

None.

Request

None.

Response

Succeeded: XML_accessDevice
Failed: XML_ResponseStatus

Remarks
The first <ID> in the URL refers to the network interface ID, and the second <ID> refers to the
device ID.

15.10.107 /ISAPI/System/Network/interfaces/<ID>/wireless/accessDeviceList/
capabilities
Get the capability set of the device connected to the hotspot.

Request URL Definition
Table 15-496 GET /ISAPI/System/Network/interfaces/<ID>/wireless/accessDeviceList/
capabilities
Method

GET

Description

Get the capability set of the device connected to the hotspot.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_accessDeviceList
Failed: XML_ResponseStatus

Remarks
The <ID> in the URL refers to the network interface ID.

15.10.108 /ISAPI/System/Network/interfaces/<ID>/wireless/accessPointList
Get Wi-Fi hotspot list.

315

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-497 GET /ISAPI/System/Network/interfaces/<ID>/wireless/accessPointList
Method

GET

Description

Get Wi-Fi hotspot list.

Query

None.

Request

None.

Response

Succeeded: XML_accessPointList
Failed: XML_ResponseStatus

15.10.109 /ISAPI/System/Network/interfaces/<ID>/wireless/accessPointList/<ID>
Get a specific Wi-Fi hotspot.

Request URL Definition
Table 15-498 GET /ISAPI/System/Network/interfaces/<ID>/wireless/accessPointList/<ID>
Method

GET

Description

Get a specific Wi-Fi hotspot.

Query

None.

Request

None.

Response

Succeeded: XML_accessPoint
Failed: XML_ResponseStatus

15.10.110 /ISAPI/System/Network/interfaces/<ID>/wireless/capabilities
Get the Wi-Fi configuration capability.

Request URL Definition
Method

GET

Description

Get the Wi-Fi configuration capability.

Query

security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates

316

Intelligent Security API (General Application) Developer Guide
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.
Request

None.

Response

Succeeded: XML_Cap_Wireless
Failed: XML_ResponseStatus

15.10.111 /ISAPI/System/Network/interfaces/<ID>/wirelessServer
Operations about wireless hotspot configuration.

Request URL Definitions
Table 15-499 GET /ISAPI/System/Network/interfaces/<ID>/wirelessServer
Method

GET

Description

Get wireless hotspot parameters.

Query

None.

Request

None.

Response

XML_WirelessServer
Table 15-500 PUT /ISAPI/System/Network/interfaces/<ID>/wirelessServer

Method

PUT

Description

Set wireless hotspot parameters.

Query

None.

Request

XML_WirelessServer

Response

XML_ResponseStatus

Remarks
The <ID> in the URL refers to the network interface ID.

15.10.112 /ISAPI/System/Network/interfaces/ID/wirelessServer/accessDeviceList
Get list of devices that are connected to the hotspot.

317

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-501 GET /ISAPI/System/Network/interfaces/<ID>/wirelessServer/accessDeviceList
Method

GET

Description

Get list of devices that are connected to the hotspot.

Query

None.

Request

None.

Response

Succeeded: XML_accessDeviceList
Failed: XML_ResponseStatus

Remarks
The <ID> in the URL refers to the network interface ID.

15.10.113 /ISAPI/System/Network/interfaces/<ID>/wirelessServer/capabilities
Get configuration capability of wireless hotspot.

Request URL Definition
Table 15-502 GET /ISAPI/System/Network/interfaces/<ID>/wirelessServer/capabilities
Method

GET

Description

Get configuration capability of wireless hotspot.

Query

None.

Request

None.

Response

XML_Cap_WirelessServer

15.10.114 /ISAPI/System/Network/interfaces/<ID>/wirelessServerStatus
Operations about the wireless hotspot status configuration.

Request URL Definition
Table 15-503 GET /ISAPI/System/Network/interfaces/<ID>/wirelessServerStatus
Method

GET

Description

Get the wireless hotspot status parameters.

Query

None.

318

Intelligent Security API (General Application) Developer Guide
Request

None.

Response

Succeeded: XML_WirelessServerStatus
Failed: XML_ResponseStatus

Table 15-504 PUT /ISAPI/System/Network/interfaces/<ID>/wirelessServerStatus
Method

PUT

Description

Set the wireless hotspot status parameters.

Query

None.

Request

XML_WirelessServerStatus

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the network interface ID.

15.10.115 /ISAPI/System/Network/interfaces/<ID>/wirelessServerStatus/
capabilities
Get the wireless hotspot status capability.

Request URL Definition
Table 15-505 GET /ISAPI/System/Network/interfaces/<ID>/wirelessServerStatus/capabilities
Method

GET

Description

Get the wireless hotspot status capability.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_WirelessServerStatus
Failed: XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the network interface ID.

15.10.116 /ISAPI/System/Network/interfaces/<ID>/wirelessStatus
Operations about the configuration of wireless network connection status.

319

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-506 GET /ISAPI/System/Network/interfaces/<ID>/wirelessStatus
Method

GET

Description

Get the parameters of wireless network connection status.

Query

None.

Request

None.

Response

Succeeded: XML_WirelessStatus
Failed: XML_ResponseStatus
Table 15-507 PUT /ISAPI/System/Network/interfaces/<ID>/wirelessStatus

Method

PUT

Description

Set the parameters of wireless network connection status.

Query

None.

Request

XML_WirelessStatus

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the network interface ID.

15.10.117 /ISAPI/System/Network/interfaces/<ID>/wirelessStatus/capabilities
Get the configuration capability of wireless network connection status.

Request URL Definition
Table 15-508 GET /ISAPI/System/Network/interfaces/<ID>/wirelessStatus/capabilities
Method

GET

Description

Get the configuration capability of wireless network connection
status.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_WirelessStatus
Failed: XML_ResponseStatus

320

Intelligent Security API (General Application) Developer Guide
Remarks
The <ID> in the request URL refers to the network interface ID.

15.10.118 /ISAPI/System/Network/ipFilter
Operations about IP address filter configuration.

Request URL Definition
Table 15-509 GET /ISAPI/System/Network/ipFilter
Method

GET

Description

Get the IP filter configuration parameters.

Query

None.

Request

None.

Response

Succeeded: XML_IPFilter
Failed: XML_ResponseStatus
Table 15-510 PUT /ISAPI/System/Network/ipFilter

Method

PUT

Description

Set the IP address filter.

Query

None.

Request

XML_IPFilter

Response

XML_ResponseStatus

15.10.119 /ISAPI/System/Network/ipFilter/capabilities
Get IP address filter configuration capability.

Request URL Definition
Table 15-511 GET /ISAPI/System/Network/ipFilter/capabilities
Method

GET

Description

Get the IP address configuration capability.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_IPFilter

321

Intelligent Security API (General Application) Developer Guide
Failed: XML_ResponseStatus

15.10.120 /ISAPI/System/Network/MACFilter
Operations about MAC address filter configuration.

Request URL Definition
Table 15-512 GET /ISAPI/System/Network/MACFilter
Method

GET

Description

Get the MAC address filter configuration parameters.

Query

None.

Request

None.

Response

XML_MACFilter
Table 15-513 PUT /ISAPI/System/Network/MACFilter

Method

PUT

Description

Set the MAC address filter.

Query

None.

Request

XML_MACFilter

Response

XML_ResponseStatus

15.10.121 /ISAPI/System/Network/MACFilter/capabilities
Get the MAC address filter configuration capability.

Request URL Definition
Table 15-514 GET /ISAPI/System/Network/MACFilter/capabilities
Method

GET

Description

Get the MAC address filter configuration capability.

Query

None.

Request

None.

Response

XML_Cap_MACFilter

322

Intelligent Security API (General Application) Developer Guide
15.10.122 /ISAPI/System/Network/mailing
Operations about email configuration.

Request URL Definition
Table 15-515 GET /ISAPI/System/Network/mailing
Method

GET

Description

Get email configuration parameters.

Query

None.

Request

None.

Response

XML_mailingList
Table 15-516 PUT /ISAPI/System/Network/mailing

Method

PUT

Description

Set email parameters.

Query

None.

Request

XML_mailingList

Response

XML_ResponseStatus

15.10.123 /ISAPI/System/Network/mailing/<ID>
Operations about the configuration of a specific email.

Request URL Definition
Table 15-517 GET /ISAPI/System/Network/mailing/<ID>
Method

GET

Description

Get the configuration parameters of a specific email.

Query

None.

Request

None.

Response

XML_mailing
Table 15-518 PUT /ISAPI/System/Network/mailing/<ID>

Method

PUT

Description

Set the parameters of a specific email.

323

Intelligent Security API (General Application) Developer Guide
Query

None.

Request

XML_mailing

Response

XML_ResponseStatus

Remarks
The <ID> in the URL refers to the email ID.

15.10.124 /ISAPI/System/Network/mailing/capabilities
Get email configuration capability.

Request URL Definition
Table 15-519 GET /ISAPI/System/Network/mailing/capabilities
Method

GET

Description

Get email configuration capability.

Query

None.

Request

None.

Response

XML_Cap_mailingList

15.10.125 /ISAPI/System/Network/mailing/test
Execute the email test to check if the email server and address are available.

Request URL Definition
Table 15-520 POST /ISAPI/System/Network/mailing/test
Method

POST

Description

Execute the email test to check if the email server and address are
available.

Query

None.

Request

XML_mailingTestDescription

Response

XML_mailingTestResult

324

Intelligent Security API (General Application) Developer Guide
15.10.126 /ISAPI/System/Network/POE/capabilities?format=json
Get capability of PoE port parameters configuration.

Request URL Definition
Table 15-521 GET /ISAPI/System/Network/POE/capabilities?format=json
Method

GET

Description

Get the capability of PoE port parameters configuration.

Query

format: determine the format of request or response message.

Request

None.

Response

JSON_Cap_POE

15.10.127 /ISAPI/System/Network/POE?format=json
Get or set the PoE port configuration parameters.

Request URL Definition
Table 15-522 GET /ISAPI/System/Network/POE?format=json
Method

GET

Description

Get PoE port configuration parameters.

Query

format: determine the format of request or response message.

Request

None.

Response

JSON_POE
Table 15-523 PUT /ISAPI/System/Network/POE?format=json

Method

PUT

Description

Set PoE port configuration parameters.

Query

format: determine the format of request or response message.

Request

JSON_POE

Response

JSON_ResponseStatus

15.10.128 /ISAPI/System/Network/resourceStatistics?format=json
Get the information of network resource statistics.

325

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-524 GET /ISAPI/System/Network/resourceStatistics?format=json
Method

GET

Description

Get the information of network resource statistics.

Query

None.

Request

None.

Response

Succeeded: JSON_resourceStatistics
Failed: JSON_ResponseStatus

15.10.129 /ISAPI/System/Network/SIP
Operations about the configuration of a specific SIP (Session Initiation Protocol) server.

Request URL Definition
Table 15-525 GET /ISAPI/System/Network/SIP
Method

GET

Description

Get the parameters of a specific SIP (Session Initiation Protocol)
server.

Query

None.

Request

None.

Response

Succeeded: XML_SIPServerList
Failed: XML_ResponseStatus
Table 15-526 PUT /ISAPI/System/Network/SIP

Method

PUT

Description

Set the parameters of a specific SIP (Session Initiation Protocol)
server.

Query

None.

Request

XML_SIPServerList

Response

XML_ResponseStatus

326

Intelligent Security API (General Application) Developer Guide
15.10.130 /ISAPI/System/Network/SIP/<ID>
Operations about the configuration of a specific SIP (Session Initiation Protocol) server.

Request URL Definition
Table 15-527 GET /ISAPI/System/Network/SIP/<ID>
Method

GET

Description

Get the parameters of a specific SIP (Session Initiation Protocol)
server.

Query

None.

Request

None.

Response

Succeeded: XML_SIPServer
Failed: XML_ResponseStatus
Table 15-528 PUT /ISAPI/System/Network/SIP/<ID>

Method

PUT

Description

Set the parameters of a specific SIP (Session Initiation Protocol)
server.

Query

None.

Request

XML_SIPServer

Response

XML_ResponseStatus

15.10.131 /ISAPI/System/Network/SIP/<ID>/capabilities
Get the configuration capability of a specific SIP (Session Initiation Protocol) server.

Request URL Definition
Table 15-529 GET /ISAPI/System/Network/SIP/<ID>/capabilities
Method

GET

Description

Get the configuration capability of a specific SIP (Session Initiation
Protocol) server.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_SIPServer

327

Intelligent Security API (General Application) Developer Guide
Failed: XML_ResponseStatus

15.10.132 /ISAPI/System/Network/SIP/<ID>/SIPInfo
Operations about the configuration of a piece of SIP (Session Initiation Protocol) information.

Request URL Definition
Table 15-530 GET /ISAPI/System/Network/SIP/<ID>/SIPInfo
Method

GET

Description

Get the parameters of a piece of SIP (Session Initiation Protocol)
information.

Query

None.

Request

None.

Response

Succeeded: XML_SIPInfo
Failed: XML_ResponseStatus
Table 15-531 PUT /ISAPI/System/Network/SIP/<ID>/SIPInfo

Method

PUT

Description

Set the parameters of a piece of SIP (Session Initiation Protocol)
information.

Query

None.

Request

XML_SIPInfo

Response

XML_ResponseStatus

15.10.133 /ISAPI/System/Network/SIP/<ID>/SIPInfo/capabilities
Get the configuration capability of a specific piece of SIP (Session Initiation Protocol) information.

Request URL Definition
Table 15-532 GET /ISAPI/System/Network/SIP/<ID>/SIPInfo/capabilities
Method

GET

Description

Get the configuration capability of a specific piece of SIP (Session
Initiation Protocol) information.

Query

None.

328

Intelligent Security API (General Application) Developer Guide
Request

None.

Response

Succeeded: XML_Cap_SIPInfo
Failed: XML_ResponseStatus

15.10.134 /ISAPI/System/Network/SIP/<ID>/SIPInfo/multiInfo
Get or set the information list of SIP servers.

Request URL Definition
Table 15-533 GET /ISAPI/System/Network/SIP/<ID>/SIPInfo/multiInfo
Method

GET

Description

Get the information list of SIP servers.

Query

None.

Request

None.

Response

Succeeded: XML_SIPInfoList
Failed: XML_ResponseStatus
Table 15-534 PUT /ISAPI/System/Network/SIP/<ID>/SIPInfo/multiInfo

Method

PUT

Description

Set the information list of SIP servers.

Query

None.

Request

XML_SIPInfoList

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the SIP server ID.

15.10.135 /ISAPI/System/Network/socketIP
Get the socket IP of current connection.

Request URL Definition
Table 15-535 GET /ISAPI/System/Network/socketIP
Method

GET

Description

Get the socket IP of current connection.

329

Intelligent Security API (General Application) Developer Guide
Query

None.

Request

None.

Response

XML_SocketIP

15.10.136 /ISAPI/System/Network/ssh
Operations about SSH server configurations.

Request URL Definition
Table 15-536 GET /ISAPI/System/Network/ssh
Method

GET

Description

Get SSH server parameters.

Query

None.

Request

None.

Response

XML_SSH
Table 15-537 PUT /ISAPI/System/Network/ssh

Method

PUT

Description

Set SSH server parameters.

Query

None.

Request

XML_SSH

Response

XML_ResponseStatus

15.10.137 /ISAPI/System/Network/StaticRoute
Get, set, or delete the parameters of static route.

Request URL Definition
Table 15-538 GET /ISAPI/System/Network/StaticRoute
Method

GET

Description

Get the parameters of static route.

Query

None.

330

Intelligent Security API (General Application) Developer Guide
Request

None.

Response

Succeeded: XML_staticRouteList
Failed: XML_ResponseStatus
Table 15-539 PUT /ISAPI/System/Network/StaticRoute

Method

PUT

Description

Set the parameters of static route.

Query

None.

Request

XML_staticRouteList

Response

XML_ResponseStatus
Table 15-540 DELETE /ISAPI/System/Network/StaticRoute

Method

DELETE

Description

Delete the parameters of static route.

Query

None.

Request

None.

Response

XML_ResponseStatus

15.10.138 /ISAPI/System/Network/telnetd
Operations about the telnetd service configuration.

Request URL Definition
Table 15-541 GET /ISAPI/System/Network/telnetd
Method

GET

Description

Get the telnetd service parameters.

Query

None.

Request

None.

Response

Succeeded: XML_Telnetd
Failed: XML_ResponseStatus
Table 15-542 PUT /ISAPI/System/Network/telnetd

Method

PUT

Description

Set the telnetd service parameters.

331

Intelligent Security API (General Application) Developer Guide
Query

None.

Request

XML_Telnetd

Response

XML_ResponseStatus

15.10.139 /ISAPI/System/Network/telnetd/capabilities
Get the telnetd service capability.

Request URL Definition
Table 15-543 GET /ISAPI/System/Network/telnetd/capabilities
Method

GET

Description

Get the telnetd service capability.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_Telnetd
Failed: XML_ResponseStatus

15.10.140 /ISAPI/System/Network/UPnP
Operations about UPnP configuration.

Request URL Definition
Table 15-544 GET /ISAPI/System/Network/UPnP
Method

GET

Description

Get UPnP parameters.

Query

None.

Request

None.

Response

XML_UPnP
Table 15-545 PUT /ISAPI/System/Network/UPnP

Method

PUT

Description

Set UPnP parameters.

Query

None.

332

Intelligent Security API (General Application) Developer Guide
Request

XML_UPnP

Response

XML_ResponseStatus

15.10.141 /ISAPI/System/Network/UPnP/ports
Operations about configuration of all UPnP ports.

Request URL Definition
Table 15-546 GET /ISAPI/System/Network/UPnP/ports
Method

GET

Description

Get the parameters of all UPnP ports.

Query

None.

Request

None.

Response

XML_ports
Table 15-547 PUT /ISAPI/System/Network/UPnP/ports

Method

PUT

Description

Set the parameters of all UPnP ports.

Query

None.

Request

XML_ports

Response

XML_ResponseStatus

15.10.142 /ISAPI/System/Network/UPnP/ports/status
Get the mapping statuses of all UPnP ports.

Request URL Definition
Table 15-548 GET /ISAPI/System/Network/UPnP/ports/status
Method

GET

Description

Get the mapping statuses of all UPnP ports.

Query

None.

Request

None.

Response

XML_portsStatus

333

Intelligent Security API (General Application) Developer Guide
15.10.143 /ISAPI/System/Network/UPnP/ports/<ID>
Operations about configuration of a specific UPnP port.

Request URL Definition
Table 15-549 GET /ISAPI/System/Network/UPnP/ports/<ID>
Method

GET

Description

Get the parameters of a specific UPnP port.

Query

None.

Request

None.

Response

Succeeded: XML_port
Failed: XML_ResponseStatus
Table 15-550 PUT /ISAPI/System/Network/UPnP/ports/<ID>

Method

PUT

Description

Set the parameters of a specific UPnP port.

Query

None.

Request

XML_port

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to UPnP port ID.

15.10.144 /ISAPI/System/Network/UPnP/ports/<ID>/status
Get mapping status of a specific UPnP port.

Request URL Definition
Table 15-551 GET /ISAPI/System/Network/UPnP/ports/<ID>/status
Method

GET

Description

Get mapping status of a specific UPnP port.

Query

None.

Request

None.

Response

Succeeded: XML_portStatus

334

Intelligent Security API (General Application) Developer Guide
Failed: XML_ResponseStatus

Remarks
The <ID> in the request URL refers to UPnP port ID.

15.10.145 /ISAPI/System/Network/verificationCodeCheck
Verify the encryption key or verification code.

Request URL Definition
Table 15-552 POST /ISAPI/System/Network/verificationCodeCheck
Method

POST

Description

Verify the encryption key or verification code.

Query

None.

Request

XML_CheckInfo

Response

XML_ResponseStatus

15.10.146 /ISAPI/System/Network/WirelessDial/Interfaces/<ID>/dial
Operations about the wireless dial-up configuration.

Request URL Definition
Table 15-553 GET /ISAPI/System/Network/WirelessDial/Interfaces/<ID>/dial
Method

GET

Description

Get the configuration parameters of wireless dial-up.

Query

security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.

Request

None.

Response

Succeeded: XML_Dial
Failed: XML_ResponseStatus

335

Intelligent Security API (General Application) Developer Guide
Table 15-554 PUT /ISAPI/System/Network/WirelessDial/Interfaces/<ID>/dial
Method

PUT

Description

Set the wireless dial-up parameters.

Query

security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.

Request

XML_Dial

Response

XML_ResponseStatus

15.10.147 /ISAPI/System/Network/WirelessDial/Interfaces/<ID>/dial/capabilities
Get the wireless dial-up capability.

Request URL Definition
Table 15-555 GET /ISAPI/System/Network/WirelessDial/Interfaces/<ID>/dial/capabilities
Method

GET

Description

Get the wireless dial-up capability.

Query

security: the version No. of encryption scheme. When security does
not exist, it indicates that the data is not encrypted; when security is
1, it indicates that the nodes of sensitive information in the message
are encrypted in AES128 CBC mode; when security is 2, it indicates
that the nodes of sensitive information in the message are encrypted
in AES256 CBC mode.
iv: the initialization vector, and it is required when security is 1 or 2.

Request

None.

Response

Succeeded: XML_Cap_Dial
Failed: XML_ResponseStatus

15.10.148 /ISAPI/System/Network/WirelessDial/Interfaces/<ID>/dialstatus
Operations about the configuration of wireless dial-up connection status.

336

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-556 GET /ISAPI/System/Network/WirelessDial/Interfaces/<ID>/dialstatus
Method

GET

Description

Get the parameters of wireless dial-up connection status.

Query

None.

Request

None.

Response

Succeeded: XML_Dialstatus
Failed: XML_ResponseStatus

Table 15-557 PUT /ISAPI/System/Network/WirelessDial/Interfaces/<ID>/dialstatus
Method

PUT

Description

Set the parameters of wireless dial-up connection status.

Query

None.

Request

XML_Dialstatus

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the network interface ID.

15.10.149 /ISAPI/System/onlineUpgrade/capabilities
Get the device online upgrade capability.

Request URL Definition
Table 15-558 GET /ISAPI/System/onlineUpgrade/capabilities
Method

GET

Description

Get the device online upgrade capability.

Query

None.

Request

None.

Response

XML_OnlineUpgradeCap

15.10.150 /ISAPI/System/onlineUpgrade/deviceParameter?format=json
Get and set the device online upgrade parameters.

337

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-559 GET /ISAPI/System/onlineUpgrade/deviceParameter?format=json
Method

GET

Description

Get the device online upgrade parameters.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_OnlineUpgradeParameter
Failed: JSON_ResponseStatus

Table 15-560 PUT /ISAPI/System/onlineUpgrade/deviceParameter?format=json
Method

PUT

Description

Set the device online upgrade parameters.

Query

format: determine the format of request or response message.

Request

JSON_OnlineUpgradeParameter

Response

JSON_ResponseStatus

15.10.151 /ISAPI/System/onlineUpgrade/downloadPackage/pause?format=json
Pause the upgrade package download.

Request URL Definition
Table 15-561 PUT /ISAPI/System/onlineUpgrade/downloadPackage/pause?format=json
Method

PUT

Description

Pause upgrade package download.

Query

format: determine the format of request or response message.

Request

None.

Response

JSON_ResponseStatus

15.10.152 /ISAPI/System/onlineUpgrade/downloadPackage/resume?format=json
Resume the upgrade package download.

338

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-562 PUT /ISAPI/System/onlineUpgrade/downloadPackage/resume?format=json
Method

PUT

Description

Resume the upgrade package download.

Query

format: determine the format of request or response message.

Request

None.

Response

JSON_ResponseStatus

15.10.153 /ISAPI/System/onlineUpgrade/downloadPackage/status?format=json
Get the upgrade package download progress.

Request URL Definition
Table 15-563 GET /ISAPI/System/onlineUpgrade/downloadPackage/status?format=json
Method

GET

Description

Get the upgrade package download progress.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_DownloadPackageStatus
Failed: JSON_ResponseStatus

15.10.154 /ISAPI/System/onlineUpgrade/downloadPackage?format=json
Start or cancel downloading upgrade package to device.

Request URL Definition
Table 15-564 PUT /ISAPI/System/onlineUpgrade/downloadPackage?format=json
Method

PUT

Description

Start to download upgrade package to device.

Query

format: determine the format of request or response message.

Request

None.

Response

JSON_ResponseStatus

339

Intelligent Security API (General Application) Developer Guide
Table 15-565 DELETE /ISAPI/System/onlineUpgrade/downloadPackage?format=json
Method

DELETE

Description

Cancel the upgrade package download.

Query

format: determine the format of request or response message.

Request

None.

Response

JSON_ResponseStatus

15.10.155 /ISAPI/System/onlineUpgrade/ignoreCurrentVersion?format=json
Ignore the current upgrade package version.

Request URL Definition
Table 15-566 PUT /ISAPI/System/onlineUpgrade/ignoreCurrentVersion?format=json
Method

PUT

Description

Ignore the current upgrade package version.

Query

format: determine the format of request or response message.

Request

None.

Response

JSON_ResponseStatus

Remarks
If the current upgrade package version is ignored, it will not be found in further detection.

15.10.156 /ISAPI/System/onlineUpgrade/server
Get the online upgrade server status.

Request URL Definition
Table 15-567 GET /ISAPI/System/onlineUpgrade/server
Method

GET

Description

Get the online upgrade server status.

Query

None.

Request

None.

Response

XML_OnlineUpgradeServer

340

Intelligent Security API (General Application) Developer Guide
15.10.157 /ISAPI/System/onlineUpgrade/status
Get the online upgrade progress of device.

Request URL Definition
Table 15-568 GET /ISAPI/System/onlineUpgrade/status
Method

GET

Description

Get the online upgrade progress of device.

Query

None.

Request

None.

Response

XML_OnlineUpgradeStatus

15.10.158 /ISAPI/System/onlineUpgrade/upgradeWithoutDownload?format=json
Start device upgrade with existed upgrade package.

Request URL Definition
Table 15-569 PUT /ISAPI/System/onlineUpgrade/upgradeWithoutDownload?format=json
Method

PUT

Description

Start upgrade with existed upgrade package.

Query

format: determine the format of request or response message.

Request

None.

Response

JSON_ResponseStatus

15.10.159 /ISAPI/System/onlineUpgrade/version
Get the information of new upgrade package.

Request URL Definition
Table 15-570 GET /ISAPI/System/onlineUpgrade/version
Method

GET

Description
Query

check

341

Intelligent Security API (General Application) Developer Guide
Request

None.

Response

XML_OnlineUpgradeVersion

15.10.160 /ISAPI/System/reboot
Reboot device.

Request URL Definition
Table 15-571 PUT /ISAPI/System/reboot
Method

PUT

Description

Reboot device.

Query

None.

Request

None.

Response

XML_ResponseStatus

15.10.161 /ISAPI/System/Serial/capabilities
Get the serial port capability of the device.

Request URL Definition
Table 15-572 GET /ISAPI/System/Serial/capabilities
Method

GET

Description

Get the serial port capability of the device.

Query

None.

Request

None.

Response

Succeeded: XML_SerialCap
Failed: XML_ResponseStatus

15.10.162 /ISAPI/System/Serial/ports
Get the list of serial ports supported by the device.

342

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-573 GET /ISAPI/System/Serial/ports
Method

GET

Description

Get the list of serial ports supported by the device.

Query

None.

Request

None.

Response

Succeeded: XML_SerialPorList
Failed: XML_ResponseStatus

15.10.163 /ISAPI/System/Serial/ports/<ID>
Operations about the configuration of a specific serial port supported by the device.

Request URL Definition
Table 15-574 GET /ISAPI/System/Serial/ports/<ID>
Method

GET

Description

Get the parameters of a specific port supported by the device.

Query

None.

Request

None.

Response

Succeeded: XML_SerialPort
Failed: XML_ResponseStatus
Table 15-575 PUT /ISAPI/System/Serial/ports/<ID>

Method

PUT

Description

Set the parameters of a specific serial port supported by the device.

Query

None.

Request

XML_SerialPort

Response

XML_ResponseStatus

15.10.164 /ISAPI/System/Serial/ports/<ID>/capabilities
Get the capability of a specific serial port.

343

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-576 GET /ISAPI/System/Serial/ports/<ID>/capabilities
Method

GET

Description

Get the capability of a specific serial port.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_SerialPort
Failed: XML_ResponseStatus

15.10.165 /ISAPI/System/Serial/ports/command
Send a command to a serial port.

Request URL Definition
Table 15-577 PUT /ISAPI/System/Serial/ports/command
Method

PUT

Description

Send a command to a serial port.

Query

None.

Request

XML_SerialCommand or query string with raw command in binary
format

Response

XML_ResponseStatus

Remarks
• If the device is an encoder that converts analog signals to digital signals and it is connected to
analog cameras with PTZ enabled, the encoder will forward the command to the appropriate
serial port according to the <chainNo> node of the XML message or the query string of the HTTP
request.
• If the device is a digital camera with PTZ enabled, the camera will forward the PTZ command to
the corresponding serial port.
• The serial port command can be encapsulated in the <command> node of the XML message,
and the command should be encoded in hexadecimal notation; or the serial port command can
be directly uploaded as payload of the HTTP request, and in this case the Content-Type should
be set to "application/octet-stream", and the query string chainNo should be set.
Example
Sample Code of Command in XML Format

344

Intelligent Security API (General Application) Developer Guide
PUT /ISAPI/System/Serial/ports/999/command HTTP/1.1
Content-Type: application/xml; charset=”UTF-8”
Content-Length: xxx
<?xml version=“1.0” encoding=“UTF-8”?>
<SerialCommand>
<chainNo>0</chainNo>
<command>ab45be8778cd</command>
</SerialCommand>

Example
Sample Code of Command Using Query String
/ISAPI/System/Serial/ports/999/command?chainNo=1 HTTP/1.1
Content-Type: application/octet-stream
Content-Length: xxx
(...Raw data of the command should be inserted here...)

15.10.166 /ISAPI/System/Serial/ports/command/capabilities
Get the serial port command capability.

Request URL Definition
Table 15-578 GET /ISAPI/System/Serial/ports/command/capabilities
Method

GET

Description

Get the serial port command capability.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_SerialCommand
Failed: XML_ResponseStatus

15.10.167 /ISAPI/System/serialLogCfg/capabilities?format=json
Get the configuration capability of serial port log redirection.

Request URL Definition
Table 15-579 GET /ISAPI/System/serialLogCfg/capabilities?format=json
Method

GET

Description

Get the configuration capability of serial port log redirection.

345

Intelligent Security API (General Application) Developer Guide
Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_SerialLogCfgCap
Failed: JSON_ResponseStatus

15.10.168 /ISAPI/System/serialLogCfg?format=json
Operations about the redirection configuration of serial port log.

Request URL Definition
Table 15-580 GET /ISAPI/System/serialLogCfg?format=json
Method

GET

Description

Get the redirection parameters of serial port log.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_SerialLogCfg
Failed: JSON_ResponseStatus
Table 15-581 PUT /ISAPI/System/serialLogCfg?format=json

Method

PUT

Description

Set the redirection parameters of serial port log.

Query

format: determine the format of request or response message.

Request

JSON_SerialLogCfg

Response

JSON_ResponseStatus

15.10.169 /ISAPI/System/shutdown?format=json
Shut down the device.

Request URL Definition
Table 15-582 PUT /ISAPI/System/shutdown?format=json
Method

PUT

Description

Shut down the device.

Query

format: determine the format of request or response message.

346

Intelligent Security API (General Application) Developer Guide
Request

None.

Response

JSON_ResponseStatus

15.10.170 /ISAPI/System/Software/channels/<ID>
Operation about software service configuration.

Request URL Definition
Table 15-583 GET /ISAPI/System/Software/channels/<ID>
Method

GET

Description

Get software service parameters.

Query

None.

Request

None.

Response

XML_SoftwareService
Table 15-584 PUT /ISAPI/System/Software/channels/<ID>

Method

PUT

Description

Set software service parameters.

Query

None.

Request

XML_SoftwareService

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel No.

15.10.171 /ISAPI/System/Software/channels/<ID>/capabilities
Get the configuration capability of software service.

Request URL Definition
Table 15-585 GET /ISAPI/System/Software/channels/<ID>/capabilities
Method

GET

Description

Get the configuration capability of software service.

Query

None.

347

Intelligent Security API (General Application) Developer Guide
Request

None.

Response

XML_Cap_SoftwareService

Remarks
The <ID> in the request URL refers to the channel No.

15.10.172 /ISAPI/System/status
Get device status, e.g., CPU, memory, and so on.

Request URL Definition
Table 15-586 GET /ISAPI/System/status
Method

GET

Description

Get device status, e.g., CPU, memory, and so on.

Query

None.

Request

None.

Response

Succeeded: XML_DeviceStatus
Failed: XML_ResponseStatus

15.10.173 /ISAPI/System/syncSignalOutput/<ID>
Operations about the configuration of synchronous signal output.

Request URL Definition
Table 15-587 GET /ISAPI/System/syncSignalOutput/<ID>
Method

GET

Description

Get the parameters of synchronous signal output.

Query

None.

Request

None.

Response

Succeeded: XML_SyncSignalOutputList
Failed: XML_ResponseStatus
Table 15-588 PUT /ISAPI/System/syncSignalOutput/<ID>

Method

PUT

Description

Set the parameters of synchronous signal output.

348

Intelligent Security API (General Application) Developer Guide
Query

None.

Request

XML_SyncSignalOutputList

Response

XML_ResponseStatus

15.10.174 /ISAPI/System/syncSignalOutput/<ID>/capabilities
Get the configuration capability of synchronous signal output.

Request URL Definition
Table 15-589 GET /ISAPI/System/syncSignalOutput/<ID>/capabilities
Method

GET

Description

Get the configuration capability of synchronous signal output.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_SyncSignalOutputList
Failed: XML_ResponseStatus

15.10.175 /ISAPI/System/time
Operations about the device time configuration.

Request URL Definition
Table 15-590 GET /ISAPI/System/time
Method

GET

Description

Get the device time parameters.

Query

None.

Request

None.

Response

Succeeded: XML_Time
Failed: XML_ResponseStatus
Table 15-591 PUT /ISAPI/System/time

Method

PUT

Description

Set the device time parameters.

Query

None.

349

Intelligent Security API (General Application) Developer Guide
Request

XML_Time

Response

XML_ResponseStatus

15.10.176 /ISAPI/System/time/capabilities
Get the time capability of the device.

Request URL Definition
Table 15-592 GET /ISAPI/System/time/capabilities
Method

GET

Description

Get the time capability of the device.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_Time
Failed: XML_ResponseStatus

15.10.177 /ISAPI/System/time/localTime
Operations about the configuration of device local time.

Request URL Definition
Table 15-593 GET /ISAPI/System/time/localTime
Method

GET

Description

Get the configuration parameters of device local time.

Query

None.

Request

None.

Response

String with date and time information (ISO8601 format, e.g., 201802-10T17:30:08)
Table 15-594 PUT /ISAPI/System/time/localTime

Method

PUT

Description

Set device local time.

Query

None.

350

Intelligent Security API (General Application) Developer Guide
Request

String with date and time information (ISO8601 format, e.g., 201802-10T17:30:08)

Response

XML_ResponseStatus

15.10.178 /ISAPI/System/time/ntpServers
Operations about the configurations of multiple NTP servers.

Request URL Definition
Table 15-595 GET /ISAPI/System/time/ntpServers
Method

GET

Description

Get the parameters of multiple NTP servers.

Query

None.

Request

None.

Response

Succeeded: XML_NTPServerList
Failed: XML_ResponseStatus
Table 15-596 PUT /ISAPI/System/time/ntpServers

Method

PUT

Description

Set the parameters of multiple NTP servers.

Query

None.

Request

XML_NTPServerList

Response

XML_ResponseStatus
Table 15-597 POST /ISAPI/System/time/ntpServers

Method

POST

Description

Add a NTP server.

Query

None.

Request

XML_NTPServer

Response

XML_ResponseStatus
Table 15-598 DELETE /ISAPI/System/time/ntpServers

Method

DELETE

Description

Delete multiple NTP servers.

351

Intelligent Security API (General Application) Developer Guide
Query

None.

Request

None.

Response

XML_ResponseStatus

15.10.179 /ISAPI/System/time/ntpServers/<ID>
Operations about the configurations of a NTP server.

Request URL Definition
Table 15-599 GET /ISAPI/System/time/ntpServers/<ID>
Method

GET

Description

Get the parameters of a NTP server.

Query

None.

Request

None.

Response

Succeeded: XML_NTPServer
Failed: XML_ResponseStatus
Table 15-600 PUT /ISAPI/System/time/ntpServers/<ID>

Method

PUT

Description

Set the parameters of a NTP server.

Query

None.

Request

XML_NTPServer

Response

XML_ResponseStatus
Table 15-601 DELETE /ISAPI/System/time/ntpServers/<ID>

Method

DELETE

Description

Delete the configuration parameters of a NTP server.

Query

None.

Request

None.

Response

XML_ResponseStatus

15.10.180 /ISAPI/System/time/ntpServers/<ID>/capabilities
Get the configuration capability of a specific NTP server.

352

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-602 GET /ISAPI/System/time/ntpServers/<ID>/capabilities
Method

GET

Description

Get the configuration capability of a specific NTP server.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_NTPServer
Failed: XML_ResponseStatus

15.10.181 /ISAPI/System/time/ntpServers/capabilities
Get the NTP service capability.

Request URL Definition
Table 15-603 GET /ISAPI/System/time/ntpServers/capabilities
Method

GET

Description

Get the NTP service capability.

Query

None.

Request

None.

Response

Succeeded:
Failed: XML_ResponseStatus

15.10.182 /ISAPI/System/time/ntpServers/test
Execute a test to check if the NTP server is available.

Request URL Definition
Table 15-604 POST /ISAPI/System/time/ntpServers/test
Method

POST

Description

Execute a test to check if the NTP server is available.

Query

None.

353

Intelligent Security API (General Application) Developer Guide
Request

XML_NTPTestDescription

Response

XML_NTPTestResult

15.10.183 /ISAPI/System/time/timeType?format=json
Operations about device time type configuration.

Request URL Definition
Table 15-605 GET /ISAPI/System/time/timeType?format=json
Method

GET

Description

Get the device time type.

Query

format: determine the format of request or response message.

Request

None.

Response

JSON_TimeType
Table 15-606 PUT /ISAPI/System/time/timeType?format=json

Method

PUT

Description

Set the device time type.

Query

format: determine the format of request or response message.

Request

JSON_TimeType

Response

JSON_ResponseStatus

15.10.184 /ISAPI/System/time/timeZone
Operations about the configuration of device time zone.

Request URL Definition
Table 15-607 GET /ISAPI/System/time/timeZone
Method

GET

Description

Get the device time zone parameters.

Query

None.

Request

None.

Response

String containing time zone information

354

Intelligent Security API (General Application) Developer Guide
Table 15-608 PUT /ISAPI/System/time/timeZone
Method

PUT

Description

Set the device time zone parameters.

Query

None.

Request

String containing time zone information

Response

XML_ResponseStatus

15.10.185 /ISAPI/System/TwoWayAudio/channels
Get audio parameters of all two-way audio channels.

Request URL Definition
Table 15-609 GET /ISAPI/System/TwoWayAudio/channels
Method

GET

Description

Get parameters of all two-way audio channels.

Query

None.

Request

None.

Response

Succeeded: XML_TwoWayAudioChannelList
Failed: XML_ResponseStatus

Example
Sample Code for Getting Parameters of All Two-Way Audio Channels
GET /ISAPI/System/TwoWayAudio/channels HTTP/1.1
Host: 10.17.132.49
Connection: Keep-Alive
Authorization: Digest username="admin",
realm="DS-2CD2F12FWD-IWS",
nonce="4e4446464e6a6333516a63365a4445304f47526a4e32553d",
uri="/ISAPI/System/TwoWayAudio/channels",
cnonce="145ef1bc3ab456be09918d39b77e78ae",
nc=00000021,
response="d10bab23689c60e95241230fff3181b0",
qop="auth"
HTTP/1.1 200 OK
Date: Wed, 15 Mar 2017 09:25:29 GMT
Server: App-webs/
Connection: close
Content-Length: 467
Content-Type: application/xml

355

Intelligent Security API (General Application) Developer Guide
<?xml version="1.0" encoding="UTF-8"?>
<TwoWayAudioChannelList version="2.0" xmlns="http://www.isapi.com/ver20/XMLSchema">
<TwoWayAudioChannel version="2.0" xmlns="http://www.isapi.com/ver20/XMLSchema">
<id>1</id>
<enabled>false</enabled>
<audioCompressionType>G.711ulaw</audioCompressionType>
<audioInputType>MicIn</audioInputType>
<speakerVolume>50</speakerVolume>
<noisereduce>false</noisereduce>
</TwoWayAudioChannel>
</TwoWayAudioChannelList>

15.10.186 /ISAPI/System/TwoWayAudio/channels/<ID>
Operations about the configuration of a specific two-way audio channel.

Request URL Definition
Table 15-610 GET /ISAPI/System/TwoWayAudio/channels/<ID>
Method

GET

Description

Get the parameters of a specific two-way audio channel.

Query

None.

Request

None.

Response

Succeeded: XML_TwoWayAudioChannel
Failed: XML_ResponseStatus
Table 15-611 PUT /ISAPI/System/TwoWayAudio/channels/<ID>

Method

PUT

Description

Set the parameters of a specific two-way audio channel.

Query

None.

Request

XML_TwoWayAudioChannel

Response

XML_ResponseStatus

15.10.187 /ISAPI/System/TwoWayAudio/channels/<ID>/audioData
Receive or send audio data from or to a specific two-way audio channel.

356

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-612 GET /ISAPI/System/TwoWayAudio/channels/<ID>/audioData
Method

GET

Description

Receive audio data from a specific two-way audio channel.

Query

sessionId: communication session ID, which is required when the
two-way audio is started between multiple channels and a channel;
otherwise, the session ID is not required.

Request

None.

Response

Succeeded: audio data
Failed: XML_ResponseStatus
Table 15-613 PUT /ISAPI/System/TwoWayAudio/channels/<ID>/audioData

Method

GET

Description

Send audio data to a specific two-way audio channel.

Query

sessionId: communication session ID, which is required when the
two-way audio is started between multiple channels and a channel;
otherwise, the session ID is not required.

Request

Audio data.

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the two-way audio channel ID.
Example
Sample Code for Sending Audio Data to Device
PUT /ISAPI/System/TwoWayAudio/channels/1/audioData HTTP/1.1
HOST: 10.17.132.49
Authorization: Digest username="admin",
realm="DS-2CD2F12FWD-IWS",
nonce="4e3055314e6a64434e7a59365a4445304f545668596a6b3d",
uri="/ISAPI/System/TwoWayAudio/channels/1/audioData",
response="6a03c7e85c17a35bae9ee6f3cfcd254b"
Connection: keep-alive
Content-Length: 0
Content-Type: application/octet-stream
HTTP/1.1 200 OK
..U....U..............U...........U........ (Binary audio data)

357

Intelligent Security API (General Application) Developer Guide
Example
Sample Code for Receiving Audio Data from Device
GET /ISAPI/System/TwoWayAudio/channels/1/audioData HTTP/1.1
HOST: 10.17.132.49
Authorization: Digest username="admin",
realm="DS-2CD2F12FWD-IWS",
nonce="4e3055314e6a64434e7a59365a4445304f5456685a44673d",
uri="/ISAPI/System/TwoWayAudio/channels/1/audioData",
response="7ea0ec7bd102b3c4cb225cbf33adb8f8"
Connection: keep-alive
HTTP/1.1 200 OK
Content-Type: audio/basic
Q......U..dzR..\.FfN...q[....z..q.......`. (Binary audio data)

15.10.188 /ISAPI/System/TwoWayAudio/channels/<ID>/capabilities
Get the capability of a specific two-way audio channel.

Request URL Definition
Table 15-614 GET /ISAPI/System/TwoWayAudio/channels/<ID>/capabilities
Method

GET

Description

Get the capability of a specific two-way audio channel.

Query

None.

Request

None.

Response

Succeeded: XML_TwoWayAudioChannelCap
Failed: XML_ResponseStatus

15.10.189 /ISAPI/System/TwoWayAudio/channels/<ID>/close
Stop two-way audio of a specific channel.

Request URL Definition
Table 15-615 PUT /ISAPI/System/TwoWayAudio/channels/<ID>/close
Method

PUT

Description

Stop two-way audio of a specific channel.

Query

None.

358

Intelligent Security API (General Application) Developer Guide
Request

None.

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the two-way audio channel ID.
Example
Sample Code for Stopping Two-Way Audio
PUT /ISAPI/System/TwoWayAudio/channels/1/close HTTP/1.1
HOST: 10.17.132.49
Authorization: Digest username="admin",
realm="DS-2CD2F12FWD-IWS",
nonce="4e54457a4d7a67354d6a6b365a4445304f5463794d32553d",
uri="/ISAPI/System/TwoWayAudio/channels/1/close",
response="7d5acdc3ccf7c080400802800d7471e3"
Content-Length: 0
HTTP/1.1 200 OK
Date: Wed, 15 Mar 2017 09:25:35 GMT
Server: App-webs/
Connection: close
Content-Length: 298
Content-Type: application/xml
<?xml version="1.0" encoding="UTF-8"?>
<ResponseStatus version="2.0" xmlns="http://www.isapi.com/ver20/XMLSchema">
<requestURL>/ISAPI/System/TwoWayAudio/channels/1/close</requestURL>
<statusCode>1</statusCode>
<statusString>OK</statusString>
<subStatusCode>ok</subStatusCode>
</ResponseStatus>

15.10.190 /ISAPI/System/TwoWayAudio/channels/<ID>/open
Start two-way audio of a specific channel.

Request URL Definition
Table 15-616 PUT /ISAPI/System/TwoWayAudio/channels/<ID>/open
Method

PUT

Description

Start two-way audio of a specific channel.

Query

None.

Request

None.

Response

Succeeded: XML_TwoWayAudioSession

359

Intelligent Security API (General Application) Developer Guide
Failed: XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the two-way audio channel ID.
Example
Sample Code for Start Two-Way Audio
PUT /ISAPI/System/TwoWayAudio/channels/1/open HTTP/1.1
HOST: 10.17.132.49
Authorization: Digest username="admin",
realm="DS-2CD2F12FWD-IWS",
nonce="4e3055314e6a64434e7a59365a4445304f5456685957453d",
uri="/ISAPI/System/TwoWayAudio/channels/1/open",
response="368dda22535b9783bdccafc3b2ded29a"
Content-Length: 0
HTTP/1.1 200 OK
Date: Wed, 15 Mar 2017 09:25:29 GMT
Server: App-webs/
Connection: close
Content-Length: 183
Content-Type: application/xml
<?xml version="1.0" encoding="UTF-8"?>
<TwoWayAudioSession version="2.0" xmlns="http://www.isapi.com/ver20/XMLSchema">
<sessionId>2093716360</sessionId>
</TwoWayAudioSession>

15.10.191 /ISAPI/System/unitConfig/capabilities?format=json
Get the capability of unit unified configuration.

Request URL Definition
Table 15-617 GET /ISAPI/System/unitConfig/capabilities?format=json
Method

GET

Description

Get the capability of unit unified configuration.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_unitConfigCap
Failed: JSON_ResponseStatus

360

Intelligent Security API (General Application) Developer Guide
15.10.192 /ISAPI/System/unitConfig?format=json
Get and set the unit unified configuration parameters.

Request URL Definition
Table 15-618 GET /ISAPI/System/unitConfig?format=json
Method

GET

Description

Get the unit unified configuration parameters.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_unitConfig
Failed: JSON_ResponseStatus
Table 15-619 PUT /ISAPI/System/unitConfig?format=json

Method

PUT

Description

Set the unit unified configuration parameters.

Query

format: determine the format of request or response message.

Request

JSON_unitConfig

Response

JSON_ResponseStatus

15.10.193 /ISAPI/System/updateFirmware
Upgrade the device firmware.

Request URL Definition
Table 15-620 PUT or POST /ISAPI/System/updateFirmware
Method

PUT, POST

Description

Upgrade the device firmware.

Query

None.

Request

Opaque data (binary data for PUT method, data in form format for
POST method).

Response

XML_ResponseStatus

361

Intelligent Security API (General Application) Developer Guide
Remarks
After upgrading the device firmware, the device will automatically reboot according to the
response message. If upgrading failed, the following reasons may be returned: "upgrading"-the
device is upgrading, "badFlash"-flash error, "badLanguage"-language mismatches.
Example
The URL Interaction in Form Format
/ISAPI/System/updateFirmware
Accept: text/html, application/xhtml+xml,
Accept-Language: zh-CN
Content-Type: multipart/form-data; boundary=---------------------------7e13971310878
User-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)
Accept-Encoding: gzip, deflate
Host: 10.10.36.29:8080
Content-Length: 9907
Connection: Keep-Alive
Cache-Control: no-cache
-----------------------------7e13971310878
Content-Disposition: form-data; name="updateFile";
Content-Type: File/ Opaque Data
Content-Length: 9907
..........`.`.....C........... .
..
................. $.' ",#..(7),01444.'9=82<.342...C.
-----------------------------7e13971310878--

....

15.10.194 /ISAPI/System/updateFirmware?type=&id=
Upgrade the slave device's firmware.

Request URL Definition
Table 15-621 PUT or POST /ISAPI/System/updateFirmware?type=&id=
Method

PUT, POST

Description

Upgrade the slave device's firmware.

Query

type: device or module type, string type, it can be set to one of the
following values: "cardReader"-card reader, "FPModule"-​fingerprint
module, "securityModule"-secure door control unit,
"extendModule"- (IO) extension module, "channelController"-lane
controller, "IRModule"-IR module, "lampModule"-indicator module,
"elevatorController"-slave elevator controller, and

362

Intelligent Security API (General Application) Developer Guide
"FPAlgorithmProgram"-​fingerprint algorithm program of the card
reader, "uboot".
id: slave device No., e.g., /ISAPI/System/updateFirmware?
type=cardReader&id=1 refers to upgrading firmware of card reader 1.
Request

Opaque data (binary data for PUT method, data in form format for
POST method).

Response

XML_ResponseStatus

Remarks
After upgrading the slave device's firmware, the device will automatically reboot according to the
response message. If upgrading failed, the following reasons may be returned: "upgrading"-the
device is upgrading, "badFlash"-flash error, "badLanguage"-language mismatches.

15.10.195 /ISAPI/System/updateFirmware?type=&moduleAddress=
Upgrade the peripheral module's firmware.

Request URL Definition
Table 15-622 PUT or POST /ISAPI/System/updateFirmware?type=&moduleAddress=
Method

PUT, POST

Description

Upgrade the peripheral module's firmware.

Query

type: device or module type, string type, it can be set to one of the
following values: "keypad", "wirelessRecv"-wireless receiving
module, "wiredZone"-wired zone module.
moduleAddress: module address, e.g., /ISAPI/System/
updateFirmware?type=wirelessRecv&moduleAddress=1 refers to
upgrading firmware of the wireless receiving module with the
module address 1.

Request

Opaque data (binary data for PUT method, data in form format for
POST method).

Response

XML_ResponseStatus

Remarks
After upgrading the peripheral module's firmware, the device will automatically reboot according
to the response message. If upgrading failed, the following reasons may be returned: "upgrading"the device is upgrading, "badFlash"-flash error, "badLanguage"-language mismatches.

363

Intelligent Security API (General Application) Developer Guide
15.10.196 /ISAPI/System/upgradeStatus
Get the device upgrading status and progress.

Request URL Definition
Table 15-623 GET /ISAPI/System/upgradeStatus
Method

GET

Description

Get the device upgrading status and progress.

Query

None.

Request

None.

Response

Succeeded: XML_upgradeStatus
Failed: XML_ResponseStatus

15.10.197 /ISAPI/System/userLock/config/capabilities?format=json
Get the configuration capability of locking IP address.

Request URL Definition
Table 15-624 GET /ISAPI/System/userLock/config/capabilities?format=json
Method

GET

Description

Get the configuration capability of locking IP address.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_LockCfgCap
Failed: JSON_ResponseStatus

15.10.198 /ISAPI/System/userLock/config?format=json
Operations about IP address locking configuration.

Request URL Definition
Table 15-625 GET /ISAPI/System/userLock/config?format=json
Method

GET

Description

Get the parameters of IP address locking.

364

Intelligent Security API (General Application) Developer Guide
Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_LockCfg
Failed: JSON_ResponseStatus

PUT /ISAPI/System/userLock/config?format=json
Method

PUT

Description

Set the parameters of IP address locking.

Query

format: determine the format of request or response message.

Request

JSON_LockCfg

Response

JSON_ResponseStatus

15.10.199 /ISAPI/System/userLock/lockedUsers?format=json
Get all locked IP addresses.

Request URL Definition
Table 15-626 GET /ISAPI/System/userLock/lockedUsers?format=json
Method

GET

Description

Get all locked IP addresses.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_List_IPAddress
Failed: JSON_ResponseStatus

15.10.200 /ISAPI/System/userLock/unlockUser?format=json
Unlock the IP address.

Request URL Definition
Table 15-627 PUT /ISAPI/System/userLock/unlockUser?format=json
Method

PUT

Description

Unlock the IP address.

365

Intelligent Security API (General Application) Developer Guide
Query

format: determine the format of request or response message.

Request

JSON_operType

Response

JSON_ResponseStatus

15.10.201 /ISAPI/System/Video/capabilities
Get video channel capability.

Request URL Definition
Table 15-628 GET /ISAPI/System/Video/capabilities
Method

GET

Description

Get video channel capability.

Query

None.

Request

None.

Response

Succeeded: XML_VideoCap
Failed: XML_ResponseStatus

15.10.202 /ISAPI/System/Video/inputs
Get the video input configuration of the device.

Request URL Definition
Table 15-629 GET /ISAPI/System/Video/inputs
Method

GET

Description

Get the video input configuration parameters of the device.

Query

None.

Request

None.

Response

Succeeded: XML_VideoInput
Failed: XML_ResponseStatus

15.10.203 /ISAPI/System/Video/inputs/channels
Get the configuration of all video input channels of the device.

366

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-630 GET /ISAPI/System/Video/inputs/channels
Method

GET

Description

Get the configuration parameters of all video input channels of the
device.

Query

None.

Request

None.

Response

Succeeded: XML_VideoInputChannelList
Failed: XML_ResponseStatus

15.10.204 /ISAPI/System/Video/inputs/channels/<ID>
Operations about the configuration of a specific video input channel of the device.

Request URL Definition
Table 15-631 GET /ISAPI/System/Video/inputs/channels/<ID>
Method

GET

Description

Get the parameters of a specific video input channel of the device.

Query

None.

Request

None.

Response

Succeeded: XML_VideoInputChannel
Failed: XML_ResponseStatus
Table 15-632 PUT /ISAPI/System/Video/inputs/channels/<ID>

Method

PUT

Description

Set the parameters of a specific video input channel of the device.

Query

None.

Request

XML_VideoInputChannel

Response

XML_ResponseStatus

See Also
The <ID> in the request URL refers to the channel No.

367

Intelligent Security API (General Application) Developer Guide
15.10.205 /ISAPI/System/Video/inputs/channels?format=json
Get the information of all channels according to the request message.

Request URL Definition
Table 15-633 POST /ISAPI/System/Video/inputs/channels?format=json
Method

POST

Description

Get the information of all channels according to the request
message.

Query

format: determine the format of request or response message.

Request

JSON_InputParam

Response

Succeeded: JSON_ChannelInfoList
Failed: JSON_ResponseStatus

15.10.206 /ISAPI/System/Video/inputs/channels/<ID>/focus
Perform manual focus on a specific channel.

Request URL Definition
Table 15-634 PUT /ISAPI/System/Video/inputs/channels/<ID>/focus
Method

PUT

Description

Perform manual focus on a specific channel.

Query

None.

Request

XML_FocusData

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to video input channel ID.

15.10.207 /ISAPI/System/Video/inputs/channels/<ID>?format=json
Get the information of a channel according to the request message.

368

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-635 POST /ISAPI/System/Video/inputs/channels/<ID>?format=json
Method

POST

Description

Get the information of a channel according to the request message.

Query

format: determine the format of request or response message.

Request

JSON_InputParam

Response

Succeeded: JSON_ChannelInfo
Failed: JSON_ResponseStatus

Remarks
The <ID> in the request URL refers to the channel No.

15.10.208 /ISAPI/System/Video/inputs/channels/<ID>/capabilities
Get the configuration capability of a video input channel.

Request URL Definition
Table 15-636 GET /ISAPI/System/Video/inputs/channels/<ID>/capabilities
Method

GET

Description

Get the configuration capability of a video input channel.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_VideoInputChannel
Failed: XML_ResponseStatus

Remarks
The <ID> in the request URL refers to video input channel ID.

15.10.209 /ISAPI/System/Video/inputs/channels/<ID>/iris
Manually adjust the iris of a specific video input channel.

369

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-637 PUT /ISAPI/System/Video/inputs/channels/<ID>/iris
Method

PUT

Description

Manually adjust the iris of a specific video input channel.

Query

None.

Request

XML_IrisData

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to video input channel ID.

15.10.210 /ISAPI/System/Video/inputs/channels/<ID>/overlays
Operations about OSD configuration of a specific video input channel.

Request URL Definition
Table 15-638 GET /ISAPI/System/Video/inputs/channels/<ID>/overlays
Method

GET

Description

Get OSD configuration parameters of a specific video input channel.

Query

None.

Request

None.

Response

Succeeded: XML_VideoOverlay
Failed: XML_ResponseStatus
Table 15-639 PUT /ISAPI/System/Video/inputs/channels/<ID>/overlays

Method

PUT

Description

Set OSD parameters of a specific video input channel.

Query

None.

Request

XML_VideoOverlay

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the video input channel ID.

370

Intelligent Security API (General Application) Developer Guide
Example
Sample Code for Getting OSD Parameters
GET /ISAPI/System/Video/inputs/channels/1/overlays HTTP/1.1
Host: 10.17.132.49
Connection: Keep-Alive
Authorization: Digest username="admin",
realm="DS-2CD2F12FWD-IWS",
nonce="4d3046464f454e425254633659325534595749784f546b3d",
uri="/ISAPI/System/Video/inputs/channels/1/overlays",
cnonce="03e455047789a833deaae75e44381653",
nc=00000017,
response="ae141a01b415c1b9ab50ddea7ff467c3",
qop="auth"
HTTP/1.1 200 OK
Date: Tue, 14 Mar 2017 20:38:40 GMT
Server: App-webs/
Connection: close
Content-Length: 1087
Content-Type: application/xml
<?xml version="1.0" encoding="UTF-8"?>
<VideoOverlay version="2.0" xmlns="http://www.isapi.com/ver20/XMLSchema">
<normalizedScreenSize>
<normalizedScreenWidth>704</normalizedScreenWidth>
<normalizedScreenHeight>576</normalizedScreenHeight>
</normalizedScreenSize>
<attribute>
<transparent>false</transparent>
<flashing>false</flashing>
</attribute>
<fontSize>64*64</fontSize>
<TextOverlayList size="1">
<TextOverlay>
<id>1</id>
<enabled>true</enabled>
<positionX>0</positionX>
<positionY>576</positionY>
<displayText>222</displayText>
</TextOverlay>
</TextOverlayList>
<DateTimeOverlay>
<enabled>true</enabled>
<positionX>0</positionX>
<positionY>544</positionY>
<dateStyle>MM-DD-YYYY</dateStyle>
<timeStyle>24hour</timeStyle>
<displayWeek>true</displayWeek>
</DateTimeOverlay>
<channelNameOverlay version="2.0" xmlns="http://www.isapi.com/ver20/XMLSchema">
<enabled>true</enabled>

371

Intelligent Security API (General Application) Developer Guide
<positionX>512</positionX>
<positionY>64</positionY>
</channelNameOverlay>
<frontColorMode>auto</frontColorMode>
<frontColor>000000</frontColor>
</VideoOverlay>

15.10.211 /ISAPI/System/Video/inputs/channels/<ID>/overlays/
BatteryPowerOverlay
Operations about the battery overlay configuration of a specific video input channel.

Request URL Definition
Table 15-640 GET /ISAPI/System/Video/inputs/channels/<ID>/overlays/BatteryPowerOverlay
Method

GET

Description

Get the battery overlay parameters of a specific video input channel.

Query

None.

Request

None.

Response

Succeeded: XML_BatteryPowerOverlay
Failed: XML_ResponseStatus

Table 15-641 PUT /ISAPI/System/Video/inputs/channels/<ID>/overlays/BatteryPowerOverlay
Method

PUT

Description

Set the battery overlay parameters of a specific video input channel.

Query

None.

Request

XML_BatteryPowerOverlay

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the video input channel No.

15.10.212 /ISAPI/System/Video/inputs/channels/<ID>/overlays/
BatteryPowerOverlay/capabilities
Get the configuration capability of battery overlay of a specific video input channel.

372

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-642 GET /ISAPI/System/Video/inputs/channels/<ID>/overlays/BatteryPowerOverlay/
capabilities
Method

GET

Description

Get the configuration capability of battery overlay of a specific video
input channel.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_BatteryPowerOverlay
Failed: XML_ResponseStatus

15.10.213 /ISAPI/System/Video/inputs/channels/<ID>/overlays/capabilities
Get the OSD capability of a specific video input channel.

Request URL Definition
Table 15-643 GET /ISAPI/System/Video/inputs/channels/<ID>/overlays/capabilities
Method

GET

Description

Get the OSD capability of a specific video input channel.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_VideoOverlay
Failed: XML_ResponseStatus

15.10.214 /ISAPI/System/Video/inputs/channels/<ID>/overlays/
channelNameOverlay
Operations about the configuration of channel name overlay of a specific video input channel.

Request URL Definition
Table 15-644 GET /ISAPI/System/Video/inputs/channels/<ID>/overlays/channelNameOverlay
Method

GET

Description

Get the parameters of channel name overlay of a specific video input
channel.

373

Intelligent Security API (General Application) Developer Guide
Query

None.

Request

None.

Response

Succeeded: XML_channelNameOverlay
Failed: XML_ResponseStatus

Table 15-645 PUT /ISAPI/System/Video/inputs/channels/<ID>/overlays/channelNameOverlay
Method

PUT

Description

Set the parameters of channel name overlay of a specific video input
channel.

Query

None.

Request

XML_channelNameOverlay

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the video input channel No.

15.10.215 /ISAPI/System/Video/inputs/channels/<ID>/overlays/dateTimeOverlay
Operations about the configuration of date and time information overlay of a specific video input
channel.

Request URL Definition
Table 15-646 GET /ISAPI/System/Video/inputs/channels/<ID>/overlays/dateTimeOverlay
Method

GET

Description

Get the parameters of date and time information overlay of a specific
video input channel.

Query

None.

Request

None.

Response

Succeeded:
Failed: XML_ResponseStatus

Table 15-647 PUT /ISAPI/System/Video/inputs/channels/<ID>/overlays/dateTimeOverlay
Method

PUT

Description

Set the parameters of date and time information overlay of a specific
video input channel.

Query

None.

374

Intelligent Security API (General Application) Developer Guide
Request
Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the video input channel No.

15.10.216 /ISAPI/System/Video/inputs/channels/<ID>/overlays/dateTimeOverlay/
capabilities
Get the capability of date and time information overlay of a specific video input channel.

Request URL Definition
Table 15-648 GET /ISAPI/System/Video/inputs/channels/<ID>/overlays/dateTimeOverlay/
capabilities
Method

GET

Description

Get the capability of date and time information overlay of a specific
video input channel.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_DatetimeOverlay
Failed: XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the video input channel No.

15.10.217 /ISAPI/System/Video/inputs/channels/<ID>/overlays/text
Operations about the text overlay configuration of a specific video input channel.

Request URL Definition
Table 15-649 GET /ISAPI/System/Video/inputs/channels/<ID>/overlays/text
Method

GET

Description

Get the text overlay parameters of a specific video input channel.

Query

None.

375

Intelligent Security API (General Application) Developer Guide
Request

None.

Response

Succeeded: XML_TextOverlayList
Failed: XML_ResponseStatus
Table 15-650 PUT /ISAPI/System/Video/inputs/channels/<ID>/overlays/text

Method

PUT

Description

Set the text overlay parameters of a specific video input channel.

Query

None.

Request

XML_TextOverlayList

Response

XML_ResponseStatus

Table 15-651 POST /ISAPI/System/Video/inputs/channels/<ID>/overlays/text
Method

POST

Description

Add a text to overlay on the video for a specific video input channel.

Query

None.

Request

XML_TextOverlay

Response

XML_ResponseStatus

Table 15-652 DELETE /ISAPI/System/Video/inputs/channels/<ID>/overlays/text
Method

DELETE

Description

Delete the text overlay parameters of a specific video input channel.

Query

None.

Request

None.

Response

XML_ResponseStatus

15.10.218 /ISAPI/System/Video/inputs/channels/<ID>/overlays/text/<ID>
Operations about the configuration of a specific piece of text overlay information of a specific
video input channel.

Request URL Definition
Table 15-653 GET /ISAPI/System/Video/inputs/channels/<ID>/overlays/text/<ID>
Method

GET

Description

Get the parameters of a specific piece of text overlay information of a
specific video input channel.

376

Intelligent Security API (General Application) Developer Guide
Query

None.

Request

None.

Response

Succeeded: XML_TextOverlay
Failed: XML_ResponseStatus

Table 15-654 PUT /ISAPI/System/Video/inputs/channels/<ID>/overlays/text/<ID>
Method

PUT

Description

Set the parameters of a specific piece of text overlay information of a
specific video input channel.

Query

None.

Request

XML_TextOverlay

Response

XML_ResponseStatus

Table 15-655 DELETE /ISAPI/System/Video/inputs/channels/<ID>/overlays/text/<ID>
Method

DELETE

Description

Delete the parameters of a specific piece of text overlay information
of a specific video input channel.

Query

None.

Request

None.

Response

XML_ResponseStatus

15.10.219 /ISAPI/System/Video/inputs/channels/<ID>/privacyMask
Get or set privacy mask parameters.

Request URL Definition
Table 15-656 GET /ISAPI/System/Video/inputs/channels/<ID>/privacyMask
Method

GET

Description

Get or set privacy mask parameters.

Query

None.

Request

None.

Response

Succeeded: XML_PrivacyMask
Failed: XML_ResponseStatus

377

Intelligent Security API (General Application) Developer Guide
Remarks
The <ID> in the request URL refers to the video input channel ID.

15.10.220 /ISAPI/System/Video/inputs/channels/<ID>/privacyMask/
privacyMaskCap
Get configuration capability of privacy mask.

Request URL Definition
Table 15-657 GET /ISAPI/System/Video/inputs/channels/<ID>/privacyMask/privacyMaskCap
Method

GET

Description

Get configuration capability of privacy mask.

Query

None.

Request

None.

Response

Succeeded: XML_PrivacyMaskCap
Failed: XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the video input channel ID.

15.10.221 /ISAPI/System/Video/inputs/channels/<ID>/privacyMask/regions
Get, set, or delete parameters of privacy mask regions, and add a region.

Request URL Definition
Table 15-658 GET /ISAPI/System/Video/inputs/channels/<ID>/privacyMask/regions
Method

GET

Description

Get parameters of privacy mask regions.

Query

None.

Request

None.

Response

Succeeded: XML_PrivacyMaskRegionList
Failed: XML_ResponseStatus

378

Intelligent Security API (General Application) Developer Guide
Table 15-659 PUT /ISAPI/System/Video/inputs/channels/<ID>/privacyMask/regions
Method

PUT

Description

Set parameters of privacy mask regions.

Query

None.

Request

XML_PrivacyMaskRegionList

Response

XML_ResponseStatus

Table 15-660 DELETE /ISAPI/System/Video/inputs/channels/<ID>/privacyMask/regions
Method

DELETE

Description

Delete parameters of privacy mask regions.

Query

None.

Request

None.

Response

XML_ResponseStatus

Table 15-661 POST /ISAPI/System/Video/inputs/channels/<ID>/privacyMask/regions
Method

POST

Description

Add a privacy mask region.

Query

None.

Request

XML_PrivacyMaskRegion

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the video input channel ID.

15.10.222 /ISAPI/System/Video/inputs/channels/<ID>/privacyMask/regions/<ID>
Get, set, or delete parameters of a privacy mask region.

Request URL Definition
Table 15-662 GET /ISAPI/System/Video/inputs/channels/<ID>/privacyMask/regions/<ID>
Method

GET

Description

Get parameters of a privacy mask region.

Query

None.

379

Intelligent Security API (General Application) Developer Guide
Request

None.

Response

Succeeded: XML_PrivacyMaskRegion
Failed: XML_ResponseStatus

Table 15-663 PUT /ISAPI/System/Video/inputs/channels/<ID>/privacyMask/regions/<ID>
Method

PUT

Description

Set parameters of a privacy mask region.

Query

None.

Request

XML_PrivacyMaskRegion

Response

XML_ResponseStatus

Table 15-664 DELETE /ISAPI/System/Video/inputs/channels/<ID>/privacyMask/regions/<ID>
Method

DELETE

Description

Delete parameters of a privacy mask region.

Query

None.

Request

None.

Response

XML_ResponseStatus

Remarks
The first <ID> in the request URL refers to the video input channel ID; and second <ID> is the
privacy mask region ID.

15.10.223 /ISAPI/System/Video/inputs/channels/<ID>/VCAResource
Operation about configuration of intelligent resources switch.

Request URL Definition
Table 15-665 GET /ISAPI/System/Video/inputs/channels/<ID>/VCAResource
Method

GET

Description

Get parameters of intelligent resources switch.

Query

None.

Request

None.

Response

Succeeded: XML_VCAResource
Failed: XML_ResponseStatus

380

Intelligent Security API (General Application) Developer Guide
Table 15-666 PUT /ISAPI/System/Video/inputs/channels/<ID>/VCAResource
Method

PUT

Description

Set parameters of intelligent resources switch.

Query

None.

Request

XML_VCAResource

Response

XML_ResponseStatus

Remarks
• The <ID> in the request URL refers to the video input channel ID.
• The intelligent resources switch supports three capture mode, i.e., target capture, face capture,
and perimeter capture.
• For target capture mode, the panoramic camera captures the human body and vehicle
pictures, the speed dome tracks and capture the human body for human body or face
recognition and comparison. If matched, the thumbnails and original pictures of human body
and face will be uploaded; otherwise, only the thumbnail and original picture of face will be
uploaded.
• For face capture mode, the panoramic camera transmits the videos without any intelligent
analysis, the speed dome captures face picture in up to 4 scenes.
• For perimeter capture, the panoramic camera captures vehicle pictures and performs HMS
+DGS detection, and it supports detecting and tracking the small target within 40 m; while the
speed dome tracks and captures the detected target, and outputs thumbnails and original
pictures of human body and face.

15.10.224 /ISAPI/System/Video/inputs/channels/<ID>/VCAResource/capabilities
Get capability of intelligent resources switch.

Request URL Definition
Table 15-667 GET /ISAPI/System/Video/inputs/channels/<ID>/VCAResource/capabilities
Method

GET

Description

Get capability of intelligent resources switch.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_VCAResource
Failed: XML_ResponseStatus

381

Intelligent Security API (General Application) Developer Guide
15.10.225 /ISAPI/System/Video/inputs/channels/counting/collection/capabilities?
format=json
Get the capability of people counting data replenishment.

Request URL Definition
Table 15-668 GET /ISAPI/System/Video/inputs/channels/counting/collection/capabilities?
format=json
Method

GET

Description

Get the capability of people counting data replenishment.

Query

format: determine the format of request or response message.

Request

None.

Response

JSON_PeopleCounting_CollectionDescriptionCap

15.10.226 /ISAPI/System/Video/inputs/channels/counting/collection?format=json
Perform people counting replenishment.

Request URL Definition
Table 15-669 POST /ISAPI/System/Video/inputs/channels/counting/collection?format=json
Method

POST

Description

Perform people counting replenishment.

Query

format: determine the format of request or response message.

Request

JSON_PeopleCounting_CollectionDescription

Response

JSON_PeopleCounting_CollectionResult

15.10.227 /ISAPI/System/Video/inputs/channels/heatMap/collection/capabilities?
format=json
Get the capability of heat map data replenishment.

382

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-670 GET /ISAPI/System/Video/inputs/channels/heatMap/collection/capabilities?
format=json
Method

GET

Description

Get the capability of heat map data replenishment.

Query

format: determine the format of request or response message.

Request

None.

Response

JSON_HeatMap_CollectionDescriptionCap

15.10.228 /ISAPI/System/Video/inputs/channels/heatMap/collection?format=json
Perform heat map data replenishment.

Request URL Definition
Table 15-671 POST /ISAPI/System/Video/inputs/channels/heatMap/collection?format=json
Method

POST

Description

Perform heat map data replenishment.

Query

format: determine the format of request or response message.

Request

JSON_HeatMap_CollectionDescription

Response

JSON_HeatMap_CollectionResult

15.10.229 /ISAPI/System/Video/inputs/OSDLanguage
Operations about OSD language configuration.

Request URL Definition
Table 15-672 GET /ISAPI/System/Video/inputs/OSDLanguag
Method

GET

Description

Get OSD language parameters.

Query

None.

Request

None.

Response

XML_Language

383

Intelligent Security API (General Application) Developer Guide
Table 15-673 PUT /ISAPI/System/Video/inputs/OSDLanguag
Method

PUT

Description

Set OSD language parameters.

Query

None.

Request

XML_Language

Response

XML_ResponseStatus

15.10.230 /ISAPI/System/Video/outputs
Get configuration parameters of video outputs.

Request URL Definition
Table 15-674 GET /ISAPI/System/Video/outputs
Method

GET

Description

Get configuration parameters of all video outputs.

Query

None.

Request

None.

Response

Succeeded: XML_VideoOutput
Failed: XML_ResponseStatus

15.10.231 /ISAPI/System/Video/outputs/channels
Get configuration parameters of multiple video outputs.

Request URL Definition
Table 15-675 GET /ISAPI/System/Video/outputs/channels
Method

GET

Description

Get configuration parameters of multiple video outputs.

Query

None.

Request

None.

Response

Succeeded: XML_VideoOutputChannelList
Failed: XML_ResponseStatus

384

Intelligent Security API (General Application) Developer Guide
15.10.232 /ISAPI/System/Video/outputs/channels/<ID>
Get or set parameters of a video output.

Request URL Definition
Table 15-676 GET /ISAPI/System/Video/outputs/channels/<ID>
Method

GET

Description

Get parameters of a video output.

Query

None.

Request

None.

Response

Succeeded: XML_VideoOutputChannel
Failed: XML_ResponseStatus
Table 15-677 PUT /ISAPI/System/Video/outputs/channels/<ID>

Method

PUT

Description

Set parameters of a video output.

Query

None.

Request

XML_VideoOutputChannel

Response

XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the video output ID.

15.10.233 /ISAPI/System/Video/outputs/channels/<ID>/capabilities
Get video output configuration capability.

Request URL Definition
Table 15-678 GET /ISAPI/System/Video/outputs/channels/<ID>/capabilities
Method

GET

Description

Get video output configuration capability.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_VideoOutputChannel

385

Intelligent Security API (General Application) Developer Guide
Failed: XML_ResponseStatus

Remarks
The <ID> in the request URL refers to the video output ID.

15.10.234 /ISAPI/System/Video/outputs/PreviewSwitch/capabilities
Get capability of auto-switch configuration during live view.

Request URL Definition
Table 15-679 GET /ISAPI/System/Video/outputs/PreviewSwitch/capabilities
Method

GET

Description

Get capability of auto-switch configuration during live view.

Query

None.

Request

None.

Response

Succeeded: XML_Cap_PreviewSwitch
Failed: XML_ResponseStatus

15.10.235 /ISAPI/System/Video/outputs/PreviewSwitch/capabilities?
videoOutType=
Get capability of auto-switch configuration during live view by video output.

Request URL Definition
Table 15-680 GET /ISAPI/System/Video/outputs/PreviewSwitch/capabilities?videoOutType=
Method

GET

Description

Get capability of auto-switch configuration during live view by video
output.

Query

videoOutType: video output type, string type, it can be the following
values: CVBS, HDMI, VGA, AUXOutput1, AUXOutput2, AUXOutput3,
AUXOutput4, extendHDMI1, extendHDMI2, extendHDMI3,
extendHDMI4, noSameSourceVGA1, noSameSourceVGA2,
noSameSourceVGA3, noSameSourceVGA4, sameSourceVGA,
mainLCD, AUX-VGA, AUX-LCD, and zeroChannel. If there are more
than two outputs are homologous, you can combine these outputs
by "/", e.g., if HDM1 and VGA1 are homologous outputs, the value of
videoOutType equals to HDM1/VGA1.

386

Intelligent Security API (General Application) Developer Guide
Request

None.

Response

Succeeded: XML_PreviewSwitchVideoOutCap
Failed: XML_ResponseStatus

15.10.236 /ISAPI/System/Video/outputs/PreviewSwitch?
groupID=&videoOutType=
Operations about auto-switch configuration in live view.

Request URL Definition
Table 15-681 GET /ISAPI/System/Video/outputs/PreviewSwitch?groupID=&videoOutType=
Method

GET

Description

Get configuration parameters of auto-switch in live view.

Query

groupNo: group No., integer type, which is used to group the
windows for configuration, and up to 64 windows can be added to a
group.
videoOutType: video output type, string type, it can be the following
values: CVBS, HDMI, VGA, AUXOutput1, AUXOutput2, AUXOutput3,
AUXOutput4, extendHDMI1, extendHDMI2, extendHDMI3,
extendHDMI4, noSameSourceVGA1, noSameSourceVGA2,
noSameSourceVGA3, noSameSourceVGA4, sameSourceVGA,
mainLCD, AUX-VGA, AUX-LCD, and zeroChannel. If there are more
than two outputs are homologous, you can combine these outputs
by "/", e.g., if HDM1 and VGA1 are homologous outputs, the value of
videoOutType equals to HDM1/VGA1.

Request

None.

Response

Succeeded: XML_PreviewSwitch
Failed: XML_ResponseStatus

Table 15-682 PUT /ISAPI/System/Video/outputs/PreviewSwitch?groupID=&videoOutType=
Method

PUT

Description

Set parameters for auto-switch in live view.

Query

groupNo: group No., integer type, which is used to group the
windows for configuration, and up to 64 windows can be added to a
group.
videoOutType: video output type, string type, it can be the following
values: CVBS, HDMI, VGA, AUXOutput1, AUXOutput2, AUXOutput3,

387

Intelligent Security API (General Application) Developer Guide
AUXOutput4, extendHDMI1, extendHDMI2, extendHDMI3,
extendHDMI4, noSameSourceVGA1, noSameSourceVGA2,
noSameSourceVGA3, noSameSourceVGA4, sameSourceVGA,
mainLCD, AUX-VGA, AUX-LCD, and zeroChannel. If there are more
than two outputs are homologous, you can combine these outputs
by "/", e.g., if HDM1 and VGA1 are homologous outputs, the value of
videoOutType equals to HDM1/VGA1.
Request

XML_PreviewSwitch

Response

XML_ResponseStatus

15.10.237 /ISAPI/System/Video/outputs/PreviewSwitch?
groupID=&videoOutType=&previewFrameNo=
Get configuration parameters of auto-switch in live view.

Request URL Definition
Table 15-683 GET /ISAPI/System/Video/outputs/PreviewSwitch?
groupID=&videoOutType=&previewFrameNo=
Method

GET

Description

Get configuration parameters of auto-switch in live view.

Query

groupNo: group No., integer type, which is used to group the
windows for configuration, and up to 64 windows can be added to a
group.
videoOutType: video output type, string type, it can be the following
values: CVBS, HDMI, VGA, AUXOutput1, AUXOutput2, AUXOutput3,
AUXOutput4, extendHDMI1, extendHDMI2, extendHDMI3,
extendHDMI4, noSameSourceVGA1, noSameSourceVGA2,
noSameSourceVGA3, noSameSourceVGA4, sameSourceVGA,
mainLCD, AUX-VGA, AUX-LCD, and zeroChannel. If there are more
than two outputs are homologous, you can combine these outputs
by "/", e.g., if HDM1 and VGA1 are homologous outputs, the value of
videoOutType equals to HDM1/VGA1.
(Optional) previewFrameNo: number of live view windows, integer
string type, and it can be the following values: 1, 4, 6, 8, 9, 25, 32, 36,
auto1 (custom window division 1), auto2 (custom window division 2),
auto3 (custom window division 3), and auto4 (custom window
division 4).

388

Intelligent Security API (General Application) Developer Guide
Request

None.

Response

Succeeded: XML_PreviewSwitch
Failed: XML_ResponseStatus

15.10.238 /ISAPI/System/workingstatus/hdStatus?format=json
Get HDD status.

Request URL Definition
Table 15-684 GET /ISAPI/System/workingstatus/hdStatus?format=json
Method

GET

Description

Get all HDDs' status.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_HDStatus
Failed: JSON_ResponseStatus
Table 15-685 POST /ISAPI/System/workingstatus/hdStatus?format=json

Method

POST

Description

Get a specified HDD's status.

Query

format: determine the format of request or response message.

Request

JSON_HDCond

Response

Succeeded: JSON_HDStatus
Failed: JSON_ResponseStatus

15.10.239 /ISAPI/System/workingstatus/chanStatus?format=json
Get channel status.

Request URL Definition
Table 15-686 GET /ISAPI/System/workingstatus/chanStatus?format=json
Method

GET

Description

Get all channels' status.

Query

format: determine the format of request or response message.

389

Intelligent Security API (General Application) Developer Guide
Request

None.

Response

Succeeded: JSON_ChanStatus
Failed: JSON_ResponseStatus
Table 15-687 POST /ISAPI/System/workingstatus/chanStatus?format=json

Method

POST

Description

Get a specified channel's status.

Query

format: determine the format of request or response message.

Request

JSON_ChanCond

Response

Succeeded: JSON_ChanStatus
Failed: JSON_ResponseStatus

15.10.240 /ISAPI/System/workingstatus/capabilities?format=json
Get capability of getting all statuses of device.

Request URL Definition
Table 15-688 GET /ISAPI/System/workingstatus/capabilities?format=json
Method

GET

Description

Get capability of getting all statuses of device.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_Cap_WorkingStatus
Failed: JSON_ResponseStatus

15.10.241 /ISAPI/System/workingstatus?format=json
Get device working status.

Request URL Definition
Table 15-689 GET /ISAPI/System/workingstatus?format=json
Method

GET

Description

Get device working status.

Query

format: determine the format of request or response message.

390

Intelligent Security API (General Application) Developer Guide
Request

None.

Response

Succeeded: JSON_WorkingStatus
Failed: JSON_ResponseStatus

Remarks
Up to 20 bytes are allowed for a device's working status; up to 100 bytes are allowed for a
channel's status, a HDD's status, and an IO's status; up to 30 bytes are allowed for a two-way audio
channel's status.

15.10.242 /ISAPI/System/workingstatus/IOStatus?format=json
Get device IO status.

Request URL Definition
Table 15-690 GET /ISAPI/System/workingstatus/IOStatus?format=json
Method

GET

Description

Get device IO status.

Query

format: determine the format of request or response message.

Request

None.

Response

Succeeded: JSON_IOStatus
Failed: JSON_ResponseStatus

15.10.243 /ISAPI/System/zeroBiasCalibration/channels/<ID>?format=json
Calibrate the accelerometer bias.

Request URL Definition
Table 15-691 PUT /ISAPI/System/zeroBiasCalibration/channels/<ID>?format=json
Method

PUT

Description

Calibrate the accelerometer bias.

Query

format: determine the format of request or response message.

Request

None.

Response

JSON_ResponseStatus

391

Intelligent Security API (General Application) Developer Guide
Remarks
The <ID> in the request URL refers to the channel No.

15.11 /ISAPI/Thermal
15.11.1 /ISAPI/Thermal/capabilities
Get thermal capability.

Request URL Definition
Table 15-692 GET /ISAPI/Thermal/capabilities
Method

GET

Description

Get the thermal capability.

Query

None.

Request

None.

Response

XML_ThermalCap

15.11.2 /ISAPI/Thermal/temperature/collection/capabilities?format=json
Get the capability of temperature data replenishment.

Request URL Definition
Table 15-693 GET /ISAPI/Thermal/temperature/collection/capabilities?format=json
Method

GET

Description

Get the capability of temperature data replenishment.

Query

format: determine the format of request or response message.

Request

None.

Response

JSON_Temperature_CollectionDescriptionCap

15.11.3 /ISAPI/Thermal/temperature/collection?format=json
Perform the temperature data replenishment.

392

Intelligent Security API (General Application) Developer Guide
Request URL Definition
Table 15-694 GET /ISAPI/Thermal/temperature/collection?format=json
Method

POST

Description

Perform the temperature data replenishment.

Query

format: determine the format of request or response message.

Request

JSON_CollectionDescription

Response

JSON_CollectionResult

393

Intelligent Security API (General Application) Developer Guide

Chapter 16 Request and Response Message
The request and response messages in XML or JSON format of each request URL are listed here for
reference. You can search for the parameters by the message name.

16.1 JSON Messages
16.1.1 JSON_Adaption
Adaption message in JSON format
{

"Adaption": {
"enable": ,
/*required, boolean type, whether to enable network self-adaptive function: true-no, false-yes; this function is bound
with IntraRefresh encoding strategy*/
"policy": ,
/*required,self-adaptive strategy, 0-self-adaptive (adjust the resolution and bit rate, the resolution value should be
smaller than or equal to the configured value, but the frame rate is constant), 1-resolution in priority (adjust bit rate,
resolution and frame rate are constant), 2-error correction and retransmission (resolution and frame rate are
constant)*/
"percentage":
/*this node is required when policy is "2", error correction percentage, unit: %, which is between 0 and 100; lager
percentage represents more corrected data, more higher requirement for bandwidth, and better effect*/
}
}

16.1.2 JSON_AdaptionCap
AdaptionCap message in JSON format
{

"AdaptionCap": {
"enable": "true,false",
/*required, boolean type, whether to enable network self-adaptive function: true-no, false-yes; this function is bound
with IntraRefresh encoding strategy*/
"policy": {
/*required,self-adaptive strategy, 0-self-adaptive (adjust the resolution and bit rate, the resolution value should be
smaller than or equal to the configured value, but the frame rate is constant), 1-resolution in priority (adjust bit rate,
resolution and frame rate are constant), 2-error correction and retransmission (resolution and frame rate are
constant)*/
"@opt": "0,1,2"
},
"percentage": {
/*this node is required when policy is "2", error correction percentage, unit: %, which is between 0 and 100; lager

394

Intelligent Security API (General Application) Developer Guide
percentage represents more corrected data, more higher requirement for bandwidth, and better effect*/
"@min": 0,
"@max": 100,
}
}
}

16.1.3 JSON_AlarmStatistics
AlarmStatistics message in JSON format
{

"AlarmStatistics":{
/*optional, alarm statistics of added IoT devices*/
"totalNumber": "",
/*required, the total number of alarms, integer*/
"time": "",
/*required, statistic time, integer, unit: second*/
}
}

16.1.4 JSON_AssociatedChannelList
AssociatedChannelList message in JSON format
{

"AssociatedChannelList": [{
/*optional, list of linked channels*/
"channel": "",
/*required, channel No., integer*/
"type": "",
/*required, channel type: "video"-video channel, "IOT"-IoT channel, string*/
"associatedVideoChannels": "",
/*optional, linked video channel No., array, and the unit is integer*/
"associatedIOTChannels": ""
/*optional, linked IoT channel No., array, and the unit is integer*/
}]
}

16.1.5 JSON_AudioAlarm
AudioAlarm message in JSON format
{

"AudioAlarm":{
"audioID": ,
/*required, alarm sound types, 1-siren, 2-"Warning, this is a restricted area", 3-"Waring, this is a restricted area，

395

Intelligent Security API (General Application) Developer Guide
please keep away", 4-"Warning, this is a no-parking zone", 5-"Warning, this is a no-parking zone, please keep away",
6-"Attention please. The area is under surveillance", 7-"Welcome，Please notice that the area is under surveillance",
8-"Welcome", 9-"Danger! Please keep away", 10-siren + "Danger, please keep away", 11-Audio Warning, 12-Beep
Sound, 13-"Temperature abnormality, please deal with it as soon as possible", 14-"Smoking is prohibited in this area",
15-"Fire detected, please deal with it as soon as possible"*/
"audioVolume": ,
/*required, integer type, volume, which is between 1 ad 100*/
"alarmTimes": ,
/*required, integer type, times of alarm, which is between 1 and 50*/
"TimeRangeList":[{
/*optional, alarm output schedule list*/
"week": ,
"TimeRange":[{
"id": ,
/*required, integer type, ID of time period for each day*/
"beginTime":"",
/*required, string type, start time in ISO8601 format*/
"endTime":""
/*required, string type, end time in ISO8601 format*/
}]
}]
"alarmType": "",
/*optional, string type, alarm type: "behavior"-behavior analysis, "thermometry"-thermometry, "dynamicFire"-fire
detection, "smokingMode"-smoke detection*/
}
}

16.1.6 JSON_AudioAlarmCap
AudioAlarmCap message in JSON format
{

"AudioAlarmCap":{
"audioTypeListCap":[{
/*required, alarm sound types, 1-siren, 2-"Warning, this is a restricted area", 3-"Waring, this is a restricted area，
please keep away", 4-"Warning, this is a no-parking zone", 5-"Warning, this is a no-parking zone, please keep away",
6-"Attention please. The area is under surveillance", 7-"Welcome，Please notice that the area is under surveillance",
8-"Welcome", 9-"Danger! Please keep away", 10-siren + "Danger, please keep away", 11-Audio Warning, 12-Beep
Sound, 13-"Temperature abnormality, please deal with it as soon as possible", 14-"Smoking is prohibited in this area",
15-"Fire detected, please deal with it as soon as possible"*/
"audioID": ,
"audioDescription":""
},
{
"audioID": ,
"audioDescription":""
},
{
"audioID": ,
"audioDescription":""
}],

396

Intelligent Security API (General Application) Developer Guide
"audioVolume":{
/*required, integer type, volume, which is between 1 ad 100*/
"@min": ,
"@max": ,
"@def":
},
"alarmTimes":{
/*required, integer type, times of alarm, which is between 1 and 50*/
"@min": ,
"@max": ,
"@def":
},
"TimeRangeCap":{
/*optional, alarm output schedule list capability*/
"week":{
/*required, integer type, days of the week: 1-Monday, 2-Tuesday, 3-Wednesday, 4-Thursday, 5-Friday,6-Saturday, 7Sunday*/
"@opt":""
},
"id":{
/*required, integer type, ID of time period for each day*/
"@maxSize":
},
"beginTime":{
/*required, string type, start time in ISO8601 format*/
"@min":"",
"@max":""
},
"endTime":{
/*required, string type, end time in ISO8601 format*/
"@min":"",
"@max":""
}
}
"alarmType":{
/*optional, string type, alarm type: "behavior"-behavior analysis, "thermometry"-thermometry, "dynamicFire"-fire
detection, "smokingMode"-smoke detection*/
"@opt":"behavior,thermometry,dynamicFire,smokingMode",
"@def":"thermometry"
}
"AlarmBindAudioList":[{
/*optional, alarm type and the list of audio related to alarm type*/
"alarmType":"behavior",
/*optional, string, alarm type: "behavior"-behavior analysis, "thermometry"-thermometry, "dynamicFire"-fire
detection, "smokingMode"-smoke detection*/
"audioID":{
/*optional, string, the audible warning type ID corresponding to alarm type, behavior analysis corresponds to 1-12,
thermometry corresponds to 13，fire detection corresponds to 14，smoke detection corresponds to 15*/
"@opt":"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15"
}
}]

397

Intelligent Security API (General Application) Developer Guide
}

}

16.1.7 JSON_AutoEagleFocusing
AutoEagleFocusing message in JSON format
{

"AutoEagleFocusing": {
/*required, auto calibration of rapid focus*/
"EagleFocusingRegion": [{
/*optional, string, rapid focus region*/
"sid": "",
/*optional, string, scene ID*/
"spotNum": ,
/*optional, integer, the number of calibration points*/
"type": "",
/*optional, string, region type now only supports "line"*/
"Region": [{
/*optional, region list*/
"x": ,
"y":
}],
"AbsoluteHigh": {
/*optional, PTZ position*/
"elevation": ,
/*optional, xs:integer, tilt angle, range: [-900,2700]*/
"azimuth": ,
/*optional, xs:integer, azimuth, range: [0,3600]*/
"absoluteZoom": 33
/*optional, xs:integer, zoom, range: [1,1000]*/
}
}]
}
}

16.1.8 JSON_AutoEagleFocusingCap
AutoEagleFocusingCap message in JSON format
{

"AutoEagleFocusingCap": {
/*required, auto calibration capability of rapid focus*/
"EagleFocusingRegion": {
"sid": {
/*optional, string, scene ID*/
"@min": 1,
"@max": 2
},

398

Intelligent Security API (General Application) Developer Guide
"spotNum": {
/*optional, integer, the number of calibration points*/
"@min": 1,
"@max": 64
},
"type": {
/*optional, string, region type now only supports "line"*/
"@opt": "line"
},
"RegionCap": {
"minSize": 3,
/*required, integer, the minimum number of region edges*/
"maxSize": 10,
/*required, integer, the maximum number of region edges*/
"x": {
/*required, float, X-coordinate, value range: 0.000 to 1*/
"@min": 0.000,
"@max": 1.000,
"#text": 0.120
},
"y": {
/*required, float, Y-coordinate, value range: 0.000 to 1*/
"@min": 0.000,
"@max": 1.000,
"#text": 0.120
}
},
"AbsoluteHighCap": {
"elevation": {
/*optional, xs:integer, tilt angle, range: [-900,2700]*/
"@min": -900,
"@max": 2700
},
"azimuth": {
/*optional, xs:integer, azimuth, range: [0,3600]*/
"@min": 0,
"@max": 3600
},
"absoluteZoom": {
/*optional, xs:integer, zoom, range: [1,1000]*/
"@min": 1,
"@max": 1000
}
}
}
}
}

399

Intelligent Security API (General Application) Developer Guide
16.1.9 JSON_AutoGotoCfg
AutoGotoCfg message in JSON format
{

"AutoGotoCfg":{
"enable": ,
/*optional, boolean type, whether to enable*/
"autoRecoveryTime":
/*optional, integer type, automatically restored time after the PTZ control is disabled, unit: second*/
}
}

16.1.10 JSON_AutoGotoCfgCap
AutoGotoCfgCap message in JSON format
{

"AutoGotoCfgCap":{
"enable":"true,false",
/*optional, whether to enable*/
"autoRecoveryTime":{
/*optional, automatically restored time after the PTZ control is disabled, unit: second*/
"@min": ,
"@max":
}
}
}

16.1.11 JSON_AutoMaintenance
AutoMaintenance message in JSON format
{

"AutoMaintenance":{
"enabled": true,
/*required, boolean, enable or not*/
"dayOfWeek": "",
/*required, integer, day of the week, ranges from 1 to 7, 1-Monday, 2-Tuesday, and so on*/
"rebootTime": "",
/*required, reboot time, corrects to minute, it is 0 by default, ISO8601 format, string*/
}
}

400

Intelligent Security API (General Application) Developer Guide
16.1.12 JSON_AutoMaintenanceCap
AutoMaintenanceCap message in JSON format
{

"AutoMaintenanceCap":{
"enabled": "true,false",
/*required, boolean, enable or not*/
"dayOfWeek":{
/*required, integer, day of the week, ranges from 1 to 7, 1-Monday, 2-Tuesday, and so on*/
"@min": 1,
"@max": 7,
"#text": 1
},
}
}

16.1.13 JSON_BasicParam
BasicParam message in JSON format
{

"BasicParam":{
/*required, basic parameters of added IoT device*/
"channelName": ""
/*required, channel name, string, the max. length is 32*/
}
}

16.1.14 JSON_CalibrationStatus
CalibrationStatus message in JSON format
{

"CalibrationStatus":{
/*required, string type, installation angle calibration status: "Calibrated"-calibrated, "Uncalibrated"-uncalibrated*/
}
}

16.1.15 JSON_Cap_CalibrationStatus
CalibrationStatus message in JSON format
{

"CalibrationStatus":{
/*required, string type, installation angle calibration status: "Calibrated"-calibrated, "Uncalibrated"-uncalibrated*/

401

Intelligent Security API (General Application) Developer Guide

}

}

"@opt":"Calibrated,Uncalibrated"

16.1.16 JSON_Cap_CertificateSelect
CertificateSelect capability message in JSON format
{

"CertificateSelect":{
"Function":[{
/*required, function list*/
"functionName":"HTTPS",
/*required, function name, it should be set to one of the following values:
"HTTPS","WebSocketS","SDK_OVER_TLS","SRTP","securityLog","ieee802.1x"*/
"certificateType":["client", "server", "CA"]
/*required, certificate type required by this function, it should be set to one or multiple values of the following
options: "client","server","CA"*/
}],
"clientCertificate":{
/*optional, optional client certificate types*/
"@opt":["name1"]
},
"serverCertificate":{
/*optional, optional server certificate types*/
"@opt":["name2"]
},
"CACertificate":{
/*optional, optional CA certificate types*/
"@opt":["name3"]
},
"SRTPSecurityAlgorithm":{
/*optional, string, optional encryption algorithms*/
"@opt":["AES128", "AES256"]
}
}
}

16.1.17 JSON_Cap_CommuMode
CommuMode capability message in JSON format
{

"CommuMode":{
"mode":{
/*required, string type, security mode level of the private protocol: "compatibilityMode"-compatibility mode,
"safeMode"-security mode*/
"@opt":"compatibilityMode,safeMode"
}

402

Intelligent Security API (General Application) Developer Guide
}

}

16.1.18 JSON_Cap_ExportInfo
ExportInfo capability message in JSON format
{

"ExportInfo":{
"mediaType":{
/*required, string, exported data type: "video", "audio", "metadata", "text", "mixed", "other". It should be the same
as the search type. For pictures, this node should be set to "metadata"*/
"@opt":["video", "audio", "metadata", "text", "mixed", "other"]
},
"playbackURIList":{
/*required, array, file path*/
"@size":1
/*supported list size to be exported*/
}
}
}

16.1.19 JSON_Cap_IntelliManagement
IntelliManagement capability message in JSON format
{

"requestURL":"",
"statusCode": ,
"statusString":"",
"subStatusCode":"",
"errorCode": ,
"errorMsg":"",
/*see the description of this node and the above nodes in the message of JSON_ResponseStatus*/
"isSuportTask": ,
/*optional, boolean type, whether to support task: "true"-yes, "false"-no*/
"isSupportCtrlCenter": ,
/*optional, boolean type, whether to support control center: "true"-yes, "false"-no*/
"isSuportIntelligentSearch": ,
/*optional, boolean type, whether to support intelligent search: "true"-yes, "false"-no*/
"isSuportExecuteControl": ,
/*optional, boolean type, whether to support arming: "true"-yes, "false"-no*/
"isSuportDataStatistics": ,
/*optional, boolean type, whether to support statistics: "true"-yes, "false"-no*/
"isSupportIntelligentStorage": ,
/*optional, boolean type, whether to support intelligent storage: "true"-yes, "false"-no*/
"isSupportServer": ,
/*optional, boolean type, whether to support service configuration: "true"-yes, "false"-no*/
"isSuportAlgorithmModel": ,

403

Intelligent Security API (General Application) Developer Guide
/*optional, boolean type, whether to support algorithm model configuration: "true"-yes, "false"-no*/
"isSupportCluster": ,
/*optional, boolean type, whether to support cluster: "true"-yes, "false"-no*/
"isSupportSearchResultDisplay": ,
/*optional, boolean type, whether to support display configuration: "true"-yes, "false"-no*/
"isSuportTranscodeAnalysisUnit": ,
/*optional, boolean type, whether to support transcoding analysis unit: "true"-yes, "false"-no*/
"isSuportFactoryReset": ,
/*optional, boolean type, whether to support restoring to factory settings: "true"-yes, "false"-no*/
"isSupportUPS": ,
/*optional, boolean type, whether to support UPS: "true"-yes, "false"-no*/
"isSuportCity": ,
/*optional, boolean type, whether to support city: "true"-yes, "false"-no*/
"isSuportClusterEnableStatus": ,
/*optional, boolean type, whether to support enabling cluster status: "true"-yes, "false"-no*/
"isSupportSensitivity": ,
/*optional, boolean type, whether to support sensitivity configuration: "true"-yes, "false"-no*/
"isSupportConfidence": ,
/*optional, boolean type, whether to support confidence configuration: "true"-yes, "false"-no*/
"isSupportAudioFileUpload": ,
/*optional, boolean type, whether to support importing audio file: "true"-yes, "false"-no*/
"isSupportIntelligentMode":
/*optional, boolean type, whether to support intelligent mode configuration: "true"-yes, "false"-no*/
}

See Also
JSON_ResponseStatus

16.1.20 JSON_Cap_POE
POE capability message in JSON format
{

"POE": {
"ipVersion": {
/*optional, supported IP address type, string type*/
"@opt": "ipV4,ipV6",
"#text": "ipV4"
}
}
}

16.1.21 JSON_Cap_ReportCenterCfg
ReportCenterCfg capability message in JSON format
{

"ReportCenterCfg":{
"CenterID":{

404

Intelligent Security API (General Application) Developer Guide
/*center group No.*/
"@min": ,
"@max":
},
"enable":"true,false",
/*optional, boolean type, whether to enable uploading report*/
"ChanAlarmMode":{
/*alarm channel of the center group*/
"maxSize":1,
"id":{
/*optional, integer type, channel ID: 1-main channel, 2-backup channel 1, 3-backup channel 2, 4-backup channel 3*/
"@min":1,
"@max":2
},
"chanAlarmMode":{
/*optional, string type, alarm channel mode: "T1"-T1 channel, "T2"-T2 channel, "N1"-N1 channel, "N2"-N2 channel,
"G1"-G1 channel, "G2"-G2 channel, "N3"-N3 channel, "N4"-N4 channel*/
"@opt":"T1,T2,N1,N2,G1,G2,N3,N4"
}
}
}
}

16.1.22 JSON_Cap_WorkingStatus
WorkingStatus capability message in JSON format
{

"WorkingStatusCap":{
"devStatus":{
"@opt": "0,1,2"
/*required, integer type, value of device status: 0-normal, 1-CPU usage, higher than 85%, 2-hardware error (e.g., serial
port exception)*/
},
"ChanStatus":{
"chanNo": "",
/*required, integer type, channel No., which starts from 1*/
"enable": "",
/*integer type, it is valid for analog channel only, 0-disable, 1-enable*/
"online": "",
/*required, integer type, online status: 0-offline, 1-online*/
"record":{
"@opt": "0,1,2",
/*integer type, recording status: 0-recording, 1-recording exception (HDD exception), 2-recording exception (network
camera offline), 3-recording exception (other reason)*/
},
"signal": "",
/*required, integer type, signal status: 0-normal, 1-signal loss*/
"linkNum": "",
/*required, integer type, number of software clients connected to this channel*/
"bitRate": ""

405

Intelligent Security API (General Application) Developer Guide
/*required, integer type, channel bit rate, unit: Kpbs*/
},
"HDStatus":{
"hdNo": "",
/*required, integer type, HDD No., which starts from 1*/
"enable": "",
"status":{
"@opt": "0,1,2",
/*required, integer type, HDD status: 0-activate, 1-sleep, 2-exception, 3-sleepy HDD error, 4-unformated, 5disconnected (for network HDD), 6-formatting*/
},
"volume": "",
/*required, integer type, HDD capacity, unit: MB*/
"linkNum": "",
/*integer type, *number of connections*/
"freeSpace": "1"
/*required, integer type, free space, unit: MD*/
}
}
}

16.1.23 JSON_CertificateRevocation
CertificateRevocation message in JSON format
{

"CertificateRevocation":{
"enabled": ,
/*required, boolean, whether to enable certificate expiry alarm*/
"expireAlarmTime": ,
/*required, integer, number of days to prompt in advance before the certificate is expired*/
"detecteTime":"",
/*required, time, detection time of certificate expiry alarm*/
"intervalTime":
/*required, integer, alarm interval, unit: day*/
}
}

16.1.24 JSON_CertificateRevocationCap
CertificateRevocationCap capability message in JSON format
{

"CertificateRevocationCap":{
"enabled":{
/*required, boolean, whether to enable certificate expiry alarm*/
"@opt":[true, false]
},
"expireAlarmTime":{

406

Intelligent Security API (General Application) Developer Guide
/*required, integer, number of days to prompt in advance before the certificate is expired*/
"@min":1,
"@max":30,
"@def":7
},
"detecteTime":{
/*required, time, detection time of certificate expiry alarm*/
"@min":"00:00",
"@max":"24:00",
"@def":"10:00"
},
"intervalTime":{
/*required, integer, alarm interval, unit: day*/
"@min":1,
"@max":30,
"@def":1
}
}
}

16.1.25 JSON_CertificateSelect
CertificateSelect message in JSON format
{

"CertificateSelect":{
/*you can choose one field among clientCertificate, serverCertificate, and CACertificate to configure as needed*/
"clientCertificate":"",
/*optional, string, client certificate type*/
"serverCertificate":"",
/*optional, string, server certificate type*/
"CACertificate":"",
/*optional, string, CA certificate type*/
"SRTPSecurityAlgorithm":""
/*optional, string, encryption algorithm*/
}
}

16.1.26 JSON_ChanCond
ChanCond message in JSON format
{

"ChanCond":{
"chanNo": […,…]
/*specify channel No. to get the status*/
}
}

407

Intelligent Security API (General Application) Developer Guide
16.1.27 JSON_ChanStatus
ChanStatus message in JSON format
{

"ChanStatus":[{
"chanNo": ,
/*required, integer type, channel No., which starts from 1*/
"enable": ,
/*integer type, it is valid for analog channel only, 0-disable, 1-enable*/
"online": ,
/*required, integer type, online status: 0-offline, 1-online*/
"record": ,
/*required, whether the device is recording, 0-no, 1-yes*/
"recordStatus ": ,
/*integer type, recording status: 0-recording, 1-recording exception (HDD exception), 2-recording exception (network
camera offline), 3-recording exception (other reason)*/
"signal": ,
/*required, integer type, signal status: 0-normal, 1-signal loss*/
"linkNum": ,
/*required, integer type, number of software clients connected to this channel*/
"bitRate":
/*required, integer type, channel bit rate, unit: Kpbs*/
},
{
"chanNo": ,
/*required, integer type, channel No., which starts from 1*/
"enable": ,
/*integer type, it is valid for analog channel only, 0-disable, 1-enable*/
"online": ,
/*required, integer type, online status: 0-offline, 1-online*/
"record": ,
/*required, whether the device is recording, 0-no, 1-yes*/
"recordStatus ": ,
/*integer type, recording status: 0-recording, 1-recording exception (HDD exception), 2-recording exception (network
camera offline), 3-recording exception (other reason)*/
"signal": ,
/*required, integer type, signal status: 0-normal, 1-signal loss*/
"linkNum": ,
/*required, integer type, number of software clients connected to this channel*/
"bitRate":
/*required, integer type, channel bit rate, unit: Kpbs*/
}]
}

16.1.28 JSON_ChannelInfoList
ChannelInfoList message in JSON format

408

Intelligent Security API (General Application) Developer Guide
{

"ChannelInfoList":{
"ChannelInfo":[{
"chanNo": ,
/*required, integer type, channel No.*/
"enable": ,
/*integer type, it is valid for analog channel only, 0-disable, 1-enable*/
"name":"",
/*string type, channel name*/
"online": ,
/*integer type, online status: 0-offline, 1-online*/
"linknum":
}]
}
}

16.1.29 JSON_ChannelInfo
ChannelInfo message in JSON format
{

"ChannelInfo": [{
"chanNo": ,
/*required, integer type, channel No.*/
"enable": ,
/*integer type, it is valid for analog channel only, 0-disable, 1-enable*/
"name": "",
/*string type, channel name*/
"online": ,
/*integer type, online status: 0-offline, 1-online*/
"linknum": ,
/*number of live view channels*/
}]
}

16.1.30 JSON_ChangedStatus
ChangedStatus message in JSON format
{

ChangedStatus: {
"seq": ,
/*32-byte integer type, alarm No., for alarm acknowladge*/
"devStatus": ,
/*integer type, value of device status: 0-normal, 1-CPU usage, higher than 85%, 2-hardware error (e.g., serial port
exception)*/
"devCapHash": "";
/*global Hash value of device capability, which is generated by MD5, and encrypted by Base64; for NVR, the Hash

409

Intelligent Security API (General Application) Developer Guide
value of network camera should be the calculation source*
"zeroChanEnable": ,
/*boolean type, whether the channel-zero is enabled: true-yes, false-no*/
"cycleRecordEnable": true,
/*boolean type, whether to enable recoridng, true-yes, false-no*/
"chanChanged": […,…,…]
/*integer type, channel status changes, e.g., delete, edit, add, the Hash value of this channel changed*/
"hdChanged": […,…,…]
/*integer type, HDD status changes, e.g., delete, edit, add*/
"ChanStatus": [{
"chanNo": ,
/*integer type, channel No., read-only*/
"enable": 1,
/*integer type, it is valid for analog channel only, 0-disable, 1-enable*/
"online": ,
/*required, integer type, online status: 0-offline, 1-online*/
"recordStatus ": ,
/*integer type, recording status: 0-recording, 1-recording exception (HDD exception), 2-recording exception (network
camera offline), 3-recording exception (other reason)*/
"signal": ,
/*required, integer type, signal status: 0-normal, 1-signal loss*/
"arming": ,
/*integer type, network camera arming status: 0-armed, 1-arming failed*/
}],
"HDStatus":[{
"hdNo": ,
/*required, integer type, HDD No., which starts from 1*/
"status": ,
/*required, integer type, HDD status: 0-activate, 1-sleep, 2-exception, 3-sleepy HDD error, 4-unformated, 5disconnected (for network HDD), 6-formatting*/
}],
"CapChanged": [{
"name": "",
/*required, root node of changed capability set*/
"chan": ,
/*channel No., it is required when transmitting channel capability; it is optional when transmitting device capability*/
"url": "/ISAPI/Thermal/channels/1/fireDetection/capabilities",
/*capability set URL, it is required for capability set based on ISAPI protocol*/
},
{
"name": "",
/*required, capability set name, which is usually the root node*/
"chan": 1,
/*channel No., it is required when transmitting channel capability; it is optional when transmitting device capability*/
"abilityType": 0x700,
/*capability type, it is required if the capability is not based on ISAPI protocol*/
}]
}
}

410

Intelligent Security API (General Application) Developer Guide
16.1.31 JSON_CommuMode
CommuMode message in JSON format
{

"CommuMode":{
"mode":""
/*required, string type, security mode level of the private protocol: "compatibilityMode"-compatibility mode,
"safeMode"-security mode*/
}
}

16.1.32 JSON_DeviceCertificate
DeviceCertificate message in JSON format
{

"DeviceCertificate":{
"CertificateInfo":{
"issuerDN":"",
/*required, string, read-only, name of the authority that issued the certificate*/
"subjectDN":"",
/*required, string, read-only, certificate holder name*/
"startDate":"",
/*required, date, read-only, start date of the certificate validity period, it is accurate to day*/
"endDate":"",
/*required, date, read-only, end date of the certificate validity period, it is accurate to day*/
"type":"",
/*optional, string, read-only, certificate type: "https", "websockets", "SDKoverTLS", "SRTP", "securityLog",
"ieee802.1x". Multiple types should be separated by commas*/
"status":"",
/*optional, string, read-only, certificate status: "normal", "expired", "exceptional"*/
"customID":""
/*optional, string, read-only, custom certificate ID, it is created when the user imports the certificate and it consists of
digits and characters*/
}
}
}

16.1.33 JSON_DeviceCertificateCap
DeviceCertificateCap capability message in JSON format
{

"DeviceCertificateCap":{
"customID":{
/*required, string, custom certificate ID, it is created when the user imports the certificate and it consists of digits and
characters*/

411

Intelligent Security API (General Application) Developer Guide
"@min":1,
"@max":64,
"status":{
/*optional, string, certificate status: "normal", "expired", "exceptional"*/
"@opt":["normal", "expired", "exceptional"]
}
}
}
}

16.1.34 JSON_DeviceCertificates
DeviceCertificates message in JSON format
{

"DeviceCertificates":{
"CertificateInfoList":{
"CertificateInfo": [{
"id": ,
/*required, integer32, read-only, certificate ID, which starts from 1*/
"issuerDN": "",
/*required, string, read-only, name of the authority that issued the certificate*/
"subjectDN": "",
/*required, string, read-only, certificate holder name*/
"startDate": "",
/*required, read-only, start date of certificate expiry period, it is accurate to day*/
"endDate": "",
/*required, read-only, end date of certificate expiry period, it is accurate to day*/
"type": "",
/*optional, read-only, certificate type: "wpa", "securityLog", "ieee802.1x", "HTTPS", "WebSocketS", "SDK_OVER_TLS",
"SRTP". Multiple types can be separated by commas*/
"status": "",
/*optional, string, read-only, certificate status: "normal", "expired", "exceptional"*/
"customID": ""
/*optional, string, read-only, custom certificate ID, it is created when the user imports the certificate and it consists of
digits and characters*/
}]
}
}
}

16.1.35 JSON_DeviceCertificatesCap
DeviceCertificatesCap message in JSON format
{

"DeviceCertificatesCap":{
"CertificateInfoList":{
"@size": 64,

412

Intelligent Security API (General Application) Developer Guide
/*required, integer32 type, read-only*/
"CertificateInfo": [{
"id": {
/*required, integer32 type, read-only, certificate ID, which starts from 1*/
"@min":1,
"@max":64,
"#text":
}
"issuerDN": "",
/*required, string type, read-only, certificate issue*/
"subjectDN": "",
/*required, string type, read-only, certificate holder name*/
"startDate": "",
/*required, read-only, start date of certificate expiry period, it accurate to day*/
"endDate": ""
/*required, read-only, end date of certificate expiry period, it accurate to day*/
"type": {
/*optional, read-only, certificate type*/
"@opt":"wpa, securityLog, ieee802.1x"
}
}]
}
}
}

16.1.36 JSON_DeviceCertificateStatus
DeviceCertificateStatus message in JSON format
{

"DeviceCertificateStatus": {
/*required, status of device certificate*/
"id": "",
/*required, read-only, string type, certificate ID, which is generated and returned by device*/
"status": ""
/*required, string type, certificate status: normal, abnormal*/
}
}

16.1.37 JSON_DeviceCertificateStatusList
DeviceCertificateStatusList message in JSON format
{

"DeviceCertificateStatusList": [{
"DeviceCertificateStatus": {
/*required, status of device certificate*/
"id": "",
/*required, read-only, string type, certificate ID, which is generated and returned by device*/

413

Intelligent Security API (General Application) Developer Guide
"status": ""
/*required, string type, certificate status: normal, abnormal*/
}
}]
}

16.1.38 JSON_DiagnosisCond
DiagnosisCond message in JSON format
{

"DiagnosisCond":{
"command":"",
/*required, string type, diagnosis command*/
"selfdefineCmd":""
/*string type, custom diagnosis command, it is valid when command is set to "selfdefine"*/
}
}

16.1.39 JSON_DiagnosisCondCap
DiagnosisCondCap capability message in JSON format
{

"DiagnosisCondCap":{
/*diagnosis condition capability*/
"command":{
/*required, supported diagnosis command*/
"@opt":[
"system",
/*diagnose system*/
"alarm",
/*diagnose alarm*/
"peripheral",
/*diagnose peripheral*/
"wifi",
/*diagnose Wi-Fi network*/
"cloud",
/*diagnose cloud*/
"GPRS/3G/4G",
/*diagnose mobile network*/
"IPC",
/*diagnose network camera*/
"ARC",
/*diagnose alarm center*/
"selfdefine"
/*custom diagnosis command*/
]
},

414

Intelligent Security API (General Application) Developer Guide
"selfdefineCmd":{
/*length range of the custom diagnosis command, it is valid when "selfdefine" is included in command*/
"@min": ,
/*required, integer type, the minimum length of the custom diagnosis command*/
"@max":
/*required, integer type, the maximum length of the custom diagnosis command*/
}
}
}

16.1.40 JSON_DiagnosisResult
DiagnosisResult message in JSON format
{

"DiagnosisResult":{
"result":""
/*required, string type, diagnosis result*/
}
}

16.1.41 JSON_DoubleVerification
DoubleVerification message in JSON format
{

"DoubleVerification":{
"enable": ""
/*optional, whether enables double verification, boolean*/
}
}

16.1.42 JSON_DownloadPackageStatus
DownloadPackageStatus message in JSON format
{

"DownloadPackageStatus":{
/*required, upgrade package download status*/
"status": "notDownload,downloading,pause,finish,incorrectPackage,hdOperationFailed",
/*required, string, download status: "notDownload"-not download, "downloading"-downloading, "pause"-paused,
"finish"-completed, "incorrectPackage"-incorrect upgrade package format, "hdOperationFailed"-HD operation failed*/
"total": "",
/*optional, float, upgrade package total size, unit: MB, corrects to one decimal place*/
"remain": "",
/*optional, float, remaining space, unit: MB, corrects to one decimal place*/
"speed": ""

415

Intelligent Security API (General Application) Developer Guide
/*optional, float, download speed, unit: KB/s, corrects to two decimal places*/
"remainTime": "",
/*optional, integer, estimated remaining time, unit: s*/
"progress": 0,
/*required, integer, progress, ranges from 0 to 100*/
}
}

16.1.43 JSON_DynamicHostName
DynamicHostName message in JSON format
{

"DynamicHostName": {
/*required, configuration parameters of dynamic domain name*/
"enabled": ,
/*required, boolean type, whether to enable dynamic domain name*/
"hostName": ""
/*required, string type, domain name*/
}
}

16.1.44 JSON_DynamicHostNameCap
DynamicHostNameCap message in JSON format
{

"DynamicHostNameCap": {
/*required, configuration capability of dynamic domain name*/
"enabled": "true,false",
/*required, boolean type, whether to enable dynamic domain name*/
"hostName": {
/*required, string type, domain name*/
"@min": 0,
"@max": 64
}
}
}

16.1.45 JSON_EmailCertification
Enter a short description of your reference here (optional).
Enter the syntax information of your reference here (optional).
Enter the actual information in this section (optional).

416

Intelligent Security API (General Application) Developer Guide
Example
Enter an example to illustrate your reference here (optional).

16.1.46 JSON_EnableEncryption
EnableEncryption message in JSON format
{

"enable": true,
/*required, boolean type, whether to enable stream encryption, true-yes, false-no*/
}

16.1.47 JSON_EncryptFormat
EncryptFormat message in JSON format
{

"EncryptFormat":{
"password":"",
/*required, string, password, it will be encrypted according to the encryption vector*/
"encryptFormatType":""
/*optional, string, HDD formatting type: "FAT32", "EXT4"*/
}
}

16.1.48 JSON_EncryptionCap
Stream encryption capability in JSON format.
{

"enable": "true,false",
/*required, boolean type, whether to enable stream encryption, true-yes, false-no*/*/
"secretKey":{
/*required, string type, encryption key*/
"@min": 6,
"@max": 12,
"#text": "user"
}
}

16.1.49 JSON_EncryptVerfy
EncryptVerfy message in JSON format
{

"EncryptVerfy":{

417

Intelligent Security API (General Application) Developer Guide
"password":""
/*required, string, password, it will be encrypted according to the encryption vector*/
}
}

16.1.50 JSON_EPTZMode
EPTZMode message in JSON format
{

"EPTZMode":{
"mode":"",
/*required, modes supported by e-PTZ: "cruise"-patrol (PTZ supports preset, patrol, zoom, and eight directions),
"autoTrack"-automatic tracking*/
"AutoTrack":{
/*dependency, auto-tracking mode configuration*/
"sensitivity": ,
/*optional, integer, sensitivity*/
"detectionTarget":["human", "vehicle"],
/*detection target*/
"ReginonList":[{
"id": ,
/*required, rule ID*/
"Region":[{
/*required, rule area, the number of edges is between 3 and 10*/
"x": ,
/*required, float, X-coordinate, range: [0.000,1]*/
"y":
/*required, float, Y-coordinate, range: [0.000,1]*/
}]
}],
"FilterSize":{
/*optional, size filter of rectangle*/
"MaxTargetRect":{
"height": ,
/*required, float, height, range: [0.000,1.000], the value is accurate to three decimal places*/
"width": ,
/*required, float, width, range: [0.000,1.000], the value is accurate to three decimal places*/
"x": ,
/*required, float, X-coordinate, range: [0.000,1.000], the value is accurate to three decimal places. The upper-left
corner is the origin*/
"y":
/*required, float, Y-coordinate, range: [0.000,1.000], the value is accurate to three decimal places. The upper-left
corner is the origin*/
},
"MinTargetRect":{
"height": ,
/*required, float, height, range: [0.000,1.000], the value is accurate to three decimal places*/
"width": ,
/*required, float, width, range: [0.000,1.000], the value is accurate to three decimal places*/
"x": ,

418

Intelligent Security API (General Application) Developer Guide
/*required, float, X-coordinate, range: [0.000,1.000], the value is accurate to three decimal places. The upper-left
corner is the origin*/
"y":
/*required, float, Y-coordinate, range: [0.000,1.000], the value is accurate to three decimal places. The upper-left
corner is the origin*/
}
}
}
}
}

16.1.51 JSON_EPTZModeCap
EPTZModeCap capability message in JSON format
{

"EPTZModeCap":{
"mode":{
/*required, modes supported by e-PTZ: "cruise"-patrol (PTZ supports preset, patrol, zoom, and eight directions),
"autoTrack"-automatic tracking*/
"@opt":["cruise", "autoTrack"]
},
"AutoTrackCap":{
/*optional, this node is returned when mode contains "autoTrack"*/
"sensitivity":{
/*optional, integer, sensitivity*/
"@min":0,
"@max":100
},
"detectionTarget":{
/*detection target*/
"@opt":["human", "vehicle", "all"]
},
"ReginonList":{
"id":{
/*required, rule ID*/
"@min":1,
"@max":4
},
"Region":{
/*required, rule area, the number of edges is between 3 and 10*/
"number":{
/*required, supported number of edges*/
"@min":3,
"@max":10
},
"x":{
/*required, float, X-coordinate, range: [0.000,1]*/
"@min":0,
"@max":1
},

419

Intelligent Security API (General Application) Developer Guide
"y":{
/*required, float, Y-coordinate, range: [0.000,1]*/
"@min":0,
"@max":1
}
}
},
"FilterSize":{
/*optional, size filter of rectangle*/
"MaxTargetRect":{
"height":{
/*required, float, height, range: [0.000,1.000], the value is accurate to three decimal places*/
"@min":0,
"@max":1
},
"width":{
/*required, float, width, range: [0.000,1.000], the value is accurate to three decimal places*/
"@min":0,
"@max":1
},
"x":{
/*required, float, X-coordinate, range: [0.000,1.000], the value is accurate to three decimal places. The upper-left
corner is the origin*/
"@min":0,
"@max":1
},
"y":{
/*required, float, Y-coordinate, range: [0.000,1.000], the value is accurate to three decimal places. The upper-left
corner is the origin*/
"@min":0,
"@max":1
}
},
"MinTargetRect":{
"height":{
/*required, float, height, range: [0.000,1.000], the value is accurate to three decimal places*/
"@min":0,
"@max":1
},
"width":{
/*required, float, width, range: [0.000,1.000], the value is accurate to three decimal places*/
"@min":0,
"@max":1
},
"x":{
/*required, float, X-coordinate, range: [0.000,1.000], the value is accurate to three decimal places. The upper-left
corner is the origin*/
"@min":0,
"@max":1
},
"y":{
/*required, float, Y-coordinate, range: [0.000,1.000], the value is accurate to three decimal places. The upper-left

420

Intelligent Security API (General Application) Developer Guide
corner is the origin*/
"@min":0,
"@max":1
}
}
}
}
}
}

16.1.52 JSON_EventNotificationAlert_Alarm/EventInfo
EventNotificationAlert message with alarm or event information in JSON format.
{

"ipAddress": "",
/*required, device IPv4 address , string, the maximum size is 32 bytes*/
"ipv6Address": "",
/*optional, device IPv6 address, string, the maximum size is 128 bytes*/
"portNo": ,
/*optional, device port No., integer32*/
"protocol": "",
/*optional, protocol type, "HTTP, HTTPS", string, the maximum size is 32 bytes*/
"macAddress": "",
/*optional, MAC address, string, the maximum size is 32 bytes, e.g., 01:17:24:45:D9:F4*/
"channelID": "",
/*optional, device channel No., integer32*/
"dateTime": "",
/*optional, string, alarm/event triggered or occurred time based on ISO8601, the maximum size is 32 bytes, e.g.,
2009-11-14T15:27Z*/
"activePostCount": "",
/*required, alarm/event frequency, integer32*/
"eventType": "",
/*required, alarm/event type, "captureResult, faceCapture,...", string, the maximum size is 128 bytes*/
"eventState": "",
/*required, string, the maximum size is 32 bytes, durative alarm/event status: "active"-valid, "inactive"-invalid*/
"eventDescription": "",
/*required, event description, string, the maximum size is 128 bytes*/
"deviceID":"",
/*string type, device ID*/
"uuid":"",
/*string type, event UUID, which is used to uniquely identify an event, the standard UUID format is xxxxxxxx-xxxx-xxxxxxxx-xxxxxxxxxxxx*/
...
/*optional, for different alarm/event types, the nodes are different, see the message examples in different
applications*/
}

421

Intelligent Security API (General Application) Developer Guide
16.1.53 JSON_EventNotificationAlert_CertificateExpiryAlarmMsg
The certificate expiry alarm details are uploaded in JSON format of EventNotificationAlert message,
here shows an example.
Content-Type: multipart/form-data; boundary=MIME_boundary
--MIME_boundary
Content-Type: application/json
Content-Length:
{

"ipAddress":172.6.64.7,
"ipv6Address":"",
"portNo":80,
"protocol":"HTTP",
"macAddress":"01:17:24:45:D9:F4",
"channelID":1,
"dateTime":"2018-11-29T15:32:55+08:00",
"activePostCount":1,
"eventType":"certificateRevocation",
"eventState":"active",
"eventDescription":"Certificate Revocation Detection",
/*refer to the message JSON_EventNotificationAlert_Alarm/EventInfo for description details of the above nodes*/
"channelName":"ABC",
/*required, channel name (camera name)*/
"deviceID":"test0123",
/*optional, device ID, it is also the PUID and it must be returned when passing through ISAPI event by ISUP*/
"Result":[{
"customID":"",
/*required, string, custom certificate ID*/
"certificateType":"CA",
/*required, string, certificate type: "CA"-CA certificate, "client/server"-client or server certificate*/
"type":["securityLog"],
/*optional, function type: "HTTPS", "WebSocketS", "SDK_OVER_TLS", "SRTP", "securityLog", "ieee802.1x"*/
"status":"expiring",
/*optional, certificate status: "expiring"-expiring, "expired"-expired, "exceptional"-exceptional*/
"startDate":"2010-04-17",
/*required, date, start date of the certificate expiry date, it is accurate to day*/
"endDate":"2010-04-17"
/*required, date, end date of the certificate expiry date, it is accurate to day*/
}]
}
--MIME_boundary--

See Also
JSON_EventNotificationAlert_Alarm/EventInfo

422

Intelligent Security API (General Application) Developer Guide
16.1.54 JSON_EventNotificationAlert_HDDBadSectorEventMsg
The event details of the HDD bad sector detection are uploaded in JSON format of
EventNotificationAlert message, here shows an example.
{

"ipAddress":"",
/*required, string type, IPv4 address of the alarm device, the maximum length is 32 bytes*/
"ipv6Address":"",
/*optional, string type, IPv6 address of the alarm device, the maximum length is 128 bytes*/
"portNo": ,
/*optional, integer32 type, port No. of the alarm device*/
"protocolType":"",
/*optional, string type, protocol type: "HTTP", "HTTPS", the maximum length is 32 bytes*/
"macAddress":"",
/*optional, string type, MAC address, the maximum length is 32 bytes*/
"channelID": ,
/*optional, integer32 type, device channel No. that triggers alarms*/
"dateTime":"",
/*required, string type, alarm triggering time in ISO8601 time format, e.g., 2018-03-13T19:42:27+08:00, the maximum
length is 32 bytes*/
"activePostCount": ,
/*required, integer32 type, times that the same alarm has been uploaded*/
"eventType":"",
/*required, triggered event type: "hdBadBlock"-HDD bad sector detection event*/
"eventState":"",
/*required, string type, event triggering status: "active"-triggered, "inactive"-not triggered (heartbeat data), the
maximum length is 32 bytes*/
"eventDescription":"",
/*required, string type, event description: "HDD bad sector detection event", the maximum length is 128 bytes*/
"deviceID":"",
/*optional, device ID, which is the PUID and should be returned for ISUP alarms, e.g., "test0123"*/
"HDBadBlock":{
"diskNo":
/*required, integer32 type, HDD No.*/
}
}

16.1.55 JSON_EventNotificationAlert_HDDHighTemperatureEventMsg
The event details of the HDD high temperature detection are uploaded in JSON format of
EventNotificationAlert message, here shows an example.
{

"ipAddress":"",
/*required, string type, IPv4 address of the alarm device, the maximum length is 32 bytes*/
"ipv6Address":"",
/*optional, string type, IPv6 address of the alarm device, the maximum length is 128 bytes*/
"portNo": ,

423

Intelligent Security API (General Application) Developer Guide
/*optional, integer32 type, port No. of the alarm device*/
"protocolType":"",
/*optional, string type, protocol type: "HTTP", "HTTPS", the maximum length is 32 bytes*/
"macAddress":"",
/*optional, string type, MAC address, the maximum length is 32 bytes*/
"channelID": ,
/*optional, integer32 type, device channel No. that triggers alarms*/
"dateTime":"",
/*required, string type, alarm triggering time in ISO8601 time format, e.g., 2018-03-13T19:42:27+08:00, the maximum
length is 32 bytes*/
"activePostCount": ,
/*required, integer32 type, times that the same alarm has been uploaded*/
"eventType":"",
/*required, triggered event type: "highHDTemperature"-HDD high temperature detection event*/
"eventState":"",
/*required, string type, event triggering status: "active"-triggered, "inactive"-not triggered (heartbeat data), the
maximum length is 32 bytes*/
"eventDescription":"",
/*required, string type, event description: "HDD high temperature detection event", the maximum length is 128
bytes*/
"deviceID":"",
/*optional, device ID, which is the PUID and should be returned for ISUP alarms, e.g., "test0123"*/
"HighHDTemperature":{
"diskNo":
/*required, integer32 type, HDD No.*/
}
}

16.1.56 JSON_EventNotificationAlert_HDDImpactEventMsg
The event details of the HDD impact detection are uploaded in JSON format of
EventNotificationAlert message, here shows an example.
{

"ipAddress":"",
/*required, string type, IPv4 address of the alarm device, the maximum length is 32 bytes*/
"ipv6Address":"",
/*optional, string type, IPv6 address of the alarm device, the maximum length is 128 bytes*/
"portNo": ,
/*optional, integer32 type, port No. of the alarm device*/
"protocolType":"",
/*optional, string type, protocol type: "HTTP", "HTTPS", the maximum length is 32 bytes*/
"macAddress":"",
/*optional, string type, MAC address, the maximum length is 32 bytes*/
"channelID": ,
/*optional, integer32 type, device channel No. that triggers alarms*/
"dateTime":"",
/*required, string type, alarm triggering time in ISO8601 time format, e.g., 2018-03-13T19:42:27+08:00, the maximum
length is 32 bytes*/
"activePostCount": ,

424

Intelligent Security API (General Application) Developer Guide
/*required, integer32 type, times that the same alarm has been uploaded*/
"eventType":"",
/*required, triggered event type: "hdImpact"-HDD impact detection event*/
"eventState":"",
/*required, string type, event triggering status: "active"-triggered, "inactive"-not triggered (heartbeat data), the
maximum length is 32 bytes*/
"eventDescription":"",
/*required, string type, event description: "HDD impact detection event", the maximum length is 128 bytes*/
"deviceID":"",
/*optional, device ID, which is the PUID and should be returned for ISUP alarms, e.g., "test0123"*/
"HDImpact":{
"diskNo":
/*required, integer32 type, HDD No.*/
}
}

16.1.57 JSON_EventNotificationAlert_HDDLowTemperatureEventMsg
The event details of the HDD low temperature detection are uploaded in JSON format of
EventNotificationAlert message, here shows an example.
{

"ipAddress":"",
/*required, string type, IPv4 address of the alarm device, the maximum length is 32 bytes*/
"ipv6Address":"",
/*optional, string type, IPv6 address of the alarm device, the maximum length is 128 bytes*/
"portNo": ,
/*optional, integer32 type, port No. of the alarm device*/
"protocolType":"",
/*optional, string type, protocol type: "HTTP", "HTTPS", the maximum length is 32 bytes*/
"macAddress":"",
/*optional, string type, MAC address, the maximum length is 32 bytes*/
"channelID": ,
/*optional, integer32 type, device channel No. that triggers alarms*/
"dateTime":"",
/*required, string type, alarm triggering time in ISO8601 time format, e.g., 2018-03-13T19:42:27+08:00, the maximum
length is 32 bytes*/
"activePostCount": ,
/*required, integer32 type, times that the same alarm has been uploaded*/
"eventType":"",
/*required, triggered event type: "lowHDTemperature"-HDD low temperature detection event*/
"eventState":"",
/*required, string type, event triggering status: "active"-triggered, "inactive"-not triggered (heartbeat data), the
maximum length is 32 bytes*/
"eventDescription":"",
/*required, string type, event description: "HDD low temperature detection event", the maximum length is 128
bytes*/
"deviceID":"",
/*optional, device ID, which is the PUID and should be returned for ISUP alarms, e.g., "test0123"*/
"LowHDTemperature":{

425

Intelligent Security API (General Application) Developer Guide
"diskNo":
/*required, integer32 type, HDD No.*/
}
}

16.1.58 JSON_EventNotificationAlert_HDDSevereFaultEventMsg
The event details of the HDD severe fault detection are uploaded in JSON format of
EventNotificationAlert message, here shows an example.
{

"ipAddress":"",
/*required, string type, IPv4 address of the alarm device, the maximum length is 32 bytes*/
"ipv6Address":"",
/*optional, string type, IPv6 address of the alarm device, the maximum length is 128 bytes*/
"portNo": ,
/*optional, integer32 type, port No. of the alarm device*/
"protocolType":"",
/*optional, string type, protocol type: "HTTP", "HTTPS", the maximum length is 32 bytes*/
"macAddress":"",
/*optional, string type, MAC address, the maximum length is 32 bytes*/
"channelID": ,
/*optional, integer32 type, device channel No. that triggers alarms*/
"dateTime":"",
/*required, string type, alarm triggering time in ISO8601 time format, e.g., 2018-03-13T19:42:27+08:00, the maximum
length is 32 bytes*/
"activePostCount": ,
/*required, integer32 type, times that the same alarm has been uploaded*/
"eventType":"",
/*required, triggered event type: "severeHDFailure"-HDD severe fault detection event*/
"eventState":"",
/*required, string type, event triggering status: "active"-triggered, "inactive"-not triggered (heartbeat data), the
maximum length is 32 bytes*/
"eventDescription":"",
/*required, string type, event description: "HDD severe fault detection event", the maximum length is 128 bytes*/
"deviceID":"",
/*optional, device ID, which is the PUID and should be returned for ISUP alarms, e.g., "test0123"*/
"SevereHDFailure":{
"diskNo":
/*required, integer32 type, HDD No.*/
}
}

16.1.59 JSON_EventNotificationAlert_voltageinstable
The supply voltage exception alarm is uploaded in the JSON format of EventNotificationAlert
message.

426

Intelligent Security API (General Application) Developer Guide
{

"ipAddress": "",
/*required, device IPv4 address , string, the maximum size is 32 bytes*/
"ipv6Address": "",
/*optional, device IPv6 address, string, the maximum size is 128 bytes*/
"portNo":,
/*optional, device port No., integer32*/
"protocol": "",
/*optional, protocol type, "HTTP, HTTPS", string, the maximum size is 32 bytes*/
"macAddress": "",
/*optional, MAC address, string, the maximum size is 32 bytes, e.g., 01:17:24:45:D9:F4*/
"channelID": "",
/*optional, device channel No., integer32*/
"dateTime": "",
/optional, string, alarm/event triggered or occurred time based on ISO8601, the maximum size is 32 bytes, e.g.,
2009-11-14T15:27Z*/
"activePostCount":,
/*required, alarm/event frequency, integer32*/
"eventType": "voltageinstable",
/*required, alarm/event type, string, the maximum size is 128 bytes*/
"eventState": "",
/*required, string, the maximum size is 32 bytes, durative alarm/event status: "active"-valid, "inactive"-invalid*/
"eventDescription": "",
/*required, event description, string, the maximum size is 128 bytes, "overvoltage"-high supply voltage,
"undervoltage"-low supply voltage*/
"voltageValue": ""
/*optional, supply voltage value, float type, unit: V, corrects to one decimal place*/
}

16.1.60 JSON_EventSearchCap
EventSearchCap message in JSON format
{

"startTime": "2004-05-03T17:30:08Z",
/*required, start time, ISO8601_time, string*/
"endTime": "2004-05-03T17:30:08Z",
/*required, end time, ISO8601_time, string*/
"resultMaxNum": 100,
/*required, supported maximum number of searching, int*/
"channelIDLen":{
/*optional, channel ID length*/
"@min": ,
"@max":
},
"eventType":{
/*event type: studentStoodUp-student stands up, accessController-access controller, videoIntercom-video intercom,
OPTEX-OPTEX security control panel, Luminite-Luminite security control panel, GJD-GJD security control panel,
cameraDetector-detector, securityControlPanel-security control panel, multiple selections are separated by comma，
string*/

427

Intelligent Security API (General Application) Developer Guide
"@opt": "studentStoodUp, accessController,videoIntercom, OPTEX,Luminite,GJD, cameraDetector,
securityControlPanel",
"#text": "studentStoodUp"
},
"type":{
/*optional, channel type: video-video channel, IOT-IOT channel, if this node does not exist, it indicates video channel,
string*/
"@opt": "video,IOT",
"#text": "video"
},
"AccessController":{
/*optional*/
"eventType":{
/*optional, event type, if this node does not exist, it indicates searching all supported events, string*/
"@opt": "",
"#text": ""
},
"nameLen":{
/*optional, name length*/
"@min": ,
"@max":
},
"cardNoLen":{
/*optional, card No. length*/
"@min": ,
"@max":
},
},
"VideoIntercom":{
/*optional*/
"eventType":{
/*optional, optional, event type, if this node does not exist, it indicates searching all supported events, string*/
"@opt": "",
"#text": ""
},
"nameLen":{
/*optional, name length*/
"@min": ,
"@max":
},
"cardNoLen":{
/*optional, card No. length*/
"@min": ,
"@max":
},
},
"OPTEX":{
/*optional*/
"eventType":{
/*optional, optional, event type, if this node does not exist, it indicates searching all supported events, string*/
"@opt": "",
"#text": ""

428

Intelligent Security API (General Application) Developer Guide
},
},
"Luminite":{
/*optional*/
"eventType":{
/*optional, optional, event type, if this node does not exist, it indicates searching all supported events, string*/
"@opt": "",
"#text": ""
},
},
"GJD":{
/*optional*/
"eventType":{
/*optional, optional, event type, if this node does not exist, it indicates searching all supported events, string*/
"@opt": "",
"#text": ""
},
},
"CameraDetector":{
/*optional*/
"eventType":{
/*optional, optional, event type, if this node does not exist, it indicates searching all supported events, string*/
"@opt": "",
"#text": ""
},
},
"SecurityControlPanel":{
/*optional, security control panel event*/
"eventType":{
/*optional, optional, event type, if this node does not exist, it indicates searching all supported events, string*/
"@opt": ""
},
"zoneNo":{
/*required, zone No., integer*/
"size": 1,
/*required, the maximum number of items, integer*/
"@min": 1,
"@max": 16,
"#text": 1
},
}
}

16.1.61 JSON_EventSearchCond
EventSearchCond message in JSON format
{

"searchID": "",
/*required, string, unique record search ID.*/
"searchResultPosition": "",

429

Intelligent Security API (General Application) Developer Guide
/*required, initial position of search result in the list, integer, When there are multiple records, and cannot get all
records in one time searching, you can search the records followed specified position for next search*/
"maxResults": "",
/*required, the max. number of results for current search, int*/
"startTime": "",
/*required, start time, ISO8601_time, string*/
"endTime": "",
/*required, end time, ISO8601_time, string*/
"choiceChannel": [{
/*optional*/
"channelID": "",
/*optional, channel ID,string*/
}],
"eventType": "",
/*required, event type: studentStoodUp-student stands up, accessController-access controller, videoIntercom-video
intercom, OPTEX-OPTEX security control panel, Luminite-Luminite security control panel, GJD-GJD security control
panel, cameraDetector-detector, securityControlPanel-security control panel, multiple selections are separated by
comma，string*/
"type": "video,IOT",
/*optional, channel type: video-video channel, IOT-IOT channel, if this node does not exist, it indicates video channel,
string*/
"AccessController":{
"eventType": "",
/*optional, IoT event type, if this node does not exist, it indicates searching all supported events, string*/
"name": "",
/*optional, name*/
"cardNo": "",
/*optional, card No.*/
},
"VideoIntercom":{
"eventType": "",
/*optional, IoT event type, if this node does not exist, it indicates searching all supported events, string*/
"name": "",
/*optional, name*/
"cardNo": "",
/*optional, card No.*/
},
"OPTEX":{
"eventType": "",
/*optional, IoT event type, if this node does not exist, it indicates searching all supported events, string*/
},
"Luminite":{
"eventType": "",
/*optional, IoT event type, if this node does not exist, it indicates searching all supported events, string*/
},
"GJD":{
"eventType": "",
/*optional, IoT event type, if this node does not exist, it indicates searching all supported events, string*/
},
"CameraDetector":{
"eventType": "",
/*optional, IoT event type, if this node does not exist, it indicates searching all supported events, string*/

430

Intelligent Security API (General Application) Developer Guide
}
"SecurityControlPanel":{
"eventType": "",
/*optional, IoT event type, if this node does not exist, it indicates searching all supported events, string*/
"zoneNo": [1,2]
/*optional, zone No., it is valid when eventType values "zone", array, the sub type is integer*/
}
}

16.1.62 JSON_EventSearchResult
EventSearchResult message in JSON format
{

"responseStatusStrg": "",
/*optional, searching status: OK- Searching ended, NO MATCHES-No matched data found, MORE-Search again for
more results, string, the max. length is 32, {dep if errcode == 1 && errMsg == ok}*/
"numOfMatches": "",
/*optional, returned number of results for current search, integer32, {dep if errcode == 1 && errMsg == ok}*/
"totalMatches": "",
/*optional, total number of matched results, integer32, {dep if errcode == 1 && errMsg == ok}*/
"eventInfo": [{
"captureTime": "",
/*required, capture time, ISO8601_time, string*/
"channelID": "",
/*optional, camera ID, string*/
"channelName": "",
/*optional, camera name*/
"picUrl": "",
/*optional, picture URL, string*/
"subPicUrl": "",
/*optional, thumbnail URL, string */
"eventType": "",
/*required, event type: studentStoodU-student stands up, videoIntercom-video intercom, string*/
"studentStoodUp":{
/*optional, student stand up event information*/
"studentsStoodUp_number": ""
/* optional, xs:integer, the number of students, who are standing up*/
},
"AccessController":{
"eventType ": "",
/*required, event type, string*/
"name": "",
/*optional, name*/
"cardNo": "",
/*optional, card No.*/
"cardType": "",
/*optional, card type: invalid-invalid, ordinary-normal card, disabled-card for the disabled,blacklist-card in blacklist,
patrol-patrol card, super-super card, guest-visitor card, remove-removed card*/
"videoChannelInfo": [{
/*optional, video channel information*/

431

Intelligent Security API (General Application) Developer Guide
"videoChannel": "",
/*required, video channel No., integer*/
"picUrl": "",
/*optional, picture URL, string*/
}]
},
"VideoIntercom":{
"eventType ": "",
/*required, event type, string*/
"name": "",
/*optional, name*/
"cardNo": "",
/*optional, card No.*/
"cardType": "invalid,ordinary,disabled,blacklist,patrol,super,guest,remove",
/*optional, card type: invalid-invalid, ordinary-normal card, disabled-card for the disabled,blacklist-card in blacklist,
patrol-patrol card, super-super card, guest-visitor card, remove-removed card*/
"videoChannelInfo": [{
/*optional, video channel information*/
"videoChannel": "",
/*required, video channel No., integer*/
"picUrl": "",
/*optional, picture URL, string*/
}]
},
"OPTEX":{
"eventType ": "",
/*required, event type, string*/
"videoChannelInfo": [{
/*optional, video channel information*/
"videoChannel": "",
/*required, video channel No., integer*/
"picUrl": "",
/*optional, picture URL, string*/
}]
},
"Luminite":{
"eventType ": "",
/*required, event type, string*/
"videoChannelInfo": [{
/*optional, video channel information*/
"videoChannel": "",
/*required, video channel No., integer*/
"picUrl": "",
/*optional, picture URL, string*/
}]
},
"GJD":{
"eventType ": "",
/*required, event type, string*/
"videoChannelInfo": [{
/*optional, video channel information*/
"videoChannel": "",

432

Intelligent Security API (General Application) Developer Guide
/*required, video channel No., integer*/
"picUrl": "",
/*optional, picture URL, string*/
}]
},
"CameraDetector":{
"eventType ": "",
/*required, event type, string*/
"videoChannelInfo": [{
/*optional, video channel information*/
"videoChannel": "",
/*required, video channel No., integer*/
"picUrl": "",
/*optional, picture URL, string*/
}]
},
"SecurityControlPanel":{
"eventType ": "",
/*required, event type, string*/
"videoChannelInfo": [{
/*optional, video channel information*/
"videoChannel": "",
/*required, video channel No., integer*/
"picUrl": "",
/*optional, picture URL, string*/
}]
"zoneNo": "",
/*optional, zone No., it is valid when eventType values "zone", integer*/
"code":1103,
/*optional, CID event No., it is valid when eventType values "zone", integer*/
"zoneName": ""
/*optional, zone name, string*/
}
}]
}

16.1.63 JSON_ExportInfo
ExportInfo message in JSON format
{

"ExportInfo":{
"mediaType":"",
/*required, string, exported data type: "video", "audio", "metadata", "text", "mixed", "other". It should be the same
as the search type. For pictures, this node should be set to "metadata"*/
"playbackURIList":
/*required, array, file path*/
}
}

433

Intelligent Security API (General Application) Developer Guide
16.1.64 JSON_ExporttoUSB_TaskInfo
TaskInfo message in JSON format
{

"TaskInfo":{
"taskId":""
/*required, string, task ID*/
}
}

16.1.65 JSON_EZVIZSecretKey
EZVIZSecretKey message in JSON format
{

"EZVIZSecretKey":{
/*required, verificaiton code for Hik-Connect, string, sensitive information should be encrypted, the string length
ranges from 0 to 64. E.g., 34020000002000000001*/
"secretKey": ""
}
}

16.1.66 JSON_FileExport
FileExport message in JSON format
{

"FileExport":{
"fileType":"",
/*required, string type, file type*/
"selfDefineCmd":""
/*string type, custom file type to be exported, it is valid when fileType is set to "selfDefine"*/
}
}

16.1.67 JSON_FileExportCap
FileExportCap capability message in JSON format
{

"FileExportCap":{
"fileType":{
"@opt":["serialLog","coreDump","debug","selfDefine"]
/*required, string type, file type: "serialLog"-serial port log, "coreDump"-core dump log, "debug"-debug log,
"selfDefine"-custom file type to be exported*/

434

Intelligent Security API (General Application) Developer Guide
},
"selfDefineCmd":{
/*string type, custom file type to be exported, it is valid when fileType is set to "selfDefine"*/
"@min": ,
/*required, integer type, the minimum length of the custom file type to be exported*/
"@max":
/*required, integer type, the maximum length of the custom file type to be exported*/
}
}
}

16.1.68 JSON_FileExportResult
FileExportResult message in JSON format
{

"FileExportResult":{
"url":""
/*required, string type, file URL, e.g., "http://ip:port//ISAPI/ContentMgmt/logSearch/dataPackage/data?identifier"*/
}
}

16.1.69 JSON_GuideConfig
GuideConfig message in JSON format
{

"GuideConfig": {
"GuideStep": [{
/*required, configuration steps of quick setup instruction*/
"stepIndex": ,
/*required, integer, the maximum supported index*/
"StepFunction": {
/*required, string, instruction functions*/
"channelID": ,
/*optional, integer, channel number*/
"type": ""
/*required, "masterSlaveTracking" (linkage calibration, corresponding URL: /ISAPI/MasterSlaveTracking/channels/<ID>/
slaveCameraCalibrating/capabilities), "mixedTargetDetection" (multi-target type detection, corresponding URL：/ISAPI/
Intelligent/channels/<ID>/mixedTargetDetection/capabilities?format=json), eagleFocusing (rapid focus, corresponding
URL: /ISAPI/PTZCtrl/channels/<ID>/EagleFocusing/capabilities)*/
},
"status": "unfinished"
/*required, string, instruction status, whether the single configuration has completed*/
}],
"guideStatus": "unfinished"
/*required, string, instruction overall status, whether all configurations have completed*/

435

Intelligent Security API (General Application) Developer Guide
}

}

16.1.70 JSON_GuideConfigCap
GuideConfigCap message in JSON format
{

"GuideConfigCap": {
"GuideStep": {
/*required, configuration steps of quick setup instruction*/
"stepIndexNum": ,
/*required, integer, the maximum supported index*/
"StepFunction": {
/*required, string, instruction functions*/
"channels": ,
/*optional, integer, channel number*/
"type": {
"@opt": ["masterSlaveTracking", "mixedTargetDetection", "eagleFocusing"]
/*required, "masterSlaveTracking" (linkage calibration, corresponding URL: /ISAPI/MasterSlaveTracking/channels/<ID>/
slaveCameraCalibrating/capabilities), "mixedTargetDetection" (multi-target type detection, corresponding URL：/ISAPI/
Intelligent/channels/<ID>/mixedTargetDetection/capabilities?format=json), eagleFocusing (rapid focus, corresponding
URL: /ISAPI/PTZCtrl/channels/<ID>/EagleFocusing/capabilities)*/
},
"guideStatus": {
/*required, string, instruction status, whether the instruction configuration has completed*/
"@opt": ["finished", "unfinished"]
}
},
"MasterSlaveTrackingCap": {
/*optional, dep:StepFunction, linkage calibration capability*/
"enabled": {
/*required, boolean, whether to enable, the default value is "true"*/
"@opt": "true,false",
"@def": "true"
},
"CalibratingMode": {
/*required, string, calibration mode*/
"@opt": "auto",
"@def": "auto"
}
},
"MixedTargetDetectionCap": {
/*optional, dep:StepFunction, capability of multi-target type detection*/
"enabled": {
/*required, boolean, whether to enable, the default value is "true"*/
"@opt": "true,false",
"@def": "true"
},
"RuleInfoCap": {
/*required, rule information*/

436

Intelligent Security API (General Application) Developer Guide
"maxSize": 1,
/*required, integer, number of supported rules*/
"ruleID": {
/*required, integer, rule ID*/
"@min": 1,
"@max": 1
},
"RegionCap": {
/*required, rule region capability*/
"minSize": 3,
/*required, integer, the minimum region edges*/
"maxSize": 10,
/*required, integer, the maximum region edges*/
"x": {
/*required, float, X-coordinate, range: from 0.000 to 1*/
"@min": 0.000,
"@max": 1.000,
"#text": 0.120
},
"y": {
/*required, float, Y-coordinate, range: from 0.000 to 1*/
"@min": 0.000,
"@max": 1.000,
"#text": 0.120
}
}
}
},
"EagleFocusingCap": {
/*optional, dep:StepFunction, rapid focus capability*/
"focusMode": {
/*required, string, focus mode*/
"@opt": "auto",
"@def": "auto"
},
"controlEnabled": {
/*required, boolean, whether to enable rapid focus, corresponding URL: /ISAPI/PTZCtrl/channels/<ID>/EagleFocusing/
control/capabilities*/
"@opt": "true,false",
"@def": "true"
}
}
}
}
}

16.1.71 JSON_HeatMap_CollectionDescription
CollectionDescription message in JSON format

437

Intelligent Security API (General Application) Developer Guide
{

"CollectionDescription":{
"searchID": "",
/*required，string，unique search ID, the content of searchID remains unchanged when search condition remains
unchanged.*/
"searchResultPosition": "",
/*required, initial position of search result list, integer type. When there are multiple records, and cannot get all
records in one time searching, you can search the records followed specified position for next search*/
"maxResults": "",
/*required, number of matched records per search, integer type*/
"timeSpanList": [{
/*required, time interval list*/
"startTime": "",
/*required, start time, ISO8601_time, string*/
"endTime": "",
/*required, end time, ISO8601_time, string*/
}],
"channels": "",
/*optional, sub type, array, integer32, related channel No., array. If the channel information is not specified, it
indicates searching all channels*/
"statisticsType": "PDC",
/*required, string, statistic type: OLD-heat map, PDC-people counting, DURATION-people dwell time, INTERSECTIONpeople counting of intersection*/
}
}

16.1.72 JSON_HeatMap_CollectionDescriptionCap
CollectionDescriptionCap message in JSON format
{

"CollectionDescriptionCap":{
"timeRange": "",
/*required, supported time range for replenishment, unit: day, integer*/
"timeSpanMaxNum": "",
/*required, the maximum number of time buckets supported for one time searching, integer*/
"resultMaxNum": "",
/*required, the maximum number of items can be searched, integer*/
"channelMaxNum": "",
/*required, the maximum number of channels supported for one time search, integer*/
"statisticsType":{
/*required, string，statistics type: OLD-heat map, PDC-people counting statistics, DURATION-people staying time
duration, INTERSECTION-people counting of intersection*/
"@opt": "OLD,PDC,DURATION,INTERSECTION"
}
}
}

438

Intelligent Security API (General Application) Developer Guide
16.1.73 JSON_HeatMap_CollectionResult
CollectionResult message in JSON format
{
"CollectionResult":{
"responseStatusStrg": "",
/*required, searching status: OK- Searching ended, NO MATCHES-No matched data found, MORE-Search again for
more results, string, the max. length is 32, {dep if errcode == 1 && errMsg == ok}*/
"numOfMatches": "",
/*required, returned number of results for current search, integer32, {dep if errcode == 1 && errMsg == ok}*/
"totalMatches": "",
/*required, total number of matched results, integer32, {dep if errcode == 1 && errMsg == ok}*/
"targets": [{
/*optional, people gathering result*/
"startTime": "",
/*required, start time*/
"endTime": "",
/*required, end time*/
"channel": "",
/*required, integer, channel No.*/
"statisticsType": "",
/*required, string, statistic type: OLD-heat map, PDC-people counting, DURATION-people staying time, INTERSECTIONpeople counting of intersection*/
"HeatMapValue": [{
"heatmapDataType": "",
/*optional, string，heat map data type, it is valid only when statisticsType values "PDC". "PDC_stayNum"-the number
of people dwell in the image, "PDC_leaveNum"-the number of exiting people in the image*/
"maxHeatMapValue": ,
/*required, integer, the max. heat value, 4-byte*/
"minHeatMapValue": ,
/*required, integer，the min. heat value, 4-byte*/
"timeHeatMapValue": ,
/*required, integer，the average heat value, 4-byte*/
"lineValue": ,
/*required, integer，row value, 4-byte*/
"columnValue": ,
/*required, integer，column value, 4-byte*/
"curNumber": ,
/*optional, integer，the number of current people, it is valid only when statisticsType values "PDC"*/
"leaveNumber": ,
/*optional, integer，the number of exiting people, it is valid only when statisticsType values "PDC"*/
"totalTime": ,
/*optional, integer，total dwell time, it is valid only when statisticsType values "DURATION"*/
}],
"heatmapURL": "",
/*optional, string，URL of pixel data for heat map image, it is valid when statisticsType values "OLD", "DURATION" or
"INTERSECTION"*/
"PDC_stayURL": "",
/*optional, string，URL of pixel data for dwell people in heat map image, it is valid when statisticsType values "PDC"*/
"PDC_leaveURL": "",

439

Intelligent Security API (General Application) Developer Guide
/*optional, string，URL of pixel data for exiting people, it is valid when statisticsType values "PDC"*/
"arrayUnitType": ""
/*optional, string，matrix unit data type (each pixel data type of matrix information): "byte"-a byte, "short"-2 bytes,
"int"–four bytes*/
}]
}
}

16.1.74 JSON_HDCond
HDCond message in JSON format
{

"HDCond":{
"hdNo": […,…]
/*specify the channel No. to get the corresponding HDD status*/
}
}

16.1.75 JSON_HddFormatList
HddFormatList message in JSON format
{

"HddFormatList": [{
/*required, HDD list to be formatted*/
"HddFormat": {
/*required, initialization parameter of a HDD*/
"id": ,
/*required, string type, ID of HDDs that specified to be formatted*/
"formatType": ""
/*optional, string type, formatting type: FAT32, EXT4; this node is only available for SD card; if this node does not exist,
the formatting type is the default type "FAT32"*/
}
}]
}

16.1.76 JSON_HDStatus
HDStatus message in JSON format
{

"HDStatus": [{
"hdNo": ,
/*required, integer type, HDD No., which starts from 1*/
"status": ,
/*required, integer type, HDD status: 0-activate, 1-sleep, 2-exception, 3-sleepy HDD error, 4-unformated, 5-

440

Intelligent Security API (General Application) Developer Guide
disconnected (for network HDD), 6-formatting*/
"volume": ,
/*required, integer type, HDD capacity, unit: MB*/
"freeSpace":
/*required, integer type, free space, unit: MD*/
}]
}

16.1.77 JSON_id
id message in JSON format
{

"id": "",
/*optional, integer, user ID, it returns when double verification user is added*/
}

16.1.78 JSON_InputParam
InputParam message in JSON format
{

"InputParam":{
"condType": ["name", "enable", "online", "linknum"]
/*enter channel name, enable or disable channel, online status, and number of connections*/
}
}

16.1.79 JSON_IntelligentSearchCondition
IntelligentSearchCondition message in JSON format
{

"searchID":"",
/*required, string type, search ID. The content of searchID remains unchanged if the search conditions remain
unchanged. This node is used to check the same search. When the device performance is limited, you can search
asynchronously by applying conditions with the same searchID several times and getting the search progress*/
"searchResultPosition": ,
/*required, int type, the start position of the search result in the result list. When there are multiple records and you
cannot get all search results at a time, you can search for the records after the specified position next time*/
"maxResults": ,
/*required, int type, maximum number of search results obtained this time*/
"startTime":"",
/*required, string type, start time in ISO8601 time format*/
"endTime":"",
/*required, string type, end time in ISO8601 time format*/
"choiceChannel":[{

441

Intelligent Security API (General Application) Developer Guide
/*optional*/
"channelID":"",
/*optional, string type, camera No.*/
"plateRecogRegionID":
/*optional, integer type, license plate recognition area No. If this node is not configured, it refers to all areas*/
}],
"targetType":"",
/*optional, string type, search object type. If this node is not returned, it indicates no limit*/
"vehicleInfo ":{
/*this node is valid when targetType is "vehicle"*/
"license":"",
/*optional, string type, license plate number*/
"plateType":"",
/*optional, string type, license plate type: license plate type: "unknown", "92TypeCivil"-92-style civil vehicle, "arm"police vehicle, "upDownMilitay"-military vehicle (top-bottom type), "92TypeArm"-92-style police vehicle,
"leftRightMilitay"-military vehicle (left-right type), "02TypePersonalized"-02-style customized vehicle, "yellowTwoLine"yellow two-line rear license plate, "04NewMilitay"-04-style new military vehicle, "embassy"-embassy vehicle,
"oneLineArm"-new armed police vehicle (one-line), "twoLineArm"-new armed police vehicle (two-line),
"yellow1225FarmVehicle"-yellow agricultural vehicle with 1225 structure, "green1325FarmVehicle"-green agricultural
vehicle with 1325 structure, "yellow1325FarmVehicle"-yellow agricultural vehicle with 1325 structure, "motorola"motorcycle, "coach"-driver-training vehicle, "tempTravl"-vehicle with temporary license plate, "trailer"-trailer,
"consulate"-consular vehicle, "hongKongMacao"-vehicle entering and leaving Hong Kong/Macao, "tempEntry"temporary entry vehicle, "civilAviation"-civil aviation license plate, "newEnergy"-new energy license plate. If this node
is not returned, it indicates no limit*/
"vehicleColor":"",
/*optional, string type, vehicle color: "unknown", "white", "silver"-silvery, "gray", "black", "red", "deepBlue"-dark
blue, "blue", "yellow", "green", "brown", "pink", "purple", "deepGray"-dark gray, "cyan", "orange". Multiple colors
should be separated by commas. If this node is not returned, it indicates no limit*/
"vehicleType":"",
/*optional, string type, vehicle type: "largeBus"-large-sized bus, "truck"-truck, "vehicle"-salon car, "van"-minivan,
"buggy"-light truck, "pedestrian", "twoWheelVehicle"-two wheeler, "threeWheelVehicle"-tricycle, "SUVMPV"-SUV/
MPV, "mediumBus"-middle-sized bus, "unknown". If this node is not returned, it indicates no limit*/
"vehicleLogo": ,
/*optional, int type, vehicle parent brand. If this node is not returned, it indicates no limit*/
"vehicleSubLogo": ,
/*optional, int type, vehicle sub brand. If this node is not returned, it indicates no limit*/
"vehicleModel": ,
/*optional, int type, vehicle model year. If this node is not returned, it indicates no limit*/
"plateColor":"",
/*optional, string type, license plate color: "white", "yellow", "blue", "black", "green", "civilAviationBlack"-civil
aviation black, "civilAviationGreen"-civil aviation green, "0xff" or "other"-other color. If this node is not returned, it
indicates no limit*/
"pilotSafebelt":"",
/*optional, string type, whether the driver buckled up. If this node is not returned, it indicates no limit*/
"pilotSunvisor":"",
/*optional, string type, whether the driver's sun visor is pulled down. If this node is not returned, it indicates no limit*/
"vicePilotSafebelt":"",
/*optional, string type, whether the front passenger buckled up*/
"vicePilotSunvisor":"",
/*optional, string type, whether the front passenger's sun visor is pulled down*/
"uphone":""
/*optional, string type, whether the person is making a call*/

442

Intelligent Security API (General Application) Developer Guide
}

}

16.1.80 JSON_IOStatus
IOStatus message in JSON format
{

"IOStatus": {
"IOInTrig": […,…,…,…],
/*integer type, triggered alarm input No., two places and below: analog alarm input No., two places and above: digital
alarm input No.; and the low 2-bit is the alarm input No., the 3-bit or above is the digital channel No., e.g., 3201-alarm
input No.1 of digital channel No.32*/
"IOOutTrig": […,…,…,…]
/*integer type, triggered alarm output No., two places and below: analog alarm output No., two places and above:
digital alarm output No.; and the lower 2 bits are the alarm output No., the 3-bit or above is the digital channel No.,
e.g., 3201-alarm output No.1 of digital channel No.32*/
}
}

16.1.81 JSON_IOT_ChannelInfo
ChannelInfo message in JSON format
{

"ChannelInfo":{
"channel": "",
/*required, channel No., it should be returned when the channel is added, integer*/
}
}

16.1.82 JSON_IOT_ChannelInfoList
ChannelInfoList message in JSON format
{

"ChannelInfoList": [{
/*optional, channel information, if this node does not exist, it indicates all channels, array*/
"channel": "",
/*required, channel No., integer*/
"type": ""
/*required, channel type: "video"-video channel, "IOT"-IoT channel, string*/
}]
}

443

Intelligent Security API (General Application) Developer Guide
16.1.83 JSON_IOT_ErrorList
ErrorList message in JSON format
{

"ErrorList": [{
/*dep, detailed error information, it is valid when subStatusCode values "badParameters"*/
"errorRowNo": "",
/*required, error row No., integer*/
"errorType": "",
/*required, error type, string, channelNoInvalid-invalid channel No., channelNoConflict-conflicted channel No.,
channel IP/Domain invalid-invalid channel IP or domain name, channel IP/Domain conflict-conflicted channel IP or
domain name, "channel IP conflict with local IP"-channel IP is conflicted with local IP, protocolError-incorrect protocol,
adminPortError-incorrect admin port, channelError-incorrect channel No., UserNameInvalid-invalid user name,
passwordInvalid-invalid password, transProtocalError-incorrect transmission protocol, inductiveTypeInvalid-invalid
inductive type*/
}]
}

16.1.84 JSON_IOTChannel
IOTChannel message in JSON format
{

"IOTChannel":{
/*optional, added IoT devices information*/
"channel": "",
/*optional, channel No., if this node does not exist, it indicates any free channel, integer*/
"IOTProtocolType": "",
/*required, IOT protocol type: "HIKVISION"-Hikvision device, "OPTEX"-OPTEX security control panel, "Luminite"Luminite security control panel, "GJD"-GJD security control panel, "SIA-CID"-SIA-CID protocol, string, the max. length is
32*/
"addressingFormatType": "",
/*optional, address type, "ipaddress"-ip address, "hostname"-host name, string, the max. length is 32*/
"hostName": "",
/*optional, host name, it is required when addressingFormatType values "hostname", string, the max. length is 64*/
"ipAddress": "",
/*optional, device IPV4 address, it is required when addressingFormatType values "ipaddress", string, the max. length
is 32*/
"ipv6Address": "",
/*optional, device IPV6 address, it is required when addressingFormatType values "ipaddress", string, the max. length
is 128*/
"protocol": "",
/*optional, ptotocol type: "tcp"-TCP protocol, "ud"-UDP protocol, "muticast"-Multicast protocol, string, the max.
length is 32*/
"portNo": "",
/*optional, device port No., integer*/
"userName": "",
/*optional, user name, string, the sensitive information is encrypted, the max. length is 32*/

444

Intelligent Security API (General Application) Developer Guide
"password": "",
/*read-only，password, string, the sensitive information is encrypted, the max. length is 16. It will be applied only
when configuring, and it is not returned when getting information*/
"deviceChannel": "",
/*required, added IoT channel No., integer*/
"videoChannels": [1, 2],
/*optional, added video channel No., including the cameras and IoT devices, array, and the array unit is integer*/
"addAll": "",
/*optional, whether adds all channels (including video and IoT channel) of device, boolean*/
"inductiveDeviceType": "",
/*optional, inductive device type，"inductiveType1"-inductive type 1, "inductiveType2"-inductive type 2. When getting
added channel information according inductive type, if this node does not exist, all added device channels will be
returned, string*/
"zoneNum": ""
/*optional, the number of added zones, it is valid when IOTProtocolType values "SIA-CID", integer*/
}
}

Remarks
Note
For different IoT devices, the inputted parameters in IOTChannel message are different.
Example
IOTChannel Message of IoT Devices via Private Protocol
"IOTChannel":{
"IOTProtocolType": "HIKVISION",
"addressingFormatType": "ipaddress",
"ipAddress": "10.11.12.13",
"protocol": "tcp",
"portNo": 80,
"userName": "admin",
"password": "12345",
"deviceChannel": 1,
"videoChannels": [1, 2]
}

Example
IOTChannel Message of IoT Devices via SIA-CID Protocol
"IOTChannel":{
"IOTProtocolType": "HIKVISION",
"addressingFormatType": "ipaddress",
"ipAddress": "10.11.12.13",
"protocol": "tcp",
"portNo": 80,
"userName": "admin",
"password": "12345",
"deviceChannel": 1,
"videoChannels": [1, 2],

445

Intelligent Security API (General Application) Developer Guide
}

"zoneNum": 1

Example
IOTChannel Message of OPTEX IoT Devices
"IOTChannel":{
"IOTProtocolType": "OPTEX",
"addressingFormatType": "ipaddress",
"ipAddress": "10.11.12.13",
"protocol": "tcp",
"deviceChannel": 1
}

Example
IOTChannel Message of Luminite IoT Devices
"IOTChannel":{
"IOTProtocolType": "Luminite",
"addressingFormatType": "ipaddress",
"ipAddress": "10.11.12.13",
"protocol": "tcp",
"portNo": 80,
"password": "12345",
"deviceChannel": 1
}

Example
IOTChannel Message of GJD IoT Devices
"IOTChannel":{
"IOTProtocolType": "GJD",
"addressingFormatType": "ipaddress",
"ipAddress": "10.11.12.13",
"deviceChannel": 1
}

16.1.85 JSON_IOTChannelEventCap
IOTChannelEventCap message in JSON format
{

"IOTChannelEventCap":{
/*required, event capability*/
"AccessController":{
/*optional, access controller event*/
"eventType":{
/*required, event type, array，the sub type is string*/
"@opt": ["authenticated", "openingDoor"]
},
},

446

Intelligent Security API (General Application) Developer Guide
"VideoIntercom":{
/*optional, video intercom event*/
"eventType":{
/*required, event type, string*/
"@opt": ["tampering", "duressAlarm"]
},
},
"GJD":{
/*optional, GJD security control panel event*/
"eventType":{
/*required, event type, string*/
"@opt": ["pirDetection", "tampering"]
},
},
"Luminite":{
/*optional, Luminite security control panel*/
"eventType":{
/*required, event type, string*/
"@opt": ["pirDetection", "pirTamper"]
},
},
"OPTEX":{
/*optional, OPTEX security control panel*/
"eventType":{
/*required, event type, string*/
"@opt": ["pcFn", "pcFr"]
},
},
"cameraDetector":{
/*optional, detector evnet*/
"eventType":{
/*required, event type, string*/
"@opt": ["wirelessTemperature", "wirelessPIR"]
},
},
"SecurityControlPanel":{
/*optional, security control panel*/
"eventType":{
/*required, event type, string*/
"@opt": ["zone","host"]
},
"zoneNum":{
/*required, the number of zones, integer*/
"@min": 1,
"@max": 16,
"#text": 1
},
}
}

447

Intelligent Security API (General Application) Developer Guide
16.1.86 JSON_IOTChannelList
IOTChannelList message in JSON format
{

"IOTChannelList": [{
"IOTChannel"
/*optional, added IoT devices information, see details in
JSON_IOTChannel
*/
}]
}

See Also
JSON_IOTChannel

16.1.87 JSON_IOTChannelStatus
IOTChannelStatus message in JSON format
{

"IOTChannelStatus":{
/*optional, added IoT device status*/
"IOTChannel":{
/*optional, added IoT device information, see details in
JSON_IOTChannel
*/
},
"channelName": "",
/*required, channel name, string, type, the max. length is 32*/
"onlineStatus": "",
/*required, online stauts, boolean*/
"channelDetectResult": "connecting,networkUnreachable,accessAbnormal,normal,guardFailed",
/*optional, channel detection status: "connecting"-connecting, "networkUnreachable"-unreachable network,
"accessAbnormal"-abnormal access, "normal"-normal, "guardFailed"-arming failed, string*/
"SecurityStatus":{
/*optional, security status*/
"passwordStatus": ""
/*optional, password status: notActivated-device is inactivated, risk-risky password, weak-weak password, mediummedium password, strong-strong password, invalid-invalid status, string*/
},
"DeviceInfo":{
/*optional, device information*/
"deviceName": "",
/*optional, device name, string, the max. length is 32*/
"deviceType": "",
/*required, device type: "accessController"-access controller, "videoIntercom"-video intercom, "OPTEX"-OPTEX
security control panel, Luminite-Luminite security control panel, GJD-GJD security control panel, securityControlPanelsecurity control panel，string*/

448

Intelligent Security API (General Application) Developer Guide
"model": "",
/*optional, device model, string, the max. length is 128*/
"firmwareVersion": "",
/*optional, firmware version, string, the max. length is 128*/
"firmwareReleasedDate": ""
/*optional, firmware compiled date, string, the max. length is 128*/
}
}
}

16.1.88 JSON_IOTChannelStatusList
IOTChannelStatusList message in JSON format
{

"IOTChannelStatusList": [{
"IOTChannelStatus":
/*optional, added IoT device status, see details in JSON_IOTChannelStatus*/
}]
}

See Also
JSON_IOTChannelStatus

16.1.89 JSON_IOTSourceDescription
IOTSourceDescription message in JSON format
{

"IOTSourceDescription":{
/*optional, protocol information*/
"IOTProtocolType": "",
/*required, IOT protocol type: "HIKVISION"-Hikvision device, "OPTEX"-OPTEX security control panel, "Luminite"Luminite security control panel, "GJD"-GJD security control panel, "SIA-CID"-SIA-CID protocol, string, the max. length is
32*/
"addressingFormatType": "",
/*optional, address type, "ipaddress"-ip address, "hostname"-host name, string, the max. length is 32*/
"hostName": "",
/*optional, host name, it is required when addressingFormatType values "hostname", string, the max. length is 64*/
"ipAddress": "",
/*optional, device IPV4 address, it is required when addressingFormatType values "ipaddress", string, the max. length
is 32*/
"ipv6Address": "",
/*optional, device IPV6 address, it is required when addressingFormatType values "ipaddress", string, the max. length
is 128*/
"protocol": "",
/*optional, ptotocol type: "tcp"-TCP protocol, "ud"-UDP protocol, "muticast"-Multicast protocol, string, the max.
length is 32*/
"portNo": "",

449

Intelligent Security API (General Application) Developer Guide
/*optional, device port No., integer*/
"userName": "",
/*optional, user name, string, the sensitive information is encrypted, the max. length is 32*/
"password": ""
/*optional, password, string, the sensitive information is encrypted, the max. length is 16*/
}
}

16.1.90 JSON_IOTSourceList
IOTSourceList message in JSON format
{

"IOTSourceList": [{
/*optional, source informaiton, array*/
"IOTProtocolType": "",
/*required, IOT protocol type: "HIKVISION"-Hikvision device, "OPTEX"-OPTEX security control panel, "Luminite"Luminite security control panel, "GJD"-GJD security control panel, "SIA-CID"-SIA-CID protocol, string, the max. length is
32*/
"addressingFormatType": "",
/*optional, address type, "ipaddress"-ip address, "hostname"-host name, string, the max. length is 32*/
"hostName": "",
/*optional, host name, it is required when addressingFormatType values "hostname", string, the max. length is 64*/
"ipAddress": "",
/*optional, device IPV4 address, it is required when addressingFormatType values "ipaddress", string, the max. length
is 32*/
"ipv6Address": "",
/*optional, device IPV6 address, it is required when addressingFormatType values "ipaddress", string, the max. length
is 128*/
"portNo": "",
/*optional, device port No., integer*/
"userName": "",
/*optional, user name, string, sensitive information will be encrypted, the max. length is 32*/
"password": "",
/*optional, password, string, sensitive information will be encrypted, the max. length is 16*/
"activeStatus": "",
/*required, active or not, boolean*/
"deviceType": "",
/*optional, string, devive type: accessController-access controller, videoIntercom-video intercom, OPTEX-OPTEX
security control panel, Luminite-Luminite security control panel, GJD-GJD security control panel, securityControlPanelsecurity control panel*/
"macAddress": "",
/*optional, device MAC address, string, the max. length is 48*/
"serialNumber": "",
/*optional, device serial No., string, the max. length is 48*/
"firmwareVersion": "",
/*optional, firmware version (including compiled date), string, the max. length is 128*/
}]
}

450

Intelligent Security API (General Application) Developer Guide
16.1.91 JSON_IOTSourceSupport
IOTSourceSupport message in JSON format
{

"IOTSourceSupport":{
/*required, supported source information*/
"sourceNum": "",
/*required, the number of protocols, integer*/
"IOTSourceDescriptions": [{
/*optional, protocol informaiton, array*/
"IOTProtocolType": "",
/*required, IOT protocol type: "HIKVISION"-Hikvision device, "OPTEX"-OPTEX security control panel, "Luminite"Luminite security control panel, "GJD"-GJD security control panel, "SIA-CID"-SIA-CID protocol, string, the max. length is
32*/
"addressingFormatType":{
/*optional, address type, "ipaddress"-ip address, "hostname"-host name, string, the max. length is 32*/
"@opt": "ipaddress,hostname",
"#text": "ipaddress"
},
"protocol":{
/*optional, protocol type, "tcp, udp, muticast", string, the max. length is 32*/
"@opt": "tcp,udp,muticast",
"#text": "tcp"
},
"portNo":{
/*optional, device port No., integer*/
"@min": 0,
"@max": 65535,
"#text": 80
},
"userName ":{
/*optional, user name, string, the max. length is 32*/
"@min": 0,
"@max": 32,
"#text": "admin"
},
"password":{
/*optional, password, string, the max. length is 16*/
"@min": 0,
"@max": 16,
"#text": "12345"
},
"maxVideoChannelNum": "",
/*optional, the max. number of supported video channel, integer*/
"zoneNum":{
/*optional, number of connected zones, integer, it is valid when the IOTProtocolType values "SIA-CID"*/
"@min": 1,
"@max": 256,
"#text": 1
},

451

Intelligent Security API (General Application) Developer Guide
}],
"DeviceInductiveType":{
/*optional, device inductive type*/
"inductiveType1": ["accessController", "videoIntercom"],
/*optional, array, inductive type 1: accessController-access controller, videoIntercom-video intercom, OPTEX-OPTEX
security control panel, Luminite-Luminite security control panel, GJD-GJD security control panel, securityControlPanelsecurity control panel, the sub type is string*/
"inductiveType2": ["OPTEX", "Luminite", "GJD", "securityControlPanel"]
/*optional, array, inductive type 2: accessController-access controller, videoIntercom-video intercom, OPTEX-OPTEX
security control panel, Luminite-Luminite security control panel, GJD-GJD security control panel,securityControlPanelsecurity control panel, the sub type is string*/
}
}
}

16.1.92 JSON_LensCorrection
LensCorrection in JSON format
{

"LensCorrection":{
"enabled": "",
/*required, enable or not*/
"TimeTaskList": [{
"TimeTaskBlock":{
"dayOfWeek": "",
/*required, integer32，ISO8601 weekday number, 1=Monday*/
"TimeTaskRange": [{
"taskID": "",
/*required, integer32, task ID, starts from 1*/
"beginTime": "",
/*required, begin time, accurate to second, string type*/
"endTime": ""
/*required, end time, accurate to second, string type*/
}]
}
}]
}
}

16.1.93 JSON_LensCorrectionCap
LensCorrectionCap message in JSON format
{

"LensCorrectionCap":{
"enabled": "true,false",
/*required, enable or not*/
"TimeTaskList":{

452

Intelligent Security API (General Application) Developer Guide
"maxSize": ,
"TimeTaskBlock":{
"dayOfWeek": {
/*required, integer32，ISO8601 weekday number, 1=Monday*/
"@min": "",
"@max": "",
},
"TimeTaskRange": {
"maxSize": ,
"taskID": {
/*required, integer32，task ID, starts from 1*/
"@min": ,
"@max": ,
},
"beginTime": "01:00:00",
/*required, begin time, corrects to second, string*/
"endTime": "02:00:00"
/*required, end time, corrects to second, string*/
}
}
}
}
}

16.1.94 JSON_LinkageChansCond
LinkageChansCond message in JSON format
{

"LinkageChansCond":{
"eventType": "",
/*required, string, for access controller or video intercom, the EventType == AcsEvent_major_minor, for security
control panel, the EventType == AlarmHost_zoneNo*/
"monitorId": "",
/*dep, string，camera ID, strlen=[32,64]. For access controller or video intercom, the format is: device serial
No._DOOR_door No., for security control panel, the format is: device serial No._ALARM_security control panel No.*/
"unlockType": ""
/optional, unlock type, string，password-unlock by password, hijcking-hijacking unlock, card-unlock by swiping card,
householder-unlock by householder, centerplatform-unlock by center platform, bluetooth-bluetooth unlock, qrcodeunlock by QR code, face-unlock by face, fingerprint-unlock by fingerprint*/
}
}

16.1.95 JSON_List_IPAddress
List_IPAddress message in JSON format
{

"List":[{

453

Intelligent Security API (General Application) Developer Guide
"IPAddress":{
"ipVersion":"",
/*required, string type, version information of IP address: "v4"-IPv4, "v6"-IPv6*/
"ipAddress":""
/*required, string type, IP address*/
}
}]
}

16.1.96 JSON_LockCfg
LockCfg message in JSON format
{

"LockCfg":{
"maxTryTimes": ,
/*optional, integer, the maximum attempts of logging in by the IP address*/
"lockedTime":
/*optional, integer, time range of locking the IP address, unit: second*/
}
}

16.1.97 JSON_LockCfgCap
LockCfgCap capability message in JSON format
{
"LockCfgCap":{
"maxTryTimes":{
/*optional, the maximum attempts of logging in by the IP address*/
"@opt":"5,..."
},
"lockedTime":{
/*optional, time range of locking the IP address, unit: second*/
"@min": ,
"@max":
}
}
}

16.1.98 JSON_LoginLinkNum
LoginLinkNum message in JSON format
{

"LoginLinkNum": {
"maxLinkNum": ,

454

Intelligent Security API (General Application) Developer Guide
/*required, integer type, maximum number of logged in accounts*/
"adminPassword":""
/*required, string type, confirm the password of admin user, this node is valid only when setting maximum number
(PUT), otherwise, this node does not exits*/
}
}

16.1.99 JSON_OnlineUpgradeParameter
OnlineUpgradeParameter message in JSON format
{

"OnlineUpgradeParameter":{
/*required, online upgrade parameters*/
"autoDownloadPackage": "",
/*required, whether enables automatic download of upgrade package, boolean, it values "false" by default*/
"timingUpgrade": "",
/*optional, whether enable scheduled upgrade, boolean, it values "false" by default*/
"upgradeTime": "",
/*optional, upgrade time, corrects to minute, and second is 0 by default, ISO8601 format, string type, it is valid when
timingUpgrade values "true"*/
}
}

16.1.100 JSON_operType
operType message in JSON format
{

"operType":"",
/*required, string type, operation type: "unlock"-unlock one or multiple IP addresses, "unlockAll"-unlock all IP
addresses*/
"List":[{
"IPAddress":{
"ipVersion":"",
/*required, string, IP address version information: "v4"-IPv4, "v6"-IPv6. This node is valid only when openType is
"unlock"*/
"ipAddress":""
/*required, string, IP address, this node is valid only when openType is "unlock"*/
}
}]
}

16.1.101 JSON_OSD
OSD message in JSON format

455

Intelligent Security API (General Application) Developer Guide
{

"OSD":{
/*required, OSD information*/
"overlayItem": "",
/*required, string, overlaid item, supports multiple items, each item is separated by comma; deviceName-device
name, cardNo-card number, eventName-event name, name-name, identityCard-ID card, privacyInfo-private
information*/
"characterEncoding":"",
/*required, character encoding, string*/
"fontSize": "",
/*required, string, font size: big-large, medium-medium, small-small*/
"fontColor": "",
/*required, font color, hexBinary*/
"overlayType": "",
/*required, overlay type: "flip, scroll", string*/
"displayTime": "",
/*required, display time, unit; second, integer*/
"PrivacyInfo": [{
/*optional, private information list, it is required when the value of overlayItem contains "privacyInfo", array*/
"content": "",
/*required, private information, string, the max. length is 16*/
}],
"normalizedScreenSize":{
/*required, read-only, normalized coordinates*/
"normalizedScreenWidth": "",
/*required, normalized width, integer*/
"normalizedScreenHeight": ""
/*required, normalized height, integer*/
},
"Rect":{
/*required, OSD position*/
"height": "",
/*required, height, float*/
"width": "",
/*required, width, float*/
"x": "",
/*required, X-coordinate, float*/
"y": "",
/*required, Y-coordinate, float*/
}
}
}

16.1.102 JSON_OSDCap
OSDCap message in JSON format
{

"OSDCap":{
/*required, OSD information*/

456

Intelligent Security API (General Application) Developer Guide
"overlayItem":{
/*required, string, overlaid item, supports multiple items, each item is separated by comma; deviceName-device
name, cardNo-card number, eventName-event name, name-name, identityCard-ID card, privacyInfo-private
information*/
"@opt": "deviceName,cardNo,eventName,name,identityCard,privacyInfo",
"#text": "deviceName"
},
"characterEncoding":{
/*required, character encoding, string*/
"@opt": "GB2312,Latin-1",
"#text": "GB2312"
},
"fontSize":{
/*required, string, font size: big-large, medium-medium, small-small*/
"@opt": "big,medium,small",
"#text": "big"
},
"fontColor":{
/*required, font color, hexBinary*/
"@opt": "FFFFFF",
},
"overlayType":{
/*required, overlay type: "flip, scroll", string*/
"@opt": "flip,scroll",
"#text": "flip"
},
"displayTime":{
/*required, display time, unit; second, integer*/
"@min": 1,
"@max": 120,
"#text": 15
},
"PrivacyInfo": [{
/*optional, private information list, it is required when the value of overlayItem contains "privacyInfo", array*/
"size": 3,
/*required, the max. number of items, integer*/
"content":{
/*required, private information, string, the max. length is 16*/
"@min": 1,
"@max": 16,
"#text": "12345"
},
}],
"Rect":{
/*required, OSD position*/
"height":{
/*required, height, float*/
"@min": 0.000,
"@max": 1.000,
"#text": 0.311
},
"width":{

457

Intelligent Security API (General Application) Developer Guide
/*required, width, float*/
"@min": 0.000,
"@max": 1.000,
"#text": 0.311
},
"x":{
/*required, X-coordinate, float*/
"@min": 0.000,
"@max": 1.000,
"#text": 0.311
},
"y":{
/*required, Y-coordinate, float*/
"@min": 0.000,
"@max": 1.000,
"#text": 0.311
},
}
}
}

16.1.103 JSON_PeopleCounting_CollectionDescription
CollectionDescription message in JSON format
{

"CollectionDescription":{
"searchID": "",
/*required，string，unique search ID, the content of searchID remains unchanged when search condition remains
unchanged.*/
"searchResultPosition": "",
/*required, initial position of search result list, integer type. When there are multiple records, and cannot get all
records in one time searching, you can search the records followed specified position for next search*/
"maxResults": "",
/*required, number of matched records per search, integer type*/
"timeSpanList": [{
/*required, time interval list*/
"startTime": "",
/*required, start time, ISO8601_time, string*/
"endTime": "",
/*required, end time, ISO8601_time, string*/
}],
"channels": "",
/*optional, sub type, array, integer32, related channel No., array. If the channel information is not specified, it
indicates searching all channels*/
}
}

458

Intelligent Security API (General Application) Developer Guide
16.1.104 JSON_PeopleCounting_CollectionDescriptionCap
CollectionDescriptionCap message in JSON format.
{

"CollectionDescriptionCap":{
"timeRange": "",
/*required, supported time range for people counting replenishment, unit: day, integer*/
"timeSpanMaxNum": "",
/*required, the maximum number of time buckets supported for one time search integer*/
"resultMaxNum": "",
/*required, the maximum number of items can be searched, integer*/
"channelMaxNum": ""
/*required, the maximum number of channels supported for one time search, integer*/
}
}

16.1.105 JSON_PeopleCounting_CollectionResult
CollectionResult message in JSON format
{

"CollectionResult":{
"responseStatusStrg": "",
/*required, searching status: OK- Searching ended, NO MATCHES-No matched data found, MORE-Search again for
more results, string, the max. length is 32, {dep if errcode == 1 && errMsg == ok}*/
"numOfMatches": "",
/*required, returned number of results for current search, integer32, {dep if errcode == 1 && errMsg == ok}*/
"totalMatches": "",
/*required, total number of matched results, integer32, {dep if errcode == 1 && errMsg == ok}*/
"targets": [{
/*optional, people gathering result*/
"startTime": "",
/*required, start time of people gathering*/
"endTime": "",
/*required, end time of people gathering*/
"channel": "",
/*required, integer, channel No.*/
"enter": "",
/*required, integer，the number of people entered*/
"exit": "",
/*required, integer，the number of people exited*/
"pass": "",
/*required, integer，the number of people passed by*/
}]
}
}

459

Intelligent Security API (General Application) Developer Guide
16.1.106 JSON_POE
POE message in JSON format
{

"POE": {
"@opt": "ipV4,ipV6",
/*optional, IPv4 address, string type, the max. length is 32 bytes*/
"#text": "ipV4"
/*optional, IPv6 address, string type, the max. length is 128*/
}
}
}

16.1.107 JSON_ProgressInfo
ProgressInfo message in JSON format
{

"ProgressInfo":{
/*required, progress information*/
"status":"",
/*required, string, exporting status: "exporting", "failed", "success"*/
"progress":""
/*required, string, exporting progress, format example: 2/101 (there are 101 files in total to be exported, and 2 files
have been exported)*/
}
}

16.1.108 JSON_ReportCenterCfg
ReportCenterCfg message in JSON format
{

"ReportCenterCfg":{
"enable": ,
/*optional, boolean type, whether to enable uploading report*/
"ChanAlarmMode":[{
/*alarm channel of the center group*/
"id": ,
/*optional, integer type, channel ID: 1-main channel, 2-backup channel 1, 3-backup channel 2, 4-backup channel 3*/
"chanAlarmMode":""
/*optional, string type, alarm channel mode: "T1"-T1 channel, "T2"-T2 channel, "N1"-N1 channel, "N2"-N2 channel,
"G1"-G1 channel, "G2"-G2 channel, "N3"-N3 channel, "N4"-N4 channel*/
}]
}
}

460

Intelligent Security API (General Application) Developer Guide
16.1.109 JSON_ResponseStatus
ResponseStatus message in JSON format.
{

"requestURL":"",
/*optional, string type, request URL*/
"statusCode": ,
/*required, integer type, status code*/
"statusString":"",
/*required, string type, status description*/
"subStatusCode":"",
/*required, string type, sub status code*/
"errorCode": ,
/*optional, integer type, error code, which corresponds to subStatusCode, this field is required when statusCode is
not 1. The returned value is the transformed decimal number*/
"errorMsg":"",
/*optional, string type, error details, this field is required when statusCode is not 1*/
"id": ,
/*optional, integer type, unique device ID generally returned when adding the device*/
"AdditionalErr":{
/*additional error status, which is valid when statusCode is set to 9 (Additional Error). When setting or deleting in a
batch failed, if the error status of a specific device needs to be returned, statusCode should be set to 9 (Additional
Error) and the node <AdditionalError> should be returned*/
"StatusList":[{
/*required, status information list*/
"Status":{
"id": ,
/*optional, integer type, unique device ID*/
"statusCode": ,
/*optional, integer type, status code*/
"statusString":"",
/*optional, string type, status description*/
"subStatusCode":"",
/*optional, string type, sub status code*/
"errorCode": ,
/*required, integer type, error code, which corresponds to subStatusCode, this field is required when statusCode is
not 1*/
"errorMsg":"",
/*required, string type, error details, this field is required when statusCode is not 1*/
}
}]
}
}

Note
See Error Codes in ResponseStatus for details about the status codes, sub status codes, error
codes, and error descriptions.

461

Intelligent Security API (General Application) Developer Guide
16.1.110 JSON_resourceStatistics
resourceStatistics message in JSON format
{

"inputBandwidth": ,
/*required, input bandwidth, unit: kbps, float type, corrects to one decimal*/
"outputBandwidth": ,
/*required, output bandwidth, unit: kbps, float type, corrects to one decimal*/
"StreamingInformation": [{
/*optional, stream information, array*/
"moduleType": "",
/*required, module type: "remoteStreaming"-remote streaming, "remotePlayBack"-remote playback, string type, the
maximum length is 32 bits*/
"ipAddress": "",
/*required, device IPv4 address, string type, the maximum length is 32 bits*/
"ipv6Address": "",
/*optional, device IPv6 address, string type, the maximum length is 128 bits*/
"bandwidth":
/*required, bandwidth, unit: kbps, float type, corrects to one decimal*/
}],
"inputPictureBandwidth": ,
/*optional, picture input bandwidth (including all interfaces of inputting binary picture data), unit: kbps, float type,
corrects to one decimal*/
"outputPictureBandwidth": ,
/*optional, picture output bandwidth (including all interfaces of returning binary picture data), unit: kbps, float type,
corrects to one decimal*/
}

16.1.111 JSON_Result
Result message in JSON format
{

"Result":{
"channels": [1, 2],
/*optional, integer, linked video channel No.*/
"IoTChannels": [1, 2]
/*optional, integer, linked IoT channel NO.*/
}
}

16.1.112 JSON_secretKey
secretKey message in JSON format
{

"secretKey":"",

462

Intelligent Security API (General Application) Developer Guide
/*required, string type, encryption key*/
}

16.1.113 JSON_SecurityAdvanced
SecurityAdvanced message in JSON format
{

"SecurityAdvanced ": {
"securityEnhanced": ,
/*optional, boolean type, whether to enable security reinforcement: true*/
"noOperationEnabled": ,
/*optional, boolean type, whether to enable control timeout: true*/
"noOperationTime": ,
/*optional, integer type, control timeout, value range: [1,60], default value: 15, unit: minute*/
"digestStatus":"SHA256"
/*read-only, string type, digest algorithm: SHA256, MD5*/
}
}

16.1.114 JSON_SecurityEmail
SecurityEmail message in JSON format
{

"SecurityEmail":{
"SecurityInformation": [{
/*required, recovery email information*/
"emailAddress": "",
/*required, string type, email address, the sensitive information should be encrypted*/
}],
},
}

16.1.115 JSON_SecurityEmailCap
SecurityEmailCap message in JSON format
{

"SecurityEmailCap":
/*required, recovery email configuration capability*/
{
"emailAddressNum": ,
/*required, number of recovery emails*/
"emailAddress":
/*required, string type, recovery email information*/
{

463

Intelligent Security API (General Application) Developer Guide

}

}

"@min": 1,
"@max": 128,
},

16.1.116 JSON_SecurityEmailQrCode
SecurityEmailQrCode message in JSON format
{

"SecurityEmailQrCode":
/*optional, QR code of recovery email*/
{
"SecurityInformation": [{
/*required, security information, the sensitive information should be encrypted*/
"emailAddress": "",
/*required, string type, email address, the sensitive information should be encrypted*/
"qrCode": "",
/*required, string type, QR code, the maximum size is 1024 bytes, the sensitive information should be encrypted*/
}],
"serverEmailAddress": "",
/*optional, string type, manufacturer service email address, the sensitive information should be encrypted*
"isDisclaimerDisplay":
/*optional, boolean type, whether to display disclaimer*/
},
}

16.1.117 JSON_SerialLogCfg
SerialLogCfg message in JSON format
{

"SerialLogCfg":{
"enabled":
/*required, boolean type, whether to enable serial port log redirection: "true"-yes, "false"-no*/
}
}

16.1.118 JSON_SerialLogCfgCap
SerialLogCfgCap capability message in JSON format
{

"SerialLogCfgCap":{
"enabled":"true, false"
/*required, boolean type, whether to enable serial port log redirection: "true"-yes, "false"-no*/

464

Intelligent Security API (General Application) Developer Guide
}

}

16.1.119 JSON_ServerCertificateCap
ServerCertificateCap capability message in JSON format
{

"ServerCertificateCap":{
"customID":{
/*required, string, custom certificate ID, it is created when the user imports the certificate and it consists of digits and
characters*/
"@min":1,
"@max":64
},
"status":{
/*optional, string, certificate status: "normal", "expired", "exceptional"*/
"@opt":["normal", "expired", "exceptional"]
},
"RSAKeyLength":{
/*optional, integer, RSA key length*/
"@opt":[1024, 2048]
},
"countryName":{
/*optional, string, country*/
"@min":1,
"@max":32
},
"commonName":{
/*optional, string, domain name or IP address*/
"@min":1,
"@max":32
},
"validity":{
/*optional, integer, valid days*/
"@min":1
},
"passwd":{
/*optional, string, password*/
"@min":1,
"@max":64
},
"stateOrProvinceName":{
/*optional, string, province or state*/
"@min":1,
"@max":32
},
"localityName":{
/*optional, string, region*/
"@min":1,
"@max":32

465

Intelligent Security API (General Application) Developer Guide
},
"organizationName":{
/*optional, string, organization*/
"@min":1,
"@max":32
},
"organizationUnitName":{
/*optional, string, organization unit*/
"@min":1,
"@max":32
},
"email":{
/*optional, string, email*/
"@min":1,
"@max":32
}
}
}

16.1.120 JSON_ServerCertificates
ServerCertificates message in JSON format
{

"ServerCertificates":{
"CertificateInfo":[{
"issuerDN":"",
/*required, string, read-only, name of the authority that issued the certificate*/
"subjectDN":"",
/*required, string, read-only, certificate holder name*/
"startDate":"",
/*required, date, read-only, start date of the certificate validity period, it is accurate to day*/
"endDate":"",
/*required, date, read-only, end date of the certificate validity period, it is accurate to day*/
"type":"",
/*optional, string, read-only, certificate type: "HTTPS", "WebSocketS", "SDK_OVER_TLS", "SRTP", "securityLog",
"ieee802.1x". Multiple types should be separated by commas*/
"status":"",
/*optional, string, read-only, certificate status: "normal", "expired", "exceptional"*/
"customID":""
/*optional, string, read-only, custom certificate ID, it is created when the user imports the certificate and it consists of
digits and characters*/
}]
}
}

466

Intelligent Security API (General Application) Developer Guide
16.1.121 JSON_SmartOverlap
SmartOverlap message in JSON format
{

"SmartOverlap":{
"enabled": ,
/*required, boolean, whether to enable the stream*/
"streamType": ,
/*required, integer, stream type: 1-main stream, 2-sub-stream, 3-third stream*/
"bkgImageOverlapEnabled":
/*required, boolean, whether to overlay rule frame and target frame on the background picture*/
}
}

16.1.122 JSON_SmartOverlapCap
SmartOverlapCap capability message in JSON format
{

"SmartOverlapCap":{
"enabled":{
/*required, boolean, whether to enable the stream*/
"@opt":[ true, false]
},
"streamType":{
/*required, integer, stream type: 0-disable, 1-main stream, 2-sub-stream, 3-third stream*/
"@opt":[2]
},
"bkgImageOverlapEnabled":{
/*required, boolean, whether to overlay rule frame and target frame on the background picture*/
"@opt":[true, false]
},
"supportEventType":{
/*required, string, supported event type: "fieldDetection"-intrusion, "attendedBaggage"-object removal,
"unattendedBaggage"-unattended baggage, "regionExiting"-region exiting, "regionEntrance"-region entrance,
"lineDetection"-line crossing*/
"@opt":["fieldDetection", "attendedBaggage", "unattendedBaggage", "regionExiting", "regionEntrance",
"lineDetection"]
}
}
}

16.1.123 JSON_SourceCapabilities
SourceCapabilities message in JSON format

467

Intelligent Security API (General Application) Developer Guide
{

"SourceCapabilities":{
/*required, the supported source capabilities*/
"IOTChannelNum": "",
/*required, the number of IoT channels,integer*/
"videoChannelNum": """,
/*optional, the number of video channels, integer*/
"accessChannels": [{
/*optional, array, added channel No.*/
"channel": "",
/*required, channel No., integer*/
"type": "",
/*required, channel type: "video"-video channel, "IOT"-IoT channel, string*/
}]
}
}

16.1.124 JSON_StopTaskCond
StopTaskCond message in JSON format
{

"taskID":
/*required, task ID, string*/
}

16.1.125 JSON_CollectionDescription
CollectionDescription message in JSON format
{

"CollectionDescription":{
"searchID": "",
/*required，string，unique search ID, the content of searchID remains unchanged when search condition remains
unchanged.*/
"searchResultPosition": "",
/*required, initial position of search result list, integer type. When there are multiple records, and cannot get all
records in one time searching, you can search the records followed specified position for next search*/
"maxResults": "",
/*required, number of matched records per search, integer type*/
"timeSpanList": [{
/*required, time interval list*/
"startTime": "",
/*required, start time, ISO8601_time, string*/
"endTime": "",
/*required, end time, ISO8601_time, string*/
}],
"channels": "",

468

Intelligent Security API (General Application) Developer Guide
/*optional, sub type, array, integer32, related channel No., array. If the channel information is not specified, it
indicates searching all channels*/
"alarmLevel": "TMA",
/*required, string, alarm level: TMA–thermometry alarm, TMPA-thermometry pre-alarm*/
}
}

16.1.126 JSON_Temperature_CollectionDescriptionCap
CollectionDescriptionCap message in JSON format
{

"CollectionDescriptionCap":{
"timeRange": 15,
/*required, supported time range for replenishment, unit: day, integer */
"timeSpanMaxNum": 1,
/*required, the maximum number of time buckets supported for one time search, integer*/
"resultMaxNum": 100,
/*required, the maximum number of items can be searched, integer*/
"channelMaxNum": 1,
/*required, the maximum number of channels supported for one time search, integer*/
"alarmLevel":{
/*required, string, alarm level: TMA–thermometry alarm, TMPA-thermometry pre-alarm*/
"@opt": "TMA,TMPA"
}
}
}

16.1.127 JSON_CollectionResult
CollectionResult message in JSON format
{

"CollectionResult":{
"responseStatusStrg": "",
/*required, searching status: OK- Searching ended, NO MATCHES-No matched data found, MORE-Search again for
more results, string, the max. length is 32, {dep if errcode == 1 && errMsg == ok}*/
"numOfMatches": "",
/*required, returned number of results for current search, integer32, {dep if errcode == 1 && errMsg == ok}*/
"totalMatches": "",
/*required, total number of matched results, integer32, {dep if errcode == 1 && errMsg == ok}*/
"targets": [{
/*optional, statistics result*/
"time": "2017-08-25T11:34:59+08:00",
/*required, statistic time*/
"channel": "",
/*required, integer，channel No.*/
"Region": [{
/*required, float, X-coordinate, ranges from 0.000 to 1*/

469

Intelligent Security API (General Application) Developer Guide
"x": "",
/*required, float, Y-coordinate, ranges from 0.000 to 1*/
"y": ""
}],
"thermometryUnit": "",
/*required, string, temperature unit: celsius, fahrenheit, kelvin*/
"ruleTemperature": ,
/*required, float, themometry rule*/
"currTemperature": ,
/*required, float, current temperature*/
"ruleCalibType": "",
/*required, string, rule calibration type: point,line,region*/
"ruleType": "",
/*required, string, rule: "highest temp is higher than"-the maximum temperature is higher than, "lowest temp is
higher than"-the minimum temperature is higher than, "average temp is higher than"-the average temperature is
higher than, "temp diff is higher than"-temperature difference is higher than, "highest temp is lower than"-the
maximum temperature is lower than, "lowest temp is lower than"-the minimum temperature is lower than, "average
temp is lower than"-the average temperature is lower than, "temp diff is lower than"-temperature difference is lower
than*/
"MaximumTemperaturePoint":{
/*optional, the maximum temperature point*/
"x": "",
/*required, float, X-coordinate, ranges from 0.000 to 1*/
"y": ""
/*required, float, Y-coordinate, ranges from 0.000 to 1*/
},
"AbsoluteHigh":{
/*optional, absolute height*/
"elevation": "",
/*required, float，elevation*/
"azimuth": "",
/*required, float，azimuth*/
"absoluteZoom": ""
/*required, float，absolute zoom*/
},
"ruleID": "",
/*required, integer，rule ID*/
"presetNo": "",
/*required, integer，preset ID*/
"visibleLightURL": "",
/*optional, string，visible light picture URL*/
"thermalURL": "",
/*optional, string，thermal picture URL*/
"thermalInfoURL": "",
/*optional, string，thermal additional information URL*/
}]
}
}

470

Intelligent Security API (General Application) Developer Guide
16.1.128 JSON_TimeType
TimeType message in JSON format
{

"TimeType":{
"type": ""
/*required, value: local, UTC*/
}
}

16.1.129 JSON_unitConfig
unitConfig message in JSON format
{

"enabled": "",
/*required, enable unit unifying configuration or not, boolean type*/
"temperatureRange": "",
/*optional, string type, temperature unit: degreeCentigrade-Centigrade (°C), degreeFahrenheit-Fahrenheit (°F）,
degreeKelvin-Kelvin (K), the default value is "degreeCentigrade"*/
"distanceUnit": ""
/*optional, string type, distance unit: centimeter, meter, feet，the default value is "centimeter"*/
}

Remarks
• When the enabled values "false", it indicates the unit unifying function is disabled, the unit can
be configured in thermomery basic settings, and the configured unit has no influence on the unit
in system settings.
• When the enabled values "false", the thermomery unit configuration in applied URL remains
unchanged and takes effect; while when the enabled values "true" and the thermometry unit is
different with the system unit, the thermometry unit configuration in applied URL takes no effect
and the error code will be returned.

16.1.130 JSON_unitConfigCap
unitConfigCap message in JSON format
{

"enabled":"true,false",
/*required, enable unit unified configuration or not, boolean type*/
"temperatureRange":{
/*optional, string type, temperature unit: degreeCentigrade-Centigrade (°C), degreeFahrenheit-Fahrenheit (°F）,
degreeKelvin-Kelvin (K), the default value is "degreeCentigrade"*/
"@opt":"degreeCentigrade,degreeFahrenheit,degreeKelvin"
},

471

Intelligent Security API (General Application) Developer Guide
"distanceUnit":{
/*optional, string type, distance unit: centimeter, meter, feet，the default value is "centimeter"*/
"@opt":"centimeter,meter,feet"
}
}

16.1.131 JSON_User
User message in JSON format
{

"User":{
"userName": "",
/*required, string, double verification user name*/
"password": ""
/*required, string, double verification password*/
}
}

16.1.132 JSON_UserCap
UserCap message in JSON format
{

"UserCap":{
"userMaxNumber": "",
/*required, the maximum number of supported double verification users*/
"userNameLen":{
/*required, the length of double verification user name*/
"@min": "",
"@max": "",
},
"passwordLen":{
/*required, the length of double verification user password*/
"@min": 5,
"@max": 16,
}
}
}

16.1.133 JSON_UserList
UserList message in JSON format
{

"UserList": [{
"id": ,

472

Intelligent Security API (General Application) Developer Guide
/*required, integer, user ID*/
"userName":"",
/*required, string, double verification user name*/
}]
}

16.1.134 JSON_UserPermission
UserPermission message in JSON format
{

"UserPermission":{
"localPlayback":{
/*optional, local playback permission*/
"enable": "",
/*required, enables permission or not, boolean*/
"channelPermission": [{
/*optional, channel permission*/
"channelID": ,
/*required, channel ID, integer*/
"enable": ""
/*required, enables permission or not, boolean*/
}]
},
"localBackup":{
/*optional, local backup permission*/
"enable": "",
/*required, enables permission or not, boolean*/
"channelPermission": [{
/*optional, channel permission*/
"channelID": ,
/*required, channel ID, integer*/
"enable": ""
/*required, enables permission or not, boolean*/
}]
},
"remotePlayback":{
/*optional, remote playback and download permission*/
"enable": "",
/*required, enables permission or not, boolean*/
"channelPermission": [{
/*optional, channel permission*/
"channelID": ,
/*required, channel ID, integer*/
"enable": ""
/*required, enables permission or not, boolean*/
}]
}
}
}

473

Intelligent Security API (General Application) Developer Guide
16.1.135 JSON_UserPermissionCap
UserPermissionCap message in JSON format
{

"UserPermissionCap":{
"localPlayback":{
/*required, local playback permission*/
"channelID":{
/*required, the channel which supports configuring local playback permission*/
"@min": "",
"@max": ,
},
"enable": "true,false"
/*required, enables permission or not, boolean*/
},
"localBackup":{
/*required, local backup permission*/
"channelID":{
/*required, the channel which supports configuring local backup permission*/
"@min": "",
"@max": ,
},
"enable": "true,false"
/*required, enables permission or not, boolean*/
},
"remotePlayback":{
/*required, remote playback permission*/
"channelID":{
/*required, the channel which supports configuring remote playback permission*/
"@min": "",
"@max": "",
"#text": ""
},
"enable": "true,false"
/*required, enables permission or not, boolean*/
}
}
}

16.1.136 JSON_IntelligentSearchCap
IntelligentSearchCap capability message in JSON format
{

"requestURL":"",
/*optional, string type, request URL*/
"statusCode":1,
/*required, int type, status code*/

474

Intelligent Security API (General Application) Developer Guide
"statusString":"",
/*required, string type, status description*/
"subStatusCode":"",
/*required, string type, sub status code*/
"errorCode":1,
/*optional, int type, error code, this node is required when statusCode is not 1 and it corresponds to subStatusCode*/
"errorMsg":"ok",
/*optional, string type, error details, this node is required, when statusCode is not 1 and it can be error details about a
specific parameter*/
"startTime":"2004-05-03T17:30:08+08:00",
/*required, string type, start time in ISO8601 time format. This node only indicates that the device supports this field*/
"endTime":"2004-05-03T17:30:08+08:00",
/*required, string type, end time in ISO8601 time format. This node only indicates that the device supports this field*/
"resultMaxNum":100,
/*required, int type, supported maximum number of results that can be searched*/
"channelIDLen":{
/*optional, camera ID length*/
"min":1,
"max":32
},
"channelNameLen":{
/*optional, camera name length*/
"min":1,
"max":32
},
"targetRect":{
/*required, target frame*/
"height":{
"min":1,
"max":100
},
"width":{
"min":1,
"max":100
},
"x":{
"min":1,
"max":100
},
"y":{
"min":1,
"max":100
}
},
"picUrlLen":{
/*required, URL length of the large picture*/
"min":1,
"max":128
},
"targetType":"vehicle",
/*string type, search object type*/
"isSupportLicense":true,

475

Intelligent Security API (General Application) Developer Guide
/*required, boolean type, whether it supports license plate number*/
"plateType":"unknown,92TypeCivil,arm,upDownMilitay,92TypeArm,leftRightMilitay,
02TypePersonalized,yellowTwoLine,
04NewMilitay,embassy,oneLineArm,twoLineArm,yellow1225FarmVehicle,green1325FarmVehicle,yellow1325FarmVehi
cle,motorola,coach,tempTravl,trailer,consulate,hongKongMacao,tempEntry,civilAviation,newEnergy",
/*optional, string type, license plate type: license plate type: "unknown", "92TypeCivil"-92-style civil vehicle, "arm"police vehicle, "upDownMilitay"-military vehicle (top-bottom type), "92TypeArm"-92-style police vehicle,
"leftRightMilitay"-military vehicle (left-right type), "02TypePersonalized"-02-style customized vehicle, "yellowTwoLine"yellow two-line rear license plate, "04NewMilitay"-04-style new military vehicle, "embassy"-embassy vehicle,
"oneLineArm"-new armed police vehicle (one-line), "twoLineArm"-new armed police vehicle (two-line),
"yellow1225FarmVehicle"-yellow agricultural vehicle with 1225 structure, "green1325FarmVehicle"-green agricultural
vehicle with 1325 structure, "yellow1325FarmVehicle"-yellow agricultural vehicle with 1325 structure, "motorola"motorcycle, "coach"-driver-training vehicle, "tempTravl"-vehicle with temporary license plate, "trailer"-trailer,
"consulate"-consular vehicle, "hongKongMacao"-vehicle entering and leaving Hong Kong/Macao, "tempEntry"temporary entry vehicle, "civilAviation"-civil aviation license plate, "newEnergy"-new energy license plate. Multiple
types should be separated by commas*/
"vehicleColor":"white,silver,gray,black,red,deepBlue,blue,yellow,green,brown,pink,purple,deepGray,cyan,orange,unkn
own",
/*optional, string type, vehicle color: "unknown", "white", "silver"-silvery, "gray", "black", "red", "deepBlue"-dark
blue, "blue", "yellow", "green", "brown", "pink", "purple", "deepGray"-dark gray, "cyan", "orange". Multiple colors
should be separated by commas*/
"plateColor":"white,yellow,blue,black,green,civilAviationBlack,civilAviationGreen,other",
/*optional, string type, license plate color: "white", "yellow", "blue", "black", "green", "civilAviationBlack"-civil
aviation black, "civilAviationGreen"-civil aviation green, "0xff" or "other"-other color, "unknown"-unrecognized.
Multiple colors should be separated by commas*/
"vehicleType":"largeBus,truck,vehicle,van,buggy,pedestrian,twoWheelVehicle,threeWheelVehicle,SUVMPV,mediumBus
,motorVehicle,nonmotorVehicle,smallCar,miniCar,pickupTruck,unknown",
/*optional, string type, vehicle type: "largeBus"-large-sized bus, "truck"-truck, "vehicle"-salon car, "van"-minivan,
"buggy"-light truck, "pedestrian", "twoWheelVehicle"-two wheeler, "threeWheelVehicle"-tricycle, "SUVMPV"-SUV/
MPV, "mediumBus"-middle-sized bus, "motorVehicle"-motor vehicle (it will be transformed to "vehicle" (salon car) in
the platform), "nonmotorVehicle"-non-motor vehicle (it will be transformed to "threeWheelVehicle" (tricycle) in the
platform), "smallCar"-small sedan (it will be transformed to "vehicle" (salon car) in the platform), "miniCar"-mini
sedan (it will be transformed to "vehicle" (salon car) in the platform), "pickupTruck"-pick-up truck, "unknown".
Multiple types should be separated by commas*/
"isSupportVehicleLogo":true,
/*optional, boolean type, whether it supports vehicle parent brand*/
"isSupportvehicleSubLogo":true,
/*optional, boolean type, whether it supports vehicle sub brand*/
"isSupportVehicleModel":true,
/*optional, boolean type, whether it supports vehicle model year*/
"channelMaxNum":1,
/*required, integer type, maximum number of channels that support simultaneous search*/
"supportSearchByUTC":true
/*optional, boolean type, whether it supports searching by UTC*/
}

476

Intelligent Security API (General Application) Developer Guide
16.1.137 JSON_VCASearchExportCond
VCASearchExportCond in JSON format
{

"searchID":"",
/*required, string type, search ID. The content of searchID remains unchanged if the search conditions remain
unchanged. This node is used to check the same search. When the device performance is limited, you can search
asynchronously by applying conditions with the same searchID several times and getting the search progress*/
"searchResultPosition": ,
/*required, int type, the start position of the search result in the result list. When there are multiple records and you
cannot get all search results at a time, you can search for the records after the specified position next time*/
"maxResults": ,
/*required, int type, maximum number of search results obtained this time*/
"startTime":"",
/*required, string type, start time in ISO8601 time format*/
"endTime":"",
/*required, string type, end time in ISO8601 time format*/
"choiceChannel":[{
/*optional*/
"channelID":""
/*optional, string type, camera No.*/
}],
"targetType":"",
/*optional, string type, search object type: "human,vehicle,twoWheelVehicle,threeWheelVehicle". If this node is not
returned, it indicates no limit*/
"targetSize":"",
/*optional, string type, target size. If this node is not returned, it indicates no limit*/
"direction":"",
/*optional, string type, target direction. If this node is not returned, it indicates no limit*/
"speed":"",
/*optional, string type, target speed. If this node is not returned, it indicates no limit*/
"humanInfo":{
/*this node is valid when targetType is "human"*/
"ageGroup":"",
/*optional, string type, age group. If this node is not returned, it indicates no limit*/
"gender":"",
/*optional, string type, gender. If this node is not returned, it indicates no limit*/
"glass":"",
/*optional, string type, whether the person wears glasses. If this node is not returned, it indicates no limit*/
"bag":"",
/*optional, string type, whether the person is with backpack. If this node is not returned, it indicates no limit*/
"hat":"",
/*optional, string type, whether the person wears glasses. If this node is not returned, it indicates no limit*/
"mask":"",
/*optional, string type, whether the person wears mask. If this node is not returned, it indicates no limit*/
"jacketType":"",
/*optional, string type, tops type. If this node is not returned, it indicates no limit*/
"trousersType":"",
/*optional, string type, bottoms type. If this node is not returned, it indicates no limit*/
"hairStyle":"",

477

Intelligent Security API (General Application) Developer Guide
/*optional, string type, hairstyle. If this node is not returned, it indicates no limit*/
"jacketColor":"",
/*optional, string type, tops color. If this node is not returned, it indicates no limit*/
"trousersColor":"",
/*optional, string type, bottoms color. If this node is not returned, it indicates no limit*/
"ride":"",
/*optional, string type, whether the person is riding bicycle. If this node is not returned, it indicates no limit*/
"things":"",
/*optional, string type, whether the person is carrying goods. If this node is not returned, it indicates no limit*/
"cyclingType":"",
/*optional, string type, riding type*/
"cyclingPersonNumber":""
/*optional, string type, number of riders*/
},
"vehicleInfo":{
/*this node is valid when targetType is "vehicle"*/
"license":"",
/*optioinal, string type, license plate number*/
"plateType":"",
/*optional, string type, license plate type: license plate type: "unknown", "92TypeCivil"-92-style civil vehicle, "arm"police vehicle, "upDownMilitay"-military vehicle (top-bottom type), "92TypeArm"-92-style police vehicle,
"leftRightMilitay"-military vehicle (left-right type), "02TypePersonalized"-02-style customized vehicle, "yellowTwoLine"yellow two-line rear license plate, "04NewMilitay"-04-style new military vehicle, "embassy"-embassy vehicle,
"oneLineArm"-new armed police vehicle (one-line), "twoLineArm"-new armed police vehicle (two-line),
"yellow1225FarmVehicle"-yellow agricultural vehicle with 1225 structure, "green1325FarmVehicle"-green agricultural
vehicle with 1325 structure, "yellow1325FarmVehicle"-yellow agricultural vehicle with 1325 structure, "motorola"motorcycle, "coach"-driver-training vehicle, "tempTravl"-vehicle with temporary license plate, "trailer"-trailer,
"consulate"-consular vehicle, "hongKongMacao"-vehicle entering and leaving Hong Kong/Macao, "tempEntry"temporary entry vehicle, "civilAviation"-civil aviation license plate, "newEnergy"-new energy license plate. If this node
is not returned, it indicates no limit*/
"vehicleColor":"",
/*optional, string type, vehicle color: "unknown", "white", "silver"-silvery, "gray", "black", "red", "deepBlue"-dark
blue, "blue", "yellow", "green", "brown", "pink", "purple", "deepGray"-dark gray, "cyan", "orange". Multiple colors
should be separated by commas. If this node is not returned, it indicates no limit*/
"vehicleType":"",
/*optional, string type, vehicle type: "largeBus"-large-sized bus, "truck"-truck, "vehicle"-salon car, "van"-minivan,
"buggy"-light truck, "pedestrian", "twoWheelVehicle"-two wheeler, "threeWheelVehicle"-tricycle, "SUVMPV"-SUV/
MPV, "mediumBus"-middle-sized bus, "unknown". If this node is not returned, it indicates no limit*/
"vehicleLogo": ,
/*optional, int type, vehicle parent brand. If this node is not returned, it indicates no limit*/
"vehicleSubLogo": ,
/*optional, int type, vehicle sub brand. If this node is not returned, it indicates no limit*/
"vehicleModel": ,
/*optional, int type, vehicle model year. If this node is not returned, it indicates no limit*/
"plateColor":"",
/*optional, string type, license plate color: "white", "yellow", "blue", "black", "green", "civilAviationBlack"-civil
aviation black, "civilAviationGreen"-civil aviation green, "0xff" or "other"-other color. If this node is not returned, it
indicates no limit*/
"pilotSafebelt":"",
/*optional, string type, whether the driver buckled up. If this node is not returned, it indicates no limit*/
"pilotSunvisor":"",
/*optional, string type, whether the driver's sun visor is pulled down. If this node is not returned, it indicates no limit*/

478

Intelligent Security API (General Application) Developer Guide
"vicePilotSafebelt":"",
/*optional, string type, whether the front passenger buckled up*/
"vicePilotSunvisor":"",
/*optional, string type, whether the front passenger's sun visor is pulled down*/
"uphone":"",
/*optional, string type, whether the person is making a call*/
"dangmark":"",
/*optional, string type, whether the vehicle is with hazardous material sign*/
"envprosign":"",
/*optional, string type, whether it is a yellow-label vehicle*/
"vehicleState":"",
/*optional, string type, license plate status*/
"pdvs":"",
/*optional, string type, whether the passenger is standing out of sunroof*/
"vehicleHead":"",
/*optional, string type, license plate recognition direction*/
"pendant":"",
/*optional, string type, whether there is pendant*/
"temporaryLicense":"",
/*optional, string type, whether the vehicle is with temporary license plate*/
"tricycleCanopy":"",
/*optional, string type, whether the tricycle is with canopy*/
"decoration":"",
/*optional, string type, whether there is ornament*/
"tissueBox":"",
/*optional, string type, whether there is tissue box*/
"card":"",
/*optional, string type, whether there are cards*/
"cardType":"",
/*optional, string type, card type*/
"copilot":"",
/*optional, string type, whether the front passenger is seated*/
"frontChild":"",
/*optional, string type, whether the front passenger holds a baby or the child sits in front passenger's seat alone*/
"muckTruck":"",
/*optional, string type, whether it is a dump truck*/
"sunroof":"",
/*optional, string type, whether there is sunroof*/
"luggageRack":"",
/*optional, string type, whether there is roof rack*/
"vehicleSprayPainted":"",
/*optional, string type, whether there are characters painted on vehicle*/
"spareTire":"",
/*optional, string type, whether there is spare tire*/
"coverPlate":"",
/*optional, string type, whether there is cover on dump truck*/
"label":""
/*optional, string type, whether the vehicle is with label*/
},
"twoWheelVehicle":{
/*this node is valid when targetType is "twoWheelVehicle"*/
"ageGroup":"",

479

Intelligent Security API (General Application) Developer Guide
/*optional, string type, age group. If this node is not returned, it indicates no limit*/
"gender":"",
/*optional, string type, gender. If this node is not returned, it indicates no limit*/
"glass":"",
/*optional, string type, whether the person wears glasses. If this node is not returned, it indicates no limit*/
"bag":"",
/*optional, string type, whether the person is with backpack. If this node is not returned, it indicates no limit*/
"hat":"",
/*optional, string type, whether the person wears hat. If this node is not returned, it indicates no limit*/
"mask":"",
/*optional, string type, whether the person wears mask. If this node is not returned, it indicates no limit*/
"jacketType":"",
/*optional, string type, tops type. If this node is not returned, it indicates no limit*/
"hairStyle":"",
/*optional, string type, hairstyle. If this node is not returned, it indicates no limit*/
"jacketColor":"",
/*optional, string type, tops color. If this node is not returned, it indicates no limit*/
"cyclingType":"",
/*optional, string type, riding type*/
"cyclingPersonNumber":""
/*optional, string type, number of riders*/
},
"threeWheelVehicle":{
/*this node is valid when targetType is "threeWheelVehicle"*/
"ageGroup":"",
/*optional, string type, age group. If this node is not returned, it indicates no limit*/
"gender":"",
/*optional, string type, gender. If this node is not returned, it indicates no limit*/
"glass":"",
/*optional, string type, whether the person wears glasses. If this node is not returned, it indicates no limit*/
"bag":"",
/*optional, string type, whether the person is with backpack. If this node is not returned, it indicates no limit*/
"hat":"",
/*optional, string type, whether the person wears hat. If this node is not returned, it indicates no limit*/
"mask":"",
/*optional, string type, whether the person wears mask. If this node is not returned, it indicates no limit*/
"jacketType":"",
/*optional, string type, tops type. If this node is not returned, it indicates no limit*/
"hairStyle":"",
/*optional, string type, hairstyle. If this node is not returned, it indicates no limit*/
"jacketColor":"",
/*optional, string type, tops color. If this node is not returned, it indicates no limit*/
"cyclingPersonNumber":""
/*optional, string type, number of riders*/
}
}

16.1.138 JSON_VCASearchExportProgress
VCASearchExportProgress message in JSON format

480

Intelligent Security API (General Application) Developer Guide
{

"requestURL":"",
"statusCode": ,
"statusString":"",
"subStatusCode":"",
"errorCode": ,
"errorMsg":"",
/*see the description of this node and the above nodes in the message of JSON_ResponseStatus*/
"progress": ,
/*dep, it is valid when errcode values "1" and errMsg values "ok". Export progress, ranges from 0 to 100, int*/
"URL": ""
/*dep, it is valid when progress values "100", the URL address of packaged result, string*/
}

See Also
JSON_ResponseStatus

16.1.139 JSON_VCASearchExportTaskInfo
VCASearchExportTaskInfo message in JSON format
{

"requestURL":"",
"statusCode": ,
"statusString":"",
"subStatusCode":"",
"errorCode": ,
"errorMsg":"",
/*see the description of this node and the above nodes in the message of JSON_ResponseStatus*/
"taskID":
/*required, string type, task ID*/
}

See Also
JSON_ResponseStatus

16.1.140 JSON_IntelligentSearchResult
IntelligentSearchResult message in JSON format
{

"requestURL":"",
/*required, string type, request URL*/
"statusCode": ,
/*required, int type, status code*/
"statusString":"",
/*required, string type,status description*/
"subStatusCode":"",

481

Intelligent Security API (General Application) Developer Guide
/*required, string type, sub status code*/
"errorCode": ,
/*optional, int type, error code, this node is required when statusCode is not 1 and it corresponds to subStatusCode*/
"errorMsg":"",
/*optional, string type, error details, this node is required, when statusCode is not 1 and it can be error details about a
specific parameter*/
"responseStatusStrg":"",
/*required, string type, searching status: "OK"-searching completed, "NO MATCH"-no matched results, "MORE"searching for more results. The maximum length is 32 bytes. This node is valid when errorCode is 1 and errorMsg is
"ok"*/
"numOfMatches": ,
/*required, integer32, number of results returned this time. This node is valid when errorCode is 1 and errorMsg is
"ok"*/
"totalMatches": ,
/*required, integer32, total number of matched results. This node is valid when errorCode is 1 and errorMsg is "ok"*/
"progress": ,
/*optional, integer32 type, VCA search progress*/
"targetInfo":[{
/*this node is valid when progress is 100*/
"captureTime":"",
/*required, string type, capture time in ISO8601 time format*/
"channelID":"",
/*optional, string type, camera No.*/
"channelName":"",
/*optioanl, string type, camera name*/
"streamType":"",
/*optional, string type, streaming type: "realtime,historyvideo,localvideo"*/
"targetRect":{
/*required, target frame*/
"height": ,
"width": ,
"x": ,
"y":
},
"picUrl":"",
/*optional, string type, large picture URL*/
"targetType ":"",
/*optional, string type, search object type*/
"vehicleInfo ":{
/*this node is valid when targetType is "vehicle"*/
"license":"",
/*optional, string type, license plate number*/
"plateType":"",
/*optional, string type, license plate type: license plate type: "unknown", "92TypeCivil"-92-style civil vehicle, "arm"police vehicle, "upDownMilitay"-military vehicle (top-bottom type), "92TypeArm"-92-style police vehicle,
"leftRightMilitay"-military vehicle (left-right type), "02TypePersonalized"-02-style customized vehicle, "yellowTwoLine"yellow two-line rear license plate, "04NewMilitay"-04-style new military vehicle, "embassy"-embassy vehicle,
"oneLineArm"-new armed police vehicle (one-line), "twoLineArm"-new armed police vehicle (two-line),
"yellow1225FarmVehicle"-yellow agricultural vehicle with 1225 structure, "green1325FarmVehicle"-green agricultural
vehicle with 1325 structure, "yellow1325FarmVehicle"-yellow agricultural vehicle with 1325 structure, "motorola"motorcycle, "coach"-driver-training vehicle, "tempTravl"-vehicle with temporary license plate, "trailer"-trailer,
"consulate"-consular vehicle, "hongKongMacao"-vehicle entering and leaving Hong Kong/Macao, "tempEntry"-

482

Intelligent Security API (General Application) Developer Guide
temporary entry vehicle, "civilAviation"-civil aviation license plate, "newEnergy"-new energy license plate*/
"vehicleColor":"",
/*optional, string type, vehicle color: "unknown", "white", "silver"-silvery, "gray", "black", "red", "deepBlue"-dark
blue, "blue", "yellow", "green", "brown", "pink", "purple", "deepGray"-dark gray, "cyan", "orange". Multiple colors
should be separated by commas*/
"vehicleType":"",
/*optional, string type, vehicle type: "largeBus"-large-sized bus, "truck"-truck, "vehicle"-salon car, "van"-minivan,
"buggy"-light truck, "pedestrian", "twoWheelVehicle"-two wheeler, "threeWheelVehicle"-tricycle, "SUVMPV"-SUV/
MPV, "mediumBus"-middle-sized bus, "unknown"*/
"vehicleLogo": ,
/*optional, int type, vehicle parent brand*/
"vehicleSubLogo": ,
/*optional, int type, vehicle sub brand*/
"vehicleModel": ,
/*optional, int type, vehicle model year*/
"plateColor":"",
/*optional, string type, license plate color: "white", "yellow", "blue", "black", "green", "civilAviationBlack"-civil
aviation black, "civilAviationGreen"-civil aviation green, "0xff" or "other"-other color.*/
"pilotSafebelt":"",
/*optional, string type, whether the driver buckled up*/
"pilotSunvisor":"",
/*optional, string type, whether the driver's sun visor is pulled down*/
"vicePilotSafebelt":"",
/*optional, string type, whether the front passenger buckled up*/
"vicePilotSunvisor":"",
/*optional, string type, whether the front passenger's sun visor is pulled down*/
"uphone":"",
/*optional, string type, whether the person is making a call*/
"region":"",
/*optional, string type, region that the license plate belongs to: "EU"-Europe, "ER"-Russian region, "EUandCIS"-Europe
and Russia, "ME"-the Middle East, "All"-all regions, "other"*/
"country":""
/*optional, string type, country that the license plate belongs to: "EU"-Europe, "ER"-Russian region, "EUandCIS"Europe and Russia, "ME"-the Middle East, "All"-all regions, "other"*/
}
}]
}

16.1.141 JSON_WhiteLightAlarm
WhiteLightAlarm message in JSON format
{

"WhiteLightAlarm":{
"durationTime": ,
/*required, integer type, flashing duration of supplement light, which is between 1 and 60 s*/
"frequency":"",
/*required, string type, flashing frequency of supplement light: "high"-flashing 0.5s per second, "medium"-flashing
0.8s per 1.6s, "low"-flashing 1s per 2s*/
"brightness": ,
/*optional, integer type, supplement light brightness, which is between 1 and 100*/

483

Intelligent Security API (General Application) Developer Guide
"TimeRangeList":[{
/*optional, alarm output schedule list*/
"week": ,
/*required, integer type, days of the week: 1-Monday, 2-Tuesday, 3-Wednesday, 4-Thursday, 5-Friday,6-Saturday, 7Sunday*/
"TimeRange":[{
"id": ,
/*required, integer type, ID of time period for each day*/
"beginTime":"",
/*required, string type, start time in ISO8601 format*/
"endTime":""
/*required, string type, end time in ISO8601 format*/
}]
}]
}
}

16.1.142 JSON_WhiteLightAlarmCap
WhiteLightAlarmCap message in JSON format
{

"WhiteLightAlarmCap":{
"durationTime":{
/*required, integer type, flashing duration of supplement light, which is between 1 and 60 s*/
"@min": ,
"@max": ,
"@def":
},
"frequency":{
/*required, string type, flashing frequency of supplement light: "high"-flashing 0.5s per second, "medium"-flashing
0.8s per 1.6s, "low"-flashing 1s per 2s*/
"@opt":"",
"@def":""
},
"brightness":{
/*optional, integer type, supplement light brightness, which is between 1 and 100*/
"@min": ,
"@max": ,
"@def":
},
"TimeRangeCap":{
/*optional, alarm output schedule capability*/
"week":{
/*required, integer type, days of the week: 1-Monday, 2-Tuesday, 3-Wednesday, 4-Thursday, 5-Friday,6-Saturday, 7Sunday*/
"@opt":""
},
"id":{
/*required, integer type, ID of time period for each day*/
"@maxSize":

484

Intelligent Security API (General Application) Developer Guide
},
"beginTime":{
/*required, string type, start time in ISO8601 format*/
"@min":"",
"@max":""
},
"endTime":{
/*required, string type, end time in ISO8601 format*/
"@min":"",
"@max":""
}
},
"whiteLightMode":{
/*optional, string type, supplement light mode: "keepOn"-always on, "flashing"-flashing*/
"@opt":"keepOn,flashing",
"@def":"keepOn"
}
}
}

16.1.143 JSON_WorkingStatus
WorkingStatus message in JSON format
{

"WorkingStatus":{
"devStatus": ,
/*required, integer type, value of device status: 0-normal, 1-CPU usage, higher than 85%, 2-hardware error (e.g., serial
port exception)*/
"ChanStatus":[{
"chanNo": ,
/*required, integer type, channel No., which starts from 1*/
"enable": ,
/*integer type, it is valid for analog channel only, 0-disable, 1-enable*/
"online": ,
/*required, integer type, online status: 0-offline, 1-online*/
"record": ,
/*required, whether the device is recording, 0-no, 1-yes*/
"recordStatus ": ,
/*integer type, recording status: 0-recording, 1-recording exception (HDD exception), 2-recording exception (network
camera offline), 3-recording exception (other reason)*/
"signal": ,
/*required, integer type, signal status: 0-normal, 1-signal loss*/
"linkNum": ,
/*required, integer type, number of software clients connected to this channel*/
"bitRate":
/*required, integer type, channel bit rate, unit: Kpbs*/
}],
"HDStatus":[{
"hdNo": ,
/*required, integer type, HDD No., which starts from 1*/

485

Intelligent Security API (General Application) Developer Guide
"status": ,
/*required, integer type, HDD status: 0-activate, 1-sleep, 2-exception, 3-sleepy HDD error, 4-unformated, 5disconnected (for network HDD), 6-formatting*/
"volume": ,
/*required, integer type, HDD capacity, unit: MB*/
"freeSpace":
/*required, integer type, free space, unit: MD*/
}],
"IOStatus":{
"IOInTrig":[…,…,…,…],
/*integer type, triggered alarm input No., two places and below: analog alarm input No., two places and above: digital
alarm input No.; and the low 2-bit is the alarm input No., the 3-bit or above is the digital channel No., e.g., 3201-alarm
input No.1 of digital channel No.32*/
"IOOutTrig":[…,…,…,…]
/*integer type, triggered alarm output No., two places and below: analog alarm output No., two places and above:
digital alarm output No.; and the lower 2 bits are the alarm output No., the 3-bit or above is the digital channel No.,
e.g., 3201-alarm output No.1 of digital channel No.32*/
}
}
}

16.1.144 JSON_XX
XX message in JSON format
{

"XX":{
/*required, event/alarm configuration information*/
"enabled": "",
/*required, enable or not, boolean*/
"zoneName": ""
/*optional, zone name, it is valid only when event type is zone, string*/
}
}

Remarks
The XX in the parameter "XX" corresponds to detailed event type. E.g., if the event type is
humanRecognition, then the returned node is "HumanRecognition".

16.1.145 JSON_XXCap
XXCap message in JSON format
{

"XXCap":{
/*required, event configuration information*/
"enabled": "true,false",
/*required, enable or not, boolean*/

486

Intelligent Security API (General Application) Developer Guide
"zoneName":{
/*optional, zone name, it is valid only when event type is zone, string*/
"@min": 1,
"@max": 64,
},
}
}

Remarks
The XX in the parameter "XXCap" corresponds to detailed event type. E.g., if the event type is
humanRecognition, then the returned node is "HumanRecognitionCap".

16.2 XML Messages
16.2.1 XML_accessDevice
accessDevice message in XML format
<accessDevice version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs:integer--></id>
<MACAddress><!--opt, xs:string--></MACAddress>
<ipV4Address><!--dep, xs:string--></ipV4Address>
<accessTime><!--req, xs:time, ISO8601 data--></accessTime>
</accessDevice>

16.2.2 XML_accessDeviceList
accessDeviceList message in XML format
<accessDeviceList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<accessDevice/><!--see details in the message of XML_accessDevice-->
</accessDeviceList>

See Also
XML_accessDevice

16.2.3 XML_accessPoint
accessPoint message in XML format
<accessPoint version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs:integer--></id>
<networkMode>
<!--opt, xs:string, "infrastructure, adhoc"-->
</networkMode>

487

Intelligent Security API (General Application) Developer Guide
<channel><!--opt, xs:string, "1 to 14, auto"--></channel>
<ssid><!--req, xs:string--></ssid>
<speed><!--opt, xs:integer, unit: Mbps--></speed>
<signalStrength><!--opt, xs:integer, signal strength, which is between 0 and 100--></signalStrength>
<securityMode>
<!--req, xs:string, "disable,WEP,WPA-personal,WPA2-personal,WPA-RADIUS,WPA-enterprise,WPA2-enterprise"-->
</securityMode>
<connected><!--opt, xs:boolean--></connected>
<connecting><!--opt, xs:boolean, whether the device is connecting to the Wi-Fi--></connecting>
</accessPoint>

16.2.4 XML_accessPointList
accessPointList message in XML format
<accessPointList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<accessPoint/><!--see details in the message of XML_accessPoint>
</accessPointList>

See Also
XML_accessPoint

16.2.5 XML_ActivateInfo
ActivateInfo message in XML format.
<ActivateInfo version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<password><!--req, xs:string--></password>
</ActivateInfo>

16.2.6 XML_AdminAccessProtocol
AdminAccessProtocol message in XML format
<AdminAccessProtocol version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--required, xs:string, ID--></id>
<enabled><!--optional, xs:boolean, "true,false"--></enabled>
<protocol><!--required, xs:string, protocol name:
"HTTP,HTTPS,RTSP,DEV_MANAGE,IOT,WebSocket,WebSocketS,SDK_OVER_TLS,TLS1_1Enable,TLS1_2Enable,SRTP"--></
protocol>
<portNo><!--required, xs:integer--></portNo>
<redirectToHttps>
<!--opt, xs: boolean, whether to automatically go to HTTPS when connecting to HTTP port and HTTPS is enabled-->
</redirectToHttps>
<streamOverTls>
<!--opt, xs: boolean, whether to enable TLS link encryption when the streaming mode is SDK_OVER_TLS, true-yes,
false-no-->

488

Intelligent Security API (General Application) Developer Guide
</streamOverTls>
</AdminAccessProtocol>

Remarks
"TLS1_1Enable" and "TLS1_2Enable" are not available for port configuration.

16.2.7 XML_AdminAccessProtocolList
AdminAccessProtocolList message in XML format
<AdminAccessProtocolList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<AdminAccessProtocol/><!--see details in the message of XML_AdminAccessProtocol-->
</AdminAccessProtocolList>

See Also
XML_AdminAccessProtocol

16.2.8 XML_AlgorithmsVersion
AlgorithmsVersion message in XML format
<AlgorithmsVersion version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<AlgorithmsVersionInfoList><!--opt-->
<AlgorithmsVersionInfo>
<majorVersion><!--req,xs:integer, major version No.--></majorVersion>
<minorVersion><!--req,xs: integer, minor version No.--></minorVersion>
<revisionNumber><!--req,xs: integer, revision No.--></revisionNumber>
<buildNumber><!--req,xs: integer, build No.--></buildNumber>
<versionYear><!--req,xs: integer, date: year--></versionYear>
<versionMonth><!--req,xs: integer, date: month--></versionMonth>
<versionDay><!--req,xs: integer, date: day--></versionDay>
<name>
<!--req, xs:string, algorithm library name, "faceProperties"-face attributes, "behaviorAnalysis"-behavior analysis,
"humanAttribute"-human body attributes, "faceSnap"-face capture, "faceRecognition", "faceContrast"-face picture
comparison, "peopleCounting", "faceScore"-face picture score, "personQueueDetection"-queue management,
"depthMap"-->
<name>
</AlgorithmsVersionInfo>
</AlgorithmsVersionInfoList>
</AlgorithmsVersion>

Example
AlgorithmsVersion Message Example
<AlgorithmsVersion version="2.0" xmlns="http://www.isapi.com/ver20/XMLSchema">
<AlgorithmsVersionInfoList>
<AlgorithmsVersionInfo>
<majorVersion>1</majorVersion>

489

Intelligent Security API (General Application) Developer Guide
<minorVersion>0</minorVersion>
<revisionNumber>1</revisionNumber>
<versionYear>17</versionYear>
<versionMonth>12</versionMonth>
<versionDay>12</versionDay>
<name>faceSnap</name>
</AlgorithmsVersionInfo>
<AlgorithmsVersionInfo>
<majorVersion>1</majorVersion>
<minorVersion>0</minorVersion>
<revisionNumber>0</revisionNumber>
<versionYear>17</versionYear>
<versionMonth>10</versionMonth>
<versionDay>31</versionDay>
<name>faceScore</name>
</AlgorithmsVersionInfo>
<AlgorithmsVersionInfo>
<majorVersion>3</majorVersion>
<minorVersion>4</minorVersion>
<revisionNumber>1</revisionNumber>
<versionYear>17</versionYear>
<versionMonth>12</versionMonth>
<versionDay>25</versionDay>
<name>faceContrast</name>
</AlgorithmsVersionInfo>
</AlgorithmsVersionInfoList>
</AlgorithmsVersion>

16.2.9 XML_AudioCap
AudioCap capability message in XML format
<AudioCap version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<audioInputNums><!--req, xs:integer--></audioInputNums>
<audioOutputNums><!--req, xs:integer--></audioOutputNums>
</AudioCap>

16.2.10 XML_AudioChannel
AudioChannel message in XML format
<AudioChannel version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs:string--></id>
<enabled><!--req, xs:boolean--></enabled>
</AudioChannel>

490

Intelligent Security API (General Application) Developer Guide
16.2.11 XML_AudioChannelList
AudioChannelList message in XML format
<AudioChannelList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<AudioChannel/><!--opt, see details in the message of XML_AudioChannel-->
</AudioChannelList>

See Also
XML_AudioChannel

16.2.12 XML_AudioDscriptor
AudioDscriptor message in XML format
<AudioDscriptor version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<audioCompressionType>
<!--opt, xs: string,audio encoding type: "G.711alaw,G.711ulaw,G.726,G.729,G.729a,G.
729b,PCM,MP3,AC3,AAC,ADPCM,MP2L2"-->
</audioCompressionType>
<audioSamplingRate><!--opt, xs: float, kHz--></audioSamplingRate>
</AudioDscriptor>

16.2.13 XML_AudioIn
AudioIn message in XML format
<AudioIn version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id>
<!--req, xs:string-->
</id>
<MixAudioIn>
<!--req, ro-->
<enabled>
<!--req, xs:Boolean-->
</enabled>
<audioInputType>
<!--opt, xs:string-->
</audioInputType>
<highPassFilter>
<!--req, xs:integer, unit: Hz-->
</highPassFilter>
<noiseMargin>
<!--req, xs:integer, unit: dB-->
</noiseMargin>
<AutoLimitWave>
<!--dep-->

491

Intelligent Security API (General Application) Developer Guide
<FBCEnable>
<!--req, xs:Boolean-->
</FBCEnable>
<mode>
<!--req, xs:string-->
</mode>
<filterQValue>
<!--req, xs:string-->
</filterQValue>
<staticFilterNum>
<!--req, xs:integer-->
</staticFilterNum>
</AutoLimitWave>
</MixAudioIn>
<AudioInVolumelist>
<AudioInVlome>
<type>
<!--req, xs:string, "audioInput,audioEncode"-->
</type>
<volume>
<!--req, xs:integer-->
</volume>
</AudioInVlome>
</AudioInVolumelist>
</AudioIn>

16.2.14 XML_AudioInCap
AudioInCap capability message in XML format
<AudioInCap version="2.0" xmlns="http://wwwisapiorg/ver20/XMLSchema">
<id>
<!--req, xs:string-->
</id>
<MixAudioIn>
<!--req, ro-->
<enabled opt="true,false">
<!--req, xs:Boolean-->
</enabled>
<audioInputType opt="micIn, lineIn">
<!--opt, xs:string-->
</audioInputType>
<highPassFilter
opt="0,8,16,24,31,39,47,55,63,71,79,87,94,102,110,118,126,134,142,150,157,165,173,181,189,197,205,213,220,228,
236,244,252,260,268,276,283,291,299,307,315,323,331,339,346,354,362,370,378,386,394,402,409,417,425,433,441,
449,457,465,472,480,488,496,504,512,520,528,535,543,551,559,567,575,583,591,598,606,614,622,630,638,646,654,
661,669,677,685,693,701,709,717,724,732,740,748,756,764,772,780,787,795,803,811,819,827,835,843,850,858,866,
874,882,890,898,906,913,921,929,937,945,953,961,969,976,984,992,1000" default="30">
<!--req, xs:integer, unit: Hz-->
</highPassFilter>
<noiseMargin

492

Intelligent Security API (General Application) Developer Guide
opt="1000,660,657,653,650,647,643,640,637,633,-630,627,623,620,617,613,610,607,603,600,597,593,590,587,583,5
80,577,573,570,567,563,560,557,553,550,547,543,540,537,533,530,527,523,520,517,513,510,507,503,500,497,493,4
90,487,483,480,477,473,470,467,463,460,457,453,450,447,443,440,437,433,430,427,423,420,417,413,410,407,403,4
00,397,393,390,387,383,380,377,373,370,367,363,360,357,353,350,347,343,340,337,333,330,327,323,320,317,313,3
10,307,303,300,297,293,290,287,283,280,277,273,270,267,263,260,257,253,250,247,243,240" default="30">
<!--req, xs:integer, unit: dB-->
</noiseMargin>
<AutoLimitWave>
<!--dep, audioInputType-->
<FBCEnable opt="true,false">
<!--req, xs:Boolean-->
</FBCEnable>
<mode opt="fast,general,slow" default="general">
<!--req, xs:string-->
</mode>
<filterQValue opt="40,10" default="40">
<!--req, xs:integer-->
</filterQValue>
<staticFilterNum min="0" max="12" default="0">
<!--req, xs:integer-->
</staticFilterNum>
</AutoLimitWave>
</MixAudioIn>
<AudioInVolumelist>
<AudioInVlome>
<type>
<!--req, xs:string, "audioOutput,audioEncode"-->
</type>
<volume min="0" max="127" defalut="50">
<!--req, xs:integer-->
</volume>
</AudioInVlome>
</AudioInVolumelist>
</AudioInCap>

16.2.15 XML_AudioOut
AudioOut message in XML format
<AudioOut version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs:string--></id>
<MixAudioOut>
<enabled><!--req, xs:Boolean--></enabled>
<modulatorEnbale><!--req, xs:Boolean--></modulatorEnbale>
<postFilter><!--req, xs:Boolean--></postFilter>
<limitPressure><!--req, xs:Boolean--></limitPressure>
<modulatorValue><!--req, xs:integer--></modulatorValue>
<triggerTime><!--req, xs:integer, unit: ms--></triggerTime>
<freeTime><!--req, xs:integer, unit: ms--></freeTime>
<compressThreshold><!--req, xs:integer--></compressThreshold>
<compressMode><!--req, xs:string--></compressMode>

493

Intelligent Security API (General Application) Developer Guide
<compressRate><!--req, xs:integer--></compressRate>
<recoveryGain><!--req, xs:integer--></recoveryGain>
<outputGain><!--req, xs:integer --></outputGain>
</MixAudioOut>
<AudioOutVolumelist>
<AudioOutVlome>
<type><!--req, xs:string, "audioOutput,audioDecode"--></type>
<volume><!--req, xs:integer--></volume>
</AudioOutVlome>
</AudioOutVolumelist>
</AudioOut>

16.2.16 XML_AudioOutCap
AudioOutCap capability message in XML format
<AudioOutCap xmlns="http://wwwisapiorg/ver20/XMLSchema" version="2.0" >
<id>
<!--req, xs:string-->
</id>
<MixAudioOut>
<enabled opt="true,false" >
<!--req, xs:Boolean-->
</enabled>
<modulatorEnbale opt="true,false" >
<!--req, xs:Boolean-->
</modulatorEnbale>
<postFilter opt="false,true" default="true" >
<!--req, xs:Boolean-->
</postFilter>
<limitPressure opt="false,true" default="true" >
<!--req, xs:Boolean-->
</limitPressure>
<modulatorValue min="0" max="127" default="10" >
<!--req, xs:integer-->
</modulatorValue>
<triggerTime
opt="1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,4,4,4,4,4,4,5,5,5,5,6,6,6,7,7,7,8,8,8,9,9,10,
10,11,11,12,12,13,14,15,15,16,17,18,19,20,21,23,24,25,27,29,30,32,34,36,38,41,43,46,49,52,55,59,63,67,72,76,82,87,
93,10,17,114,123,132,141,152,163,175,188,23,218,235,254,274,296,320,347,375,47,441,479,520,566,616,671,731,79
8,872" default="4" >
<!--req, xs:integer, unit: ms-->
</triggerTime>
<freeTime
opt="98,11,15,18,112,116,120,124,129,133,138,143,148,154,159,165,171,177,184,191,198,26,213,222,230,239,248,2
58,268,278,289,31,313,325,338,352,366,381,397,413,430,448,467,486,57,528,551,575,60,626,653,682,712,743,776,8
11,848,887,927,970,1014,1062,1111,1163,1218,1276,1337,142,1470,1541,1617,1697,1781,1870,1964,2063,2168,227
9,2397,2521,2653,2792,2940,3097,3263,3439,3626,3825,4035,4259,4497,4750,5020,536,5611,5936,6282,6651,7045,
7465,7914,8393,895,9452,10037,10664,11335,12053,12824,13650,14537,15489,16511,17610,18793,20065,21435,22
911,2452,26219,28073,30075,32239,34580,37114,39859,42834,46062" default="42" >
<!--req, xs:integer, unit: ms-->

494

Intelligent Security API (General Application) Developer Guide
</freeTime>
<compressThreshold opt="1,2,4,8" defalut="2" >
<!--req, xs:integer-->
</compressThreshold>
<compressMode opt="soft,hard" default="soft" >
<!--req, xs:string-->
</compressMode>
<compressRate min="0" max="127" >
<!--req, xs:integer-->
</compressRate>
<recoveryGain opt="1,2,4,8" defalut="2" >
<!--req, xs:integer-->
</recoveryGain>
<outputGain
opt="100,421,361,325,30,281,265,252,240,230,221,212,25,198,192,186,180,175,170,165,161,156,152,148,145,141,1
38,134,131,128,125,122,120,117,114,112,110,17,15,13,10,98,96,94,92,90,88,86,85,83,81,79,78,76,74,73,71,70,68,67,
65,64,62,61,60,58,57,56,54,53,52,51,49,48,47,46,45,43,42,41,40,39,38,37,36,35,34,33,32,31,30,29,28,27,26,25,24,23,
23,22,21,20,19,18,17,17,16,15,14,13,12,12,11,10,9,9,8,7,6,6,5,4,3,3,2,1,1,0" >
<!--req, xs:integer-->
</outputGain>
</MixAudioOut>
<AudioOutVolumelist>
<AudioOutVlome>
<type>
<!--req, xs:string, "audioOutput,audioEncode"-->
</type>
<volume min="0" max="127" defalut="50" >
<!--req, xs:integer-->
</volume>
</AudioOutVlome>
</AudioOutVolumelist>
</AudioOutCap>

16.2.17 XML_BadSectorsTest
BadSectorsTest message in XML format
<BadSectorsTest version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<testType><!--opt, xs: string, "full,metadata"--></testType>
</BadSectorsTest>

16.2.18 XML_BadSectorsTestStatus
BadSectorsTestStatus message in XML format
<BadSectorsTestStatus version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<diskID><!--req, xs: string--></diskID>
<MaskAreaList><!--req-->
<MaskArea><!--list-->

495

Intelligent Security API (General Application) Developer Guide
<maskAreaID><!--req, xs: integer--></maskAreaID>
<startLBA><!--opt,xs:integer--></startLBA>
<endLBA><!--opt, xs: integer--></endLBA>
</MaskArea>
</MaskAreaList>
<BlockAreaTestStatus><!--opt-->
<testType><!--opt, xs: string, "full,metadata"--></testType>
<testStatus><!--req, xs: string, "none,running,pause,complete,exceed,abort"--></testStatus>
<fistBlock><!--opt, xs: integer--></fistBlock>
<lastBlock><!--opt, xs: integer--></lastBlock>
<currentBlock><!--opt, xs: integer--></currentBlock>
<BadSectorsList><!--opt-->
<BadSectors><!--list-->
<id><!--req, xs: integer--></id>
<block><!--opt, xs: integer--></block>
</BadSectors>
</BadSectorsList>
</BlockAreaTestStatus>
</BadSectorsTestStatus>

16.2.19 XML_BatteryPowerOverlay
BatteryPowerOverlay message in XML format
<BatteryPowerOverlay version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled><!--req, xs:boolean--></enabled>
<positionX><!--req, xs:integer, X-coordinate--></positionX>
<positionY><!--req, xs:integer, Y-coordinate--></positionY>
</BatteryPowerOverlay>

16.2.20 XML_BLC
BLC message in XML format
<BLC version="2.0" xmlns="http://www.isapi.com/ver20/XMLSchema">
<enabled/><!--req, xs: boolean-->
<BLCMode/><!--opt, xs: string, BLC mode: "UP, DOWN, LEFT, RIGHT, CENTER, MULTI-AREA, Region"-->
<BLCLevel><!--opt, xs: integer--></BLCLevel>
<BLCRegionList><!--dep-->
<BLCRegion>
<id><!--req, xs: integer--></id>
<RegionCoordinatesList/>
</BLCRegion>
</BLCRegionList>
</BLC>

496

Intelligent Security API (General Application) Developer Guide
16.2.21 XML_BluetoothCap
BluetoothCap capability message in XML format
<BluetoothCap version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<isSupportIbeacon>
<!--opt, xs:boolean, whether to support configuring ibeacon bluetooth parameters-->
</isSupportIbeacon>
</BluetoothCap>

16.2.22 XML_BluetoothStatus
BluetoothStatus message in XML format
<BluetoothStatus version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<connectStatus><!--opt, xs:boolean--></connectStatus>
<connectDeviceName><!--opt, xs:string--></connectDeviceName>
</BluetoothStatus>

16.2.23 XML_Bond
Bond message in XML format
<Bond version="2.0" xmlns="urn:selfextension:ISAPIext-ver10-xsd">
<id>
<!--req, xs:integer-->
</id>
<enabled>
<!--req, xs:boolean-->
</enabled>
<workMode>
<!--req, xs:string, working mode: "balance-rr"-round-robin, "active-backup"-->
</workMode>
<primaryIf>
<!--req, xs:string, default route ID-->
</primaryIf>
<slaveIfList>
<!--req-->
<ethernetIfId>
<!--req, xs:string, ID-->
</ethernetIfId>
</slaveIfList>
<IPAddress>
<ipVersion>
<!--req, xs:string, "v4,v6,dual"-->
</ipVersion>
<addressingType>
<!--req, xs:string, "static,dynamic,apipa"-->

497

Intelligent Security API (General Application) Developer Guide
</addressingType>
<ipAddress>
<!--dep, xs:string-->
</ipAddress>
<subnetMask>
<!--dep, xs:string, subnet mask for IPv4 address-->
</subnetMask>
<ipv6Address>
<!--dep, xs:string-->
</ipv6Address>
<bitMask>
<!--dep, xs:integer, bitmask for IPv6 address-->
</bitMask>
<DefaultGateway>
<!--dep-->
<ipAddress>
<!--dep, xs:string-->
</ipAddress>
<ipv6Address>
<!--dep, xs:string-->
</ipv6Address>
</DefaultGateway>
<PrimaryDNS>
<!--dep-->
<ipAddress>
<!--dep, xs:string-->
</ipAddress>
<ipv6Address>
<!--dep, xs:string-->
</ipv6Address>
</PrimaryDNS>
<SecondaryDNS>
<!--dep-->
<ipAddress>
<!--dep, xs:string-->
</ipAddress>
<ipv6Address>
<!--dep, xs:string-->
</ipv6Address>
</SecondaryDNS>
</IPAddress>
</Bond>

16.2.24 XML_BondList
BondList message in XML format
<BondList version="2.0" xmlns="urn:selfextension:ISAPIext-ver10-xsd">
<Bond/><!--see details in the message of XML_Bond-->
</BondList>

498

Intelligent Security API (General Application) Developer Guide
See Also
XML_Bond

16.2.25 XML_BurningPreventionCap
BurningPreventionCap message in XML format
<BurningPreventionCap version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled opt="rue,false"><!--req, xs:boolean--></enabled>
<mode opt="manual,automatic"><!--opt, xs:string, mode: manual, automatic--></mode>
<closedDuration min="5" max="60" default="10">
<!--opt, xs:integer, closed status duration, unit: second-->
</closedDuration>
<shutterStatus opt="closed,open"><!--opt, xs:string, shutter status: closed, open--></shutterStatus>
<protectionMode opt="lensMovement,shutterClose">
<!--opt, xs:string, protection mode: lensMovement-lens movement, shutterClose-close shutter-->
</protectionMode>
<burningRecoveryEnabled opt="true,false">
<!--opt, xs:boolean, enable burning recovery or not-->
</burningRecoveryEnabled>
<movementDuration min="" max="" default="">
<!-- opt, xs:integer, duration of lens movement for burning protection, unit: minute-->
</movementDuration>
</ BurningPreventionCap>

Remarks
• When protectionMode is "lensMovement", the node movementDuration is valid.
• When protectionMode is "shutterClose", the node closedDuration, shutterStatus, and
burningRecoveryEnabled are valid.
• When mode is "automatic", the shutter is open, and cannot be configured.

16.2.26 XML_Cap_accessDeviceList
accessDeviceList capability message in XML format
<accessDeviceList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<accessDevice size="4">
<id><!--req, xs:integer--></id>
<MACAddress><!--opt, xs:string--></MACAddress>
<ipV4Address><!--opt, xs:string--></ipV4Address>
<accessTime><!--req, xs:time, ISO8601 data--></accessTime>
</accessDevice>
</accessDeviceList>

499

Intelligent Security API (General Application) Developer Guide
16.2.27 XML_Cap_AcsUpdate
AcsUpdate capability message in XML format
<AcsUpdate version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<type
opt="cardReader,FPModule,securityModule,extendModule,channelController,IRModule,lampModule,elevatorControll
er,FPAlgorithmProgram,uboot,keypad,wirelessRecv,wiredZone">
<!--opt, upgrading type: "cardReader"-card reader, "FPModule"-fingerprint module, "securityModule"-secure door
control unit, "extendModule"-(IO) extension module, "channelController"-lane controller, "IRModule"-IR module,
"lampModule"-indicator module, "elevatorController"-slave elevator controller, "FPAlgorithmProgram"-fingerprint
algorithm program of the card reader, "uboot", "keypad", "wirelessRecv"-wireless receiving module, "wiredZone"wired zone module-->
</type>
<cardReaderNo min="" max="">
<!--opt, range of No. of the card reader, this node is valid only when <type> contains "cardReader"-->
</cardReaderNo>
<FPModuleNo min="" max="">
<!--opt, range of No. of the fingerprint module, this node is valid only when <type> contains "FPModule"-->
</FPModuleNo>
<securityModuleNo min="" max="">
<!--opt, range of No. of the secure door control module, this node is valid only when <type> contains
"securityModule"-->
</securityModuleNo>
<extendModuleNo min="" max="">
<!--opt, range of No. of the (IO) extension module, this node is valid only when <type> contains "extendModule"-->
</extendModuleNo>
<channelControllerNo min="" max="">
<!--opt, range of No. of the lane controller, this node is valid only when <type> contains "channelController"-->
</channelControllerNo>
<IRModuleNo min="" max="">
<!--opt, range of No. of the IR module, this node is valid only when <type> contains "IRModule"-->
</IRModuleNo>
<lampModuleNo min="" max="">
<!--opt, range of No. of the indicator module, this node is valid only when <type> contains "lampModule"-->
</lampModuleNo>
<elevatorControllerNo min="" max="">
<!--opt,range of No. of the slave elevator controller, this node is valid only when <type> contains
"elevatorController"-->
</elevatorControllerNo>
<FPAlgorithmProgramNo min="" max="">
<!--opt, range of No. of the fingerprint algorithm program of the card reader, this node is valid only when <type>
contains "FPAlgorithmProgram"-->
</FPAlgorithmProgramNo>
<keypadAddress opt="1,3,5">
<!--opt, range of keypad module address, this node is valid when <type> contains "keypad"-->
</keypadAddress>
<wirelessRecvAddress opt="1,3,5">
<!--opt, range of wireless receiving module address, this node is valid when <type> contains "wirelessRecv"-->
</wirelessRecvAddress>
<wiredZoneAddress opt="1,3,5">

500

Intelligent Security API (General Application) Developer Guide
<!--opt, range of wired zone module address, this node is valid when <type> contains "wiredZone"-->
</wiredZoneAddress>
</AcsUpdate>

16.2.28 XML_Cap_AdminAccessProtocolList
AdminAccessProtocol capability message in XML format
<AdminAccessProtocolList version="1.0" xmlns="http://www.isapi.com/ver20/XMLSchema">
<AdminAccessProtocol><!--multiple <AdminAccessProtocol> nodes are allowed-->
<id><!--req, xs: string, ID--></id>
<enabled opt="true,false"><!--opt, xs: boolean--></enabled>
<protocol opt="HTTP,HTTPS,SDK,RTSP,DEV_MANAGE,WebSocket,WebSocketS,SDK_OVER_TLS,SRTP">
<!--req, xs: string-->
</protocol>
<portNo min="2000" max="65535" default="8443"><!--req, xs:integer --></portNo>
<redirectToHttps opt="true,false">
<!--opt, xs: boolean, whether to automatically go to HTTPS when connecting to HTTP port and HTTPS is enabled-->
</redirectToHttps>
<streamOverTls opt="true,false">
<!--opt, xs: boolean, whether to enable TLS link encryption when the streaming mode is SDK_OVER_TLS, true-yes,
false-no-->
</streamOverTls>
</AdminAccessProtocol>
<TLS1_0Enable opt="true,false">
<!--dep, xs: boolean, whether to enable TLS version 1.0, it is valid when protocol is "HTTPS", "true"-yes, "false"-no-->
</TLS1_0Enable>
<TLS1_1Enable opt="true,false">
<!--dep, xs: boolean, whether to enable TLS version 1.1, it is valid when protocol is "HTTPS", "true"-yes, "false"-no-->
</TLS1_1Enable>
<TLS1_2Enable opt="true,false">
<!--dep, xs: boolean, whether to enable TLS version 1.2, it is valid when protocol is "HTTPS", "true"-yes, "false"-no-->
</TLS1_2Enable>
</AdminAccessProtocolList>

16.2.29 XML_Cap_BatteryPowerOverlay
BatteryPowerOverlay capability message in XML format
<BatteryPowerOverlay version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled>
<!--req, xs:boolean-->
</enabled>
<positionX>
<!--req, xs:integer, X-coordinate-->
</positionX>
<positionY>
<!--req, xs:integer, Y-coordinate-->

501

Intelligent Security API (General Application) Developer Guide
</positionY>
</BatteryPowerOverlay>

16.2.30 XML_Cap_Color
Color capability message in XML format
<?xml version="1.0" encoding="utf-8"?>
<Color version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<brightnessLevel min="" max=""><!--opt,xs:integer, brightness--></brightnessLevel>
<contrastLevel min="" max=""><!--opt,xs:integer, contrast--></contrastLevel>
<saturationLevel min="" max=""><!--opt,xs:integer, saturation--></saturationLevel>
<hueLevel min="" max=""><!--opt, xs:integer, hue--></hueLevel>
<grayScale><!--opt, gray scale-->
<grayScaleMode><!--opt,xs:string, gray scale mode: "indoor,outdoor"--></grayScaleMode>
</grayScale>
<nightMode opt="true,false">
<!--opt, xs:boolean, enable night mode, when its value is "true", the saturation can be adjusted, otherwise, the
saturation cannot be adjusted-->
</nightMode>
</Color>

16.2.31 XML_Cap_DatetimeOverlay
DatetimeOverlay capability message in XML format
<DateTimeOverlay version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled>
<!--req, xs:boolean, whether to enable date and time overlay-->
</enabled>
<positionX min="0" max="1000">
<!--req, xs:integer, X-coordinate-->
</positionX>
<positionY min="0" max="1000">
<!--req, xs:integer, Y-coordinate-->
</positionY>
<dateStyle>
<!--opt, xs:string, date format: "YYYY-MM-DD, MM-DD-YYYY, DD-MM-YYYY, CHR-YYYY-MM-DD, CHR-MM-DD-YYYY,
CHR-DD-MM-YYYY"-->
</dateStyle>
<timeStyle>
<!--opt, xs:string, "12hour, 24hour"-->
</timeStyle>
<displayWeek>
<!--opt, xs:boolean, whether to display week information-->
</displayWeek>
<displayMilliSecond>
<!--opt, xs:boolean, whether to display millisecond-->

502

Intelligent Security API (General Application) Developer Guide
</displayMilliSecond>
</DateTimeOverlay>

16.2.32 XML_Cap_DDNS
DDNS capability message in XML format
<DDNS version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id>
<!--req, xs: string-->
</id>
<enabled>
<!--req, xs:boolean, "true,false"-->
</enabled>
<ethernetIfId opt="1,2,3…">
<!--opt, xs:string, ID-->
</ethernetIfId>
<provider opt="IPServer,DynDNS,PeanutHall,NO-IP, HiDDNS">
<!--req, xs:string-->
</provider>
<serverAddress>
<addressingFormatType opt="ipaddress,hostname">
<!--req, xs:string-->
</addressingFormatType>
<hostname min="0" max="260">
<!--dep, xs:string-->
</hostName>
<ipAddress min="0" max="64">
<!--dep, xs:string-->
</ipAddress>
<ipv6Address min="0" max="64">
<!--dep, xs:string-->
</ipv6Address>
</serverAddress>
<portNo min="0" max="65535">
<!--opt, xs:integer-->
</portNo>
<deviceDomainName min="0" max="64">
<!--dep, xs:string-->
</deviceDomainName>
<username min="0" max="32">
<!--dep, xs:string-->
</userName>
<password min="0" max="16">
<!--wo, dep, xs:string-->
</password>
</DDNS>

503

Intelligent Security API (General Application) Developer Guide
16.2.33 XML_Cap_DeviceInfo
DeviceInfo capability message in XML format
<DeviceInfo version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<deviceName min="" max="">
<!--req, xs:string, device name-->
</deviceName>
<languageType opt="chinese,english,spanish,portuguese,italian,french,russian,german,polish"/><!--opt, xs:string-->
<deviceID min="0" max="128">
<!--ro, req, xs:string, uuid-->
</deviceID>
<deviceDescription min="0" max="16">
<!--opt, xs:string-->
</deviceDescription>
<deviceLocation opt="STD-CGI, hangzhou">
<!--opt, xs:string-->
</deviceLocation>
<systemContact opt="STD-CGI, Hikvision.China">
<!--opt, req, xs:string-->
</systemContact>
<model min="0" max="64">
<!--ro, req, xs:string-->
</model>
<serialNumber min="0" max="48">
<!--ro, req, xs:string-->
</serialNumber>
<macAddress min="0" max="64">
<!--ro, req, xs:string-->
</macAddress>
<firmwareVersion min="0" max="64">
<!--ro, req, xs:string-->
</firmwareVersion>
<firmwareReleasedDate min="0" max="64">
<!--ro, opt, xs:string-->
</firmwareReleasedDate>
<bootVersion min="0" max="16">
<!--ro, opt, xs:string-->
</bootVersion>
<bootReleasedDate min="0" max="16">
<!--ro, opt, xs:string-->
</bootReleasedDate>
<hardwareVersion min="0" max="16">
<!--ro, opt, xs:string-->
</hardwareVersion>
<encoderVersion min="0" max="64">
<!--ro, opt, xs:string-->
</encoderVersion>
<encoderReleasedDate min="0" max="64">
<!--ro, opt, xs:stirng-->
</encoderReleasedDate>

504

Intelligent Security API (General Application) Developer Guide
<decoderVersion min="0" max="64">
<!--ro, opt, xs:string-->
</decoderVersion>
<decoderReleasedDate min="0" max="64">
<!--ro, opt, xs:stirng-->
</decoderReleasedDate>
<deviceType opt="IPCamera, IPDome, DVR, HybirdNVR, NVR, DVS, IPZoom">
<!--ro, req, xs:string-->
</deviceType>
<telecontrolID min="1" max="255">
<!--opt, xs:integer, "1-255"-->
</telecontrolID>
<supportBeep>
<!--opt, xs:boolean: "true,false"-->
</supportBeep>
<firmwareVersionInfo>
<!--ro, opt, xs:stirng-->
</firmwareVersionInfo>
<subChannelEnabled>
<!--opt, xs:boolean: "true,false"-->
</subChannelEnabled>
<thrChannelEnabled>
<!--opt, xs:boolean: "true,false"-->
</thrChannelEnabled>
<actualFloorNum>
<!--req, xs:integer, "1-128"-->
</actualFloorNum>
<radarVersion>
<!--opt, xs:string, radar version-->
</radarVersion>
<powerOnMode opt="button,adapter" def="button">
<!--optional, xs:string, device startup mode: "button"-press button to power on (default), "adapter"-connect
adapter to power on-->
</powerOnMode>
</DeviceInfo>

16.2.34 XML_Cap_DefaultParam
DefaultParam capability message in XML format
<DefaultParam version="1.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<DialNum min="1" max="32"><!--opt, xs:string--></DialNum>
<Username min="1" max="32"><!--opt, xs:string--></Username>
<Password min="1" max="32"><!--opt, xs:string--></Password>
<APNname min="1" max="32"><!--opt, xs:string--></APNname>
<VerifyProto opt="auto,CHAP,PAP"><!--req, xs:string, verification protocol: "auto, CHAP, PAP"--></VerifyProto>
</DefaultParam>

505

Intelligent Security API (General Application) Developer Guide
16.2.35 XML_Cap_Dial
Dial capability message in XML format
<Dial version="1.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled opt="true,false" def="false"><!--req, xs:boolean--></enabled>
<DialMethod opt="auto,manual"><!--req, xs:string, "auto, manual"--></DialMethod>
<SwitchMethod opt="auto,4GFirst,3GFirst,manualto2G,manualto3G,manualto4G,cableFirst">
<!--req, xs:string, "auto,4GFirst,3GFirst, manualto2G, manualto3G,manualto4G,cableFirst"-->
</SwitchMethod>
<OfflineTime min="30" max="65535"><!--opt, xs:integer, unit: second--></OfflineTime>
<UIMCardNum min="1" max="32"><!--opt, xs:string--></UIMCardNum>
<DialNum min="1" max="32"><!--opt, xs:string--></DialNum>
<Username min="1" max="32"><!--opt, xs:string--></Username>
<Password min="1" max="32"><!--opt, xs:string--></Password>
<APNname min="1" max="32"><!--opt, xs:string--></APNname>
<SIMNum min="" max=""><!--opt, xs:string, SIM card No. (mobile phone number)--></SIMNum>
<MTU min="100" max="1500"><!--opt, xs: integer--></MTU>
<VerifyProto opt="auto,CHAP,PAP"><!--req, xs:string, verification protocol: "auto, CHAP, PAP"--></VerifyProto>
<DefaultParam/><!--opt, default parameters, see details in the message of XML_Cap_DefaultParam-->
<netAPN min="" max=""/><!--opt, xs:string, APN configuration for the private network-->
<Flow><!--opt, flow configuration-->
<limitEnabled opt="true,false"><!--opt, xs:boolean, whether to enable flow limitation--></limitEnabled>
<consumeFlow opt="true,false"><!--opt, xs:boolean, whether supports displaying flow usage, unit: MB--></
consumeFlow>
<threshold min="" max=""><!--opt, threshold of flow, unit: MB--></threshold>
</Flow>
</Dial>

See Also
XML_Cap_DefaultParam

16.2.36 XML_Cap_Discovery
Discovery capability message in XML format
<Discovery version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<UPnP><!--req-->
<enabled><!--req, xs:boolean, "true, false"--></enalbed>
</UPnP>
<ZeroConf><!--opt, channel-zero configuration-->
<enabled><!--req, xs:boolean, "true, false"--></enabled>
</ZeroConf>
</Discovery>

506

Intelligent Security API (General Application) Developer Guide
16.2.37 XML_Cap_EagleFocusing
EagleFocusing capability message in XML format
<?xml version="1.0" encoding="utf-8"?>
<EagleFocusing version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req,xs:string--></id>
<enabled opt="true,false"><!--req, xs:boolean, "true"-start calibration, "false"-stop calibration--></enabled>
<normalizedScreenSize><!--req,ro-->
<normalizedScreenWidth><!--req,ro,xs:integer--></normalizedScreenWidth>
<normalizedScreenHeight><!--req,ro,xs:integer--></normalizedScreenHeight>
</normalizedScreenSize>
<EagleFocusingRegionList><!--opt-->
<EagleFocusingRegion><!--list-->
<id><!--req, xs:string--></id>
<sid><!--opt,xs:string, scene ID--></sid>
<rate><!--opt,xs:integer, rate--></rate>
<spotNum><!--opt,xs:integer, the number of calibration points--></spotNum>
<type><!--req,xs:string,"line", region type, now only supports "line"--></type>
<Region><!--dep, depends on type-->
<RegionCoordinatesList size="4"><!--opt-->
<RegionCoordinates><!--list-->
<positionX><!--req,xs:integer,coordinate--></positionX>
<positionY><!--req,xs:integer,coordinate--></positionY>
</RegionCoordinates>
</RegionCoordinatesList>
</Region>
</EagleFocusingRegion>
</EagleFocusingRegionList>
<sceneNum min="" max=""><!--opt,xs:integer, the maximum number of supported scenes--></sceneNum>
<isSupportSceneGoto opt="true,false"><!--opt,xs:boolean, whether device supports turning to specified scene--></
isSupportSceneGoto>
<rate min="" max=""><!--opt,xs:integer, rate--></rate>
<spotNum min="" max=""><!--opt,xs:integer, the number of calibration points on line--></spotNum>
<onlyReadParam opt="rate,spotNum"><!--opt,xs:string,"rate,spotNum"--></onlyReadParam>
<isSupportAuto opt="true,false"><!--req,xs:boolean, whether device supports automatic calibration of rapid focus-></isSupportAuto>
</EagleFocusing>

16.2.38 XML_Cap_EHome
EHome capability message in XML format
<Ehome version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id min="1" max="1"><!--opt, xs:string, EHome center ID--></id>
<GPRSAddressingFormatType opt="ipaddress"><!--opt, xs:string, GPRS address type. If this node is not returned, the
address type will be determined by addressingFormatType which indicates that the address types configured by
different networks do not need to be distinguished--></GPRSAddressingFormatType>
<addressingFormatType opt="ipaddress,hostname"><!--req, xs:string--></addressingFormatType>

507

Intelligent Security API (General Application) Developer Guide
<hostName min="" max=""><!--dep, xs:string, domain name--></hostName>
<ipAddress min="" max=""><!--dep, xs:string--></ipAddress>
<ipv6Address min="" max=""><!--dep, xs:string--></ipv6Address>
<portNo min="" max=""><!--opt, xs:integer--></portNo>
<deviceID min="" max=""><!--req, xs:string--></deviceID>
<registerStatus min="" max=""><!--ro, xs:boolean--></registerStatus>
<key min="" max=""><!--opt, xs:string, EHome encryption key--></key>
<version min="" max=""><!--ro, xs:string--></version>
<netWork opt="0,1,2,3,4"/><!--opt,xs:integer, 0-make no sense, 1-automatic, 2-wired network preferred, 3-wired
network, 4-3G/4G/GPRS-->
<voiceDeviceType opt="bluetooth,client"><!--opt, xs:string, two-way audio device type: "bluetooth", "client"--></
voiceDeviceType>
<protocolVersion opt="v2.0,v2.6,v4.0,v5.0"><!--opt, xs:string, protocol type. If this node is set to "v2.0", the device
can only use protocol v2.0 to register; if this node is set to "v2.6", "v4.0" or "v5.0", the device will firstly use this
protocol to register. If this node is not returned, the protocol version will be determined by <version>--></
protocolVersion>
</Ehome>

16.2.39 XML_Cap_ExtraInfo
ExtraInfo capability message in XML format
<ExtraInfo version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<diskMode opt="singleDisk,RAID"><!--req, xs:string, disk mode: "singleDisk"-single disk, "RAID". The device needs to
reboot after changing the disk mode--></diskMode>
</ExtraInfo>

16.2.40 XML_Cap_FocusConfiguration
FocusConfiguration capability message in XML format
<FocusConfiguration>
<focusStyle opt="AUTO,MANUAL,SEMIAUTOMATIC"><!--req, xs:string--></focusStyle>
<focusLimited opt="50,100,300,600,1000,2000,5000,10000,15000" def="1000"><!--opt, xs:integer--></focusLimited>
<focusPosition/><!--dep, xs:integer, depends on FocusStyle-->
<focusSpeed><!--opt, xs:intger--></focusSpeed>
<focusSensitivity min="0" max="2" def="1"><!--opt, xs:intger, sensitivity of focus, ranging from 0 to 2. It is valid when
the focus mode is automatic or semi-automatic--></focusSensitivity>
<temperatureChangeAdaptEnabled opt="true,false"--><!--opt, xs:boolean--></temperatureChangeAdaptEnabled>
<relativeFocusPos min="0" max="4000" def=""><!--opt, xs:intger--></relativeFocusPos>
<highTemperaturePriority opt="true,false"><!--opt, xs:boolean, enable high temperature priority mode--></
highTemperaturePriority>
</FocusConfiguration>

16.2.41 XML_Cap_FTPNotification
FTPNotification capability message in XML format

508

Intelligent Security API (General Application) Developer Guide
<FTPNotification version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id>
<!--req, xs:string, FTP ID-->
</id>
<enabled>
<!--req, xs:boolean, whether to enable the FTP server-->
</enabled>
<useSSL>
<!--opt, xs:boolean-->
</useSSL>
<addressingFormatType opt="ipaddress,hostname">
<!--req, xs:string, this node can only be set to "ipaddress"-->
</addressingFormatType>
<hostName>
<!--dep, xs:string-->
</hostName>
<ipAddress>
<!--dep, xs:string-->
</ipAddress>
<ipv6Address>
<!--dep, xs:string-->
</ipv6Address>
<portNo>
<!--opt, xs:integer, FTP port No.-->
</portNo>
<userName>
<!--req, xs:string, user name-->
</userName>
<password>
<!--wo, xs:string, password-->
</password>
<passiveModeEnabled>
<!--opt, xs:boolean-->
</passiveModeEnabled>
<annoyftp>
<!--opt, xs:boolean-->
</annoyftp>
<uploadPicture>
<!--opt, xs:boolean-->
</uploadPicture>
<uploadVideoClip>
<!--opt, xs:boolean-->
</uploadVideoClip>
<uploadPath>
<!--req-->
<pathDepth>
<!--req, xs:integer, directory levels, up to 16 levels can be supported-->
</pathDepth>
<topDirNameRule opt="none, devName, devId, devIp, positionInfo, time_month, time_date, illegalType, direction,
site, chanName, chanId, laneId, customize ,time, buildUnitNo">
<!--dep, xs:string, parent directory name: "none", "devName"-device name, "devId"-device ID, "devIp"-device IP
address, "positionInfo"-camera 1, "time_month"-usage date (YYYY-MM), "time_date"-usage date (YYYY-MM-DD),

509

Intelligent Security API (General Application) Developer Guide
"illegalType"-violation type, "direction"-direction, "site"-place, "chanName"-channel name, "chanId"-channel No.,
"laneId"-lane No., "customize"-custom, "time", "buildUnitNo"-building No. and unit No. This node is set to NULL by
default-->
</topDirNameRule>
<topDirName min="" max="">
<!--dep, xs:string, custom string for parent directory, the maximum string length is 32 bytes. This node is valid
when <topDirNameRule> is "customize". If attributes of "min" and "max" are not obtained after parsing, the default
value will be returned without error message-->
<topDirName/><!--dep, xs:string, custom string for parent directory, the maximum string length is 32 bytes. This
node is valid when <topDirNameRule> is "customize"-->
<subDirNameRule opt="none, devName, devId, devIp, positionInfo, time_month, time_date, illegalType, direction,
site, chanName, chanId, laneId, customize ,time, buildUnitNo">
<!--dep, xs:string, child directory name-->
</subDirNameRule>
<subDirName min="" max="">
<!--dep, xs:string, custom string for child directory, the maximum string length is 32 bytes. This node is valid when
<subDirNameRule> is "customize". If attributes of "min" and "max" are not obtained after parsing, the default value
will be returned without error message-->
<subDirName/><!--dep, xs:string, custom string for child directory, the maximum string length is 32 bytes. This node
is valid when <subDirNameRule> is "customize"-->
<threeDirNameRule opt="none, devName, devId, devIp, positionInfo, time_month, time_date, illegalType, direction,
site, chanName, chanId, laneId, customize ,time, buildUnitNo">
<!--dep, xs:string, the third directory name-->
</threeDirNameRule>
<threeDirName/><!--req, xs:string, custom string for the third directory, the maximum string length is 32 bytes. This
node is valid when <threeDirNameRule> is "customize"-->
<fourDirNameRule opt="none, devName, devId, devIp, positionInfo, time_month, time_date, illegalType, direction,
site, chanName, chanId, laneId, customize ,time, buildUnitNo">
<!--dep, xs:string, the fourth directory name-->
</fourDirNameRule>
<fourDirName/><!--req, xs:string, custom string for the fourth directory, the maximum string length is 32 bytes. This
node is valid when <fourDirNameRule> is "customize"-->
</uploadPath>
<picArchivingInterval min="" max="">
<!--opt, xs:integer, the value is between 1 and 30, 0-close-->
</picArchivingInterval>
<picNameRuleType opt="default,prefix">
<!--opt, xs:string-->
</picNameRuleType>
<picNamePrefix min="0" max="32">
<!--dep, xs:string-->
</picNamePrefix>
<ftpPicNameRuleType opt="videoIntercom,ITC">
<!--req, xs:string, type of FTP picture name rule: "videoIntercom"-rule used by video intercom products, "ITC"-rule
used by traffic cameras-->
</ftpPicNameRuleType>
<FTPPicNameRule>
<!--dep, picture name rule of a specific FTP-->
<ItemList/><!--req, see details in the message of XML_Cap_ItemList-->
<delimiter>
<!--req, xs:string, delimiter, which is a single character and the default value is "_"-->
</delimiter>

510

Intelligent Security API (General Application) Developer Guide
<customStr min="1" max="128">
<!--req, xs:string, custom string-->
</customStr>
</FTPPicNameRule>
<upDataType opt="0,1,2">
<!-- opt, xs:integer, picture uploading type: 0-all, 1-checkpoint, 2-violation. When only one FTP server is enabled,
this node can only be set to 0. When two FTP servers are both enabled, you should set 1 for one FTP server and set 2
for another FTP server, which means that two FTP servers cannot be set to the same type-->
</upDataType>
<uploadPlateEnable>
<!--opt, xs:boolean, whether to enable uploading license plate thumbnail-->
</uploadPlateEnable>
<site min="1" max="128">
<!--req, xs:string, place, the maximum string length is 128 bytes-->
</site>
<roadNum min="1" max="32">
<!--req, xs:string, intersection No., the maximum string length is 32 bytes-->
</roadNum>
<instrumentNum min="1" max="32">
<!--req, xs:string, device No., the maximum string length is 32 bytes-->
</instrumentNum>
<direction min="1" max="32">
<!--req, xs:string, direction No., the maximum string length is 32 bytes-->
</direction>
<directionDesc min="1" max="32">
<!--req, xs:string, direction description, the maximum string length is 32 bytes-->
</directionDesc>
<monitoringInfo1 min="1" max="44">
<!--req, xs:string, camera 1 information, the maximum string length is 44 bytes-->
</monitoringInfo1>
<uploadAttachedInfomation>
<!--req, xs:boolean, whether to upload additional information-->
</uploadAttachedInfomation>
<BrokenNetHttp><!--opt, whether it supports ANR (automatic network replenishment)-->
<enabled opt="true,false"><!--opt, xs:boolean, whether to enable ANR (automatic network replenishment)--></
enabled>
<supportEventType opt="personQueueCounting"/><!--opt, xs:string, event types supporting FTP ANR:
"personQueueCounting"-person queue counting detection, "personQueueTime"-person queue time detection,
"personQueueRealTimeData"-upload real-time data of person queue counting detection, "faceCapture"-face capture
and recognition, "fieldDetection"-intrusion, "attendedBaggage"-object removal, "unattendedBaggage"-unattended
baggage, "regionExiting"-region exiting, "regionEntrance"-region entrance, "lineDetection"-line crossing detection-->
</BrokenNetHttp>
</FTPNotification>

See Also
XML_Cap_ItemList

16.2.42 XML_Cap_FTPNotificationList
FTPNotificationList capability message in XML format

511

Intelligent Security API (General Application) Developer Guide
<FTPNotificationList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<FTPNotification/><!--opt, see details in the message of XML_Cap_FTPNotification-->
</FTPNotificationList>

See Also
XML_Cap_FTPNotification

16.2.43 XML_Cap_GuardAgainstTheft
GuardAgainstTheft capability message in XML format
<GuardAgainstTheft version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled opt="true,false"><!--required, xs:boolean, whether it supports enabling device anti-theft--></enabled>
<SMSEnabled opt="true,false"><!--required, xs:boolean, whether it supports enabling SMS--></SMSEnabled>
<phoneNum min="0" max="32"><!--dependency, xs:string, phone No.--></phoneNum>
<longitudeLatitudeEnabled opt="true,false"><!--dependency, xs:boolean, whether it supports enabling longitude and
latitude--></longitudeLatitudeEnabled>
<siteLocationEnabled opt="true,false"><!--dependency, xs:boolean, whether it supports enabling site location--></
siteLocationEnabled>
<siteLocationInfo min="0" max="128"><!--dependency, xs:string, site location information--></siteLocationInfo>
<timeEnabled opt="true,false"><!--dependency, xs:boolean, whether it supports enabling time--></timeEnabled>
<customInfo min="0" max="128"><!--dependency, xs:string, custom information--></customInfo>
</GuardAgainstTheft>

16.2.44 XML_Cap_HardwareService
HardwareService capability message in XML format
<HardwareService version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<IrLightSwitch><!--opt-->
<mode opt="open,close"><!--req, xs:string --></mode>
</IrLightSwitch>
<ABF><!--opt-->
<enabled><!--req, xs:boolean --></enabled>
</ABF>
<LED><!--opt-->
<enabled><!--req, xs:boolean --></enabled>
</LED>
<Defog><!--opt-->
<enabled><!--req, xs:boolean --></enabled>
</Defog>
<SupplementLight><!--opt-->
<enabled><!--req, xs:boolean --></enabled>
<isSupportFireLaserLight opt="true,false"><!--opt,xs:boolen--></isSupportFireLaserLight>
<isSupportSupplementLightWord opt="true,false"><!--opt,xs:boolen--></isSupportSupplementLightWord>
<captureWithSupplimentLightEnabled opt="true,false">
<!--opt, xs:boolean, enable snapshot supplement light or not-->
</captureWithSupplimentLightEnabled>

512

Intelligent Security API (General Application) Developer Guide
</SupplementLight>
<Deicing><!--opt-->
<enabled><!--req, xs:boolean --></enabled>
</Deicing>
<ManualDeicing><!--opt-->
<enabled><!--req, xs:boolean --></enabled>
</ManualDeicing>
<mutexAbility opt="laserLight, deicing">
<!--req, mutual exclusion ability, the laser light and deicing (including manual deicing and automatic deicing) are
mutual exclusive-->
</mutexAbility>
<HighTemperatureProtection><!--opt-->
<enabled><!--req, xs:boolean --></enabled>
<temperatureType opt="90,100,110" def="90"><!--dep, xs:string,unit:℃ --></temperatureType>
</HighTemperatureProtection>
</HardwareService>

16.2.45 XML_Cap_hddList
hddList capability message in XML format
<hddList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema" size="">
<hdd><!--list-->
<id><!--ro, req, xs: string; ID--></id>
<hddName><!--ro, req, xs: string--></hddName>
<hddPath><!--ro, opt, xs: string--></hddPath>
<hddType opt="IDE,SATA,eSATA,NFS,iSCSI,Virtual Disk"><!--ro, req, xs: string--></hddType>
<status
opt="ok,unformatted,error,idle,mismatch,offline,smartFailed,reparing,formating,notexist,unRecordHostFormatted">
<!--ro, req, xs: string, unRecordHostFormatted--unformatted in education sharing system-->
</status>
<capacity><!--ro, req, xs: float, unit: MB--></capacity>
<freeSpace><!--ro, req, xs: float, unit: MB--></freeSpace>
<property opt="RW,RO,Redund"><!--req, xs: string, HDD properties--></property>
<group><!--opt, xs: string; HDD group ID--></group>
<DataModeList><!--opt, ro, current HDD allocation mode-->
<DataMode>
<type opt="recordStorage,pictureCloudStorage,fileStorage">
<!--req, xs: string, storage application type, recordStorage-video storage, pictureCloudStorage-picture to be
saved in cloud storage, fileStorage-file-storage->
</type>
<occupancyRate><!--req, xs: integer, HDD usage, range: [0,100]--></occupancyRate>
</DataMode>
</DataModeList>
<formatType opt="FAT32,EXT4" def="FAT32">
<!--ro, opt, xs: string, formatting type, this node is only available for SD card; if this node does not exist, the default
formatting type is FAT32-->
</formatType>
<Encryption>
<passwordLen min="6" max="64"/>
<encryptionStatus opt="unencrypted,encrypted,verfyFailed"><!--ro, opt, xs:string, encryption status:

513

Intelligent Security API (General Application) Developer Guide
"unencrypted", "encrypted", "verfyFailed"-verification failed--></encryptionStatus>
<encryptFormatType opt="FAT32,EXT4"><!--ro, opt, xs:string--></encryptFormatType>
</Encryption>
</hdd>
</hddList>

16.2.46 XML_Cap_IbeaconParam
IbeaconParam capability message in XML format
<IbeaconParam version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<UUID min="" max="">
<!--req, xs:string, parking lot ID, which supports using digits, letters and hyphen as the tag-->
</UUID>
<major min="" max="">
<!--req, xs:integer, number of floors in the parking lot, which cannot be 0x00 for all-->
</major>
<minor min="" max="">
<!--req, xs:integer, number of parking spaces on each floor, which cannot be 0x00 for all-->
</minor>
<sendPower min="" max="">
<!--req, xs:integer, transmitted power: 01-0 dbm, 02- -6 dbm, 03- -23 dbm-->
</sendPower>
<frequency min="" max="">
<!--req, xs:integer, transmitted frequency, which is the broadcast time interval, unit: 625 µs. The broadcast time
interval is between 32 (20 ms) to 8000 (5s), and the default value is 160 (100 ms)-->
</frequency>
<measurePower min="" max="">
<!--req, xs:integer, rated power, which is the RSSI (Received Signal Strength Indication) in the position of 1 meter
away, unit: dbm-->
</measurePower>
</IbeaconParam>

16.2.47 XML_Cap_IEEE802_1x
IEEE802_1x capability message in XML format
<IEEE802_1x version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled><!--req, xs: boolean--></enabled>
<authenticationProtocolType opt="EAP-TLS,EAP-TTLS,EAP-PEAP,EAP-LEAP,EAP-FAST,EAP-MD5">
<!--req, xs: string-->
</authenticationProtocolType>
<innerTTLSAuthenticationMethod opt="MS-CHAP,MS-CHAPv2,PAP,EAP-MD5">
<!--dep, xs: string, this node is required when <authenticationProtocolType> is "EAP-TLS"-->
</innerTTLSAuthenticationMethod>
<innerEAPProtocolType opt= "EAP-POTP,MS-CHAPv2">
<!--dep, xs: string, this node is required when <authenticationProtocolType> is "EAP-PEAP" or "EAP-FAST"-->
</innerEAPProtocolType>
<validateServerEnabled><!--dep, xs: boolean--></validateServerEnabled>

514

Intelligent Security API (General Application) Developer Guide
<userName><!--dep, xs: string--></userName>
<password><!--dep, xs: string--></password>
<anonymousID><!--opt, xs: string--></anonymousID>
<autoPACProvisioningEnabled>
<!--dep, xs: boolean, this node is required when <authenticationProtocolType> is "EAP-FAST"-->
</autoPACProvisioningEnabled>
<Extensions><!--opt-->
<EAPOLVersion><!--opt, xs: string, "1, 2"--></EAPOLVersion>
</Extensions>
</IEEE802_1x>

16.2.48 XML_Cap_ImageChannel
ImageChannel capability message in XML format
<ImageChannel version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs:integer--></id>
<enabled><!--req, xs:boolean--></enabled>
<videoInputID><!--req, xs:integer--></videoInputID>
<Focusconfiguration/><!--opt-->
<LensInitialization/><!--opt-->
<ImageFlip/><!--opt-->
<ImageFreeze/><!--opt-->
<proportionalpan/><!--opt-->
<WDR/><!--opt-->
<BLC/><!--opt-->
<NoiseReduce/><!--opt-->
<ImageEnhancement/><!--opt-->
<SlowShutter/><!--opt-->
<DSS/><!--opt-->
<WhiteBlance/><!--opt-->
<Exposure/><!--opt, exposure configuration parameters, refer to the message XML_Exposure for details-->
<DayNightGate/><!--opt-->
<BrightEnhance/><!--opt-->
<Sharpness/><!--opt-->
<gammaCorrection/><!--opt-->
<powerLineFrequency/><!--opt-->
<Color/><!--opt, image adjustment capability, refer to the message XML_Cap_Color for details-->
<IrcutFilter/><!--opt, configuration parameters of day/night auto-switch, refer to the message XML_IrcutFilter for
details-->
<Scene/><!--opt-->
<EPTZ/ ><!--opt-->
<EIS/><!--opt-->
<HLC/> <!--opt-->
<ZoomLimit/> <!--opt-->
<corridor/><!--opt-->
<Dehaze/><!--opt-->
<ImageMode opt="standard, indoor, outdoor, dimLight"/><!--opt, xs:string-->
<enableImageLossDetection><!--opt, boolean--></enableImageLossDetection>
<CaptureMode/><!--opt-->
<IrLight/><!--opt-->

515

Intelligent Security API (General Application) Developer Guide
<LensDistortionCorrection/><!--opt-->
<SupplementLight/><!--opt, supplement light configuration capability, refer to the message
XML_Cap_SupplementLight for details-->
<OpticalDehaze/><!--opt-->
<ManualRanging/><!--opt-->
<OIS/><!--opt-->
<isSupportlaserSpotManual><!--opt, boolean--></isSupportlaserSpotManual>
<isSupportLaserSpotAdjustment><!--opt, boolean--></isSupportLaserSpotAdjustment>
<DigitalZoom>
<ZoomRatio opt="1x,2x,4x,8x,16x,32x"><!--req, xs:string---></ZoomRatio>
</DigitalZoom>
<Palettes/><!--opt-->
<ExposureSync opt="true,false" def="false">
<enabled><!--req, xs:boolean--></enabled>
</ExposureSync>
<BrightnessSuddenChangeSuppressionCap/><!--opt-->
<isSupportIcr><!--opt, boolean--></isSupportIcr>
<isSupportMultishut><!--opt, boolean--></isSupportMultishut>
<isSupportPlateBright><!--opt, boolean--></isSupportPlateBright>
<isSupportJPEGParam><!--opt, boolean--></isSupportJPEGParam>
<isSupportDarkEnhance><!--opt, boolean--></isSupportDarkEnhance>
<isSupportHdr><!--opt, boolean--></isSupportHdr>
<isSupportLse><!--opt, boolean--></isSupportLse>
<isSupportMce><!--opt, boolean--></isSupportMce>
<isSupportScve><!--opt, boolean--></isSupportScve>
<isSupportSectionCtrl><!--opt, boolean--></isSupportSectionCtrl>
<isSupportAutoContrast><!--opt, boolean--></isSupportAutoContrast>
<isSupportGrayRange><!--opt, boolean--></isSupportGrayRange>
<isSupportLSEDetail><!--opt, boolean--></isSupportLSEDetail>
<isSupportCapture><!--opt, boolean--></isSupportCapture>
<isSupportBrightEnhance><!--opt, boolean--></isSupportBrightEnhance>
<isSupportRecord><!--opt, xs:boolean--></isSupportRecord>
<isSupportDefog><!--opt, xs:boolean--></isSupportDefog>
<isSupportGeneral><!--opt, xs:boolean, whether to display general configuration page on the interface--></
isSupportGeneral>
<isSupportIa><!--opt, xs:boolean, whether to display video configuration page on the interface--></isSupportIa>
<NoiseReduce2D>
<noiseReduce2DEnable><!--req, xs:boolean--></noiseReduce2DEnable>
<noiseReduce2DLevel min="0" max="100"><!--dep,xs:integer--></noiseReduce2DLevel>
</NoiseReduce2D>
<Shutter>
<ShutterLevel min="100" max="40000"><!--req, xs:integer--></ShutterLevel>
</Shutter>
<Gain>
<GainLevel min="0" max="100"><!--req, xs:integer--></GainLevel>
</Gain>
<TempRange/><!--opt, temperature range capability, see XML_Cap_tempRange for details-->
</ImageChannel>

516

Intelligent Security API (General Application) Developer Guide
Remarks
The nodes <DigitalZoom> and <ExposureSync> are not supported by thermographic automation
thermal camera (DS-2TA03-15SVI, DS2TA06-25SVI).

16.2.49 XML_Cap_InputProxyChannel
InputProxyChannel capability message in XML format
<InputProxyChannel version="1.0" xmlns="http://www.isapi.com/ver20/XMLSchema">
<id min="" max=""></id>
<name min="" max=""></name>
<sourceInputPortDescriptor>
<adminProtocol opt="HIKVISION,SONY,ISAPI,ONVIF"></adminProtocol>
<addressingFormatType opt="ipaddress,hostname"></addressingFormatType>
<hostName min="" max=""></hostName>
<ipAddress></ipAddress>
<ipv6Address></ipv6Address>
<adminPortNo min="2000" max="65535"></adminPortNo>
<srcInputPort min="" max=""></srcInputPort>
<userName min="" max=""><!--user name, which should be encrypted--></userName>
<password min="" max=""><!--password, which should be encrypted--></password>
<streamType opt="auto,tcp,udp"></streamType>
<deviceID min="" max=""></deviceID>
</sourceInputPortDescriptor>
<enableAnr opt="true,false"></enableAnr>
<NVRInfo>
<ipAddressNVR>
<!--opt, xs:string, IP address of NVR-->
</ipAddressNVR>
<portNVR min="2000" max="65535">
<!--opt, xs:integer, port No. of NVR-->
</portNVR>
<ipcChannelNo min="" max="">
<!--opt, xs:integer, channel No. of the network camera in NVR-->
</ipcChannelNo>
</NVRInfo>
</InputProxyChannel>

16.2.50 XML_Cap_IOInputPortList
IOInputPortList capability message in XML format
<IOInputPortList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<IOInputPort><!--req-->
<id><!--req, xs:string--></id>
<triggeringType opt="high,low"><!--req, xs:string--></triggeringType>
<name min="", max=""><!--req, xs:string--></name>
<inputType opt="switch,semaphore">

517

Intelligent Security API (General Application) Developer Guide
<!--opt, xs:string, switch, semaphore-->
</inputType>
<CombinationAlarmCap><!--opt, composite alarm capability-->
<channel min="" max="">
<!--req, xs:integer，channel No. range-->
</channel>
<EventTypeList size=""><!--req, event type list, the "size" indicates the max. number of supported events for
composition-->
<eventType>
<!--req, xs:string, event type-->
</eventType>
</EventTypeList>
</CombinationAlarmCap>
</IOInputPort>
</IOInputPortList>

16.2.51 XML_Cap_IOOutputPortList
IOOutputPortList capability message in XML format
<IOOutputPortList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<IOOutputPort>
<id min="" max=""><!-- req, xs:integer, "2" --></id>
<PowerOnState><!--req, output port configuration parameters when the device is powered on>
<defaultState opt="high,low">
<!--ro, req, xs:string,default output port signal when it is not triggered-->
</defaultState>
<outputState opt="high,low,pulse">
<!--ro, req, xs:string, output port signal when it is being triggered-->
</outputState>
<pulseDuration min="" max="">
<!--dep, xs:integer, duration of a output port signal when it is being triggered, it is valid when outputState is
"pulse", unit: milliseconds-->
</pulseDuration>
</PowerOnState>
<name><!--opt, xs:string--></name>
<IOUseType opt="disable,electricLock,custom"><!--opt, xs:string--></IOUseType>
<normalStatus opt="open, close"><!--opt, xs:string,normal status: open-remain open, close-remain closed--></
normalStatus>
</IOOutputPort>
</IOOutputPortList>

16.2.52 XML_Cap_IpAddress
IpAddress capability message in XML format
<IpAddress version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<ipVersion opt="IPv4,IPv6,dual">
<!--req, xs:string-->

518

Intelligent Security API (General Application) Developer Guide
</ipVersion>
<addressingType opt="static,dynamic,apipa">
<!--req, xs:string-->
</addressingType>
<ipAddress min="0" max="40">
<!--dep, xs:string-->
</ipAddress>
<subnetMask min="0" max="15">
<!--dep, xs:string-->
</subnetMask>
<ipv6Address min="0" max="40">
<!--dep, xs:string-->
</ipv6Address>
<bitMask ask min="0" max="128">
<!--dep, xs:integer-->
</bitMask>
<DefaultGateway>
<!--dep-->
<ipAddress min="0" max="40">
<!--dep, xs:string-->
</ipAddress>
<ipv6Address min="0" max="40">
<!--dep, xs:string-->
</ipv6Address>
</DefaultGateway>
<PrimaryDNS>
<!--dep-->
<ipAddress min="0" max="40">
<!--dep, xs:string-->
</ipAddress>
<ipv6Address min="0" max="40">
<!--dep, xs:string-->
</ipv6Address>
</PrimaryDNS>
<SecondaryDNS>
<!--dep-->
<ipAddress min="0" max="40">
<!--dep, xs:string-->
</ipAddress>
<ipv6Address min="0" max="40">
<!--dep, xs:string-->
</ipv6Address>
</SecondaryDNS>
<Ipv6Mode><!--opt-->
<ipV6AddressingType opt="router,ra,manual,dhcp">
<!--dep, xs:string-->
</ipV6AddressingType>
<ipv6AddressList>
<v6Address>
<id min="0" max="255">
<!--dep, xs:string-->
</id>

519

Intelligent Security API (General Application) Developer Guide
<type opt="router,ra,manual,dhcp">
<!--dep, xs:string-->
</type>
<address min="0" max="40">
<!--dep, xs:string-->
</address>
<bitmask min="0" max="255">
<!--dep, xs:integer-->
</bitMask>
</v6Address>
</ipv6AddressList>
</Ipv6Mode>
</IpAddress>

16.2.53 XML_Cap_IPFilter
IPFilter capability message in XML format
<IPFilter version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled opt="true, false"><!--req, xs:boolean--></enabled>
<permissionType opt="deny, allow">
<!--req, xs:string, IP address filter status: "deny, allow". If this node is configured, it will overwrite value of all
<permissionType> in <IPFilterAddres>-->
</permissionType>
<IPFilterAddressList size="32"><!--opt, the attribute "size" refers to the maximum number of IP addresses supported
by the device. If the attribute "size" is not returned, the default supported number of IP addresses is 48-->
<IPFilterAddress>
<id min="" max=""><!--req, xs:string, ID--></id>
<permissionType opt="deny, allow"><!--dep, ro, xs:string--></permissionType>
<addressFilterType opt="mask,range">
<!--dep, ro, xs:string, filter type: "mask"-single address, "range"-address range-->
</addressFilterType>
<AddressRange><!--dep, this node is valid when <addressFilterType> contains "range"-->
<startIPAddress min="" max=""><!--dep, xs:string--></startIPAddress>
<endIPAddress min="" max=""><!--dep, xs:string--></endIPAddress>
<startIPv6Address min="" max=""><!--dep, xs:string--></startIPv6Address>
<endIPv6Address min="" max=""><!--dep, xs:string--></endIPv6Address>
</AddressRange>
<AddressMask><!--dep, it is valid when <addressFilterType> contains "mask"-->
<ipAddress min="" max=""><!--dep, xs:string--></ipAddress>
<ipv6Address min="" max=""><!--dep, xs:string--></ipv6Address>
<bitMask min="" max=""><!--opt, xs:string--></bitMask>
<bitMaskIPV6 min="" max=""> <!--req, xs:string, IPv6 prefix length--></bitMaskIPV6>
</AddressMask>
<describeMsg min="" max=""><!--opt, xs:string--></describeMsg>
</IPFilterAddress>
</IPFilterAddressList>
</IPFilter>

520

Intelligent Security API (General Application) Developer Guide
16.2.54 XML_Cap_ItemList
ItemList capability message in XML format
<ItemList size="15">
<Item>
<itemID min="1" max="15">
<!--req, xs:string, item ID, which is between 1 and 15-->
</itemID>
<itemOrder
opt="none,devIp,time,buildUnitNo,outDoorDevNo,unlockType,devName,deviceNo,channelName,channelNo,
plateNo,plateColor,laneNo,carSpeed,
positionInfo1,pictureNo,CarNo,speedLimit,illegalCode,siteNo,directionNo,carColor,platePosition,carType,illegalType,cu
stom">
<!--req, xs:string, name element: "none", "devIp"-device IP address, "time", "buildUnitNo"-building No. and unit
No., "outDoorDevNo"-door station, "unlockType"-unlocking type, "devName"-device name, "deviceNo"-device No.,
"channelName"-channel name, "channelNo"-channel No., "plateNo"-license plate number, "plateColor"-license plate
color, "laneNo"-lane No., "carSpeed"-vehicle speed, "positionInfo1"-camera 1, "pictureNo"-picture No., "CarNo"vehicle No., "speedLimit"-speed limit, "illegalCode"-violation code, "siteNo"-intersection No., "directionNo"-direction
No., "carColor"-vehicle color, "platePosition"-license plate coordinates, "carType"-vehicle type, "illegalType"-violation
type, "custom"-->
</itemOrder>
<itemCustomStr min="1" max="32">
<!--req, xs:string, element custom string, which is between 1 and 32, unit: bytes. This node is valid only when
<itemOrder> is "custom". Currently traffic cameras only support one custom name-->
</itemCustomStr>
</Item>
</ItemList>

16.2.55 XML_Cap_LensDistortionCorrection
LensDistortionCorrection capability message in XML format
<LensDistortionCorrection version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled><!--req, xs: boolean--></enabled>
<level opt="level1,level2,level3,custom">
<!--opt, xs: string, distortion correction level: level 1, level 2, level 3, custom-->
</level>
<accurateLevel min="0" max="100">
<!--opt, xs: integer, correction strength, value range: [0,100]-->
</accurateLevel>
<zoomedInDistantViewLevel min="0" max="100">
<!--opt, xs: integer, zooming in range, value range: [0-100], this node is valid when distortion correction is enabled-->
</zoomedInDistantViewLevel>
<horizontalFOV min="0" max="100"><!--opt, xs: integer, horizontal FOV, value range: [0,100]--></horizontalFOV>
<verticalFOV min="0" max="100"><!--opt, xs: integer, vertical FOV, value range: [0,100]--></verticalFOV>
</LensDistortionCorrection>

521

Intelligent Security API (General Application) Developer Guide
16.2.56 XML_Cap_Link
Link capability message in XML format.
<Link version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<MACAddress><!--req, xs:string--></MACAddress>
<autoNegotiation><!--req, xs:boolean, "true, false"--> </autoNegotiation>
<speed><!--req, xs:integer, "10.100, 1000"--></speed>
<duplex><!--req, xs:string, "half, full"--></enalbed>
<MTU><!--req, xs:integer, "500-1500"--></MTU>
</Link>

16.2.57 XML_Cap_LogConfig
LogConfig capability message in XML format.
<LogConfig version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled><!--required, boolean type, whether to enable log--></enabled>
<level opt="none,debug,info,error,fault,all">
<!--required, string type, log types, multiple type can be selected, and each type should be separated by comma-->
</level>
</LogConfig>

16.2.58 XML_Cap_MACFilter
MACFilter capability message in XML format
<MACFilter version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled opt="true,false"><!--req, xs:boolean--></enabled>
<permissionType opt="deny, allow"><!-- req, xs:string,"deny, allow"--></permissionType>
<MACFilterAddressList size="">
<MACFilterAddress>
<id> <!--req, xs:string;id--></id>
<MACAddress max=""><!--req, xs:string--></MACAddress>
</MACFilterAddress>
</MACFilterAddressList>
</MACFilter>

16.2.59 XML_Cap_mailingList
mailingList capability message in XML format.
<mailingList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<mailing><!--opt,xs:string--></mailing>
</mailingList>

522

Intelligent Security API (General Application) Developer Guide
16.2.60 XML_Cap_MaxElevation
MaxElevation capability message in XML format
<MaxElevation version="1.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<mElevation min="-20" max="0"><!--req, xs:integer, the lower limit of max. tilt-angle--> </mElevation>
<mVerElevation><!--req, xs:integer, the upper limit of max. tilt-angle, normally it is 90°--></mVerElevation>
</MaxElevation>

16.2.61 XML_Cap_NetworkInterface
NetworkInterface capability message in XML format
<NetworkInterface version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs:string--></id>
<IPAddress/><!--req-->
<Wireless/><!--opt-->
<Discovery/><!--opt-->
<Link/><!--opt-->
<defaultConnection><!--opt, xs:boolean--></defaultConnection>
<macAddress min="" max=""><!--opt, xs:string--></macAddress>
<EthernetPortList size="4"><!--opt, network interface information-->
<EthernetPort><!--opt -->
<id min="1",max="4"><!--req, xs: integer--></id>
<MACAddress><!--req, xs:string--></MACAddress>
<status opt="connected, disconnect"><!--opt, xs:string--></status>
<speed><!--req, xs:integer, "10, 100, 1000, 10000"--></speed>
</EthernetPort>
</EthernetPortList>
</NetworkInterface>

16.2.62 XML_Cap_NTPServer
NTPServer capability message in XML format
<NTPServer version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id min="1" max=""><!--req, xs:string, ID--></id>
<addressingFormatType opt="ipaddress,hostname"><!--req, xs:string, which field will be used to locate the NTP
server: "ipaddress, hostname"--></addressingFormatType>
<hostname min="0" max="64"><!--dep, xs:string--></hostName>
<ipAddress min="0" max="64"><!--dep, xs:string--></ipAddress>
<ipv6Address min="0" max="64"><!--dep, xs:string--></ipv6Address>
<portNo min="1" max="65535"><!--opt, xs:integer--></portNo>
<synchronizeInterval min="0" max="65535"><!--opt, xs:integer, NTP time synchronization interval, unit: minute--></
synchronizeInterval>
</NTPServer>

523

Intelligent Security API (General Application) Developer Guide
16.2.63 XML_Cap_PreviewSwitch
PreviewSwitch message in XML format
<PreviewSwitch version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<groupNo min="0" max="15"><!--opt, xs: integer, group No.--></groupNo>
<videoOutType
opt="CVBS,HDMI,VGA,AUXOutput1,AUXOutput2,AUXOutput3,AUXOutput4,extendHDMI1,extendHDMI2,extendHDMI3
,extendHDMI4,noSameSourceVGA1,noSameSourceVGA2,noSameSourceVGA3,noSameSourceVGA4,sameSourceVGA,m
ainLCD,AUX-VGA,AUX-LCD,zeroChannel">
<!--opt, xs: string, video output types, if there are more than two outputs are homologous, you can combine these
outputs by "/" to be returned, e.g., if HDM1 and VGA1 are homologous outputs, "HDM1/VGA1" will be returned-->
</videoOutType>
<DisplayWindowList size="64">
<DisplayWindow>
<id><!--req, xs: string, window No., which equals to id × groupNo--></id>
<displayChannelNo min="0" max="64"><!--req, xs: string, 0-not display, 1 to 64-displayed channel No.--></
displayChannelNo>
</DisplayWindow>
</DisplayWindowList>
<previewFrameNo opt="1,4,6,8,9,25,32,36,auto1,auto2,auto3,auto4">
<!--req, xs: string, number of live view windows, auto1-custom window division 1, auto2-custome window division
2, auto3-custome window division 3, auto4-custome window division 4-->
</previewFrameNo>
<sound><!--req, xs: boolean, whether to turn on audio during live view, true-yes--></sound>
<switchTime opt="0,5,10,20,30,60,120,300"><!--req, xs: string, switching interval, unit: s--></switchTime>
<sameSource>
<!--dep, xs: boolean, whether the output is homologous, true-yes, this node is valid only when VideoOutType is
"noSameSourceVGA1", "noSameSourceVGA2", "noSameSourceVGA3", and "noSameSourceVGA4"-->
</sameSource>
<supportGetByPreviewNum>
<!--opt, whether supports setting number of live view windows in the URL, true-yes-->
</supportGetByPreviewNum>
<supportGetByVideoOutType>
<!--opt, xs: boolean, whether supports getting capability by output-->
</supportGetByVideoOutType>
</PreviewSwitch>

16.2.64 XML_Cap_RegionClip
RegionClip capability message in XML format
<RegionClip version="2.0" xmlns="http://www.std-cgi.org/ver20/XMLSchema">
<id><!--req, xs: string--></id>
<enabled><!--req, xs: boolean--></enabled>
<normalizedScreenSize><!--req, read-only-->
<normalizedScreenWidth><!--req, read-only, xs: integer--></normalizedScreenWidth>
<normalizedScreenHeight><!--req, read-only, xs: integer--></normalizedScreenHeight>
</normalizedScreenSize>

524

Intelligent Security API (General Application) Developer Guide
<regionType opt="rectangle,convexPolygon,concavePolygon"><!--req, ro, xs:string--></regionType>
<videoResolutionWidth opt="704"></videoResolutionWidth>
<videoResolutionHeight opt="576"></videoResolutionHeight>
<ClipRegionList>
<ClipRegion>
<RegionCoordinatesList size="1">
<RegionCoordinates><!--req-->
<positionX><!--req, xs: integer; x-coordinate--></positionX>
<positionY><!--req, xs: integer; y-coordinate--></positionY>
</RegionCoordinates>
</RegionCoordinatesList>
</ClipRegion>
</ClipRegionList>
</RegionClip>

16.2.65 XML_Cap_RuleInfo
RuleInfo capability message in XML format.
<RuleInfo version="2.0" xmlns="http://www.isapi.com/ver20/XMLSchema">
<ruleId opt="1,2,3,4,5,6,7,8"><!—req, xs:string-></ruleId>
<ruleName min="" max=""> <!—req, xs:string-> </ruleName>
<combinedRuleId opt="15,16"><!—req, xs:string-></combinedRuleId>
<enabled opt="true,false"><!—req, xs:boolean-></enabled>
<ruleType opt="region,line"><!—req, xs:string->/ruleType>
<LineDetectionParam>
<detectionTarget opt="all,human,vehicle, human_vehicle "/>
<!—detection target, node with underline indicates that it supports multiple selections, e.g., human_vehicle
indicates human and vehicle-->
<directionSensitivity opt="left-right,right-left,any" def="any"><!—req, xs:string-></directionSensitivity>
<isSupportHumanMisinfoFilter>
<!--opt, xs:boolean, whether supports false alarm filter of human: true-supports, false or no return-not support-->
</isSupportHumanMisinfoFilter>
<isSupportVehicleMisinfoFilter>
<!--opt, xs:boolean, whether supports false alarm filter of vehicle: true-supports, false or no return-not support-->
</isSupportVehicleMisinfoFilter>
<sensitivity min="1" max="100" default="50"><!--req, xs:integer, sensitivity, from 1 to 100--></sensitivity>
</LineDetectionParam>
<FieldDetectionParam>
<durationTime min="1" max="100" def="5"><!--req,xs:integer--> </durationTime>
<sensitivityLevel min="1" max="100"><!—req, xs:integer, sensitivity from 0 to 100--> </sensitivityLevel>
<detectionTarget opt="all,human,vehicle, human_vehicle "/>
<!—detection target, node with underline indicates that it supports multiple selections, e.g., human_vehicle
indicates human and vehicle-->
<isSupportHumanMisinfoFilter>
<!--opt, xs:boolean, whether supports false alarm filter of human: true-supports, false or no return-not support-->
</isSupportHumanMisinfoFilter>
<isSupportVehicleMisinfoFilter>
<!--opt, xs:boolean, whether supports false alarm filter of vehicle: true-supports, false or no return-not support-->
</isSupportVehicleMisinfoFilter>
</FieldDetectionParam>

525

Intelligent Security API (General Application) Developer Guide
<RegionEntranceParam>
<detectionTarget opt="all,human,vehicle, human_vehicle "/>
<!—detection target, node with underline indicates that it supports multiple selections, e.g., human_vehicle
indicates human and vehicle-->
<isSupportHumanMisinfoFilter>
<!--opt, xs:boolean, whether supports false alarm filter of human: true-supports, false or no return-not support-->
</isSupportHumanMisinfoFilter>
<isSupportVehicleMisinfoFilter>
<!--opt, xs:boolean, whether supports false alarm filter of vehicle: true-supports, false or no return-not support-->
</isSupportVehicleMisinfoFilter>
</RegionEntranceParam>
<RegionExitingParam>
<detectionTarget opt="all,human,vehicle, human_vehicle "/><!—detection target, node with underline indicates
that it supports multiple selections, e.g., human_vehicle indicates human and vehicle-->
<isSupportHumanMisinfoFilter>
<!--opt, xs:boolean, whether supports false alarm filter of human, true-supports, false or no return-not support-->
</isSupportHumanMisinfoFilter>
<isSupportVehicleMisinfoFilter>
<!--opt, xs:boolean, whether supports false alarm filter of vehicle, true-supports, false or no return-not support-->
</isSupportVehicleMisinfoFilter>
</RegionExitingParam>
<PeopleNumChangeParam>
<peopleNumThreshold min="" max="" default=""><!--opt,xs:integer--></peopleNumThreshold>
<detectMode opt="greaterthan,lessThan,equal,notEqual"><!-- opt,xs:string--></detectMode>
<noneStateEffectiveEnabled><!--opt,xs:boolean--></noneStateEffectiveEnabled>
<durationTime min="" max="" default=""><!--opt,xs:integer--></durationTime>
</PeopleNumChangeParam>
<SpacingChangeParam>
<spacingThreshold min="" max="" default=""><!--opt,xs: integer--></spacingThreshold>
<detectMode><!--opt,xs:string,"greaterthan,lessThan"--></detectMode>
<durationTime min="" max="" default=""><!--opt,xs:integer--></durationTime>
</SpacingChangeParam>
<ViolentMotionParam>
<sensitivity min="" max="" default=""> <!--opt,xs:integer--> </sensitivity>
</ViolentMotionParam>
<LeavePositionParam>
<leaveDelay min="" max="" default=""><!--opt,xs:integer--></leaveDelay>
<onPosition min="" max="" default=""><!--opt,xs:integer--></onPosition>
</LeavePositionParam>
<FailDownParam>
<durationTime min="" max="" default=""><!--opt,xs:integer--></durationTime>
<heightThreshold min="" max="" default=""><!--opt,xs:integer--></heightThreshold>
</FailDownParam>
<RunningParam>
<speed min="" max="" default=""><!--opt,xs:integer--></speed>
</RunningParam>
<RetentionParam><!--dep-->
<durationTime min="" max="" default="">
<!--req, xs:integer, duration time, from 60 seconds to 3600 seconds, default value: 1800 seconds-->
</RetentionParam>
<ParkingParam>
<durationTime min="5" max="100"><!-- req,xs:integer--> </durationTime>

526

Intelligent Security API (General Application) Developer Guide
</ParkingParam>
<eventType
opt="none,lineDetection,fieldDetection,regionEntrance,regionExiting,parking,peopleNumChange,spacingChange,viole
ntMotion,leavePosition,failDown,running,retentionParam">
<!—req, xs:string-->
</eventType>
<SizeFilter>
<enabled opt="true,false"><!—req, xs:boolean--></enabled>
<mode opt="pixels,actualSize"><!—req, xs:string, filter mode: "pixels"-filter according to pixel, "actualSize"-filter
according to actual size--></mode>
<ObjectSizeList size="4">
<ObjectSize><!--only return the default value of supported detection type-->
<detectionTarget><!--opt,xs:string, detection target, "all"-all, "human"-human, "vehicle"-vehicle,
"human_vehicle"-human and vehicle--></detectionTarget>
<MaxObjectSize><!--maximum size:float-->
<positionX><!--req,xs:integer;coordinate--></positionX>
<positionY><!--req,xs:integer;coordinate--></positionY>
<width><!--req,xs:integer, default width value: when detectionTarget values "all", it is 500, "human"-200,
"vehicle"-500, "human_vehicle"-500, unit: cm--></width>
<height><!--req,xs:integer, default height value: when detectionTarget values "all", it is 100, "human"-300,
"vehicle"-100, "human_vehicle"-100, unit: cm --></height>
</MaxObjectSize>
<MinObjectSize><!--minimum size:float-->
<positionX><!--req,xs:integer;coordinate--></positionX>
<positionY><!--req,xs:integer;coordinate--></positionY>
<width><!--req,xs:integer, default width value: when detectionTarget values "all", it is 60, "human"-60,
"vehicle"-180, "human_vehicle"-60, unit: cm--></width>
<height><!--req,xs:integer, default height value: when detectionTarget values "all", it is 10, "human"-10,
"vehicle"-140, "human_vehicle"-10, unit: cm--></height>
</MinObjectSize>
</ObjectSize>
</ObjectSizeList>
</SizeFilter>
<RuleRegion>
<RegionCoordinatesList size="4">
<RegionCoordinates>
<positionX min="" max=""><!--req, xs:integer--></positionX>
<positionY min="" max=""><!--req, xs:integer--></positionY>
</RegionCoordinates>
</RegionCoordinatesList>
</RuleRegion>
<backgroundSuppression opt="open,close,selfAdapt"><!--opt, xs:string, background suppression--></
backgroundSuppression>
</RuleInfo>

Remarks
When the mode values "actualSize", the input value of positionX and positionY is 0.

527

Intelligent Security API (General Application) Developer Guide
16.2.66 XML_Cap_SerialCommand
SerialCommand capability message in XML format
<SerialCommand version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<chainNo min="1" max="16">
<!--opt, xs:integer-->
</chainNo>
<command>
<!--req, xs:hexBinary-->
</command>
</SerialCommand>

16.2.67 XML_Cap_SerialPort
SerialPort capability message in XML format
<SerialPort version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id min="0" max="255">
<!--req, xs:string, serial port ID-->
</id>
<enabled>
<!--req, xs:boolean, whether to enable the serial port: "true, false"-->
</enabled>
<serialNumber opt="1,2,3,4,5">
<!--opt, xs:integer, serial port No., which is between 1 and 5-->
</serialNumber>
<serialPortType opt="RS485,RS422,RS232">
<!--req, xs:string, serial port type: "RS485", "RS422", "RS232"-->
</serialPortType>
<duplexMode opt="half,full">
<!--req, xs:string, duplex mode of the serial port: "half", "full"-->
</duplexMode>
<direction opt="monodirectional,bdirectional">
<!--req, xs:string-->
</direction>
<baudRate range="600,1200,2400,4800,9600,19200,38400,57600,76800,115200">
<!--req, xs:integer-->
</baudRate>
<dataBits min="5" max="8">
<!--req, xs:integer-->
</dataBits>
<parityType opt="none,even,odd,mark,space">
<!--req, xs:string-->
</parityType>
<stopBits range="1,2">
<!--req, xs:string, stop bit: "1,1.5,2"-->
</stopBits>
<workMode opt="console,transparent,narrowband,audiomixer,stairsControl,cardReader,disabled,custom">

528

Intelligent Security API (General Application) Developer Guide
<!--dep, xs:string, working mode: "console","transparent","narrowband","audiomixer","stairsControl"-elevator
control,"cardReader"-card reader,"disabled","custom". This node is required only when <serialPortType> is set to
"RS232"-->
</workMode>
<flowCtrl opt="none,software,hardware">
<!--req, xs:string-->
</flowCtrl>
<rs485WorkMode opt="Led, CaptureTrigger">
<!--opt, xs:string, working mode of RS-485 serial port, which is used for LED display or triggering transmission of
captured pictures. This node is valid only when <serialPortType> is "RS485"-->
</rs485WorkMode>
<audiomixerProtocolType opt="HIKVISION">
<!--opt, xs:string, "HIKVISION"-->
</audiomixerProtocolType>
</SerialPort>

16.2.68 XML_Cap_SIPInfo
SIPInfo capability message in XML format
<SIPInfo version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<videoID opt="1,2,3">
<!--req, xs:string-->
</videoID>
<AlarmInList>
<AlarmIn>
<id min="0" max="8">
<!--req, xs:integer-->
</id>
<alarmInID min="0" max="64">
<!--req, xs:string-->
</alarmInID>
</AlarmIn>
</AlarmInList>
</SIPInfo>

16.2.69 XML_Cap_SIPServer
SIPServer capability message in XML format
<SIPServer version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id min="1" max="">
<!--req, xs:interger, the maximum ID depends on the number of channels-->
</id>
<localPort min="0" max="65535">
<!--req, xs:integer-->
</localPort>
<streamID min="1" max="255">
<!--req, xs:integer, stream type: 1-main stream, 2-sub-stream, 3-third stream-->

529

Intelligent Security API (General Application) Developer Guide
</streamID>
<Standard>
<!--opt-->
<registerStatus>
<!--ro, req, xs:boolean, registration status: "false"-unregistered, "true"-registered-->
</registerStatus>
<enabled >
<!--req, xs:string, "true"-log in, "false"-log out-->
</enabled>
<registrar min="0" max="128">
<!--req, xs:string-->
</registrar>
<registrarPort min="1024" max="65535">
<!--req, xs:integer-->
</registrarPort>
<proxy min="0" max="128">
<!--req, xs:string-->
</proxy>
<proxyPort min="0" max="65535">
<!--req, xs:integer-->
</proxyPort>
<displayName min="0" max="64">
<!--req, xs:string-->
</displayName>
<username min="0" max="64">
<!--req, xs:string-->
</userName>
<authID min="0" max="64">
<!--req, xs:string-->
</authID>
<password min="0" max="32">
<!--wo, req, xs:string-->
</password>
<expires min="0" max="100000">
<!--req, xs:integer-->
</expires>
</Standard>
<GB28181>
<!--opt-->
<registerStatus>
<!--req, xs:boolean, "true,false"-->
</registerStatus>
<enabled>
<!--req, xs:boolean, "true,false"-->
</enabled>
<registrar min="0" max="128">
<!--req, xs:string-->
</registrar>
<registrarPort min="1024" max="65535">
<!--req, xs:integer-->
</registrarPort>
<serverId min="0" max="64">

530

Intelligent Security API (General Application) Developer Guide
<!--req, xs:string-->
</serverId>
<serverDomain min="0" max="128">
<!--req, xs:string-->
</serverDomain>
<username min="0" max="64">
<!--req, xs:string-->
</userName>
<authID min="0" max="64">
<!--req, xs:string-->
</authID>
<password min="0" max="32">
<!--wo, req, xs:string-->
</password>
<expires min="30" max="100000">
<!--req, xs:integer-->
</expires>
<liveTime min="30" max="100000">
<!--req, xs:integer-->
</liveTime>
<heartbeatTime min="0" max="255">
<!--req, xs:integer-->
</heartbeatTime>
<heartbeatCount min="3" max="255">
<!--req, xs:integer-->
</heartbeatCount>
</GB28181>
</SIPServer>

16.2.70 XML_Cap_SmartSearchDescription
SmartSearchDescription capability message in XML format
<SmartSearchDescription version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<searchID>
<!--req, xs:string, search ID, which is used to confirm the upper-level platform or system. If the platform or system
are same during two times of search, the search history will be recorded in the memory for next fast search-->
</searchID>
<searchResultPosition><!--req, xs: integer--></searchResultPosition>
<maxResults><!--req, xs: integer--></maxResults>
<trackID><!--req, xs: integer, channel ID, e.g., 101-main stream if first channel--></trackID>
<startTime><!--req, xs: datetime, start time of validity period, e.g., 2013-06-10T 12:00:00Z--></startTime>
<endTime><!--req, xs: datetime, end time of validity period, e.g., 2013-06-10T 13:00:00Z--></endTime>
<type opt="motionDetection, traversePlaneDetection,FieldDetection, faceDetection">
<!--req, xs: string; VCA event type-->
</type>
<MotionDetection><!--dep, it is valid when type is "motionDetection"-->
<Grid>
<rowGranularity></rowGranularity>
<columnGranularity></columnGranularity>
</Grid>

531

Intelligent Security API (General Application) Developer Guide
<MotionDetectionLayout>
<layout>
<gridMap></gridMap>
</layout>
</MotionDetectionLayout>
<sensitivity min="1", max="100"><!--opt, xs: integer--></sensitivity>
</MotionDetection>
<TraversePlane><!--dep, it is valid when type is "traversePlaneDetection"-->
<TraversePlaneParam>
<LineList>
<Line>
<StartPoint>
<x><!--req, xs: float--></x>
<y><!--req, xs: float--></y>
</StartPoint>
<EndPoint>
<x><!--req, xs: float--></x>
<y><!--req, xs: float--></y>
</EndPoint>
</Line>
</LineList>
<crossDirection opt="bothDirection, leftToRight, rightToLeft><!--opt, xs: string, crossing direction-><crossDirection>
<sensitivity min="1", max="100"><!-- opt, xs: integer--></sensitivity>
<planeHeight><!--opt, xs: integer--></planeHeight>
<detectionTarget opt="all, human, vehicle><!--req, xs: string--><detectionTarget>
</TraversePlaneParam>
<dwPreTime><!--opt, xs: integer, pre-recording time--></dwPreTime>
<dwDelayTime><!--opt, xs: integer,post-recording time--></dwDelayTime>
<PTZPos>
<P><!--opt, xs: integer--></P>
<T><!--opt, xs: integer--></T>
<Z><!--opt, xs: integer--></Z>
</PTZPos>
<advancedType opt="humanFeature, objectFeature"><!--opt, xs: string--></advancedType>
<advance><!--dep, it is valid when type is "motionDetection"-->
<HumanFeature>
<age min="0" max="100"><!--opt, xs: integer--></age>
<sex opt="male,female"><!--opt, xs: string--></sex>
<eyeGlass><!--opt, xs: boolean--></eyeGlass>
</HumanFeature><!--dep, it is valid when type is "humanFeature"-->
<ObjectFeature>
<colorRatel><!--opt, xs: integer--></colorRatel>
<R><!--opt, xs: integer--></R>
<G><!--opt, xs: integer--></G>
<B><!--opt, xs: integer--></B>
</ObjectFeature><!--dep, it is valid when type is "objectFeature"-->
</advance>
</TraversePlane>
<FieldDetection><!--dep, it is valid when type is "FieldDetection"-->
<normalizedScreenSize>
<normalizedScreenWidth><!--opt, xs: integer--></normalizedScreenWidth>

532

Intelligent Security API (General Application) Developer Guide
<normalizedScreenHeight><!--opt, xs: integer--></normalizedScreenHeight>
</normalizedScreenSize>
<param>
<region>
<pointList>
<point>
<x><!--opt, xs: integer--></x>
<y><!--opt, xs: integer--></y>
</point>
</pointList>
</region>
</param>
<duration min="1", max="100"><!--opt, xs: integer--></duration>
<sensitivity min="1", max="100"><!--opt, xs: integer--></sensitivity>
<rate min="1", max="100"><!--opt, xs: integer--></rate>
<detectionTarget opt="all, human, vehicle><!--req, xs: string--><detectionTarget>
<dwPreTime><!--opt, xs: integer, pre-recording time--></dwPreTime>
<dwDelayTime><!--opt, xs: integer, post-recording time--></dwDelayTime>
<PTZPos>
<P><!--opt, xs: integer--></P>
<T><!--opt, xs: integer--></T>
<Z><!--opt, xs: integer--></Z>
</PTZPos>
<advancedType opt="humanFeature, objectFeature"><!--opt, xs: string--></advancedType>
<advance><!--dep, it is valid when type is "motionDetection"-->
<HumanFeature>
<age min="0" max="100"><!--opt, xs: integer--></age>
<sex opt="male,female"><!--opt, xs: string--></sex>
<eyeGlass><!--opt, xs: boolean--></eyeGlass>
</HumanFeature><!--dep, it is valid when type is "humanFeature"-->
<ObjectFeature>
<colorRatel><!--opt, xs: integer--></colorRatel>
<R></R>
<G></G>
<B></B>
</ObjectFeature><!--dep, it is valid when type is "objectFeature"-->
</advance>
</FieldDetection>
<FaceDetection><!--dep, it is valid when type is "faceDetection"-->
<param>
<region>
<pointList>
<point>
<x/>
<y/>
</point>
</pointList>
</region>
</param>
<duration min="1", max="100"><!--opt, xs: integer--></duration>
<sensitivity min="1", max="100"><!--opt, xs: integer--></sensitivity>
<rate min="1", max="100"><!--opt, xs: integer--></rate>

533

Intelligent Security API (General Application) Developer Guide
<detectionTarget opt="all, human, vehicle><!--req, xs: string--><detectionTarget>
<dwPreTime><!--opt, xs: integer, pre-recording time--></dwPreTime>
<dwDelayTime><!--opt, xs: integer, post-recording time--></dwDelayTime>
<PTZPos>
<P><!--opt, xs: integer--></P>
<T><!--opt, xs: integer--></T>
<Z><!--opt, xs: integer--></Z>
</PTZPos>
<advancedType opt="humanFeature, objectFeature"><!--opt, xs: string--></advancedType>
<advance><!--dep, it is valid when type is "motionDetection"-->
<HumanFeature>
<colorRatel><!--opt, xs: integer--></colorRatel>
<age min="0" max="100"><!--opt, xs: integer--></age>
<sex opt="male,female"><!--opt, xs: string--></sex>
<eyeGlass><!--opt, xs: boolean--></eyeGlass>
</HumanFeature> <!--dep, it is valid when type is "humanFeature"-->
<ObjectFeature>
<colorRatel><!--opt, xs: integer--></colorRatel>
<R></R>
<G></G>
<B></B>
</ObjectFeature><!--dep, it is valid when type is "objectFeature"-->
</advance>
</FaceDetection>
</SmartSearchDescription>

16.2.71 XML_Cap_SoftwareService
SoftwareService capability message in XML format
<SoftwareService version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<ThirdStream><!--opt, third stream configuration-->
<enabled opt="true,false"><!--req, xs: boolean, whether to enable third stream configuration--></enabled>
<thirdStreamPrompt opt="prompt5">
<!--req, xs: string, set audible prompt for third stream, prompt5-"When third stream is enabled, functions such as
intrusion detection, line crossing detection, region entrance detection, region exiting detection, face detection, HDMI,
H.264+ and H265+, are not supported. New settings will take effect after a reboot."-->
</thirdStreamPrompt>
</ThirdStream>
<PanoramaDisplay><!--opt, display the image range on panorama view-->
<enabled opt="true,false" default="false">
<!--req, xs: boolean, whether to enable image range display on panorama view-->
</enabled>
</PanoramaDisplay>
<MotionDetect>
<enabled opt="true,false"><!--whether to enable motion detetion--></enabled>
<MotionDetectPrompt opt="prompt1">
<!--req, xs: string, motion detection audible prompt, prompt1-"When motion detection is enabled, functions such
as intrusion detection, line crossing detection, region entrance detection, and region exiting detection, are not
supported. New settings will take effect after a reboot."-->
</MotionDetectPrompt>

534

Intelligent Security API (General Application) Developer Guide
</MotionDetect>
</SoftwareService>

16.2.72 XML_Cap_StreamingChannel
StreamingChannel capability message in XML format
<StreamingChannel version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id opt="111,222,333,444"><!--req, xs:string, ID--></id>
<channelName min="0" max="64"><!--req, xs:string, channel name--></channelName>
<enabled opt="true,false" def="true"><!--req, xs:boolean--></enabled>
<Transport><!--req-->
<rtspPortNo min="0" max="65535" def="554">554</rtspPortNo>
<maxPacketSize min="0" max="1500"><!--opt, xs:integer--></maxPacketSize>
<audioPacketLength min="0" max="5000"/>
<audioInboundPacketLength min="0" max="5000"/><!--opt, xs:integer-->
<audioInboundPortNo min="0" max="65535"/><!--opt, xs:integer-->
<videoSourcePortNo min="0" max="65535"/><!--opt, xs:integer-->
<audioSourcePortNo min="0" max="65535"/><!--opt, xs:integer-->
<ControlProtocolList><!--req-->
<ControlProtocol><!--list-->
<streamingTransport opt="RTSP/RTP,HTTP"><!--req, xs:string, "HTTP,RTSP,SHTTP,SRTP"--></streamingTransport>
</ControlProtocol>
</ControlProtocolList>
<Unicast><!--opt-->
<enabled opt="true,false" def="false"/><!--req, xs:boolean-->
<rtpTransportType opt="RTP/UDP,RTP/TCP"/><!--opt, xs:string, "RTP/UDP,RTP/TCP"-->
</Unicast>
<Multicast><!--opt-->
<enabled opt="true,false" def="false"/><!--req, xs:boolean-->
<userTriggerThreshold/><!--opt, xs:integer-->
<videoDestPortNo min="1" max="65535" def="8860"/><!--opt, xs:integer-->
<audioDestPortNo min="1" max="65535" def="8860/><!--opt, xs:integer-->
<destIPAddress min="8" max="16"/><!--dep, xs:string-->
<destIPv6Address min="15" max="39"/><!--dep, xs:string-->
<ttl min="0" max="127" def="1"/><!--opt, xs:integer-->
<activeMulticastEnabled>
<!--opt, xs: boolean, "true, false", whether to enable active multicast, which is mutually exclusive with passive
multicast-->
</activeMulticastEnabled>
<packagingFormat opt="RTP,TS,ES,PS"><!--opt, xs: string, encapsulation format--></packagingFormat>
<FecInfo><!--opt-->
<fecRatio min="0" max="100">
<!--req, read-only, xs: integer, extra bandwidth occupation ratio of forward error correction (FEC) data, the value
is between 0 and 100, the default value is 0-->
</fecRatio>
<fecDestPortNo>
<!--opt, xs: integer, port No. of FEC multicast, the default port No. is specified by device-->
</fecDestPortNo>
</FecInfo>
</Multicast>

535

Intelligent Security API (General Application) Developer Guide
<Security><!--opt-->
<enabled opt="true,false" def="false"/><!--req, xs:boolean-->
<certificateType opt="digest,digest/baisc" def="digest"><!--req, xs:string--></certificateType>
</Security>
<SRTPMulticast><!--opt-->
<SRTPVideoDestPortNo min="" max=""><!--opt, xs:integer--></SRTPVideoDestPortNo>
<SRTPAudioDestPortNo min="" max=""><!--opt, xs:integer--></SRTPAudioDestPortNo>
</SRTPMulticast>
</Transport>
<Video>
<enabled opt="true,false">true</enabled>
<videoInputChannelID opt="1,2,3,4">2</videoInputChannelID>
<videoCodecType opt="MJPEG,MPEG4">MPEG4</videoCodecType>
<videoScanType opt="interlaced,progressive">progressive</videoScanType>
<videoResolutionWidth min="0" max="640">640</videoResolutionWidth>
<videoResolutionHeight min="0" max="480">480</videoResolutionHeight>
<videoDiffResolutionList><!--opt, list, if this node exists, it indicates that the resolution depends on the node
<videoCodecType>, and <videoResolutionWidth> and <videoResolutionHeight> are invalid. For forward
compatibility, the maximum set of <videoCodecType>, <videoResolutionWidth>, and <videoResolutionHeight>-->
<videoDiffResolution>
<videoCodecType>
<!--req, xs:string, "MPEG4,MJPEG,3GP,H.264,HK.264,MPNG,SVAC"-->
</videoCodecType>
<videoResolutionWidth><!--req, xs:integer--></videoResolutionWidth>
<videoResolutionHeight><!--req, xs:integer--></videoResolutionHeight>
</videoDiffResolution>
</videoDiffResolutionList>
<videoPositionX min="0" max="640">0</videoPositionX>
<videoPositionY min="0" max="480">0</videoPositionY>
<videoQualityControlType opt="CBR,VBR">CBR</videoQualityControlType>
<constantBitRate min="50" max="4000" dynamic="true">2000</constantBitRate>
<maxFrameRate opt="2500,1250,625,312,156,78，830" >2500</maxFrameRate>
<keyFrameInterval min="0", max="10000">1000</keyFrameInterval>
<rotationDegree opt="0,90,180,270" def="0">0</rotationDegree>
<mirrorEnabled opt="true,false" def="false">false</mirrorEnabled>
<snapShotImageType opt="JPEG" def="JPEG">JPEG</snapShotImageType>
<IntelligentInfoDisplayMethod opt="player,non-player"><!--opt, xs:string, method of displaying intelligent
information: "player", "non-player"--></IntelligentInfoDisplayMethod>
<minimumResolutionSupportedBySmartCode>
<!--opt, xs:string, the minimum resolution supported by smart coding (smart264 and smart265), e.g., "640*512". If
this node is returned, it indicates the smart code of current device (H7, H5) is limited by the minimum resolution, and
the upper layer can get the supported minimum resolution for smart coding of current device. For the resolution
lower than the minimum resolution does not support smart coding. If this node is not returned, it indicates the smart
coding of current device (H3) is not limited by minimum resolution-->
</minimumResolutionSupportedBySmartCode>
</Video>
<Audio>
<enabled opt="true,false" def="false">false</enabled>
<audioInputChannelID opt="1,2,3,4">2</audioInputChannelID>
<audioCompressionType opt="G.726,G.711ulaw" def="G.726">G.726</audioCompressionType>
<audioBitRate opt="16,24,32,40" def="32" dynamic="true">24</audioBitRate>
<audioSamplingRate opt="8" dynamic="true">8</audioSamplingRate>

536

Intelligent Security API (General Application) Developer Guide
<audioResolution opt="3,4,5,6" dynamic="true"/>
</Audio>
<isSpportDynamicCapWithCondition><!--opt, xs:boolean, whether to support dynamic capability with conditions--></
isSpportDynamicCapWithCondition>
<enableCABAC><!--opt, xs:boolean, whether it supports compressing stream to improve performance--></
enableCABAC>
<subStreamRecStatus><!--opt, xs:boolean--></subStreamRecStatus>
<isSupportRefreshFrame><!--opt, xs:boolean, whether it supports refreshing frames when Smart264 is enabled--></
isSupportRefreshFrame>
<isSupportBareDataOverlay><!--opt, xs:boolen--></isSupportBareDataOverlay>
<isSupportRTCPCfg><!--opt, xs:boolean--></isSupportRTCPCfg>
<customStreamEnable><!--opt, xs:boolean, whether the stream is custom stream: "true"-yes, this node is not
returned-no--></customStreamEnable>
</StreamingChannel>

16.2.73 XML_Cap_SupplementLight
SupplementLight capability message in XML format
<SupplementLight><!--opt-->
<mode opt="schedule,off,on,auto"><!--opt, xs: string, adjustment mode of supplement light--></mode>
<Schedule>
<TimeRange><!--req-->
<beginTime><!--req, xs: time, ISO8601 time--></beginTime>
<endTime><!-- req, xs: time, ISO8601 time--></endTime>
</TimeRange>
</Schedule>
<brightnessLimit min="0" max="100">
<!--dep, xs: integer, brightness of supplement light, which is between 0 and 100; the brightness can be adjust when
<mode> is set to "on"-->
</brightnessLimit>
<supplementLightMode opt="mixed,whiteLight,close">
<!--opt, xs: string, illumination mode: "mixed"-hybrid, "whitelight"-white light, "close"-disabled-->
</supplementLightMode>
<irLightBrightness min="0" max="100">
<!--dep, xs: integer, brightness of IR supplement light, which is between 0 and 100; this node is valid only when
<supplementLightMode> is set to "mixed" and <mixedLightBrightnessRegulatMode> is set to "manual"-->
</irLightBrightness>
<mixedLightBrightnessRegulatMode opt="manual,auto">
<!--dep, xs: string, brightness adjustment mode of hybrid supplement light; this node is valid only when
<supplementLightMode> is set to "mixed"-->
</mixedLightBrightnessRegulatMode>
<mixedModeSupportType opt="irLight,whiteLight">
<!--dep, xs: string, light type of hybrid illumination mode, "irLight"-IR light, "whiteLight"-white light-->
</mixedModeSupportType>
<highIrLightBrightness min="0" max="100">
<!--dep, xs: integer, brightness of far IR light, which is between 0 and 100; this node cannot be configured together
with node <irLightBrightness>-->
</highIrLightBrightness>
<highWhiteLightBrightness min="0" max="100">
<!--dep, xs: integer, brightness of far white light, which is between 0 and 100; this node cannot be configured

537

Intelligent Security API (General Application) Developer Guide
together with node <brightnessLimit>-->
</highWhiteLightBrightness>
<lowIrLightBrightness min="0" max="100">
<!--dep, xs: integer, brightness of near IR light, which is between 0 and 100; this node cannot be configured together
with node <irLightBrightness>-->
</lowIrLightBrightness>
<lowWhiteLightBrightness min="0" max="100">
<!--dep, xs: integer, brightness of near white light, which is between 0 and 100; this node cannot be configured
together with node <brightnessLimit>-->
</lowWhiteLightBrightness>
<whiteLightBrightness min="0" max="100"><!--dep, xs: integer, white light brightness, which is between 0 and 100-></whiteLightBrightness>
</SupplementLight>

16.2.74 XML_Cap_SyncSignalOutputList
SyncSignalOutputList capability message in XML format
<SyncSignalOutputList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<IOOutNum min="3" max="8">
<!--req, xs:string, number of IO outputs-->
</IOOutNum>
<SyncSignalOutput>
<id min="1" max="8">
<!--req, xs:integer, ID, which is between 1 and 8-->
</id>
<IOWorkMode opt="flashLight,polarizer,continuousLight,flashLightSwitch">
<!--req, xs:string, IO output mode: "flashLight"-strobe light control mode, "polarizer"-polarizer control mode,
"continuousLight"-solid light control mode, "flashLightSwitch"-strobe light switching mode (used to switch between
the strobe supplement light mode and IR mode). When this node is set to "polarizer", only <outputStatus>,
<detectBrightnessEnable>, <brightnessThreshold>, <flashEnabled>, <startHour>, <startMinute>, <endHour>, and
<endMinute> are valid, and the <outputStatus> can only be set to "high" or "low". When this node is set to
"continuousLight", only <detectBrightnessEnable>, <brightnessThreshold>, <flashEnabled>, <startHour>,
<startMinute>, <endHour>, and <endMinute> are valid-->
</IOWorkMode>
<defaultStatus opt="hige,low">
<!--req, xs:string, effective status-->
</defaultStatus>
<outputStatus opt="high,low,pulse">
<!--req, xs:string, default status-->
</outputStatus>
<aheadTime min="" max="">
<!--req, xs:integer, pre-output time-->
</aheadTime>
<timeDelay min="" max="">
<!--req, xs:integer, output duration-->
</timeDelay>
<freqMultiplyulti min="1" max="15">
<!--req, xs:integer, frequency multiplication, which is between 1 and 15-->
</freqMultiplyulti>
<dutyRate min="0" max="40">

538

Intelligent Security API (General Application) Developer Guide
<!--req, xs:integer, duty ratio, which is between 0 and 40-->
</dutyRate>
<postFlashEnable>
<!--req, xs:boolean-->
</postFlashEnable>
<illegalFlashEnable>
<!--req, xs:boolean-->
</illegalFlashEnable>
<videoFlashEnable>
<!--req, xs:boolean-->
</videoFlashEnable>
<detectBrightnessEnable>
<!--req, xs:boolean-->
</detectBrightnessEnable>
<brightnessThreshold min="0" max="100">
<!--dep, xs:integer, brightness threshold, which is between 0 and 100-->
</brightnessThreshold>
<flashEnabled>
<!--req, xs:boolean-->
</flashEnabled>
<startHour min="" max="">
<!--dep, xs:integer-->
</startHour>
<startMinute min="" max="">
<!--dep, xs:integer-->
</startMinute>
<endHour min="" max="">
<!--dep, xs:integer-->
</endHour>
<endMinute min="" max="">
<!--dep, xs:integer-->
</endMinute>
<plateBrightness>
<!--req, xs:boolean-->
</plateBrightness>
<incrBrightEnable>
<!--opt, xs:boolean, whether to enable brightness enhancement mode (for solid light mode)-->
</incrBrightEnable>
<incrBrightTime min="0" max="10000">
<!--req, xs:integer, brightness enhancement duration, which is between 0 and 10000, unit: millisecond. This node is
valid only when <incrBrightEnable> is "true"-->
</incrBrightTime>
<incrBrightPercent min="0" max="100">
<!--req, xs:integer, percentage of brightness enhancement, which is between 0 and 100. This node is valid only
when <incrBrightEnable> is "true"-->
</incrBrightPercent>
<brightness min="0" max="100">
<!--dep, xs:integer, solid light brightness (for solid light mode), which is between 0 and 100-->
</brightness>
<delayCaptureTime min="1" max="1000">
<!--dep, xs:integer, delayed capture time, which is between 1 and 1000, unit: millisecond. This node is valid only
when <incrBrightEnable> is "true"-->

539

Intelligent Security API (General Application) Developer Guide
</delayCaptureTime>
<manualBrightnessEnable>
<!--req, xs:boolean, whether to enable adjusting brightness manually-->
</manualBrightnessEnable>
<manualBrightness>
<!--dep, xs:integer, brightness adjusted manually, which is between 0 and 100-->
</manualBrightness>
</SyncSignalOutput>
</SyncSignalOutputList>

16.2.75 XML_Cap_Telnetd
Telnetd capability message in XML format
<Telnetd version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled>
<!--req, xs:boolean, whether to enable telnet: "true, false"-->
</enabled>
<radarMsgEnabled>
<!--req, xs:boolean, whether to enable uploading radar debugging information: "true, false"-->
</radarMsgEnabled>
<illeagalLoginLock>
<!--req, xs:boolean, "true, false"-->
</illeagalLoginLock>
</Telnetd>

16.2.76 XML_Cap_tempRange
tempRange capability message in XML format
<?xml version="1.0" encoding="utf-8"?>
<TempRange version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<mode opt="automatic,manual">
<!--req, xs:string, temperature range mode: "automatic"-automatic mode, "manual"-manual mode-->
</mode>
<temperatureUpperLimit min="-20" max="550" def="150">
<!--dep, xs:float, maximum temperature, corrects to one decimal, the minimum value is "-20", the maximum value
is "550", unit: Celsius degree; its value should be larger than temperatureLowerLimit; it is valid when the value of
mode is "manual"-->
</temperatureUpperLimit>
<temperatureLowerLimit min="-20" max="550" def="0">
<!--dep, xs:float, minimum temperature, corrects to one decimal, the minimum value is "-20", the maximum value is
"550", unit: Celsius degree; its value should be smaller than temperatureUpperLimit; it is valid when the value of
mode is "manual"-->
</temperatureLowerLimit>
</TempRange>

540

Intelligent Security API (General Application) Developer Guide
16.2.77 XML_Cap_Time
Time capability message in XML format
<Time version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<timeMode opt="NTP,manual, local,satellite,timecorrect" def="satellite"><!--req, xs:string--></timeMode>
<localTime min="0" max="256">
<!--dep, xs:datetime, this node is required when <timemode> is "manual" or "local"-->
</localTime>
<timeZone min="0" max="256">
<!--dep, xs:string, POSIX time zone string, this node is required when <timemode> is "manual", "local" or "NTP"-->
</timeZone>
<satelliteInterval min="" max="">
<!--dep, xs:integer, minutes, time synchronization interval of locating by satellite, this node is valid only when
<timemode> is "satellite"-->
</satelliteInterval>
<timeType opt="local, UTC">
<!--opt, xs: string, time type, it can be local, or UTC, or local and UTC. If this node is not returned, it indicates that
device does not support getting or setting time type-->
</timeType>
</Time>

16.2.78 XML_Cap_Track
Track capability message in XML format
<Track version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--xs:integer, the value of <id> and <Channel> is the same. For example, 201 refers to the main stream of
channel 1, 202 refers to the sub-stream of channel 2, and so on--></id>
<Channel><!--req, xs:integer--></Channel>
<Enable><!--req, xs:boolean--></Enable>
<Description><!--req, xs:string, e.g., trackType=standard,sourceTag=AXIS210a,contentType=video,codecType=MPEG4SP,resolution=640x480,frameRate=20 fps,bitrate=6000 kbps--></Description>
<TrackGUID><!--req, xs:string, GUID generated by the client, e.g., A01AAAAA-BBBB-CCCC-DDDD-033595353625--></
TrackGUID>
<Size><!--opt, xs:integer--></Size>
<Duration min="0" max="750"><!--opt, xs:string, video expiry date, e.g., P10DT15H indicates that the video will
expire after 10 days and 15 hours--></Duration>
<DefaultRecordingMode opt="CMR,MOTION,ALARM,EDR,ALARMANDMOTION,AllEvent,POS"><!--req, xs:string,
default video type--></DefaultRecordingMode>
<LoopEnable><!--opt, xs:boolean, whether to support recurrently overwriting--></LoopEnable>
<SrcDescriptor><!--video source description-->
<SrcGUID><!--req, xs:string, GUID generated by the device, e.g., E800A543-9D53-4520-8BB8-9509062C692D--></
SrcGUID>
<SrcChannel><!--req, xs:integer, source channel--></SrcChannel>
<StreamHint><!--req, xs:string, e.g., "video, mp4, 640x480, 20 fps, 6000 kbps"--></StreamHint>
<SrcDriver><!--req, xs:string, stream executable driver name, e.g., RTP/RTSP--></SrcDriver>
<SrcType><!--opt, xs:string, source type, e.g., "mp4", "video"--></SrcType>
<SrcUrl opt="rtsp://localhost/PSIA/Streaming/channels/101,rtsp://localhost/PSIA/Streaming/channels/102,rtsp://

541

Intelligent Security API (General Application) Developer Guide
localhost/PSIA/Streaming/channels/103,,rtsp://localhost/PSIA/Streaming/channels/107"><!--req, xs:string, e.g.,
rtsp://10.3.2.26/mpeg4/media.amp--></SrcUrl>
<SrcUrlMethods><!--req, xs:string, methods supported by the source: "DESCRIBE,SETUP,PLAY,TEARDOWN"--></
SrcUrlMethods>
<SrcLogin><!--req, xs:string, login source password--></SrcLogin>
</SrcDescriptor>
<TrackSchedule><!--recording schedule-->
<ScheduleBlockList>
<ScheduleBlock><!--list, recording schedule list-->
<ScheduleBlockGUID><!--xs:string, schedule GUID, e.g., ABC12345-CDEF-4520-8BB8-7135789C8790--></
ScheduleBlockGUID>
<ScheduleBlockType><!--req, xs:string--></ScheduleBlockType>
<ScheduleAction><!--list-->
<id><!--req, xs:integer--></id>
<ScheduleActionStartTime><!--start time of the schedule-->
<DayOfWeek><!--req, xs:string, "Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday"--></
DayOfWeek><!--inclusive-->
<TimeOfDay><!--xs:time, 00:00:00--></TimeOfDay>
</ScheduleActionStartTime>
<ScheduleActionEndTime><!--end time of the schedule-->
<DayOfWeek><!--req, xs:string, "Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday"--></
DayOfWeek><!--exclusive-->
<TimeOfDay><!--xs:time, 08:00:00--></TimeOfDay>
</ScheduleActionEndTime>
<ScheduleDSTEnable><!--req, xs:boolean, whether to enable DST (daylight saving time)--></ScheduleDSTEnable>
<Description><!--req, xs:string, PreMorning (midnight to 8 a.m., local time)--></Description>
<Actions><!--alarm or motion detection that triggers recording-->
<Record><!--opt, xs:boolean--></Record>
<Log><!--opt, xs:boolean--></Log>
<SaveImg><!--opt, xs:boolean--></SaveImg>
<ActionRecordingMode><!--req, xs:string, recording schedule type:
"CMR,EDR,ALARM,MOTION,ALARMANDMOTION,COMMAND,SMART"--></ActionRecordingMode>
<PreRecordTimeSeconds><!--opt, xs:integer, pre-record time, it is between 0 and 10 and the default value is 5,
unit: second--></PreRecordTimeSeconds>
<PostRecordTimeSeconds><!--opt, xs:integer, post-record time, it is between 0 and 20 and the default value is
5, unit: second--></PostRecordTimeSeconds>
</Actions>
</ScheduleAction>
</ScheduleBlock>
</ScheduleBlockList>
</TrackSchedule>
<CustomExtensionList>
<CustomExtension>
<CustomExtensionName><!--opt, xs:string, example: www.isapi.com/RaCM/trackExt/ver10--></
CustomExtensionName>
<enableSchedule><!--opt, xs:boolean, whether to enable recording schedule configuration--></enableSchedule>
<SaveAudio><!--opt, xs:boolean, whether to enable recording audio--></SaveAudio>
<PreRecordTimeSeconds><!--opt, xs:integer, pre-record time, unit: second--></PreRecordTimeSeconds>
<PostRecordTimeSeconds><!--opt, xs:integer, post-record time, unit: second--></PostRecordTimeSeconds>
<HolidaySchedule>
<ScheduleBlock>
<ScheduleBlockGUID><!--req, xs:string, example: 00000000-0000-0000-0000-000000000000--></

542

Intelligent Security API (General Application) Developer Guide
ScheduleBlockGUID>
<ScheduleBlockType><!--opt, xs:string, e.g., www.isapi.com/racm/schedule/ver10--></ScheduleBlockType>
</ScheduleBlock>
</HolidaySchedule>
</CustomExtension>
</CustomExtensionList>
<IntelligentRecord><!--opt, xs:boolean, whether to enable VCA recording function: 0-no, 1-yes--></IntelligentRecord>
<delayTime opt="0,3,4,5,10,30,60,120,300"><!--opt, xs:integer, capture delay time, unit: second--></delayTime>
<durationEnabled opt="true,false"><!--opt, xs:boolean, whether to enable video expiry time. If this function is not
supported, this node will not be returned. If this function is supported, the video expiry date will be set by the node
<Duration>--></durationEnabled>
</Track>

16.2.79 XML_Cap_VCAResource
VCAResource message in XML format
<VCAResource version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<type
opt="basicBehavior,fullBehavior,facesnapBehavior,facesnap,TFS,smartVehicleDetection,smartHVTDetection,smart,judic
ial,smart264AndRoadDetection,smart264AndFaceDetection,smart264AndHeatMap,smartVehicleIllegalParkingDetectio
n,smartIntelligentMonitor,smartTrafficDataCollection, roadDetection,humanRecognition, perimeterCapture,
vehicleDetection,HVTDetection,mixedTargetDetection,trackingCaptureMode,nonTrackingCaptureMode,close,faceHum
anModelingContrast,cityManagement,teacherBehavior,
12MPLiveView,personQueueDetection,verticalPeopleCounting,safetyHelmet">
<!--req, xs: string, intelligent resource types, "trackingCaptureMode"-panoramic capture mode,
"nonTrackingCaptureMode"-single target capture mode, "faceHumanModelingContrast"-resources of face/human
body+face modeling+face picture comparison, "verticalPeopleCounting"-vertical people counting, "safetyHelmet"hard hat detection-->
</type>
<PromptList><!--opt, prompt for switching intelligent resources-->
<Prompt><!--list-->
<resourceType opt="roadDetection">
<!--opt, xs: string, intelligent resource to prompt, currently, only "roadDetection" is supported-->
</resourceType>
<resourcePrompt opt="smartCode">
<!--opt, xs: string, prompt contents-->
</resourcePrompt>
</Prompt>
</PromptList>
</VCAResource>

16.2.80 XML_Cap_VideoInputChannel
VideoInputChannel capability message in XML format
<VideoInputChannel version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs: string--></id>
<inputPort><!--req, xs: string--></inputPort>

543

Intelligent Security API (General Application) Developer Guide
<videoInputEnabled><!--opt, xs: boolean--></videoInputEnabled>
<name><!--opt, xs: string--></name>
<videoFormat opt="PAL,NTSC"><!--opt, xs: string, video standards--></videoFormat>
<portType opt="SDI,OPT,VGA,HDMI,YPbPr"><!--opt, xs: string, port type--></portType>
<resDesc><!--opt, xs: string--></resDesc>
</VideoInputChannel>

16.2.81 XML_Cap_VideoOutputChannel
VideoOutputChannel capability message in XML format
<VideoOutputChannel version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs: string; ID--></id>
<type opt="VGA,CVBS,HDMI,Spot,SDI,LCD"><!--req, xs: string, video output type--></type>
<menu><!--dep, read-only-->
<mirrorMenu><!--req, xs: boolean--></mirrorMenu>
</menu>
<mode opt="close,clip,scale,open,SDI_1080P25,…,HDMI_1080P,HDMI_720P,HDMI_ 2160P">
<!--opt, xs: string, video output mode-->
</mode>
<resolution opt="1920*1080/60HZ,1280*720/50HZ,…"><!--opt, xs: string, video resolution--></resolution>
</VideoOutputChannel>

16.2.82 XML_Cap_VideoOverlay
VideoOverlay capability message in XML format
<VideoOverlay version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<normalizedScreenSize>
<!--req-->
<normalizedScreenWidth>
<!--ro, req, xs:integer-->
</normalizedScreenWidth>
<normalizedScreenHeight>
<!--ro, req, xs:integer-->
</normalizedScreenHeight>
</normalizedScreenSize>
<attribute>
<!--opt-->
<transparent>
<!--req, xs:boolean-->
</transparent>
<flashing>
<!--req, xs:boolean-->
</flashing>
</attribute>
<TextOverlayList/><!--opt, see details in the message of XML_TextOverlayList-->
<DateTimeOverlay/><!--opt, see details in the message of XML_DateTimeOverlay-->
<channelNameOverlay/><!--opt, see details in the message of XML_channelNameOverlay-->

544

Intelligent Security API (General Application) Developer Guide
<fontSize>
<!--opt, xs:string, "adaptive,16*16,32*32,48*48,64*64,80*80,96*96,112*112,128*128"-->
</fontSize>
<frontColorMode>
<!--opt, string, "auto,customize"-->
</frontColorMode>
<frontColor>
<!--dep, xs:hexBinary;color-->
</frontColor>
<BatteryPowerOverlay/><!--opt, see details in the message of XML_BatteryPowerOverlay-->
<alignment opt="customize,alignRight,alignLeft">
<!--opt, xs:string, "customize,alignRight,alignLeft"-->
</alignment>
<publicSecurity>
<!--req, xs:boolean-->
</publicSecurity>
<DeviceStatusDisplay><!--opt-->
<batteryCapacityDisplay>
<!--opt, xs:boolean-->
</batteryCapacityDisplay>
<chargingStatusDisplay>
<!--opt, xs:boolean-->
</chargingStatusDisplay>
<bluetoothStatusDisplay>
<!--opt, xs:boolean-->
</bluetoothStatusDisplay>
<dialStatusDisplay>
<!--opt, xs:boolean-->
</dialStatusDisplay>
</DeviceStatusDisplay>
<boundary>
<!--opt, xs:integer-->
</boundary>
</VideoOverlay>

See Also
XML_TextOverlayList
XML_DateTimeOverlay
XML_channelNameOverlay
XML_BatteryPowerOverlay

16.2.83 XML_Cap_Wireless
Wireless capability message in XML format
<Wireless version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled><!--req, xs:boolean--></enabled>
<wirelessNetworkMode opt="infrastructure,adhoc"><!--opt, xs:string--></wirelessNetworkMode>
<channel opt="1,2,3,4,5,6,7,8,9,10,11,12,13,14,auto"><!--opt, xs:string--></channel>
<ssid min="" max=""><!--opt, xs:string--></ssid>

545

Intelligent Security API (General Application) Developer Guide
<wmmEnabled><!--opt, xs:boolean--></wmmEnabled>
<WirelessSecurity><!--opt-->
<securityMode opt ="disable,WEP,WPA-personal,WPA2-personal,WPA-RADIUS,WPA-enterprise,WPA2-enterprise">
<!--opt, xs:string-->
</securityMode>
<WEP><!--dep, this node depends on <securityMode>-->
<authenticationType opt = "open,sharedkey,auto"><!--req, xs:string--></authenticationType>
<defaultTransmitKeyIndex min="" max=""><!--req, xs:integer--></defaultTransmitKeyIndex>
<wepKeyLength opt="64,128"><!--opt, xs:integer--></wepKeyLength>
<EncryptionKeyList>
<encryptionKey>
<!--req, xs:hexBinary, WEP encryption key in hexadecimal format-->
</encryptionKey>
</EncryptionKeyList>
</WEP>
<WPA><!--dep, depends on <securityMode>-->
<algorithmType opt="TKIP,AES,TKIP/AES"><!--req, xs:string--></algorithmType>
<sharedKey><!-- req, xs:string, pre-shared key used in WPA--></sharedKey>
<wpaKeyLength min="8" max="64"><!--req, xs: integer--></wpaKeyLength>
</WPA>
<support64bitKey opt="WPA-personal, WPA2-personal"/><!--opt, xs:string--></support64bitKey>
</WirelessSecurity>
<AccessPointList>
<InterfaceDisplay><!--opt-->
<TableElementList>
<TableElement>
<!--opt,xs:string,opt="SSID,workingMode,securityMode,channel,signalStrength, speed,connectionStatus"-->
</TableElement>
</TableElementList>
</InterfaceDisplay>
</AccessPointList>
<isSupportConnectStatus>
<!-- opt, xs:boolean, whether supports Wi-Fi connection status-->
</isSupportConnectStatus>
<workScene opt="computerRoom,monitorTerminal"><!--opt, xs:string，working scenario--></workScene>
<protocol opt="802.11ac"><!--req,xs:string, protocol mode--></protocol>
<hideSsid><!--opt, xs:boolean--></hideSsid>
<ChannelConfig><!--opt-->
<transmitPower opt="9,12,15,18,21,24,27"><!--opt, xs:integer, unit: dBm--><transmitPower>
<ChannelCountryList><!--opt>
<Country>
<countryID><!--req, xs:integer, country code--></countryID>
<ChannelList>
<Node>
<width opt="auto,20,40,80"><!--req, xs:string, bandwidth, unit: MHz--></width>
<channel><!--req,dep, xs:string, unit: MHz></channel>
</Node>
</ChannelList>
</Country>
</ChannelCountryList>
</ChannelConfig>
<isSupportNullSsid>

546

Intelligent Security API (General Application) Developer Guide
<!--opt, xs: boolean, whether supports setting SSID to null, if supports, return "true", otherwise, this node will not
be returned. If the SSID is empty, the device will filter the SSID configuration when configuring Wi-Fi-->-->
</isSupportNullSsid>
</Wireless>

16.2.84 XML_Cap_WirelessServer
WirelessServer capability message in XML format
<WirelessServer version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<wifiApEnabled opt="true,false"><!--opt,xs: boolean,--></wifiApEnabled>
<broadcastEnabled opt="true,false"><!--opt,xs: boolean--></broadcastEnabled>
<wlanShareEnabled opt="true,false"><!--opt,xs: boolean--></wlanShareEnabled>
<ssid min="" max=""><!--opt, xs: string--></ssid>
<WirelessSecurity><!--req-->
<securityMode opt="disable,WEP,WPA-personal,WPA2-personal,WPA-RADIUS,WPA-enterprise,WPA2-enterprise">
<!--opt, xs: string-->
</securityMode>
<WEP><!--dep, depends on <securityMode>-->
<authenticationType opt="open,sharedkey,auto">
<!--req, xs: string-->
</authenticationType>
<defaultTransmitKeyIndex min="" max="">
<!--req, xs: integer-->
</defaultTransmitKeyIndex>
<wepKeyLength opt="64,128"><!--opt, xs: integer--></wepKeyLength>
<EncryptionKeyList size="">
<encryptionKey>
<!--req, xs: hexBinary, WEP encryption key in hexadecimal format-->
</encryptionKey>
</EncryptionKeyList>
</WEP>
<WPA><!--dep, depends on <securityMode>-->
<algorithmType opt="TKIP,AES,TKIP/AES">
<!--req, xs: string, "TKIP,AES,TKIP/AES"-->
</algorithmType>
<sharedKey><!--opt, xs: string, shared key used in WPA--></sharedKey>
<wpaKeyLength min="" max=""><!-- opt, xs: integer, the ley length is between 8 and 63--></wpaKeyLength>
<defaultPassword><!--opt, xs: boolean--></defaultPassword>
</WPA>
</WirelessSecurity>
<DHCPEnabled opt="true,false"><!--opt, xs: boolean--></DHCPEnabled>
<ipVersion opt="v4,v6"><!--opt, xs:string--></ipVersion>
<HostIpAddress><!--opt-->
<ipAddress><!--dep, xs:string--></ipAddress>
<ipv6Address><!--dep, xs:string--></ipv6Address>
</HostIpAddress>
<IPMask><!--opt-->
<subnetMask><!--dep, xs:string, subnet mask for IPv4 address--></subnetMask>
<bitMask><!--dep, xs:integer, bitmask IPv6 address--></bitMask>
</IPMask>

547

Intelligent Security API (General Application) Developer Guide
<AddressPool><!--opt-->
<startIPV4Address><!--dep, xs:string--></startIPV4Address>
<endIPV4Address><!--dep, xs:string--></endIPV4Address>
<startIPV6Address><!-- dep, xs:string--></startIPV6Address>
<endIPV6Address><!--dep, xs:string--></endIPV6Address>
<AddressPool>
<DNSAddressList size="2"><!--opt-->
<DNSAddress><!--opt>
<id><!--opt,xs:string,start from 1--></id>
<ipAddress><!--dep, xs: string--></ipAddress>
<ipv6Address><!--dep, xs: string--></ipv6Address>
</DNSAddress>
</DNSAddressList>
<GatewayAddress>
<ipAddress><!--dep, xs:string--></ipAddress>
<ipv6Address><!--dep, xs:string--></ipv6Address>
<GatewayAddress>
<wifiApModeType opt="true,false,auto">
<!--opt, xs: string, current wireless access point (AP) mode, if this node is returned, it indicates that the device
supports auto mode-->
</wifiApModeType>
</WirelessServer>

Remarks
For Client supports auto AP, the node <<wifiApModeType> is valid; for Client does not supports
auto AP, the node <wifiApEnabled> is valid; the values of these two nodes will effect each other,
and when <wifiApModeType> equals to "auto", the value of <wifiApEnabled> is "true".

16.2.85 XML_Cap_WirelessServerStatus
WirelessServerStatus capability message in XML format
<WirelessServerStatus version="1.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<wifiApEnabled>
<!--dep, xs:boolean-->
</wifiApEnabled>
<linkDevices min="0" max="20">
<!--dep, xs:integer, maximum number of linked devices-->
</linkDevices>
<DeviceInfoList size="20">
<!--opt-->
<DeviceInfo>
<!--opt-->
<IpAddress>
<!--req-->
<ipAddress>
<!--dep, xs:string-->
</ipAddress>
<ipv6Address>
<!--dep, xs:string-->

548

Intelligent Security API (General Application) Developer Guide
</ipv6Address>
</IpAddress>
<hostName>
<!--opt, xs:string-->
</hostName>
<macAddress>
<!--opt, xs:string-->
</macAddress>
</DeviceInfo>
</DeviceInfoList>
</WirelessServerStatus>

16.2.86 XML_Cap_WirelessStatus
WirelessStatus capability message in XML format
<WirelessStatus version="1.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled>
<!--dep, xs:boolean-->
</enabled>
<connectionEnabled>
<!--dep, xs:boolean-->
</connectionEnabled>
<IpAddress>
<!--req-->
<ipAddress>
<!--dep, xs:string-->
</ipAddress>
<ipv6Address>
<!--dep, xs:string-->
</ipv6Address>
</IpAddress>
<SubnetMask>
<!--req-->
<ipAddress>
<!--dep, xs:string-->
</ipAddress>
<ipv6Address>
<!--dep, xs:string-->
</ipv6Address>
</SubnetMask>
<RouterAddress>
<!--req-->
<ipAddress>
<!--dep, xs:string-->
</ipAddress>
<ipv6Address>
<!--dep, xs:string-->
</ipv6Address>
</RouterAddress>
<DNSAddressList size="2">

549

Intelligent Security API (General Application) Developer Guide
<!--opt-->
<DNSAddress>
<!--opt-->
<id>
<!--opt, xs:string, DNS address ID, which starts from 1-->
</id>
<ipAddress>
<!--dep, xs:string-->
</ipAddress>
<ipv6Address>
<!--dep, xs:string-->
</ipv6Address>
</DNSAddress>
</DNSAddressList>
</WirelessStatus>

16.2.87 XML_CaptureMode
CaptureMode message in XML format
<CaptureMode version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<mode>
<!--req, xs: string, video input mode: 1-640×480@30fps, 2-4CIF@30fps, 3-720P@25fps, 4-720P@30fps,
5-720P@60fps, 6-1280×960@15fps, 7-1280×960@25fps, 8-1280×960@30fps, 9-1280×1024@30fps,
10-1600×900@15fps, 11-1600×1200@15fps, 12-1080P@15fps, 13-1080P@25fps, 14-1080P@30fps,
15-1080P@50fps, 16-1080P@60fps, 17-2048×1536@15fps, 18-2048×1536@20fps, 19-2048×1536@24fps,
20-2048×1536@25fps, 21-2048×1536@30fps, 22-2560×2048@25fps, 23-2560×2048@30fps, 24-2560×1920@7.5fps,
25-3072×2048@30fps, 26-1944×1212@24fps, 27-1944×1212@25fps-->
</mode>
</CaptureMode>

16.2.88 XML_CertificateInfo
CertificateInfo message in XML format
<CertificateInfo version="1.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs: string--></id>
<version><!--opt, xs: string--></version>
<IssuerDN><!--req, isapi:DN-->
<countryName><!--req, xs: string--></countryName>
<stateOrProvinceName><!--opt, xs: string--></stateOrProvinceName>
<localityName><!--opt, xs: string--></localityName>
<organizationName><!--opt, xs: string--></organizationName>
<organizationUnitName><!--opt, xs: string--></organizationUnitName>
<commonName><!--req, xs: string--></commonName>
<email><!--opt, xs: string--></email>
</IssuerDN>
<SubjectDN><!--req,isapi:DN-->
<countryName><!--req, xs: string--></countryName>

550

Intelligent Security API (General Application) Developer Guide
<stateOrProvinceName><!--opt, xs: string--></stateOrProvinceName>
<localityName><!--opt, xs: string--></localityName>
<organizationName><!--opt, xs: string--></organizationName>
<organizationUnitName><!--opt, xs: string--></organizationUnitName>
<commonName><!--req, xs: string--></commonName>
<email><!--opt, xs: string--></email>
</SubjectDN>
<signatureAlgorithm><!--req, xs: string, signature algorithm: RSA_3, RSA_F4--></signatureAlgorithm>
<keyAlgorithm><!--opt, xs: string--></keyAlgorithm>
<startDate><!--req, xs: time, in ISO8601 time format--></startDate>
<endDate> !--req, xs: time, in ISO8601 time format--></endDate>
<serialNumber><!--req, xs: string, uuid--></serialNumber>
</CertificateInfo>

16.2.89 XML_CertificateReq
CertificateReq message in XML format
<CertificateReq version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs: string--></id>
<SubjectDN><!--req, isapi:DN-->
<countryName><!--req, xs: string--></countryName>
<stateOrProvinceName><!--opt, xs: string--></stateOrProvinceName>
<localityName><!--opt, xs: string--></localityName>
<organizationName><!--opt, xs: string--></organizationName>
<organizationUnitName><!--opt, xs: string--></organizationUnitName>
<commonName><!--req, xs: string --></commonName>
<email><!--opt, xs: string--></email>
</SubjectDN>
<validity><!--opt, xs: integer, expiry date, which is between 1 and 5000--></validity>
<passwd><!--opt, xs: string, password to protect private key--></passwd>
<RSAKeyLength><!--opt, xs: integer--></RSAKeyLength>
</CertificateReq>

16.2.90 XML_CertificateReq_ImportCert
CertificateReq message in XML format
<CertificateReq version="1.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<certificateMode><!--opt, xs:string, importing method: "signingRequest"-signature request (import self-signed
certificate), "privateKey"-private key--></certificateMode>
<privateKeyMode><!--dep, xs:string, private key mode: "seperateKey", "PKCS#12"--></privateKeyMode>
<seperateKeyPassword><!--dep, xs:string, password in seperateKey mode, it should be encrypted--></
seperateKeyPassword>
<PKCSPassword><!--dep, xs:string, password in PKCS#12 mode, it should be encrypted--></PKCSPassword>
<dataType><!--dep, xs:string, data type: "certificate", "privateKey"-private key--><dataType>
</CertificateReq>

551

Intelligent Security API (General Application) Developer Guide
16.2.91 XML_CertificateReqInfo
CertificateReqInfo message in XML format
<CertificateReqInfo version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs: string--></id>
<SubjectDN><!--req, isapi:DN-->
<countryName><!--req, xs: string--></countryName>
<stateOrProvinceName><!--opt, xs: string--></stateOrProvinceName>
<localityName><!--opt, xs: string--></localityName>
<organizationName><!--opt, xs: string--></organizationName>
<organizationUnitName><!--opt, xs: string--></organizationUnitName>
<commonName><!--req, xs: string --></commonName>
<email><!--opt, xs: string--></email>
</SubjectDN>
<version><!--opt, xs: string--></version>
<validity><!--opt, xs:int, expiry date, which is between 1 and 5000--></validity>
<keyAlgorithm><!--opt, xs: string--></keyAlgorithm>
<passwd><!--opt, xs: string, password to protect private key--></passwd>
<RSAKeyLength><!--opt, xs: integer--></RSAKeyLength>
</CertificateReqInfo>

16.2.92 XML_CertificateResult
CertificateResult message in XML format
<CertificateResult version="1.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<formatType><!--req, xs:string, certificate format, e.g., "PEM"--><formatType>
<detailInfo><!--req, xs:string, certificate details--></detailInfo>
</CertificateResult>

16.2.93 XML_Challenge
Challenge message in XML format.
<Challenge version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<key><!--req, xs:string--></key>
</Challenge>

16.2.94 XML_ChanCtrl
ChanCtrl message (for traffic) in XML format
<ChanCtrl version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<streamGetType><!--streaming mode: 0-live view mode (default), 1-data receiving mode--></streamGetType>
</ChanCtrl>

552

Intelligent Security API (General Application) Developer Guide
16.2.95 XML_ChannelEventCap
ChannelEventCap message in XML format
<ChannelEventCap version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<eventType opt="VMD,motionDetection,shelteralarm,
tamperDetection,videoLoss,ROI,facedetection,faceDetection,intelliTrace,fielddetection,fieldDetection,defocus,defocus
Detection,audioexception,audioDetection,scenechangedetection,sceneChangeDetection,linedetection,lineDetection,r
egionEntrance,regionExiting,loitering,group,rapidMove,parking,unattendedBaggage,attendedBaggage,peopleDetectio
n,storageDetection,behavior,faceCapture,faceSnap,ANPR,vehicleDetection,fireDetection,shipsDetection,PIR,targetCapt
ure,humanRecognition,alarmResult,faceContrast,framesPeopleCounting,hide,audioLoss,cameraAngleAnormaly,violent
Motion,trial,humanEnter,operateOverTime,stickUp,installScanner,faceDetect,temperature,temperatureDetection,peop
leCounting,personQueueDetection,heatmap,mixedTargetDetection,MTD_face,MTD_human,MTD_vehicle,MTD_nonM
otor,faceSnapModeling,HVTVehicleDetection,PictureCaptureComparision,IO,smokeDetection,smokeAndFireDetection,
diskfull,diskerror,nicbroken,ipconflict,illaccess,personDensityDetection,AID,vehicleControl,vehicleRcogResult,cardMatc
h,overSpeed,highTempAlarm,abnormalAcceleration,failDown,leavePosition,peopleNumChange,retention,running,ther
mometry,heatmapPDC,heatmapDuration,intersectionAnalysis,AID_abandonedObject,AID_pedestrian,AID_congestion,
AID_roadBlock,AID_construction,AID_trafficAccident,AID_fogDetection,TFS_illegalParking,TFS_wrongDirection,TFS_cro
ssLane,TFS_laneChange,TFS_vehicleExist,TFS_turnRound,TFS_parallelParking,TPS,luma,chroma,snow,streak,freeze,sigLo
se,clarity,jitter,block,flowers,noise,ghost,purple,ICR,protectiveFilm"/>
<!--req, xs:string, event types supported by the channel-->
<shieldEventType opt="behavior,faceSnap,humanRecognition,faceCapture,targetCapture"/>
<!--req, xs:string, event types that support area shield-->
<channelID><!--opt, xs:integer, current device channel No.--></channelID>
<id><!--req, xs:integer--></id>
</ChannelEventCap>

Remarks
The node <eventType> can be set to the following values: VMD, motionDetection, shelteralarm,
tamperDetection, videoLoss, ROI, facedetection, faceDetection, intelliTrace, fielddetection,
fieldDetection, defocus, defocusDetection, audioexception, audioDetection,
scenechangedetection, sceneChangeDetection, linedetection, lineDetection, regionEntrance,
regionExiting, loitering, group, rapidMove, parking, unattendedBaggage, attendedBaggage,
peopleDetection, storageDetection, behavior, faceCapture, faceSnap, ANPR, vehicleDetection,
fireDetection, shipsDetection, PIR, targetCapture, humanRecognition, alarmResult, faceContrast,
framesPeopleCounting, hide, audioLoss, cameraAngleAnormaly, violentMotion, trial, humanEnter,
operateOverTime, stickUp, installScanner, faceDetect, temperature, temperatureDetection,
peopleCounting, personQueueDetection, heatmap, mixedTargetDetection, MTD_face,
MTD_human, MTD_vehicle, MTD_nonMotor, faceSnapModeling, HVTVehicleDetection,
PictureCaptureComparision, IO, smokeDetection, smokeAndFireDetection, diskfull, diskerror,
nicbroken, ipconflict, illaccess, personDensityDetection, AID, vehicleControl, vehicleRcogResult,
cardMatch, overSpeed, highTempAlarm, abnormalAcceleration, failDown, leavePosition,
peopleNumChange, retention, running, thermometry, heatmapPDC, heatmapDuration,
intersectionAnalysis, AID_abandonedObject, AID_pedestrian, AID_congestion, AID_roadBlock,
AID_construction, AID_trafficAccident, AID_fogDetection, TFS_illegalParking, TFS_wrongDirection,
TFS_crossLane, TFS_laneChange, TFS_vehicleExist, TFS_turnRound, TFS_parallelParking, TPS, luma,

553

Intelligent Security API (General Application) Developer Guide
chroma, snow, streak, freeze, sigLose, clarity, jitter, block, flowers, noise, ghost, purple, ICR,
protectiveFilm, certificateRevocation.
Event Type

Description

VMD (motionDetection)

Motion detection

Shelteralarm (tamperDetection)

Video tampering alarm

videoLoss

Video loss

ROI

Region of interest

facedetection (faceDetection)

Face detection

intelliTrace

Auto-track

fielddetection (fieldDetection)

Intrusion detection

defocus (defocusDetection)

Defocus detection

audioexception (audioDetection)

Audio exception detection

scenechangedetection
(sceneChangeDetection)

Sudden scene change detection

linedetection (lineDetection)

Line-crossing detection

regionEntrance

Region entrance detection

regionExiting

Region exiting detection

loitering

Loitering detection

group

People gathering detection

rapidMove

Fast moving detection

parking

Parking detection

unattendedBaggage

Unattended baggage

attendedBaggage

Object removal detection

peopleDetection

Human detection

storageDetection

HDD health detection

behavior

Behavior analysis

faceCapture(faceSnap)

Face capture

ANPR(vehicleDetection)

Vehicle detection

fireDetection

Fire detection

shipsDetection

Ship detection

554

Intelligent Security API (General Application) Developer Guide
Event Type

Description

PIR

PIR alarm

targetCapture (humanRecognition)

Target capture

alarmResult (faceContrast)

Face comparison

framesPeopleCounting

People counting in single frame

hide

Tampering detection

audioLoss

Audio loss

cameraAngleAnormaly

Image exception

violentMotion

Violent motion

trial

Tailing

humanEnter

Human entrance

operateOverTime

Operation timed out

stickUp

Sticking scrip

installScanner

Installing scanner

faceDetect

ATM face detection

temperature (temperatureDetection)

Temperature difference detection

PeopleCounting

People counting

personQueueDetection

People queuing-up detection

heatmap

Heat map

mixedTargetDetection

Multi-target-type detection

MTD_face

Supported face attributes of multi-target-type
detection (MTD)

MTD_human

Supported human attributes of multi-target-type
detection (MTD)

MTD_vehicle

Supported motor vehicle attributes of multi-targettype detection (MTD)

MTD_nonMotor

Supported non-motor vehicle attributes of multitarget-type detection (MTD)

faceSnapModeling

Face capture modeling

HVTVehicleDetection

Mixed-traffic detection

PictureCaptureComparision

N:1 face comparison

555

Intelligent Security API (General Application) Developer Guide
Event Type

Description

IO

Sensor alarm

smokeDetection

Smoke detection

smokeAndFireDetection

Smoke and fire detection

diskfull

HDD is full

diskerror

HDD error

nicbroken

Network disconnected

ipconflict

IP address conflicted

illaccess

Illegal access

personDensityDetection

People density detection

vehicleControl

Upload alarm of vehicle in whitelist and blacklist

vehicleRcogResult

Vehicle secondary recognition

cardMatch

Authentication

overSpeed

Overspeed alarm

highTempAlarm

High temperature alarm

abnormalAcceleration

Abnormal accelerated speed alarm

failDown

People falling down

leavePosition

Absence detection

peopleNumChange

The number of people changed

retention

Overstay detection

running

Running

thermometry

Temperature measurement

heatmapPDC

Heat map people counting

heatmapDuration

Heat map people staying duration

intersectionAnalysis

Intersection analysis

AID_abandonedObject

Thrown object in traffic events

AID_pedestrian

Pedestrian detection in traffic events

AID_​congestion

Congestion detection in traffic events

AID_roadBlock

Roadblock detection in traffic events

AID_​construction

Construction detection in traffic events

556

Intelligent Security API (General Application) Developer Guide
Event Type

Description

AID_​trafficAccident

Traffic accident detection in traffic events

AID_​fogDetection

Fog detection in traffic events

TFS_illegalParking

Illegal parking of enforcement events

TFS_​wrongDirection

Wrong-way driving of enforcement events

TFS_crossLane

Driving on lane line of enforcement events

TFS_laneChange

Lane change of enforcement events

TFS_vehicleExist

Vehicle existing of enforcement events

TFS_turnRound

Turning round of enforcement events

TFS_parallelParking

Parallel parking of enforcement events

TPS

Traffic data collection configuration

luma

Brightness exception

chroma

Color cast detection

snow

Snow noise

streak

Stripe noise

freeze

Image freeze

sigLose

Signal loss

clarity

Clarity exception

jitter

Image flutter

block

Video tampering

flowers

Blurred screen detection

noise

Image noise

ghost

Abnormal light spot detection

purple

Image purple edge detection

ICR

ICR exception detection

protectiveFilm

Protective film unremoved

certificateRevocation

Certificate is expired

557

Intelligent Security API (General Application) Developer Guide
Note
The following event type values are updated to new version: VMD (motionDetection), Shelteralarm
(tamperDetection), facedetection (faceDetection), fielddetection (fieldDetection), defocus
(defocusDetection), audioexception (audioDetection), scenechangedetection
(sceneChangeDetection), linedetection (lineDetection), faceCapture (faceSnap), ANPR
(vehicleDetection), targetCapture (humanRecognition), alarmResult (faceContrast), and
temperature (temperatureDetection). The value in the bracket is the old version, and considering
the compatibility, both new and old value should be returned.

16.2.96 XML_ChannelInfo
ChannelInfo message in XML format.
<ChannelInfo version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs:integer, channel number--></id>
<EagleEye>
<!--opt, the channel supports the functions of PanoVu series camera-->
<StreamFusion>
<!--opt, "panoramic + PTZ camera streaming channel, it is not returned when not support-->
<InsertChanNo><!--opt, xs:integer, connected channel number--></InsertChanNo>
</StreamFusion>
<PanoramicMetaData>
<!--opt, panoramic camera streaming channel, it is not returned when not support-->
<InsertChanNo><!--opt, xs:integer, connected channel number--></InsertChanNo>
</PanoramicMetaData>
</EagleEye>
<FishEye>
<!--opt, the channel supports the functions of fisheye camera-->
<FishEyeStream>
<!--opt, fisheye camera stream, it is used for software decoding of play library, it is not returned when not
support-->
<InsertChanNo><!--opt, xs:integer, connected channel number--></InsertChanNo>
</FishEyeStream>
</FishEye>
<Thermal>
<!--opt, the channel supports the functions of thermal products-->
<TemperatureMetaData>
<!--opt, thermometry metadata, it is not returned when not support-->
<InsertChanNo><!--opt, xs:integer, connected channel number--></InsertChanNo>
</TemperatureMetaData>
<ThermometryDetection>
<!--opt, thermometry detection, it is not returned when not support-->
<InsertChanNo><!--opt, xs:integer, connected channel number--></InsertChanNo>
</ThermometryDetection>
<ThermometryDiffDetection>
<!--opt, temperature difference detection, it is not returned when not support-->
<InsertChanNo><!--opt, xs:integer, connected channel number--></InsertChanNo>
</ThermometryDiffDetection>

558

Intelligent Security API (General Application) Developer Guide
<FireDetection>
<!--opt, fire detection, it is not returned when not support-->
<InsertChanNo><!--opt, xs:integer, connected channel number--></InsertChanNo>
</FireDetection>
<SmokeDetection>
<!--opt,smoke detection, it is not returned when not support-->
<InsertChanNo><!--opt, xs:integer, connected channel number--></InsertChanNo>
</SmokeDetection>
<ShipsDetection>
<!--opt, ship detection,it is not returned when not support-->
<InsertChanNo><!--opt, xs:integer, connected channel number--></InsertChanNo>
</ShipsDetection>
<IntelligentRuleDisplay>
<!--opt, intelligent rule display parameters of thermal application, it is not returned when not support-->
<InsertChanNo><!--opt, xs:integer, connected channel number--></InsertChanNo>
</IntelligentRuleDisplay>
<IntelligentBehaviorRule>
<!--opt, intelligent behavior rule configureation, it is not returned when not support-->
<InsertChanNo><!--opt, xs:integer, connected channel number--></InsertChanNo>
</IntelligentBehaviorRule>
<DPC>
<!--opt, defective pixel correction, it is not returned when not support-->
<InsertChanNo><!--opt, xs:integer, connected channel number--></InsertChanNo>
</DPC>
<Metadata>
<!--opt, metadata extraction,it is not returned when not support-->
<InsertChanNo><!--opt, xs:integer, connected channel number--></InsertChanNo>
</Metadata>
<ThermometryShieldMask>
<!--opt, thermometry shielded area,it is not returned when not support-->
<InsertChanNo><!--opt,xs:integer, connected channel number--></InsertChanNo>
</ThermometryShieldMask>
<LensCorrection>
<!--opt, lens correction, when this node is not returned, it indicates not support-->
<InsertChanNo><!--opt, xs:integer, access channel number--></InsertChanNo>
</LensCorrection>
<BurningPrevention>
<!--opt, burning prevention, when this node is not returned, it indicates not support-->
<InsertChanNo><!--opt, xs:integer, access channel number--></InsertChanNo>
</BurningPrevention>
</Thermal>
<isSupportChangedUpload/><!--opt, xs: boolean, whether supports uploading status changes-->
<PanoramaCamera><!--opt, PTZ camera channel-->
<PTZCtrl>
<InsertChanNo><!--opt, xs:integer, access channel number--></InsertChanNo>
</PTZCtrl>
</PanoramaCamera>
<GlobalCamera><!--opt, Panoramic camera channe-->
<InsertChanNo><!--opt,xs:integer, access channel number--></InsertChanNo>
</GlobalCamera>
</ChannelInfo>

559

Intelligent Security API (General Application) Developer Guide
16.2.97 XML_ChannelInfoList
ChannelInfoList message in XML format
<ChannelInfoList>version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<ChannelInfo/><!--see details in the message of XML_ChannelInfo-->
</ChannelInfoList>

See Also
XML_ChannelInfo

16.2.98 XML_channelNameOverlay
channelNameOverlay message in XML format
<channelNameOverlay version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled>
<!--req, xs:boolean, whether to enable channel name overlay-->
</enabled>
<name>
<!--req, xs:string, channel name-->
</name>
<positionX>
<!--req, xs:integer, X-coordinate-->
</positionX>
<positionY>
<!--req, xs:integer, Y-coordinate-->
</positionY>
</channelNameOverlay>

16.2.99 XML_CheckInfo
CheckInfo message in XML format
<CheckInfo version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<randomString><!--req, xs: string, random string--></randomString>
<verificationCode>
<!--opt, xs: string, verification code to be sent, which will be encrypted by sha256, and then convert the
hexadecimal code to a string, finally it will be encoded by Base64. The format is first 32-byte of randomString + actual
verification code-->
</verificationCode>
</CheckInfo>

560

Intelligent Security API (General Application) Developer Guide
16.2.100 XML_CMSearchDataPackage
CMSearchDataPackage message in XML format.
<CMSearchDataPackage version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<metaId>
<!--required, string type, metadata ID, its format is log.std-cgi.com+/major type+/minor type-->
</metaId>
<timeSpanList>
<timeSpan>
<startTime><!--required, start time with ISO8601 time format, e.g., 2017-08-02T00:00:00Z--></startTime>
<endTime><!--required, end time with ISO8601 time format, e.g., 2017-08-02T00:00:00Z--></endTime>
</timeSpan>
</timeSpanList>
</CMSearchDataPackage>

16.2.101 XML_CMSearchDataPackageResult
CMSearchDataPackageResult message in XML format.
<CMSearchDataPackageResult version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<url>
<!--required, string type, file URL, e.g., http://ip:port//ISAPI/ContentMgmt/logSearch/dataPackage/data?xx-->
</url>
</CMSearchDataPackageResult>

16.2.102 XML_CMSearchDescription
CMSearchDescription message in XML format
<CMSearchDescription version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<searchID>
<!--req, xs:string, search ID, e.g., {812F04E0-4089-11A3-9A0C-0305E82C2906}-->
</searchID>
<trackIDList>
<trackID>
<!--req, xs:integer, ID, XX01-search for the main stream video of channel XX, XX03-search for the pictures of
channel XX-->
</trackID>
</trackIDList>
<timeSpanList>
<timeSpan>
<startTime><!--req, xs:time, ISO8601 time, start time of search, e.g.: 2017-08-02T00:00:00Z--></startTime>
<endTIme><!--req, xs:time, ISO8601 time, end time of search, e.g.: 2017-08-02T23:59:59Z--></endTime>
<timeSpan>
</timeSpanList>
<metaID><!--req, xs:string, metadata ID, e.g., log.std-cgi.com/Infomation/visAlarm--></metaID>
<searchResultPostion><!--req, xs:integer, position of search result--></searchResultPostion>

561

Intelligent Security API (General Application) Developer Guide
<maxResults><!--req, xs:integer, maximum number of search results--></maxResults>
<contentTypeList>
<contentType></contentType>
</contentTypeList>
<maxResults></maxResults>
<metadataList>
<metadataDescriptor>
<!--searching conditions:
"evidence,illegalParking,crosslane,vehicleexist,lanechange,wrongdirection,congestion,turnround,pedestrian,constructi
on,roadBlock,abandonedObject,trafficAccident,fogDetection,dredgerDetection,safetyHelmet"-->
</metadataDescriptor>
<SearchProperity>
<plateSearchMask>
<!--opt, xs:string, ranges from 1 to 31-->
</plateSearchMask>
<stateOrProvince>
<!--opt, xs:integer-->
</stateOrProvince>
<country>
<!--opt, xs:string, country or region ID: 0-the algorithm library does not support the country or region ID,1-(CZCzech Republic),2-(FRA-France),3-(DE-Germany),4-(E-Spain),5-(IT-Italy),6-(NL-Netherlands),7-(PL-Poland),8-(SVKSlovakia), 9-(BY-Belorussia), 10-(MDA-Moldova),11-(RU-Russia),12-(UA-Ukraine), 0xff-(All)-->
</country>
</SearchProperity>
</metadataList>
</CMSearchDescription>

16.2.103 XML_CMSearchProfile
CMSearchProfile message in XML format
<CMSearchProfile version="1.0" xmlns="ISAPIllianxce.org:resourcedescription">
<searchProfile><!--req, xs: string, video search conditions--></searchProfile>
<textSearch>
<!--req, xs: string, text type to be searched, such as recording information text and metadata text-->
</textSearch>
<maxSearchTimespans>
<!--req, xs: integer, maximum time period of results returned in each search-->
</maxSearchTimespans>
<maxSearchTracks><!--req, xs: integer, maximum tracks can be searched--></maxSearchtracks>
<maxSearchSources>
<!--req, xs: integer, maximum recording channels can be searched-->
</maxSearchSources>
<maxSearchMetadatas>
<!--req, xs: integer, maximum number of metadata can be searched-->
</maxSearchMetadatas>
<maxSearchMatchResults>
<!--req, xs: integer, maximum search results can be returned-->
</maxSearchMatchResults>
<maxSearchTimeout><!--req, xs: integer, maximum search timeout--></maxSearchTimeout>
<maxConcurrentSearches>

562

Intelligent Security API (General Application) Developer Guide
<!--req, xs: integer, maximum concurrent search operations-->
</maxConcurrentSearches>
</CMSearchProfile>

16.2.104 XML_CMSearchResult
CMSearchResult message in XML format
<CMSearchResult version="2.0" xmlns="http://www.isapi.com/ver20/XMLSchema">
<searchID><!--req, xs:string, search ID--></searchID>
<responseStatus><!--req, xs:string--></responseStatus>
<responseStatusStrg><!--req, xs:string--></responseStatusStrg>
<numOfMatches><!--opt, xs:integer--></numOfMatches>
<matchList>
<searchMatchItem>
<logDescriptor>
<metaId><!--req, xs:string--></metaId>
<StartDateTime><!--req, xs:time, ISO8601 time--></StartDateTime>
<paraType><!--opt, xs:string--></paraType>
<userName><!--opt, xs:string--></userName>
<logInfo><!--dep, log details-->
<OpenDoorRecord>
<type><!—req, xs: string, unlocking type: password, hijack (unlock under duress), card, resident, center--></
type>
</OpenDoorRecord>
<VisAlarmRecord>
<type>
<!—req, xs: string, alarm category: zone (zone alarm), dismantle (tampering alarm), hijack (duress alarm),
passwordErr (wrong password alarm), doorNotOpen-(door closed alarm), doorNotClose (door open alarm), SOS,
callReq (call request alarm), smartLockHijackFingerPrint (fingerprint duress alarm), smartLockHijackPassword
(password duress alarm), smartLockBreaking (forced-open door alarm), smartLockBeLocked (door locked alarm),
smartLockLowBattery (low battery alarm)-->
</type>
</VisAlarmRecord>
</logInfo>
<ipAddress><!--opt, xs:string--></ipAddress>
<object><!--opt, xs:string, "network", "keypad", "remoteCtrl"-keyfob, "card"--></object>
<params><!--opt, xs:string, parameters, such as zone No. and so on--></params>
<seq><!--opt, xs:string, serial No.--></seq>
<additionInformation><!--opt, xs:string, additional information--></additionInformation>
</logDescriptor>
</searchMatchItem>
<matchElement>
<sourceID></sourceID>
<trackID></trackID>
<timeSpan>
<startTime></startTime>
<endTime></endTime>
</timeSpan>
<mediaSegmentDescriptor>
<contenType></contenType>

563

Intelligent Security API (General Application) Developer Guide
<codecType></codecType>
<rateType></rateType>
<playbackURI></playbackURI>
</mediaSegmentDescriptor>
<metadataMatches>
<metadataDescriptor><!--searching conditions:
"evidence,illegalParking,crosslane,vehicleexist,lanechange,wrongdirection,congestion,turnround,pedestrian,constructi
on,roadBlock,abandonedObject,trafficAccident,fogDetection"--></metadataDescriptor>
</metadataMatches>
</matchElement>
</matchList>
</CMSearchResult>

16.2.105 XML_CMSRecordProfile
CMSRecordProfile message in XML format
<CMRecordProfile version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<trackType><!--opt, xs: string, video track type--></trackType>
</CMRecordProfile>

16.2.106 XML_Color
Color message in XML format
<Color version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<brightnessLevel><!--opt, xs:integer, brightness--></brightnessLevel>
<contrastLevel><!--opt,xs:integer, contrast--></contrastLevel>
<saturationLevel><!--opt,xs:integer, saturation--></saturationLevel>
<hueLevel><!--opt, xs:integer, hue--></hueLevel>
<grayScale>
<grayScaleMode><!--opt,xs:string, gray scale mode: "indoor,outdoor"--></grayScaleMode>
</grayScale>
<nightMode>
<!--opt, xs:boolean, enable night mode, when its value is "true", the saturation can be adjusted, otherwise, the
saturation cannot be adjusted-->
</nightMode>
</Color>

16.2.107 XML_corridor
corridor message in XML format
<corridor version="2.0" xmlns="http://www.std-cgi.org/ver20/XMLSchema">
<enabled><!--req, xs: boolean, whether to enable rotate mode--></enabled>
<mirror><!--opt, xs: string, mirror mode: "on,off"--></mirror>
</corridor>

564

Intelligent Security API (General Application) Developer Guide
16.2.108 XML_DateTimeOverlay
DateTimeOverlay message in XML format
<DateTimeOverlay version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled>
<!--req, xs:boolean, whether to enable date and time overlay-->
</enabled>
<positionX>
<!--req, xs:integer, X-coordinate-->
</positionX>
<positionY>
<!--req, xs:integer, Y-coordinate-->
</positionY>
<dateStyle>
<!--opt, xs:string, date format: "YYYY-MM-DD, MM-DD-YYYY, DD-MM-YYYY, CHR-YYYY-MM-DD, CHR-MM-DD-YYYY,
CHR-DD-MM-YYYY"-->
</dateStyle>
<timeStyle>
<!--opt, xs:string, "12hour, 24hour"-->
</timeStyle>
<displayWeek>
<!--opt, xs:boolean, whether to display week information-->
</displayWeek>
<displayMilliSecond>
<!--opt, xs:boolean, whether to display millisecond-->
</displayMilliSecond>
</DateTimeOverlay>

16.2.109 XML_DDNS
DDNS message in XML format
<DDNS version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id>
<!--req, xs: string-->
</id>
<enabled>
<!--req, xs:boolean, "true,false"-->
</enabled>
<ethernetIfId>
<!--opt, xs:string, ID. This node is used to link the DDNS to a network interface which is used by the DDNS client to
register-->
</ethernetIfId>
<provider>
<!--req, xs:string, "IPServer, DynDNS, PeanutHall, NO-IP, HiDDNS..."-->
</provider>
<serverAddress><!--DDNS address. This node is required when <provider> is "IPServer"-->
<addressingFormatType>

565

Intelligent Security API (General Application) Developer Guide
<!--req, xs:string, method used to locate the NTP server: "ipaddress, hostname"-->
</addressingFormatType>
<hostname>
<!--dep, xs:string-->
</hostName>
<ipAddress>
<!--dep, xs:string-->
</ipAddress>
<ipv6Address>
<!--dep, xs:string-->
</ipv6Address>
</serverAddress>
<portNo>
<!--opt, xs:integer, port No-->
</portNo>
<deviceDomainName>
<!--dep, xs:string, domain name of the device-->
</deviceDomainName>
<username>
<!--dep, xs:string-->
</userName>
<password>
<!--wo, dep, xs:string-->
</password>
</DDNS>

16.2.110 XML_DDNSList
DDNSList message in XML format
<DDNSList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<DDNS/><!--req, see details in the message of XML_DDNS-->
</DDNSList>

See Also
XML_DDNS

16.2.111 XML_DefaultParam
DefaultParam message in XML format
<DefaultParam version="1.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<DialNum><!--opt, xs:string--></DialNum>
<Username><!--opt, xs:string--></Username>
<Password><!--opt, xs:string--></Password>
<APNname><!--opt, xs:string--></APNname>
<VerifyProto><!--req, xs:string, "auto, CHAP, PAP"--></VerifyProto>
</DefaultParam>

566

Intelligent Security API (General Application) Developer Guide
16.2.112 XML_Defog
Defog message in XML format
<Defog version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled>
<!--req, xs:boolean-->
</enabled>
</Defog>

16.2.113 XML_Dehaze
Dehaze message in XML format
<Dehaze version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<DehazeMode/><!--opt, xs: string, "open,close,auto"-->
<DehazeLevel> <!--opt, xs: integer--></DehazeLevel>
</Dehaze>

16.2.114 XML_DeviceCap
DeviceCap capability message in XML format
<DeviceCap version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<SysCap><!--optional-->
<isSupportDst><!--optional, xs: boolean, whether it supports daylight saving time--></isSupportDst>
<NetworkCap/><!--optional, xs: boolean, network capability-->
<IOCap/><!--optional, IO capability-->
<SerialCap/><!--optional, serial port capability-->
<VideoCap/><!--optional, video capability, see details in the message of XML_VideoCap-->
<AudioCap/><!--optional, audio capability-->
<isSupportHolidy><!--opt, xs:boolean--></isSupportHolidy>
<RebootConfigurationCap>
<Genetec><!--opt, xs:boolean--></Genetec>
<ONVIF><!--opt, xs:boolean--></ONVIF>
<RTSP><!--opt, xs:boolean--></RTSP>
<HTTP><!--opt, xs:boolean--></HTTP>
<SADP>
<ISDiscoveryMode><!--opt, xs:boolean--></ISDiscoveryMode>
<PcapMode><!--opt, xs:boolean--></PcapMode>
</SADP>
<IPCAddStatus><!--opt, xs:boolean--></IPCAddStatus>
</RebootConfigurationCap>
<isSupportExternalDevice><!--optional, xs:boolean--></isSupportExternalDevice>
<isSupportChangedUpload>
<!--opt, xs: boolean, whether it supports uploading status changes-->
</isSupportChangedUpload>
<isSupportGettingWorkingStatus>

567

Intelligent Security API (General Application) Developer Guide
<!--opt, xs:boolean, whether it supports getting device status-->
</isSupportGettingWorkingStatus>
<isSupportGettingChannelInfoByCondition>
<!--opt, xs:boolean-->
</isSupportGettingChannelInfoByCondition>
<isSupportDiagnosedDataParameter>
<!--opt, xs:boolean-->
</isSupportDiagnosedDataParameter>
<isSupportSimpleDevStatus>
<!--opt, xs: boolean, whether it supports getting device working status-->
</isSupportSimpleDevStatus>
<isSupportFlexible>
<!--opt, xs: boolean, whether it supports getting channel status by condition-->
</isSupportFlexible>
<isSupportPTZChannels>
<!--opt, xs:boolean, whether it supports returning PTZ channel (which is different from the video channel)-->
</isSupportPTZChannels>
<isSupportSubscribeEvent>
<!--optional, xs:boolean, whether it supports alarm or event subscription: "true,false"-->
</isSupportSubscribeEvent>
<isSupportDiagnosedData>
<!--optional, xs:boolean, "true,false", whether it supports diagnosis data-->
</isSupportDiagnosedData>
<isSupportTimeCap>
<!--opt, xs:boolean, whether it supports time capability, which corresponds to URL: /ISAPI/System/time/
capabilities-->
</isSupportTimeCap>
<isSupportThermalStreamData>
<!--opt, xs:boolean, whether it supports uploading thermal stream data in real-time. If it is supported, the returned
value is "true"; otherwise, this node will not be returned-->
</isSupportThermalStreamData>
<isSupportPostUpdateFirmware>
<!--optional,xs:boolean,"true,false", whether it supports upgrading the firmware-->
</isSupportPostUpdateFirmware>
<isSupportPostConfigData>
<!--optional, xs:boolean,"true,false", whether it supports importing or exporting the configuration file-->
</isSupportPostConfigData>
<isSupportUserLock>
<!--optional, xs:boolean,"true,false", whether it supports locking user-->
</isSupportUserLock>
<isSupportModuleLock><!--opt, xs:boolean, whether it supports locking the module: "true,false"--></
isSupportModuleLock>
<isSupportSoundCfg><!--optional, xs:boolean--></isSupportSoundCfg>
<isSupportMetadata>
<!--optional, xs:boolean, if it is supported, return "true", otherwise, this node will not be returned-->
</isSupportMetadata>
<isSupportShutdown><!--opt, xs:boolean, whether it supports shutdown configuration--></isSupportShutdown>
<supportSmartOverlapChannles opt="1"/><!--opt, xs:boolean, whether it supports stream configuration of smart
events. If this function is supported, this node and the corresponding channel ID will be returned; otherwise, this node
will not be returned-->
</SysCap>
<voicetalkNums><!--optional, xs:integer, the number of two-way audio channels--></voicetalkNums>

568

Intelligent Security API (General Application) Developer Guide
<isSupportSnapshot><!--optional, xs:boolean, whether it supports capture: "true, false"--></isSupportSnapshot>
<SecurityCap/><!--optional, security capability-->
<EventCap/><!--optional, event capability-->
<ITCCap><!--opt--></ITCCap>
<ImageCap/><!--optional, image capability-->
<RacmCap/><!--optional, storage capability-->
<PTZCtrlCap>
<isSupportPatrols><!--opt, xs:boolean--></isSupportPatrols>
</PTZCtrlCap>
<SmartCap/><!--optional, intelligent capability-->
<isSupportEhome><!--opt, xs:boolean--></isSupportEhome>
<isSupportStreamingEncrypt><!--opt, xs:boolean--></isSupportStreamingEncrypt>
<TestCap>
<isSupportEmailTest><!--opt, xs:boolean--></isSupportEmailTest>
</TestCap>
<ThermalCap/><!--optional, thermometry capability-->
<WLAlarmCap/><!--opt, wireless alarm capability-->
<SecurityCPCapabilities/><!--opt, security control panel capability-->
<isSupportGIS>
<!--opt, xs:boolean, whether it supports GIS capability-->
</isSupportGIS>
<isSupportCompass>
<!--opt, xs:boolean-->
</isSupportCompass>
<isSupportRoadInfoOverlays>
<!--opt, xs:boolean-->
</isSupportRoadInfoOverlays>
<isSupportFaceCaptureStatistics>
<!--opt, xs:boolean-->
</isSupportFaceCaptureStatistics>
<isSupportExternalDevice>
<!--opt, xs:boolean-->
</isSupportExternalDevice>
<isSupportElectronicsEnlarge>
<!--opt, xs:boolean, whether it supports digital zoom-->
</isSupportElectronicsEnlarge>
<isSupportRemoveStorage>
<!--opt, xs:boolean-->
</isSupportRemoveStorage>
<isSupportCloud>
<!--opt, xs:boolean-->
</isSupportCloud>
<isSupportRecordHost>
<!--opt, xs:boolean-->
</isSupportRecordHost>
<isSupportEagleEye>
<!--opt, xs:boolean, whether it supports PanoVu series camera-->
</isSupportEagleEye>
<isSupportPanorama>
<!--opt, xs:boolean, whether it supports panorama-->
</isSupportPanorama>
<isSupportFirmwareVersionInfo>

569

Intelligent Security API (General Application) Developer Guide
<!--opt, xs:boolean, whether it supports displaying firmware version information-->
</isSupportFirmwareVersionInfo>
<isSupportExternalWirelessServer>
<!--opt, xs: boolean-->
</isSupportExternalWirelessServer>
<isSupportSetupCalibration>
<!--opt, xs:boolean, whether it supports setting calibration-->
</isSupportSetupCalibration>
<isSupportGetmutexFuncErrMsg>
<!--opt, xs:boolean, whether it supports getting mutex information-->
</isSupportGetmutexFuncErrMsg>
<isSupportTokenAuthenticate><!--opt, xs:boolean--></isSupportTokenAuthenticate>
<isSupportStreamDualVCA><!--opt, xs:boolean--></isSupportStreamDualVCA>
<isSupportlaserSpotManual>
<!--opt, boolean, whether it supports laser spot configuration-->
</isSupportlaserSpotManual>
<isSupportRTMP><!--opt, xs:boolean--></isSupportRTMP>
<isSupportTraffic><!--opt, xs:boolean--></isSupportTraffic>
<isSupportLaserSpotAdjustment>
<!--opt, boolean, whether it supports adjusting laser spot size-->
</isSupportLaserSpotAdjustment>
<VideoIntercomCap/><!--optional, video intercom capability-->
<isSupportSafetyCabin>
<!--opt, xs:boolean-->
</isSupportSafetyCabin>
<isSupportPEA>
<!--opt, xs:boolean, whether it supports one-touch security control panel capability-->
</isSupportPEA>
<isSupportCurrentLock>
<!--opt, xs:boolean, whether it supports locking current configuration-->
</isSupportCurrentLock>
<isSupportGuardAgainstTheft>
<!--opt, xs:boolean, whether it supports device anti-theft configuration-->
</isSupportGuardAgainstTheft>
<isSupportPicInfoOverlap>
<!--optional, xs:boolean, whether it supports picture information overlay-->
</isSupportPicInfoOverlap>
<isSupportPlay>
<!--opt, xs: boolean, whether it supports live view: "true,false"-->
</isSupportPlay>
<isSupportPlayback>
<!--opt, xs: boolean, whether it supports playback: "true,false"-->
</isSupportPlayback>
<UHFRFIDReader>
<!--opt, supported capability of UHF RFID card reader-->
<isSupportBasicInformation>
<!--opt, xs:boolean, whether it supports basic parameters of UHF RFID card reader-->
</isSupportBasicInformation>
<isSupportHardDiskStorageTest>
<!--opt, xs:boolean, whether it supports hard disk storage test of UHF RFID card reader-->
</isSupportHardDiskStorageTest>
</UHFRFIDReader>

570

Intelligent Security API (General Application) Developer Guide
<isSupportIntelligentStructureAnalysis>
<!--opt, xs:boolean, whether it supports structured VCA-->
</isSupportIntelligentStructureAnalysis>
<isSupportIntelligentAnalysisEngines>
<!--opt, xs:boolean, whether it supports VCA engine configuration-->
</isSupportIntelligentAnalysisEngines>
<PreviewDisplayNum>
<!--opt, xs:integer, the number of live view windows, which is the number of simultaneous live view windows
controlled by the device. Limited by the performance of DeepinMind series network video recorder, currently only live
view of a network camera is supported, and playback is not supported-->
</PreviewDisplayNum>
<isSupportBoard opt="true,false">
<!--opt, xs:boolean, whether it supports protocol related to sub-board-->
</isSupportBoard>
<ResourceSwitch>
<workMode opt="4KPreview,educationRecord">
<!--req, xs:string, device working mode："4KPreview"-4K live view mode, "educationRecord"-education recording
mode-->
</workMode>
</ResourceSwitch>
<isSupportCustomStream><!--opt, xs:boolean--></isSupportCustomStream>
<isSupportTriggerCapCheck>
<!--opt, xs:boolean, whether it supports verifying capability of alarm linkage actions-->
</isSupportTriggerCapCheck>
<isSupportActiveMulticast>
<!--opt, xs: boolean, whether it supports active multicast-->
</isSupportActiveMulticast>
<isSupportChannelEventCap>
<!--opt, xs:boolean, whether it supports getting event capability by channel-->
</isSupportChannelEventCap>
<isSupportSensorCalibrating>
<!--opt, xs:boolean, whether it supports double sensor calibration-->
</isSupportSensorCalibrating>
<isSupportChannelEventListCap>
<!--opt, xs:boolean, whether it supports getting event capability of all channels-->
</isSupportChannelEventListCap>
<VCAResourceChannelsCap>
<!--opt, whether it supports independently switching to another VCA resource by channel-->
<ChannelsList>
<channelsID>
<!--req, xs:integer, channel No. supported by the device-->
</channelsID>
</ChannelsList>
</VCAResourceChannelsCap>
<SensorCap/><!--optional, intelligent cabinet capability-->
<isSupportSecurityCP/>
<!--optional, xs:boolean, whether it supports the applications of security control panel: "true, false"-->
</isSupportSecurityCP>
<isSupportClientProxyWEB>
<!--optional, xs:boolean, whether it supports the function that the client proxy passes through the remote web
configuration: "true"-->
</isSupportClientProxyWEB>

571

Intelligent Security API (General Application) Developer Guide
<WEBLocation>
<!--opt, string type, web page location: "local"-local device, "remote"-remote location. If this node is not returned,
the web page will be in the local device by default-->
</WEBLocation>
<isSupportTime/>
<!--optional, xs:boolean, "true, false", whether it supports time configuration-->
</isSupportTime>
<isSupportTimeZone/>
<!--optional, xs:boolean, "true, false", whether it supports daylight saving time (DST) configuration-->
</isSupportTimeZone>
<isSupportMixedTargetDetection>
<!--opt, xs:boolean, "true, false", whether it supports multi-target-type detection-->
</isSupportMixedTargetDetection>
<isSupportFaceContrastMode>
<!--opt, xs:boolean, whether it supports face picture comparison mode-->
</isSupportFaceContrastMode>
<isSupportPictureCaptureComparision>
<!--opt, xs:boolean, whether it supports face picture N:1 comparison between face pictures captured by the camera
and imported face pictures-->
</isSupportPictureCaptureComparision>
<isSupportChannelFullEventListCap>
<!--opt, xs:boolean, whether it supports getting event list capability of all channels-->
</isSupportChannelFullEventListCap>
<isSupportAUXInfoCap>
<!--opt, xs:boolean, whether it supports getting property capability of all channels-->
</isSupportAUXInfoCap>
<isSupportCalibrationFile>
<!--opt, xs:boolean, whether it supports importing calibration file-->
</isSupportCalibrationFile>
<isSupportDisplayTrajectory>
<!--opt, xs:boolean, whether it supports displaying trajectory-->
</isSupportDisplayTrajectory>
<maximumSuperPositionTime opt="5,10,20,30">
<!--dep,xs:integer, the maximum time of trajectory displaying，unit: second, it is valid only when displaying
trajectory is supported-->
</maximumSuperPositionTime>
<isSupportUnitConfig>
<!--opt, xs:boolean, whether it supports unit configuration-->
</isSupportUnitConfig>
<isSupportAutoMaintenance>
<!--opt, xs:boolean, whether it supports automatic maintenance. When this node exists and values "true", it
indicates support-->
</isSupportAutoMaintenance>
<isSupportGetLinkSocketIP>
<!--opt, xs: boolean, "true,false", whether it supports getting the SoketIP of current connection-->
</isSupportGetLinkSocketIP>
<isSupportIntelligentSearch>
<!--opt, xs:boolean, whether it supports intelligent search-->
</isSupportIntelligentSearch>
<IOTCap><!--opt, xs:boolean, IoT device access capability-->
<supportChannelNum>
<!--req, xs:integer, number of supported channels of IoT device-->

572

Intelligent Security API (General Application) Developer Guide
</supportChannelNum>
<startChannelNo>
<!--opt, xs:integer, initial channel ID, if this node is not inputted, it indicates that the initial channel ID is 1-->
</startChannelNo>
<isSupportlinkageChannelsSearch>
<!--opt, boolean, returns "true" if support, returns "false" if not support. Corresponds to URL (POST /ISAPI/
System/IOT/linkageChannels?format=json)-->
</isSupportlinkageChannelsSearch>
</IOTCap>
<isSupportEncryption>
<!--opt, xs: boolean, stream encryption capability-->
</isSupportEncryption>
<AIDEventSupport opt="abandonedObject,
pedestrian,congestion,roadBlock,construction,trafficAccident,fogDetection">
<!--opt, xs:string, supported traffic incident type-->
</AIDEventSupport>
<TFSEventSupport opt="illegalParking ,wrongDirection,crossLane,laneChange,vehicleExist,turnRound,
parallelParking">
<!--opt, xs:string, supported enforcement event type-->
</TFSEventSupport>
<isVehicleStatisticsSupport>
<!--opt, xs: boolean, whether it supports setting parameters for traffic data collection-->
</isVehicleStatisticsSupport>
<isSupportIntersectionAnalysis>
<!--opt, xs: boolean, whether it supports intersection analysis-->
</isSupportIntersectionAnalysis>
<isSptDiagnosis>
<!--opt, xs:boolean, whether it supports device diagnosis: "true", "false"-->
</isSptDiagnosis>
<isSptSerialLogCfg>
<!--opt, xs:boolean, whether it supports configuring serial port log redirection: "true", "false"-->
</isSptSerialLogCfg>
<isSptFileExport>
<!--opt, xs:boolean, whether it supports exporting files from the device: "true", "false"-->
</isSptFileExport>
<isSptCertificationStandard>
<!--opt, xs:boolean, whether it supports configuring authentication standard for security control panel: "true",
"false"-->
</isSptCertificationStandard>
<isSptKeypadLock>
<!--opt, xs:boolean, whether it supports locking keypad: "true", "false"-->
</isSptKeypadLock>
<isSupportDiscoveryMode><!--opt, xs:boolean--></isSupportDiscoveryMode>
<streamEncryptionType>
<!--dep, xs:string, stream encryption type: "RTP/TLS", "SRTP/UDP", "SRTP/MULTICAST". This node is valid when
<isSupportEncryption> is "true", and the device can support one or more stream encryption types-->
</streamEncryptionType>
<isSupportLms><!--opt, xs:boolean, whether it supports laser--></isSupportLms>
<isSupportLCDScreen><!--opt, xs:boolean, whether it supports LCD screen--></isSupportLCDScreen>
<isSupportBluetooth><!--opt, xs:boolean, whether it supports bluetooth--></isSupportBluetooth>
<isSupportAcsUpdate>
<!--opt, whether it supports upgrading slave access control devices or peripheral modules: "true"-yes, this node is

573

Intelligent Security API (General Application) Developer Guide
not returned-no-->
</isSupportAcsUpdate>
<isSupportAccessControlCap>
<!--opt, whether it supports access control capability: "true"-yes, this node is not returned-no-->
</isSupportAccessControlCap>
<isSupportIDCardInfoEvent><!--opt, whether it supports ID card swiping event: "true"-yes. This node will not be
returned if this function is not supported--></isSupportIDCardInfoEvent>
<OpenPlatformCap><!--opt, embedded open platform capability, refer to the message XML_OpenPlatformCap for
details-->
<isSupportInstallationAngleCalibration>
<!--opt, xs:boolean, whether it supports installation angle calibration-->
</isSupportInstallationAngleCalibration>
<isSupportZeroBiasCalibration>
<!--opt, xs:boolean, whether it supports zero bias calibration-->
</isSupportZeroBiasCalibration>
<isSupportDevStatus><!--opt, xs:boolean, whether device supports getting device status, corresponding URL: /ISAPI/
System/status--></isSupportDevStatus>
<isSupportRadar><!--opt, xs:boolean, whether it supports security radar--></isSupportRadar>
<SHMCap><!--opt-->
<isSupportHighHDTemperature><!--opt, xs:boolean, whether it supports HDD high temperature detection--></
isSupportHighHDTemperature>
<isSupportLowHDTemperature><!--opt, xs:boolean, whether it supports HDD low temperature detection--></
isSupportLowHDTemperature>
<isSupportHDImpact><!--opt, xs:boolean, whether it supports HDD impact detection--></isSupportHDImpact>
<isSupportHDBadBlock><!--opt, xs:boolean, whether it supports HDD bad sector detection--></
isSupportHDBadBlock>
<isSupportSevereHDFailure><!--opt, xs:boolean, whether it supports HDD severe fault detection--></
isSupportSevereHDFailure>
</SHMCap>
<isSupportBVCorrect><!--opt, xs:boolean, whether it supports configuring camera correction parameters--></
isSupportBVCorrect>
<guideEventSupport opt="linkageCapture">
<!--opt,xs:string, events which support quick setup by instruction, "linkageCapture"-capture by linkage-->
</guideEventSupport>
</DeviceCap>

16.2.115 XML_DeviceInfo
DeviceInfo message in XML format
<DeviceInfo version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<deviceName><!--req, xs:string--></deviceName>
<deviceID><!--ro, req, xs:string, uuid--></deviceID>
<deviceDescription>
<!--opt, xs:string, description about the device defined in RFC1213. For network camera, this node is set to
"IPCamera"; for network speed dome, this node is set to "IPDome"; for DVR or DVS, this node is set to "DVR" or
"DVS"-->
</deviceDescription>
<deviceLocation><!--opt, xs:string, actual location of the device--></deviceLocation>
<deviceStatus><!--ro, opt, xs:string, device status: "normal", "abnormal"-->
<DetailAbnormalStatus>

574

Intelligent Security API (General Application) Developer Guide
<!--dep, error status details, it is valid only when deviceStatus is "abnormal"-->
<hardDiskFull>
<!--ro, opt, xs: boolean, whether the error of "HDD full" occurred: "true"-yes,"false"-no-->
</hardDiskFull>
<hardDiskError>
<!--ro, opt, xs:boolean, whether the error of "HDD error" occurred: "true"-yes,"false"-no-->
</hardDiskError>
<ethernetBroken>
<!--ro, opt, xs: boolean, whether the error of "network disconnected" occurred: "true"-yes,"false"-no-->
</ethernetBroken>
<ipaddrConflict>
<!--ro, opt, xs: boolean, whether the error of "IP address conflicted" occurred: "true"-yes,"false"-no-->
</ipaddrConflict>
<illegalAccess>
<!--ro, opt, xs: boolean, whether the error of "illegal login" occurred: "true"-yes,"false"-no-->
</illegalAccess>
<recordError>
<!--ro, opt, xs: boolean, whether the error of "recording exception" occurred: "true"-yes,"false"-no-->
</recordError>
<raidLogicDiskError>
<!--ro, opt, xs: boolean, whether the error of "RAID exception" occurred: "true"-yes,"false"-no-->
</raidLogicDiskError>
<spareWorkDeviceError>
<!--ro, opt, xs: boolean, whether the error of "working device exception" occurred: "true"-yes,"false"-no-->
</spareWorkDeviceError>
</DetailAbnormalStatus>
<systemContact><!--opt, req, xs:string, contact information of the device--></systemContact>
<model><!--ro, req, xs:string--></model>
<serialNumber><!--ro, req, xs:string--></serialNumber>
<macAddress><!--ro, req, xs:string--></macAddress>
<firmwareVersion><!--ro, req, xs:string--></firmwareVersion>
<firmwareReleasedDate><!--ro, opt, xs:string--></firmwareReleasedDate>
<bootVersion><!--ro, opt, xs:string--></bootVersion>
<bootReleasedDate><!--ro, opt, xs:string--></bootReleasedDate>
<hardwareVersion><!--ro, opt, xs:string--></hardwareVersion>
<encoderVersion><!--ro, opt, xs:string--></encoderVersion>
<encoderReleasedDate><!--ro, opt, xs:stirng--></encoderReleasedDate>
<decoderVersion><!--ro, opt, xs:string--></decoderVersion>
<decoderReleasedDate><!--ro, opt, xs:stirng--></decoderReleasedDate>
<softwareVersion><!--ro, opt, xs:string, software version--></softwareVersion>
<capacity><!--ro, opt, xs:integer, unit: MB, device capacity--></capacity>
<usedCapacity><!--ro, opt, xs:integer, unit: MB, capacity usage--></usedCapacity>
<deviceType>
<!--ro, req, xs:string,device type: "IPCamera", "IPDome", "DVR", "HybirdNVR", "NVR", "DVS", "IPZoom", "CVR",
"Radar", "PerimeterRadar"-perimeter radar, "ACS", "PHA"-Axiom hybrid security control panel-->
<deviceType>
<telecontrolID><!--opt, xs:integer, keyfob control ID, the value is between 1 and 255--></telecontrolID>
<supportBeep><!--opt, xs:boolean--></supportBeep>
<firmwareVersionInfo><!--ro, opt, xs:string, firmware version information--></firmwareVersionInfo>
<actualFloorNum>
<!--req, xs: integer, actual number of floors, which is between 1 and 128-->
</actualFloorNum>

575

Intelligent Security API (General Application) Developer Guide
<subChannelEnabled><!--opt, xs:boolean, whether to support sub-stream live view: "true"-yes, "false"-no--></
subChannelEnabled>
<thrChannelEnabled><!--opt, xs:boolean, whether to support third stream live view: "true"-yes, "false"-no--></
thrChannelEnabled>
<radarVersion><!--opt, xs:string, radar version--></radarVersion>
<localZoneNum><!--opt, xs:integer, number of local zones--></localZoneNum>
<alarmOutNum><!--opt, xs:integer, number of alarm outputs--></alarmOutNum>
<distanceResolution><!--opt, xs:float, resolution of distance, unit: meter--></distanceResolution>
<angleResolution><!--opt, xs:float, resolution of angle, unit: degree--></angleResolution>
<speedResolution><!--opt, xs:float, resolution of speed, unit: m/s--></speedResolution>
<detectDistance><!--opt, xs:float, detection distance, unit: meter--></detectDistance>
<languageType opt="chinese,english,spanish,portuguese,italian,french,russian,german,polish"><!--opt, xs:string--></
languageType>
<relayNum><!--opt, xs:integer, number of local relays--></relayNum>
<electroLockNum><!--opt, xs:integer, number of local electronic locks--></electroLockNum>
<RS485Num><!--opt, xs:integer, number of local RS-485--></RS485Num>
<powerOnMode><!--optional, xs:string, device startup mode: "button"-press button to power on (default), "adapter"connect adapter to power on--></powerOnMode>
</DeviceInfo>

16.2.116 XML_DeviceStatus
DeviceStatus message in XML format
<DeviceStatus version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<currentDeviceTime><!--opt, xs: datetime--></currentDeviceTime>
<deviceUpTime><!--opt, xs: integer, seconds--></deviceUpTime>
<TemperatureList><!--opt-->
<Temperature>
<tempSensorDescription><!--req, xs: string--></tempSensorDescription>
<temperature><!--req, xs: float--></temperature>
</Temperature>
</TemperatureList>
<FanList><!--opt-->
<Fan>
<fanDescription><!--req, xs: string--></fanDescription>
<speed><!--req, xs: integer--></speed>
</Fan>
</FanList>
<PressureList><!--opt-->
<Pressure>
<pressureSensorDescription><!--req, xs: string--></pressureSensorDescription>
<pressure><!--req, xs: integer--></pressure>
</Pressure>
</PressureList>
<TamperList><!--opt-->
<Tamper><tamperSensorDescription><!--req, xs: string--></tamperSensorDescription>
<tamper><!--req, xs: boolean--> </tamper>
</Tamper>
</TamperList>
<CPUList><!--opt-->

576

Intelligent Security API (General Application) Developer Guide
<CPU>
<cpuDescription><!--req, xs: string--></cpuDescription>
<cpuUtilization><!--req, xs: integer, percentage, which is between 0 and 100--></cpuUtilization>
</CPU>
</CPUList>
<MemoryList><!--opt-->
<Memory>
<memoryDescription><!--req, xs: string--></memoryDescription>
<memoryUsage><!--req, xs: float, unit: MB--></memoryUsage>
<memoryAvailable><!--req, xs: float, unit: MB--></memoryAvailable>
</Memory>
</MemoryList>
<openFileHandles><!--opt, xs: integer--></openFileHandles>
<CameraList><!--opt-->
<Camera>
<zoomReverseTimes><!--req, xs: integer--></zoomReverseTimes>
<zoomTotalSteps><!--req, xs: integer--></zoomTotalSteps>
<focusReverseTimes><!--req, xs: integer--></focusReverseTimes>
<focusTotalSteps><!--req, xs: integer--></focusTotalSteps>
<irisShiftTimes><!--req, xs: integer--></irisShiftTimes>
<irisTotalSteps><!--req, xs: integer--></irisTotalSteps>
<icrShiftTimes><!--req, xs: integer--></icrShiftTimes>
<icrTotalSteps><!--req, xs: integer--></icrTotalSteps>
<lensIntirTimes><!--req, xs: integer--></lensIntirTimes>
<cameraRunTotalTime><!--req, xs: integer--></cameraRunTotalTime>
</Camera>
</CameraList>
<DomeInfoList><!--opt-->
<DomeInfo>
<domeRunTotalTime><!--opt, xs: integer--></domeRunTotalTime >
<runTimeUnderNegativetwenty><!--opt, xs: integer--></runTimeUnderNegativetwenty>
<runTimeBetweenNtwentyPforty><!--opt, xs: integer--></runTimeBetweenNtwentyPforty>
<runtimeOverPositiveforty><!--opt, xs: integer--></runtimeOverPositiveforty>
<panTotalRounds><!--opt, xs: integer--></panTotalRounds>
<tiltTotalRounds><!--opt, xs: integer--></tiltTotalRounds>
<heatState><!--opt, xs: integer--></heatState>
<fanState><!--opt, xs: integer--></fanState>
</DomeInfo>
</DomeInfoList>
<deviceStatus><!--req, xs: string, device working status: "normal, abnormal 设"--></deviceStatus>
<dialSignalStrength>
<!--optional, xs:integer, 4G signal strength, it is between 1 and 3-->
</dialSignalStrength>
<USBStatusList>
<USBStatus>
<!--list-->
<id>
<!--required, xs:integer-->
</id>
<state>
<!--optional, xs:string, USB status: "connected", "fullCapacity", "deviceException", "disconnected"-->
</state>

577

Intelligent Security API (General Application) Developer Guide
</USBStatus>
</USBStatusList>
<WifiStatusList>
<WifiStatus>
<!--list-->
<id>
<!--required, xs:integer-->
</id>
<state>
<!--optional, xs:string, Wi-Fi status: "disabled"-Wi-Fi is disabled, "enable"-Wi-Fi is enabled, "disconnected"-Wi-Fi
is disconnected, "enableHotspot"-Wi-Fi hot spot is enabled-->
</state>
</WifiStatus>
</WifiStatusList>
<AlertStreamServerList><!--opt, user of arming device-->
<AlertStreamServer><!--list-->
<id><!--opt, xs:integer--></id>
<protocolType><!--opt, xs:string, "SDK,ISAPI", arming protocol type--></protocolType>
<ipAddress><!--dep, xs:string, IP address of platform, server, NVR/CVR, and so on--></ipAddress>
</AlertStreamServer>
</AlertStreamServerList>
</DeviceStatus>

16.2.117 XML_Dial
Dial message in XML format
<Dial version="1.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled><!--req, xs:boolean--></enabled>
<DialMethod><!--req, xs:string, "auto, manual"--></DialMethod>
<SwitchMethod>
<!--req, xs:string, "auto,4GFirst,3GFirst, manualto2G, manualto3G, manualto4G"-->
</SwitchMethod>
<OfflineTime><!--opt, xs:integer--></OfflineTime>
<UIMCardNum><!--opt, xs:string--></UIMCardNum>
<DialNum><!--opt, xs:string--></DialNum>
<Username><!--opt, xs:string--></Username>
<Password><!--opt, xs:string--></Password>
<APNname><!--opt, xs:string--></APNname>
<SIMNum><!--opt, xs:string, SIM card No. (mobile phone number)--></SIMNum>
<MTU><!--opt, xs: integer--></MTU>
<VerifyProto><!--req, xs:string, "auto, CHAP, PAP"--></VerifyProto>
<DefaultParam/><!--opt, default parameters, see details in the message of XML_DefaultParam-->
<netAPN><!--opt, xs:string, APN configuration of the private network--></netAPN>
<Flow><!--opt, network traffic flow configuration-->
<limitEnabled><!--opt, xs:boolean, whether to enable traffic flow limitation--></limitEnabled>
<consumeFlow><!--opt, xs:float, unit: MB--></consumeFlow>
<threshold><!--opt, xs:integer, unit: MB--></threshold>
</Flow>

578

Intelligent Security API (General Application) Developer Guide
<pinCode><!--opt, wo, xs:string--></pinCode>
</Dial>

See Also
XML_DefaultParam

16.2.118 XML_Dialstatus
Dialstatus message in XML format
<Dialstatus version="1.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<RealtimeMode>
<!--ro, xs:string, "CDMA 1x,EVDO,HYBRID,GSM,GPRS,EDGE,WCDMA,HSDPA,HSUPA,HSPA,TDSCDMA,TD-LTE,FDDLTE,LTE,UNKNOWN"-->
</RealtimeMode>
<UIMInfo>
<!--ro, xs:string, "UNKNOWN,VALID,NOVALID,ROAM,NOEXIST"-->
</UIMInfo>
<SignalStrength>
<!--ro, xs:integer-->
</SignalStrength>
<Dialstat>
<!--ro, xs:string-->
</Dialstat>
<IpAddress>
<!--req-->
<ipAddress>
<!--dep, xs:string-->
</ipAddress>
<ipv6Address>
<!--dep, xs:string-->
</ipv6Address>
</IpAddress>
<SubnetMask>
<!--req-->
<ipAddress>
<!--dep, xs:string-->
</ipAddress>
<ipv6Address>
<!--dep, xs:string-->
</ipv6Address>
</SubnetMask>
<Gateway>
<!--req-->
<ipAddress>
<!--dep, xs:string-->
</ipAddress>
<ipv6Address>
<!--dep, xs:string-->
</ipv6Address>

579

Intelligent Security API (General Application) Developer Guide
</Gateway>
<DNSAddress>
<!--req-->
<ipAddress>
<!--dep, xs:string-->
</ipAddress>
<ipv6Address>
<!--dep, xs:string-->
</ipv6Address>
</DNSAddress>
</Dialstatus>

16.2.119 XML_Discovery
Discovery message in XML format
<Discovery version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<UPnP><!--req-->
<enabled><!--req, xs:boolean, "true, false"--></enalbed>
</UPnP>
<ZeroConf><!--opt, channel-zero configuration-->
<enabled><!--req, xs:boolean, "true, false"--></enabled>
</ZeroConf>
</Discovery>

16.2.120 XML_diskQuota
diskQuota message in XML format
<diskQuota version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs: integer, channel ID--></id>
<useVideoQuota><!--read-only, xs: integer, quota for video files, unit: MB--></useVideoQuota>
<usePictureQuota><!--read-only, xs: integer, quota for picture files, unit: MB--></usePictureQuota>
<totalDiskVolume><!--read-only, xs: integer, total disk capacity, unit: MB--></totalDiskVolume>
<videoQuota><!--req, xs: integer, unit: MB--></videoQuota>
<pictureQuota><!--opt, xs: integer, unit: MB--></pictureQuota>
<type><!--opt, xs: string, "volume,ratio,absent-ratio,otherwise-volume"--></type>
<videoQuotaRatio><!--dep, xs: integer, video quota ratio (%): [0,100]--></videoQuotaRatio>
<pictureQuotaRatio><!--dep, xs: integer, picture quota ratio (%): [0,100]--></pictureQuotaRatio>
<totalVideoVolume><!--read-only, xs: integer, unit: MB--></totalVideoVolume>
<totalPictureVolume><!--ro, xs: integer, unit: MB--></totalPictureVolume>
<freeVideoQuota><!--ro, xs: integer, free space for video files, unit: MB--></freeVideoQuota>
<freePictureQuota><!--ro, xs: integer, free space for picture files, unit: MB--></freePictureQuota>
</diskQuota>

580

Intelligent Security API (General Application) Developer Guide
16.2.121 XML_DoubleLensParkingCap
DoubleLensParkingCap capability message in XML format
<DoubleLensParkingCap version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<cameraType opt = "masterCamera, slaveCamera">
<!--req, xs:string, dual-lens camera type: "masterCamera"-fixed dual-lens camera, "slaveCamera"-PTZ dual-lens
camera-->
</cameraType>
</DoubleLensParkingCap>

16.2.122 XML_DownloadAbility
DownloadAbility message in XML format
<DownloadAbility version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<isSupportDownloadbyTime>
<!--opt, xs:boolean, whether it supports download by time-->
</isSupportDownloadbyTime>
<isSupportDownloadbyFileName>
<!--opt, xs:boolean, whether it supports download by file name -->
</isSupportDownloadbyFileName>
<isSupportDownloadToUSB>
<!--opt, xs:boolean, whether it supports exporting files to devices via USB-->
</isSupportDownloadToUSB>
</DownloadAbility>

16.2.123 XML_downloadRequest
downloadRequest message in XML format
<downloadRequest version="1.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<playbackURI>
<!--req, xs:string, playback URL, returned by the search service. It contains the information of file name and size,
e.g., <playbackURI>rtsp://IpAddress/Streaming/tracks/101?starttime=2016-07-18 00:00:00&endtime=2016-07-18
00:25:04Z&name=00000000721000000&size=1065437356</playbackURI>-->
</playbackURI>
<userName><!--opt, xs:string，double verification user name--></userName>
<password><!--opt, xs:string，double verification password--></password>
</downloadRequest>

Remarks
When download file by name, the playbackURI inputs the file start time, end time, file name, and
size; when download file by time, the playbackURI inputs the start time and end time.

581

Intelligent Security API (General Application) Developer Guide
16.2.124 XML_DynamicCap
DynamicCap capability message in XML format.
<DynamicCap version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<ResolutionAvailableDscriptorList><!--req-->
<ResolutionAvailableDscriptor><!--req-->
<videoResolutionWidth>
<!--req, xs:integer-->
</videoResolutionWidth>
<videoResolutionHeight>
<!--req, xs:integer-->
</videoResolutionHeight>
<supportedFrameRate>
<!--req, xs:string, frame rate supported by this resolution, and its value is multiplied by 100 to be returned, e.g., if
the returned values are "2000, 2200, 2500", the actual frame rates are "20, 22, 25"-->
</supportedFrameRate>
<supportedBitRate min="" max=""/>
<!--opt, xs:integer,in kbps-->
</ResolutionAvailableDscriptor>
</ResolutionAvailableDscriptorList>
<CodecParamDscriptorList>
<CodecParamDscriptor>
<videoCodecType><!-- req, xs: string, "MPEG4,MJPEG,3GP,H.264,HK.264"--></videoCodecType>
<isSupportProfile><!--dep, xs: boolean--></isSupportProfile>
<CBRCap><!--constant bit rate-->
<isSupportSmooth><!--dep, xs: boolean--></isSupportSmooth>
</CBRCap>
<VBRCap><!--variable bit rate-->
<isSupportSmooth><!--dep, xs: boolean--></isSupportSmooth>
</VBRCap>
<isSupportSVC><!--opt, xs: boolean--></isSupportSVC>
<isSupportCABAC><!--opt, xs: boolean--></isSupportCABAC>
<SmartCodecCap><--opt-->
<readOnlyParams opt="keyFrameInterval,Profile,SVC,fixedQuality">
<!--opt, ro, xs: string, read-only options: I frame interval, encoding complexity, SVC, picture quality-->
</readOnlyParams>
<BitrateType>
<Constant><!--opt, constant bit rate-->
<support opt="videoBitrate">
<!--opt, xs: string, "averageVideoBitrate"-average bit rate, "videoBitrate"-upper-limit of bit rate-->
</support>
<hiddenAbility opt="averageVideoBitrate">
<!--opt, xs:string, "averageVideoBitrate"-average bit rate, "videoBitrate"-upper-limit of bit rate-->
</hiddenAbility>
</Constant>
<Variable><!--opt, variable bit rate-->
<support opt="averageVideoBitrate">
<!--opt, xs: string, "averageVideoBitrate"-average bit rate, "videoBitrate"-upper-limit of bit rate-->
</support>
<readOnlyAbility opt="videoBitrate">

582

Intelligent Security API (General Application) Developer Guide
<!--opt, xs: string, "averageVideoBitrate"-average bit rate, "videoBitrate"-upper-limit of bit rate-->
</readOnlyAbility>
</Variable>
</BitrateType>
<vbrAverageDefault><!--dep, xs: integer, recommended average bit rate, unit: Kbps--></vbrAverageDefault>
<smart264EnabledPrompt opt="prompt1,prompt2,prompt3, prompt6, prompt25">
<!--opt, wo, xs: string, audible prompt for Smart264 enabled-->
</smart264EnabledPrompt>
<smart265EnabledPrompt opt="prompt1,prompt2, prompt3, prompt25">
<!--opt, wo, xs: string, audible prompt for Smart265 enabled-->
</smart265EnabledPrompt>
</SmartCodecCap>
</CodecParamDscriptor>
</CodecParamDscriptorList>
<AudioDscriptorList>
<AudioDscriptor>
<audioCompressionType>
<!--req, xs: string, audio encoding type: "G.711alaw,G.711ulaw,G.726,G.729,G.729a,G.
729b,PCM,MP3,AC3,AAC,ADPCM,MP2L2"-->
</audioCompressionType>
<audioItemList>
<audioItem>
<audioSamplingRate default=""><!--opt,xs: string--></audioSamplingRate>
<audioBitRate opt=""> <!--dep, xs: integer--></audioBitRate>
<noiseReduce opt="true,false"><!--req, xs: string--></noiseReduce>
<audioItem>
</audioItemList>
</AudioDscriptor>
</AudioDscriptorList>
</DynamicCap>

16.2.125 XML_Ehome
Ehome message in XML format
<Ehome version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled><!--opt, xs: boolean--></enabled>
<addressingFormatType>
<!--req, xs: string, address format type: "ipaddress"-IP address, "hostname"-host name-->
</addressingFormatType>
<hostName><!--dep, xs: string, host name, this node is valid only when <addressingFormatType> is "hostname"--></
hostName>
<ipAddress><!--dep, xs: string, IP address, this node is valid only when <addressingFormatType> is "ipaddress"--></
ipAddress>
<ipv6Address><!--dep, xs: string, IPv6 address, this node is valid only when <addressingFormatType> is "ipaddress"-></ipv6Address>
<portNo><!--opt, xs: integer, port No.--></portNo>
<deviceID><!--req, xs: string, device ID--></deviceID>
<registerStatus><!--ro, xs: boolean, registration status--></registerStatus>
<key><!--opt, xs: string, EHome encryption key--></key>
<version><!--ro, xs: string, version No.--></version>

583

Intelligent Security API (General Application) Developer Guide
<netWork><!--opt, xs:integer, 0-make no sense, 1-automatic, 2-wired network preferred, 3-wired network, 4-3G/4G/
GPRS--></netWork>
<voiceDeviceType opt="bluetooth,client"><!--opt, xs:string, two-way audio device type: "bluetooth", "client"--></
voiceDeviceType>
<protocolVersion><!--opt, xs:string, protocol type: "v2.0,v2.6,v4.0,v5.0". If this node is set to "v2.0", the device can
only use protocol v2.0 to register; if this node is set to "v2.6", "v4.0" or "v5.0", the device will firstly use this protocol
to register. If this node is not returned, the protocol version will be determined by <version>--></protocolVersion>
</Ehome>

16.2.126 XML_EPTZ
EPTZ message in XML format
<EPTZ version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled><!--req, xs:string, whether to enable e-PTZ: "true"-yes, "false"-no--></enabled>
<streamType><!--opt, xs:integer, stream type: 1-main stream, 2-sub-stream, 3-third stream, 4-fourth stream--></
streamType>
</EPTZ>

16.2.127 XML_EventCap
EventCap capability message in XML format
<EventCap version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<isSupportHDFull><!--opt, xs:boolean, "true"-support, "false"-not support--></isSupportHDFull>
<isSupportHDError><!--opt, xs:boolean, "true"-support, "false"-not support--></isSupportHDError>
<isSupportNicBroken><!--opt, xs:boolean, "true"-support, "false"-not support--></isSupportNicBroken>
<isSupportIpConflict><!--opt, xs:boolean, "true"-support, "false"-not support--></isSupportIpConflict>
<isSupportIllAccess><!--opt, xs:boolean, "true"-support, "false"-not support--></isSupportIllAccess>
<isSupportViException><!--opt, xs:boolean, "true"-support, "false"-not support--></isSupportViException>
<isSupportViMismatch><!--opt, xs:boolean, "true"-support, "false"-not support--></isSupportViMismatch>
<isSupportRecordException><!--opt, xs:boolean, "true"-support, "false"-not support--></isSupportRecordException>
<isSupportTriggerFocus><!--opt, xs:boolean, "true"-support, "false"-not support--></isSupportTriggerFocus>
<isSupportMotionDetection><!--opt, xs:boolean, "true"-support, "false"-not support--></isSupportMotionDetection>
<isSupportVideoLoss><!--opt, xs:boolean, "true"-support, "false"-not support--></isSupportVideoLoss>
<isSupportTamperDetection><!--opt, xs:boolean, "true"-support, "false"-not support--></isSupportTamperDetection>
<isSupportStudentsStoodUp><!--opt, xs:boolean, "true"-support, "false"-not support--></
isSupportStudentsStoodUp>
<isSupportFramesPeopleCounting><!--opt, xs:boolean, "true"-support, "false"-not support--></
isSupportFramesPeopleCounting>
<isSupportRaidException><!--opt, xs:boolean, "true"-support, "false"-not support--></isSupportRaidException>
<isSupportSpareException><!--opt, xs:boolean, "true"-support, "false"-not support--></isSupportSpareException>
<isSupportPoePowerException><!--opt, xs:boolean, "true"-support, "false"-not support--></
isSupportPoePowerException>
<isSupportRegionEntrance><!--opt, xs:boolean, "true"-support, "false"-not support--></isSupportRegionEntrance>
<isSupportRegionExiting><!--opt, xs:boolean, "true"-support, "false"-not support--></isSupportRegionExiting>
<isSupportLoitering><!--opt, xs:boolean, "true"-support, "false"-not support--></isSupportLoitering>
<isSupportGroup><!--opt, xs:boolean, "true"-support, "false"-not support--></isSupportGroup>
<isSupportRapidMove><!--opt, xs:boolean, "true"-support, "false"-not support--></isSupportRapidMove>

584

Intelligent Security API (General Application) Developer Guide
<isSupportFireDetection><!--opt, xs:boolean, "true"-support, "false"-not support--></isSupportFireDetection>
<isSupportillegalParking><!--opt, xs:boolean, whether it supports illegal parking detection: "true"-support, "false"not support--></isSupportillegalParking>
<isSupportUnattendedBaggage><!--opt, xs:boolean --></isSupportUnattendedBaggage>
<isSupportAttendedBaggage><!--opt, xs:boolean, "true"-support, "false"-not support--></
isSupportAttendedBaggage>
<isSupportHumanAttribute><!--opt, xs:boolean, "true"-support, "false"-not support--></isSupportHumanAttribute>
<isSupportFaceContrast><!--opt, xs:boolean, "true"-support, "false"-not support--></isSupportFaceContrast>
<isSupportFaceLib><!--opt, xs:boolean, "true"-support, "false"-not support--></isSupportFaceLib>
<isSupportWhiteListFaceContrast><!--opt, xs:boolean, "true"-support, "false"-not support--></
isSupportWhiteListFaceContrast>
<isSupportBlackListFaceContrast><!--opt, xs:boolean, whether it supports blacklist face comparison: "true"-support,
"false"-not support--></isSupportBlackListFaceContrast>
<isSupportHumanRecognition>><!--opt, xs:boolean, "true"-support, "false"-not support--></
isSupportHumanRecognition>
<isSupportFaceSnap><!--opt, xs:boolean, "true"-support, "false"-not support--></isSupportFaceSnap>
<isSupportPersonDensityDetection><!--opt, xs:boolean, "true"-support, "false"-not support--></
isSupportPersonDensityDetection>
<isSupportMixedTargetDetection><!--opt, xs:boolean, whether it supports multi-target-type detection alarm: "true"support, "false"-not support--></isSupportMixedTargetDetection>
<isSupportPedestrian><!--opt, xs:boolean, whether it supports pedestrian detection: "true"-support, "false"-not
support--></isSupportPedestrian>
<isSupportTrafficAccident><!--opt, xs:boolean, whether it supports traffic accident detection: "true"-support, "false"not support--></isSupportTrafficAccident>
<isSupportConstruction><!--opt, xs:boolean, whether it supports construction detection: "true"-support, "false"-not
support--></isSupportConstruction>
<isSupportRoadBlock><!--opt, xs:boolean, whether it supports roadblock detection: "true"-support, "false"-not
support--></isSupportRoadBlock>
<isSupportAbandonedObject><!--opt, xs:boolean, whether it supports thrown object detection: "true"-support,
"false"-not support--></isSupportAbandonedObject>
<isSupportParallelParking><!--opt, xs:boolean, whether it supports parallel parking detection: "true"-support, "false"not support--></isSupportParallelParking>
<isSupportParkingState><!--opt, xs:boolean, whether it supports parking space status detection: "true"-support,
"false"-not support, currently this node is not supported--></isSupportParkingState>
<isSupportCongestion><!--opt, xs:boolean, whether it supports congestion detection: "true"-support, "false"-not
support--></isSupportCongestion>
<isSupportVehicleStatistics><!--opt, xs:boolean, whether it supports data collection: "true"-support, "false"-not
support--></isSupportVehicleStatistics>
<isSupportWrongDirection><!--opt, xs:boolean, whether it supports wrong-way driving detection: "true"-support,
"false"-not support--></isSupportWrongDirection>
<isSupportTrunRound><!--opt, xs:boolean, whether it supports U-turning detection: "true"-support, "false"-not
support--></isSupportTrunRound>
<isSupportCrossLane><!--opt, xs:boolean, whether it supports driving on the lane line detection: "true"-support,
"false"-not support--></isSupportCrossLane>
<isSupportLaneChange><!--opt, xs:boolean, whether it supports illegal lane change detection: "true"-support, "false"not support--></isSupportLaneChange>
<isSupportVehicleExist><!--opt, xs:boolean, whether it supports motor vehicle on non-motor vehicle lane detection:
"true"-support, "false"-not support--></isSupportVehicleExist>
<isSupporFogDetection><!--opt, xs:boolean, whether it supports fog detection: "true"-support, "false"-not support-></isSupporFogDetection>
<isSupportIntersectionAnalysis><!--opt, xs: boolean, whether it supports configuring intersection analysis alarm:
"true"-support, "false"-not support--></isSupportIntersectionAnalysis>

585

Intelligent Security API (General Application) Developer Guide
<isSupportVoltageInstable><!--opt,xs:boolean, whether it supports supply voltage exception alarm: "true"-support,
"false"-not support--></isSupportVoltageInstable>
<isSupportSafetyHelmetDetection><!--opt, xs:boolean, whether it supports hard hat detection: "true"-support,
"false"-not support--></isSupportSafetyHelmetDetection>
<isSupportCertificateRevocation><!--opt, xs:boolean, whether it supports certificate expiry alarm--></
isSupportCertificateRevocation>
</EventCap>

16.2.128 XML_EventNotificationAlert_AlarmEventInfo
EventNotificationAlert message with alarm/event information in XML format.
<EventNotificationAlert version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<ipAddress><!--dep, xs:string, device IPv4 address--></ipAddress>
<ipv6Address><!--dep, xs:string, device IPv6 address--></ipv6Address>
<portNo><!--opt, xs:integer, device port number--></portNo>
<protocol><!--opt, xs:string, protocol type for uploading alarm/event information, "HTTP,HTTPS"--></protocol>
<macAddress><!--opt, xs:string, MAC address--></macAddress>
<channelID><!--dep, xs:string, device channel No., starts from 1--></channelID>
<dateTime><!--req, alarm/event triggered or occurred time, format: 2017-07-19T10:06:41+08:00--></dateTime>
<activePostCount><!--req, xs:integer, alarm/event frequency, starts from 1--></activePostCount>
<eventType><!--req, xs:string, alarm/event type, "peopleCounting, ANPR,..."--></eventType>
<eventState>
<!--req, xs:string, durative alarm/event status: "active"-valid, "inactive"-invalid, e.g., when a moving target is
detected,
the alarm/event information will be uploaded continuously unit the status is set to "inactive"-->
</eventState>
<eventDescription><!--req, xs:string, alarm/event description--></eventDescription>
<...><!--opt, for different alarm/event types, the nodes are different, see the message examples in different
applications--></...>
</EventNotificationAlert>

16.2.129 XML_EventNotificationAlert_HeartbeatInfo
EventNotificationAlert message with heartbeat information (when there is no alarm is triggered) in
XML format
<EventNotificationAlert version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<ipv6Address><!--dep, xs:string, device IPv6 address--></ipv6Address>
<portNo><!--opt, xs:integer, device port number--></portNo>
<protocol><!--opt, xs:string, protocol type for uploading alarm/event information, "HTTP,HTTPS"--></protocol>
<macAddress><!--opt, xs:string, MAC address--></macAddress>
<channelID><!--dep, xs:string, device channel No., starts from 1--></channelID>
<dateTime><!--req, heartbeat uploaded time, format: 2017-07-19T10:06:41+08:00--></dateTime>
<activePostCount><!--req, xs:integer, heartbeat frequency, starts from 1--></activePostCount>
<eventType><!--req, xs:string, for heartbeat, it is "videoloss"--></eventType>
<eventState>
<!--req, xs:string, for heartbeat, it is "inactive"-->
</eventState>

586

Intelligent Security API (General Application) Developer Guide
<eventDescription><!--req, xs: string, description--></eventDescription>
</EventNotificationAlert>

Remarks
• For network camera or network speed dome with the version 5.5.0 and lower, the heartbeat
frequency is 300 ms per heartbeat.
• For network camera or network speed dome with the version 5.5.0 and higher, the heartbeat
frequency is 10 s per heartbeat. If no heartbeat received for continuous 30 s, it indicates that the
heartbeat is timed out.
Example
Message Example of Heartbeat
<EventNotificationAlert version="2.0" xmlns="http://www.isapi.com/ver20/XMLSchema">
<ipAddress>10.17.133.46</ipAddress>
<portNo>80</portNo>
<protocol>HTTP</protocol>
<macAddress>44:19:b6:6d:24:85</macAddress>
<channelID>1</channelID>
<dateTime>2017-05-04T11:20:02+08:00</dateTime>
<activePostCount>0</activePostCount>
<eventType>videoloss</eventType>
<eventState>inactive</eventState>
<eventDescription>videoloss alarm</eventDescription>
</EventNotificationAlert>

16.2.130 XML_EventNotificationAlert_IOSensorAlarmMsg
The I/O sensor alarms are uploaded in the XML format of EventNotificationAlert message.
<EventNotificationAlert version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<ipAddress><!--dep, xs:string--></ipAddress>
<ipv6Address><!--dep, xs:string--></ipv6Address>
<portNo><!--opt, xs:integer--></portNo>
<protocolType><!--opt, xs:string, "HTTP,HTTPS"--></protocolType>
<macAddress><!--opt, xs:string, MAC address--></macAddress>
<dynChannelID><!--opt, xs:string, digital channel No.--></dynChannelID>
<channelID><!--dep, xs:string--></channelID>
<dateTime><!--req, xs:datetime, ISO8601 time format, e.g., 2017-04-22T15:39:01+08:00--></dateTime>
<activePostCount><!--req, xs:integer--></activePostCount>
<eventType><!--req, xs:string, event type: "IO"--></eventType>
<eventState><!--req, xs:string, "active,inactive"--></eventState>
<eventDescription><!--req, xs:string--></eventDescription>
<inputIOPortID><!--opt, xs:integer, local input port ID--></inputIOPortID>
<dynInputIOPortID><!--opt, xs:integer, channel input port ID--></dynInputIOPortID>
<channelName><!--opt, xs:string--></channelName>
<deviceID><!--opt, xs:string, device ID--></deviceID>
<Extensions>
<serialNumber><!--req, xs:string--></serialNumber>

587

Intelligent Security API (General Application) Developer Guide
<eventPush><!--req, xs:string--></eventPush>
</Extensions>
</EventNotificationAlert>

16.2.131 XML_EventNotificationAlert_SubscriptionHeartbeat
Heartbeat information message returned when subscribing alarm/event, and it is in XML format.
<EventNotificationAlert version="2.0" xmlns="http://www.isapi.com/ver20/XMLSchema">
<ipAddress>10.17.133.46</ipAddress>
<portNo>80</portNo>
<protocol>HTTP</protocol>
<macAddress>44:19:b6:6d:24:85</macAddress>
<channelID>1</channelID>
<dateTime>2017-05-04T11:20:02+08:00</dateTime>
<activePostCount>0</activePostCount>
<eventType>heartBeat</eventType>
<eventState>active</eventState>
<eventDescription>heartBeat</eventDescription>
</EventNotificationAlert>

See Also
XML_EventNotificationAlert_AlarmEventInfo

16.2.132 XML_EventTrigger
EventTrigger message in XML format
<EventTrigger version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs:string, ID--></id>
<eventType>
<!--req, xs:string, see details in the "Remarks" below-->
</eventType>
<eventDescription><!--opt, xs:string--></eventDescription>
<inputIOPortID><!--dep, xs:string, alarm input ID--></inputIOPortID>
<dynInputIOPortID><!--dep, xs:string, dynamic alarm input ID--></dynInputPortID>
<videoInputChannelID>
<!--dep, xs:string, video input channel ID, it is valid when <eventType> is "VMD, videoloss, tamperdetection,
regionEntrance, regionExiting, loitering, group, rapidMove, parking, unattendedBaggage, attendedBaggage"-->
</videoInputChannelID>
<dynVideoInputChannelID><!--dep, xs:string, dynamic video input channel ID--></dynVideoInputChannelID>
<intervalBetweenEvents><!--opt, xs:integer, event time interval, unit: second--></intervalBetweenEvents>
<WLSensorID><!--dep, xs:string, ID--></WLSensorID>
<EventTriggerNotificationList/><!--opt, alarm/event linkage actions, see details in the message of
XML_EventTriggerNotificationList-->
</EventTrigger>

588

Intelligent Security API (General Application) Developer Guide
Remarks
The node <eventType> can be the following values: IO, VMD, videoloss, raidfailure,
recordingfailure, badvideo, POS, analytics, fanfailure, overheat, tamperdetection, diskfull, diskerror,
nicbroken, ipconflict, illaccess, videomismatch, resolutionmismatch, radifailure, PIR, WLSensor,
spareException, poePowerException, heatmap, counting, linedetection, fielddetection,
regionEntrance, regionExiting, loitering, group,rapidMove, parking, unattendedBaggage,
attendedBaggage, HUMANATTRIBUTE, blackList, whitelist, peopleDetection, allVehicleList,
otherVehicleList, vehicledetection, storageDetection, shipsDetection, humanAttribute,
faceContrast, blackListFaceContrast, whiteListFaceContrast, faceSnap, faceLib,
personDensityDetection, personQueueDetecton, mixedTargetDetection, HVTVehicleDetection,
illegalParking, pedestrian, trafficAccident, construction, roadblock, abandonedObject,
parallelParking, parkingState, congestion, intersectionAnalysis, heatMap, thermometry,
shipsFlowDetection, dredgerDetection, reverseEntrance, luma, highHDTemperature,
lowHDTemperature, hdImpact, hdBadBlock, SevereHDFailure, safetyHelmetDetection.

See Also
XML_EventTriggerNotificationList

16.2.133 XML_EventTriggerCapType
EventTriggerCapType message in XML format
<EventTriggerCapType version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<isSupportCenter><!--opt, xs:boolean--></isSupportCenter>
<isSupportRecord><!--opt, xs:boolean--></isSupportRecord>
<isSupportMonitorAlarm><!--opt, xs:boolean--></isSupportMonitorAlarm>
<isSupportBeep><!--opt, xs: boolean, whether it supports audible warning--></isSupportBeep>
<isSupportIO><!--opt, xs:boolean--></isSupportIO>
<isSupportFTP><!--opt, xs:boolean--></isSupportFTP>
<isSupportEmail><!--opt, xs:boolean--></isSupEmail>
<isSupportLightAudioAlarm><!--opt, xs:boolean--></isSupportLightAudioAlarm>
<isSupportFocus><!--opt, xs:boolean--></isSupportFocus>
<isSupportPTZ><!--opt, xs:boolean--></isSupportPTZ>
<maxPresetActionNum>
<!--dep, xs:integer, it is valid only when <isSupportPTZ> is "true"-->
</maxPresetActionNum>
<maxPatrolActionNum>
<!--dep, xs:integer, it is valid only when <isSupportPTZ> is "true"-->
</maxPatrolActionNum>
<maxPatternActionNum>
<!--dep, xs:integer, it is valid only when <isSupportPTZ> is "true"-->
</maxPatternActionNum>
<isSupportTrack><!--opt, xs:boolean, whether it supports PTZ linked tracking--></isSupportTrack>
<isSupportWhiteLight>
<!--opt, xs: boolean, whether it supports supplement light alarm linkage-->
</isSupportWhiteLight>
<isSupportCloud><!--opt, xs:boolean, whether it supports upload to the cloud--></isSupportCloud>

589

Intelligent Security API (General Application) Developer Guide
<targetNotificationInterval max="1000" min="0" default="30"><!--xs:integer, range: [0, 1000], the default value is 30,
unit: seconds, this node is valid for <MotionDetectionTriggerCap> and <TamperDetectionTriggerCap> and this node is
valid when <isSupportPTZ> is "true"--></targetNotificationInterval>
<direction opt="both,forward,reverse"><!--xs:string, triggering direction, this node is valid for the node
<BlackListTriggerCap>, <WhiteListTriggerCap>, and <VehicleDetectionTriggerCap>--></direction>
<presetDurationTime min="" max=""><!--dep, xs:integer--></presetDurationTime>
<isSupportSMS><!--opt, xs:boolean, whether it supports SMS (Short Message Service)--></isSupportSMS>
<maxCellphoneNum><!--dep, xs:integer, this node is valid when <isSupportSMS> is "true"--></maxCellphoneNum>
<isSupportOSD><!--opt, xs:boolean--></isSupportOSD>
<isSupportAudio><!--opt, xs:boolean, whether it supports setting audio alarm independently. If this node is set to
"true", audio alarm and buzzer alarm can be linked separately, and the linage method is audio--></isSupportAudio>
<AudioAction><!--dep, this node is valid when <isSupportBeep> is "true" or <isSupportAudio> is "true"-->
<audioTypeList>
<audioType><!--list-->
<audioID><!--req, xs:integer, alarm sound type--></audioID>
<audioDescription><!--req, xs:string, alarm sound description, it should correspond to the alarm sound type--></
audioDescription>
</audioType>
</audioTypeList>
<alarmTimes opt="0,1,2,3,4,5,6,7,8,9,255"><!--req, xs:integer, alarm times, it is between 0 and 9, 255-continuous
alarm, unit: time--></alarmTimes>
</AudioAction>
<isNotSupportCenterModify><!--opt, xs:boolean, whether editing configuration parameters of the surveillance
center is not supported: "true"-yes (configuration parameters of the surveillance center cannot be edited), "false" or
this node is not returned-no (configuration parameters of the surveillance center can be edited)--></
isNotSupportCenterModify>
</EventTriggerCapType>

16.2.134 XML_EventTriggerNotification
EventTriggerNotification message in XML format
<EventTriggerNotification><!--opt-->
<id><!--req, xs:string, device ID--></id>
<notificationMethod>
<!--req, xs:string, linkage actions, opt="email,IM,IO,syslog,HTTP,FTP,beep,ptz,record, monitorAlarm, center,
LightAudioAlarm,focus,trace,cloud,SMS,whiteLight,audio…"-->
</notificationMethod>
<notificationRecurrence>
<!--opt, xs:string, "beginning,beginningandend,recurring"-->
</notificationRecurrence>
<notificationInterval><!--dep, xs:integer, unit: millisecond--></notificationInterval>
<outputIOPortID><!--dep, xs:string, video output No., it is required only when notificationMethod is "IO"--></
outputIOPortID>
<dynOutputIOPortID><!--dep, xs:string, dynamic video output No., it is required only when notificationMethod is
"IO"--></dynOutputIOPortID>
<videoInputID><!--dep, xs:string, video input No., it is required only when notificationMethod is "record"--></
videoInputID>
<dynVideoInputID><!--dep, xs:string, dynamic video input No., it is required only when notificationMethod is
"record"--></dynVideoInputID>
<ptzAction><!--dep, it is required only when notificationMethod is "ptz"-->

590

Intelligent Security API (General Application) Developer Guide
<ptzChannelID><!--req, xs:string, PTZ channel ID--></ptzChannelID>
<actionName><!--req, xs:string, PTZ control type: "preset", "pattern", "patrol"--></actionName>
<actionNum><!--dep, xs:integer></actionNum>
</ptzAction>
</EventTriggerNotification>

16.2.135 XML_EventTriggerNotificationList
EventTriggerNotificationList message in XML format
<EventTriggerNotificationList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<EventTriggerNotification/><!--opt, see details in the message of XML_EventTriggerNotification-->
</EventTriggerNotificationList>

See Also
XML_EventTriggerNotification

16.2.136 XML_EventTriggersCap
EventTriggersCap capability message in XML format
<EventTriggersCap version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<DiskfullTriggerCap><!--opt, xs: EventTriggerCapType--></DiskfullTriggerCap>
<DiskerrorTriggerCap><!--opt, xs: EventTriggerCapType--></DiskerrorTriggerCap>
<NicbrokenTriggerCap><!--opt, xs: EventTriggerCapType--></NicbrokenTriggerCap>
<IpconflictTriggerCap><!--opt, xs: EventTriggerCapType--></IpconflictTriggerCap>
<IllaccesTriggerCap><!--opt, xs: EventTriggerCapType--></IllaccesTriggerCap>
<BadvideoTriggerCap><!--opt, xs: EventTriggerCapType--></BadvideoTriggerCap>
<VideomismatchTriggerCap><!--opt, xs: EventTriggerCapType--></VideomismatchTriggerCap>
<IOTriggerCap><!--opt, xs: EventTriggerCapType--></IOTriggerCap>
<LineDetectTriggerCap><!--opt, xs: EventTriggerCapType--></LineDetectTriggerCap>
<RegionEntranceTriggerCap><!--opt, xs: EventTriggerCapType--></RegionEntranceTriggerCap>
<RegionExitingTriggerCap><!--opt, xs: EventTriggerCapType--></RegionExitingTriggerCap>
<LoiteringTriggerCap><!--opt, xs: EventTriggerCapType--></LoiteringTriggerCap>
<GroupDetectionTriggerCap><!--opt, xs: EventTriggerCapType--></GroupDetectionTriggerCap>
<RapidMoveTriggerCap><!--opt, xs: EventTriggerCapType--></RapidMoveTriggerCap>
<ParkingTriggerCap><!--opt, xs: EventTriggerCapType--></ParkingTriggerCap>
<UnattendedBaggageTriggerCap><!--opt, xs: EventTriggerCapType--></UnattendedBaggageTriggerCap>
<AttendedBaggageTriggerCap><!--opt, xs: EventTriggerCapType--></AttendedBaggageTriggerCap>
<FireDetectionTriggerCap><!--opt, xs: EventTriggerCapType--></FireDetectionTriggerCap>
<FireDetectionCap><!--opt, xs: EventTriggerCapType--></FireDetectionCap>
<StorageDetectionTriggerCap><!--opt, xs: EventTriggerCapType--></StorageDetectionTriggerCap>
<ShipsDetectionTriggerCap><!--opt, xs: EventTriggerCapType--></ShipsDetectionTriggerCap>
<ThermometryCap><!--opt, xs: EventTriggerCapType--></ThermometryCap>
<VandalProofTriggerCap><!--opt, xs: EventTriggerCapType--></VandalProofTriggerCap>
<BlackListTriggerCap><!--opt, xs: EventTriggerCapType, configuration capability of blacklist arming linkage--></
BlackListTriggerCap>
<WhiteListTriggerCap><!--opt, xs: EventTriggerCapType, configuration capability of whitelist arming linkage--></
WhiteListTriggerCap>

591

Intelligent Security API (General Application) Developer Guide
<AllVehicleListTriggerCap><!--opt,xs:EventTriggerCapType, configuration capability of other list arming linkage--></
AllVehicleListTriggerCap>
<OtherVehicleListTriggerCap><!--opt,xs:EventTriggerCapType--></OtherVehicleListTriggerCap>
<PeopleDetectionTriggerCap><!--opt,xs:EventTriggerCapType--></PeopleDetectionTriggerCap>
<PIRAlarmCap><!--opt, xs: EventTriggerCapType--></PIRAlarmCap>
<TamperDetectionTriggerCap><!--opt, xs: EventTriggerCapType--></TamperDetectionTriggerCap>
<DefocusDetectionTriggerCap><!--opt, xs: EventTriggerCapType--></DefocusDetectionTriggerCap>
<FaceDetectionTriggerCap><!--opt, xs: EventTriggerCapType--></FaceDetectionTriggerCap>
<SceneChangeDetectionTriggerCap><!--opt, xs: EventTriggerCapType--></SceneChangeDetectionTriggerCap>
<VandalProofAlarmCap><!--opt, xs: EventTriggerCapType--></VandalProofAlarmCap>
<JudgmentTriggerCap><!--opt, xs: EventTriggerCapType--></JudgmentTriggerCap>
<FightingTriggerCap><!--opt, xs: EventTriggerCapType--></FightingTriggerCap>
<RisingTriggerCap><!--opt, xs: EventTriggerCapType--></RisingTriggerCap>
<DozingTriggerCap><!--opt, xs: EventTriggerCapType--></DozingTriggerCap>
<CountingTriggerCap><!--opt, xs: EventTriggerCapType--></CountingTriggerCap>
<VideoLossTriggerCap><!--opt, xs: EventTriggerCapType--></VideoLossTriggerCap>
<HideTriggerCap><!--opt, xs:EventTriggerCapType--></HideTriggerCap>
<AlarmInTriggerCap><!--opt, xs: EventTriggerCapType--></AlarmInTriggerCap>
<VehicleDetectionTriggerCap><!--opt, xs: EventTriggerCapType--></VehicleDetectionTriggerCap>
<AudioExceptionCap><!--opt, xs: EventTriggerCapType--></AudioExceptionCap>
<FiledDetectTriggerCap><!--opt, xs: EventTriggerCapType--></FiledDetectTriggerCap>
<MotionDetectionTriggerCap><!--opt, xs: EventTriggerCapType--></MotionDetectionTriggerCap>
<TemperatureCap><!--opt, xs: EventTriggerCapType--></TemperatureCap>
<IntelligentTriggerCap><!--opt, xs: EventTriggerCapType--></IntelligentTriggerCap>
<FaceContrastTriggerCap><!--opt, xs: EventTriggerCapType, face picture comparison alarm linkage--></
FaceContrastTriggerCap>
<PersonDensityDetectionTriggerCap><!--opt, xs: EventTriggerCapType--></PersonDensityDetectionTriggerCap>
<PersonQueueDetectionTriggerCap><!--opt, xs: EventTriggerCapType, queue management alarm linkage--></
PersonQueueDetectionTriggerCap>
<WhiteListFaceContrastTriggerCap><!--opt, xs: EventTriggerCapType--></WhiteListFaceContrastTriggerCap>
<HumanRecognitionTriggerCap><!--opt,xs: EventTriggerCapType--></HumanRecognitionTriggerCap>
<FaceSnapTriggerCap><!--opt, xs: EventTriggerCapType--></FaceSnapTriggerCap>
<isSupportWhiteLightAction>
<!--dep, xs: boolean, see details in EventTriggerCapType, it is valid when isSupportWhiteLight is "true"-->
</isSupportWhiteLightAction>
<isSupportAudioAction>
<!--dep, xs: boolean, see details in EventTriggerCapType, it is valid when isSupportBeep is "true"-->
</isSupportAudioAction>
<HFPDTriggerCap><!--opt, xs: EventTriggerCapType--></HFPDTriggerCap>
<MixedTargetDetectionCap><!--opt, xs: EventTriggerCapType--></MixedTargetDetectionCap>
<HVTVehicleDetectionTriggerCap><!--opt, xs: EventTriggerCapType--></HVTVehicleDetectionTriggerCap>
<VCATriggerCap><!--opt, xs: EventTriggerCapType--></VCATriggerCap>
<PIRCap><!--opt, xs: EventTriggerCapType--></PIRCap>
<IllegalParkingTriggerCap><!--opt, xs: EventTriggerCapType, whether it supports illegal parking detection--></
IllegalParkingTriggerCap>
<PedestrianTriggerCap><!--opt, xs: EventTriggerCapType, whether it supports pedestrian detection--></
PedestrianTriggerCap>
<TrafficAccidentTriggerCap><!--opt, xs: EventTriggerCapType, whether it supports traffic accident detection--></
TrafficAccidentTriggerCap>
<ConstructionTriggerCap><!--opt, xs: EventTriggerCapType, whether it supports construction detection--></
ConstructionTriggerCap>
<RoadBlockTriggerCap><!--opt, xs: EventTriggerCapType, whether it supports roadblock detection--></

592

Intelligent Security API (General Application) Developer Guide
RoadBlockTriggerCap>
<AbandonedObjectTriggerCap><!--opt, xs: EventTriggerCapType, whether it supports thrown object detection--></
AbandonedObjectTriggerCap>
<ParallelParkingTriggerCap><!--opt, xs: EventTriggerCapType, whether it supports parallel parking detection--></
ParallelParkingTriggerCap>
<ParkingStateTriggerCap><!--opt, xs: EventTriggerCapType, whether it supports parking space status detection,
currently this node is not supported--></ParkingStateTriggerCap>
<CongestionTriggerCap><!--opt, xs: EventTriggerCapType, whether it supports congestion detection--></
CongestionTriggerCap>
<IntersectionAnalysisCap><!--opt, xs: EventTriggerCapType, whether it supports intersection analysis--></
IntersectionAnalysisCap>
<ShipsFlowDetectionTriggerCap><!--opt,xs:EventTriggerCapType, ship flow detection--></
ShipsFlowDetectionTriggerCap>
<dredgerDetectionTriggerCap><!--opt,xs:EventTriggerCapType, dredger detection--></dredgerDetectionTriggerCap>
<voltageInstableTriggerCap><!--opt,xs:EventTriggerCapType, supply voltage exception--></voltageInstableTriggerCap>
<HighHDTemperatureTriggerCap><!--opt, xs:EventTriggerCapType, HDD high temperature detection--></
HighHDTemperatureTriggerCap>
<LowHDTemperatureTriggerCap><!--opt, xs:EventTriggerCapType, HDD low temperature detection--></
LowHDTemperatureTriggerCap>
<HDImpactTriggerCap><!--opt, xs:EventTriggerCapType, HDD impact detection--></HDImpactTriggerCap>
<HDBadBlockTriggerCap><!--opt, xs:EventTriggerCapType, HDD bad sector detection--></HDBadBlockTriggerCap>
<SevereHDFailureTriggerCap><!--opt, xs:EventTriggerCapType, HDD severe fault detection--></
SevereHDFailureTriggerCap>
<HUMANATTRIBUTECap><!--opt, xs:EventTriggerCapType--></HUMANATTRIBUTECap>
<HumanAttributeTriggerCap><!--opt, xs:EventTriggerCapType, human body attribute--></HumanAttributeTriggerCap>
<BlackListFaceContrastTriggerCap><!--opt, xs:EventTriggerCapType, alarm linkage capability of blacklist face
comparison--></BlackListFaceContrastTriggerCap>
<FaceLibTriggerCap><!--opt, xs:EventTriggerCapType--></FaceLibTriggerCap>
<SafetyHelmetDetectionTriggerCap><!--opt, xs:EventTriggerCapType, alarm linkage capability of hard hat detection-></SafetyHelmetDetectionTriggerCap>
</EventTriggersCap>

See Also
XML_EventTriggerCapType

16.2.137 XML_ExportStatus
ExportStatus message in XML format
<ExportStatus version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<status><!--opt, xs:string, export status: "export"-exporting, "unexport"-not export--></status>
<message><!--dep, xs:string, it is valid when status is "export"--></message>
</ExportStatus>

16.2.138 XML_Exposure
Exposure message in XML format

593

Intelligent Security API (General Application) Developer Guide
<Exposure version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<ExposureType/><!--req, xs:string, "auto, IrisFirst, ShutterFirst, gainFirst, manual, pIris, T5280-PQ1, T5289-PQ1,
T1140-PQ1, T2712-PQ1, HV1250P-MPIR, pIris-General"-->
<autoIrisLevel>
<!--dep, xs:integer-->
</autoIrisLevel>
<OverexposeSuppress><!--opt-->
<enabled>
<!--req, xs:boolean-->
</enabled>
<Type>
<!--dep, xs:string, this node depends on <enabled>, "AUTO,MANUAL"-->
</Type>
<DistanceLevel>
<!--dep, xs: integer, this node depends on <Type>-->
</DistanceLevel>
<shortIRDistanceLevel>
<!--dep, xs: integer, this node depends on <Type>-->
</shortIRDistanceLevel>
<longIRDistanceLevel>
<!--dep, xs: integer, this node depends on <Type>-->
</longIRDistanceLevel>
</OverexposeSuppress>
<pIris><!--opt-->
<pIrisType/><!--dep, xs:string, this node depends on <ExposureType>, "AUTO,MANUAL"-->
<IrisLevel>
<!--dep, xs:integer, this node depends on <pIrisType>-->
</IrisLevel>
</pIris>
<PIrisGeneral><!--dep, it is available when <ExposureType> is set to "pIris-General"-->
<irisLevel>
<!--opt, iris level of general lens, which is between 1 and 100, the default level is 50-->
</irisLevel>
</PIrisGeneral>
<exposureLevel>
<!--opt, xs:integer , this node depends on <ExposureType>-->
</exposureLevel>
<faceExposure><!--opt, face exposure-->
<enabled opt="true,false">
<!--opt, xs:boolean, whether to enable face exposure-->
</enabled>
<sensitivity min="0" max="100">
<!--opt, xs:integer, sensitivity-->
</sensitivity>
</faceExposure>
</Exposure>

16.2.139 XML_externSecurityCap
externSecurityCap message in XML format

594

Intelligent Security API (General Application) Developer Guide
<externSecurityCap>
<RestAdminPassWord>
<isSupportWithSecurityQuestion>
<!--opt, xs: boolean, whether supports resetting password by answering security questions, "true,false" -->
</isSupportWithSecurityQuestion>
<isSupportWithGUIDFileData>
<!-- opt, xs: boolean, whether supports resetting password by importing GUID file, "true,false" -->
</isSupportWithGUIDFileData>
<isSupportWithSecurityEmail>
<!-- opt, xs: boolean, whether supports resetting password by setting recovery email, "true,false" -->
</isSupportWithSecurityEmail>
</RestAdminPassWord>
<SecurityLimits><!--opt-->
<LoginPasswordLenLimit min="1" max="16">
<!--opt, minimum and maximum lengths of login password-->
</LoginPasswordLenLimit>
<SecurityAnswerLenLimit min="1" max="128">
<!--opt, minimum and maximum answer length of security questions-->
</SecurityAnswerLenLimit>
</SecurityLimits>
</externSecurityCap>

16.2.140 XML_ExtraInfo
ExtraInfo message in XML format
<ExtraInfo version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<diskMode><!--req, xs:string, disk mode: "singleDisk"-single disk, "RAID". The device needs to reboot after changing
the disk mode--></diskMode>
</ExtraInfo>

16.2.141 XML_EZVIZ
EZVIZ message in XML format.
<EZVIZ version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled><!--req, xs:boolean--></enabled>
<registerStatus><!--ro, opt, xs:boolean--></registerStatus>
<redirect><!--opt, xs:boolean, whether to allow the device to redirect the server address--></redirect>
<serverAddress><!--opt-->
<addressingFormatType>
<!--req, xs:string, "ipaddress,hostname"-->
</addressingFormatType>
<hostName><!--dep, xs:string--></hostName>
<ipAddress><!--dep, xs:string--></ipAddress>
<ipv6Address><!--dep, xs:string--></ipv6Address>
<serverAddress>
<verificationCode>

595

Intelligent Security API (General Application) Developer Guide
<!--opt, xs:string, verification code. Only the "admin" user can edit the verification code using the control. The
verification code will be displayed for other users. If this node is returned, setting verification code is supported-->
</verificationCode>
<offlineStatus>
<!--ro,dep,xs:string, it is valid when registerStatus values "false", device offline status, opt="secretKeyInvalid"-invalid
verification code-->
</offlineStatus>
<operateCode><!--opt, xs:string, operation code for binding device--></operateCode>
<netWork>
<!--opt, xs:integer，0-null；1-automatic；2-wired network priority；3-wired network(by default), 4-3G/4G/GPRS-->
</netWork>
</EZVIZ>

16.2.142 XML_FocusConfiguration
FocusConfiguration message in XML format
<FocusConfiguration version=“2.0” xmlns=“http://www.isapi.org/ver20/XMLSchema”>
<focusStyle/><!--req, xs:string, focus type, "AUTO, MANUAL, SEMIAUTOMATIC"-->
<focusLimited/><!--opt, xs:integer, the minimum focus length, unit: cm-->
<focusPosition/><!--dep, depends on "FocusStyle", xs:integer-->
<focusSpeed><!--opt, xs:intger--></focusSpeed>
<focusSensitivity>
<!--opt, xs:intger, focus sensitivity, ranges from 0 to 2, it is valid when "focusStyle" is "MANUAL" or
"SEMIAUTOMATIC"-->
</focusSensitivity>
<temperatureChangeAdaptEnabled><!--opt, xs:boolean, "true,false"--></temperatureChangeAdaptEnabled>
<relativeFocusPos>
<!--opt, xs:intger, relative focus value, it is valid when "focusStyle" is "MANUAL" or "SEMIAUTOMATIC"-->
</relativeFocusPos>
<highTemperaturePriority><!--opt,xs:boolean, whether to enable high temperature priority mode--></
highTemperaturePriority>
</FocusConfiguration>

16.2.143 XML_FocusData
FocusData message in XML format
<FocusData version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<focus>
<!--req, xs: integer, a vector, whose value is the percentage of maximum focus speed: negative value-focus near;
positive value-focus far-->
</focus>
</FocusData>

596

Intelligent Security API (General Application) Developer Guide
16.2.144 XML_formatStatus
formatStatus message in XML format
<formatStatus version="1.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<formating><!--ro, req, xs: boolean--></formating>
<percent><!--ro, req, xs: integer, formatting progress percentage, which is between 0 and 100--></percent>
</formatStatus>

16.2.145 XML_FTPNotification
FTPNotification message in XML format
<FTPNotification version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id>
<!--req, xs:string, FTP ID-->
</id>
<enabled>
<!--req, xs:boolean, whether to enable the FTP server-->
</enabled>
<useSSL>
<!--opt, xs:boolean-->
</useSSL>
<addressingFormatType opt="ipaddress,hostname">
<!--req, xs:string, this node can only be set to "ipaddress"-->
</addressingFormatType>
<hostName>
<!--dep, xs:string-->
</hostName>
<ipAddress>
<!--dep, xs:string-->
</ipAddress>
<ipv6Address>
<!--dep, xs:string-->
</ipv6Address>
<portNo>
<!--opt, xs:integer, FTP port No.-->
</portNo>
<userName>
<!--req, xs:string, user name-->
</userName>
<password>
<!--wo, xs:string, password-->
</password>
<passiveModeEnabled>
<!--opt, xs:boolean-->
</passiveModeEnabled>
<annoyftp>
<!--opt, xs:boolean-->

597

Intelligent Security API (General Application) Developer Guide
</annoyftp>
<uploadPicture>
<!--opt, xs:boolean-->
</uploadPicture>
<uploadVideoClip>
<!--opt, xs:boolean-->
</uploadVideoClip>
<uploadPath>
<!--req-->
<pathDepth>
<!--req, xs:integer, directory levels, up to 16 levels can be supported-->
</pathDepth>
<topDirNameRule>
<!--dep, xs:string, parent directory name: "none", "devName"-device name, "devId"-device ID, "devIp"-device IP
address, "positionInfo"-camera 1, "time_month"-usage date (YYYY-MM), "time_date"-usage date (YYYY-MM-DD),
"illegalType"-violation type, "direction"-direction, "site"-place, "chanName"-channel name, "chanId"-channel No.,
"laneId"-lane No., "customize"-custom, "time", "buildUnitNo"-building No. and unit No. This node is set to NULL by
default-->
</topDirNameRule>
<topDirName/><!--dep, xs:string, custom string for parent directory, the maximum string length is 32 bytes. This
node is valid when <topDirNameRule> is "customize"-->
<subDirNameRule>
<!--dep, xs:string, child directory name: "none", "devName"-device name, "devId"-device ID, "devIp"-device IP
address, "positionInfo"-camera 1, "time_month"-usage date (YYYY-MM), "time_date"-usage date (YYYY-MM-DD),
"illegalType"-violation type, "direction"-direction, "site"-place, "chanName"-channel name, "chanId"-channel No.,
"laneId"-lane No., "customize"-custom, "time", "buildUnitNo"-building No. and unit No. This node is set to NULL by
default-->
</subDirNameRule>
<subDirName/><!--dep, xs:string, custom string for child directory, the maximum string length is 32 bytes. This node
is valid when <subDirNameRule> is "customize"-->
<threeDirNameRule>
<!--dep, xs:string, the third directory name: "none", "devName"-device name, "devId"-device ID, "devIp"-device IP
address, "positionInfo"-camera 1, "time_month"-usage date (YYYY-MM), "time_date"-usage date (YYYY-MM-DD),
"illegalType"-violation type, "direction"-direction, "site"-place, "chanName"-channel name, "chanId"-channel No.,
"laneId"-lane No., "customize"-custom, "time", "buildUnitNo"-building No. and unit No. This node is set to NULL by
default-->
</threeDirNameRule>
<threeDirName/><!--req, xs:string, custom string for the third directory, the maximum string length is 32 bytes. This
node is valid when <threeDirNameRule> is "customize"-->
<fourDirNameRule>
<!--dep, xs:string, the fourth directory name: "none", "devName"-device name, "devId"-device ID, "devIp"-device
IP address, "positionInfo"-camera 1, "time_month"-usage date (YYYY-MM), "time_date"-usage date (YYYY-MM-DD),
"illegalType"-violation type, "direction"-direction, "site"-place, "chanName"-channel name, "chanId"-channel No.,
"laneId"-lane No., "customize"-custom, "time", "buildUnitNo"-building No. and unit No. This node is set to NULL by
default-->
</fourDirNameRule>
<fourDirName/><!--req, xs:string, custom string for the fourth directory, the maximum string length is 32 bytes. This
node is valid when <fourDirNameRule> is "customize"-->
</uploadPath>
<picArchivingInterval>
<!--opt, xs:integer, the value is between 1 and 30, 0-close-->
</picArchivingInterval>

598

Intelligent Security API (General Application) Developer Guide
<picNameRuleType>
<!--opt, xs:string, picture name rule type: "default, prefix"-->
</picNameRuleType>
<picNamePrefix>
<!--dep, xs:string, prefix length of the picture name, which is between 0 and 32-->
</picNamePrefix>
<ftpPicNameRuleType>
<!--req, xs:string, type of FTP picture name rule: "videoIntercom"-rule used by video intercom products, "ITC"-rule
used by traffic cameras-->
</ftpPicNameRuleType>
<FTPPicNameRule>
<!--dep, picture name rule of a specific FTP-->
<ItemList/><!--req, see details in the message of XML_ItemList-->
<delimiter>
<!--req, xs:string, delimiter, which is a single character and the default value is "_"-->
</delimiter>
<customStr>
<!--req, xs:string, custom string, its length is between 1 and 128-->
</customStr>
</FTPPicNameRule>
<upDataType>
<!-- opt, xs:integer, picture uploading type: 0-all, 1-checkpoint, 2-violation. When only one FTP server is enabled,
this node can only be set to 0. When two FTP servers are both enabled, you should set 1 for one FTP server and set 2
for another FTP server, which means that two FTP servers cannot be set to the same type-->
</upDataType>
<uploadPlateEnable>
<!--opt, xs:boolean, whether to enable uploading license plate thumbnail-->
</uploadPlateEnable>
<site>
<!--req, xs:string, place, the maximum string length is 128 bytes-->
</site>
<roadNum>
<!--req, xs:string, intersection No., the maximum string length is 32 bytes-->
</roadNum>
<instrumentNum>
<!--req, xs:string, device No., the maximum string length is 32 bytes-->
</instrumentNum>
<direction>
<!--req, xs:string, direction No., the maximum string length is 32 bytes-->
</direction>
<directionDesc>
<!--req, xs:string, direction description, the maximum string length is 32 bytes-->
</directionDesc>
<monitoringInfo1>
<!--req, xs:string, camera 1 information, the maximum string length is 44 bytes-->
</monitoringInfo1>
<uploadAttachedInfomation>
<!--req, xs:boolean, whether to upload additional information-->
</uploadAttachedInfomation>
<brokenNetHttp><!--opt, xs:boolean, whether to enable ANR (automatic network replenishment)--></
brokenNetHttp>
</FTPNotification>

599

Intelligent Security API (General Application) Developer Guide
See Also
XML_ItemList

16.2.146 XML_FTPNotificationList
FTPNotificationList message in XML format
<FTPNotificationList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<FTPNotification/><!--opt, see details in the message of XML_FTPNotification-->
</FTPNotificationList>

See Also
XML_FTPNotification

16.2.147 XML_FTPTestDescription
FTPTestDescription message in XML format
<FTPTestDescription version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<useSSL><!--opt, xs: boolean></useSSL>
<addressingFormatType>
<!--req, xs: string, "ipaddress,hostname" -->
</addressingFormatType>
<hostName><!--dep, xs: string--></hostName>
<ipAddress><!--dep, xs: string--></ipAddress>
<ipv6Address><!--dep, xs: string--></ipv6Address>
<portNo><!--opt, xs: integer--></portNo>
<userName><!--req, xs: string--></userName>
<password><!--wo, xs: string--></password>
<passiveModeEnabled><!--opt, xs: boolean--></passiveModeEnabled>
<annoyftp><!--opt, xs: boolean--></annoyftp>
<uploadPath><!--req-->
<pathDepth><!--req, xs: integer, the value is from 0 to 2--></pathDepth>
<topDirNameRule>
<!--dep, xs: string, "devName, devId, devIp, customize"-->
</topDirNameRule>
<topDirName/><!--dep, xs: string-->
<subDirNameRule>
<!--dep, xs: string, "chanName, chanId, customize"-->
</subDirNameRule>
<subDirName/><!--dep, xs: string-->
</uploadPath>
</FTPTestDescription>

600

Intelligent Security API (General Application) Developer Guide
16.2.148 XML_FTPTestResult
FTPTestResult message in XML format
<FTPTestResult version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<errorDescription><!--req, xs: string--></errorDescription>
</FTPTestResult>

16.2.149 XML_Gain
Gain message in XML format
<Gain version="1.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<GainLevel/><!--dep, xs:integer, this node is valid when <ExposureType> in the message XML_Exposure is
"GainFisrt"-->
<GainWindow><!--opt-->
<RegionCoordinatesList><!--opt-->
<RegionCoordinates><!--opt-->
<positionX><!--req, xs: integer; x-coordinate--></positionX>
<positionY><!--req, xs: integer; y-coordinate--></positionY>
</RegionCoordinates>
</RegionCoordinatesList>
</GainWindow>
</Gain>

See Also
XML_Exposure

16.2.150 XML_GuardAgainstTheft
GuardAgainstTheft message in XML format
<GuardAgainstTheft version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled><!--required, xs:boolean, whether to support enabling device anti-theft--></enabled>
<SMSEnabled><!--required, xs:boolean, whether to support enabling SMS--></SMSEnabled>
<phoneNum><!--dependency, xs:string, phone No.--></phoneNum>
<longitudeLatitudeEnabled><!--dependency, xs:boolean, whether to support enabling longitude and latitude--></
longitudeLatitudeEnabled>
<siteLocationEnabled><!--optional, xs:boolean, whether to support enabling site location--></siteLocationEnabled>
<siteLocationInfo><!--dependency, xs:string, site location information--></siteLocationInfo>
<timeEnabled><!--optional, xs:boolean, whether to support enabling time--></timeEnabled>
<customInfo><!--optional, xs:string, custom information--></customInfo>
</GuardAgainstTheft>

601

Intelligent Security API (General Application) Developer Guide
16.2.151 XML_HardwareService
HardwareService message in XML format
<HardwareService version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<IrLightSwitch><!--opt-->
<mode><!--req, xs:string, "open,close"--></mode>
</IrLightSwitch>
<ABF><!--opt-->
<enabled><!--req, xs:boolean--></enabled>
</ABF>
<LED><!--opt-->
<enabled><!--req, xs:boolean--></enabled>
</LED>
<Defog>
<!--opt -->
<enabled>
<!--req, xs:boolean-->
</enabled>
</Defog>
<SupplementLight>
<!--opt-->
<enabled>
<!--req, xs:boolean-->
</enabled>
<isSupportFireLaserLight>
<!--opt, xs:boolean, "true, false"-->
</isSupportFireLaserLight>
<isSupportSupplementLightWord>
<!--opt, xs:boolean, "true, false", whether to support displaying supplement light prompt-->
</isSupportSupplementLightWord>
<captureWithSupplimentLightEnabled>
<!--opt, xs:boolean, "true,false", enable snapshot supplement light or not-->
</captureWithSupplimentLightEnabled>
</SupplementLight>
<Deicing><!--opt-->
<enabled><!--req, xs:boolean--></enabled>
</Deicing>
<ManualDeicing><!--opt-->
<enabled><!--req, xs:boolean--></enabled>
</ManualDeicing>
<mutexAbility>
<!--req, "laserLight,deicing", mutual exclusion ability, the laser light and deicing (including manual deicing and
automatic deicing) are mutual exclusive-->
</mutexAbility>
<VisibleMovementPower><!--opt-->
<enabled><!--req, xs:boolean--></enabled>
</VisibleMovementPower>
<ThermalMovementPower><!--opt-->
<enabled><!--req, xs:boolean--></enabled>
</ThermalMovementPower>

602

Intelligent Security API (General Application) Developer Guide
<PtzPower><!--opt-->
<enabled><!--req, xs:boolean--></enabled>
</PtzPower>
<powerSavingControl><!--opt, xs:string, power saving strategy: "sleepMode"-sleeping mode, lowConsumptionMode低功耗模式 --></powerSavingControl>
<HighTemperatureProtection><!--opt-->
<enabled><!--req, xs:boolean --></enabled>
<temperatureType><!--dep, xs:string,unit:℃, "90,100,110" --></temperatureType>
</HighTemperatureProtection>
</HardwareService>

16.2.152 XML_hdd
XML Message about HDD Parameters
<hdd version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--ro, req, xs: string; ID--></id>
<hddName><!--ro, req, xs: string--></hddName>
<hddPath><!--ro, opt, xs: string--></hddPath>
<hddType><!--ro, req, xs: string, "IDE, SATA, eSATA, NFS, iSCSI, Virtual Disk"--></hddType>
<status>
<!--ro, req, xs: string,
"ok,unformatted,error,idle,mismatch,offline,smartFailed,reparing,formating,notexist,unRecordHostFormatted",unReco
rdHostFormatted--unformatted in education sharing system-->
</status>
<capacity><!--ro, req, xs: float, unit: MB--></capacity>
<freeSpace><!--ro, req, xs: float, unit: MB--></freeSpace>
<property><!--req, xs: string, HDD properties, "RW,RO,Redund"--></property>
<group><!--opt, xs: string; HDD group ID--></group>
<DataModeList><!--opt, ro, current HDD allocation mode-->
<DataMode>
<type><!--req, xs: string, storage application type: recordStorage-video storage, pictureCloudStorage-picture to be
saved in cloud storage, fileStorage-file-storage--></type>
<occupancyRate><!--req, xs: integer, HDD usage, range: [0,100]--></occupancyRate>
</DataMode>
</DataModeList>
<formatType>
<!--ro, opt, xs: string, formatting type: FAT32 (default) and EXT4, this node is only available for SD card; if this node
does not exist, the default formatting type is FAT32-->
</formatType>
<encryptionStatus><!--ro, opt, xs:string, encryption status: "unencrypted", "encrypted", "verfyFailed"-verification
failed--></encryptionStatus>
</hdd>

16.2.153 XML_hddList
hddList message in XML format

603

Intelligent Security API (General Application) Developer Guide
<hddList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<hdd/><!--opt, refer to the message XML_hdd for details-->
</hddList>

See Also
XML_hdd

16.2.154 XML_HDDSMARTTest
HDDSMARTTest message in XML format
<HDDSMARTTest version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<testType><!--opt, xs: string, checking type: short,expanded,conveyance--></testType>
</HDDSMARTTest>

16.2.155 XML_Hello
Hello message in XML format
<?xml version="1.0" encoding="UTF-8"?>
<Hello>
<Types>hello</Types>
<!--device type value-->
<DeviceType>1234</DeviceType>
<!--device type description-->
<DeviceDescription>DS-2CD4024F</DeviceDescription>
<!--device serial No.-->
<DeviceSN>DS-2CD4024F20130925CCCH435107838</DeviceSN>
<!--command port number of private protocol-->
<CommandPort>8000</CommandPort>
<!--http port number-->
<HttpPort>80</HttpPort>
<!--MAC address-->
<MAC>44-19-b7-10-98-32</MAC>
<!--IPv4 address-->
<IPv4Address>172.9.3.106</IPv4Address>
<!--IPv4 subnet mask-->
<IPv4SubnetMask>255.255.255.0</IPv4SubnetMask>
<!--IPv4 gateway-->
<IPv4Gateway>172.9.3.1</IPv4Gateway>
<!--IPv6 address-->
<IPv6Address>2000:1:2:3:4619:b6ff:fe01:dd9d</IPv6Address>
<!--IPv6 gateway-->
<IPv6Gateway>2000:1:2:3:4619:b6ff:fe01:1</IPv6Gateway>
<!--size of IPv6 subnet mask-->
<IPv6MaskLen>64</IPv6MaskLen>
<!--enable/disable DHCP, true: enable, false: disable-->
<DHCP>false</DHCP>

604

Intelligent Security API (General Application) Developer Guide
<!--total number of analog channels-->
<AnalogChannelNum>32</AnalogChannelNum>
<!--total number of digital channels-->
<DigitalChannelNum>32</DigitalChannelNum>
<!--device software version information, not encrypt-->
<SoftwareVersion>V4.1.0 build130126</SoftwareVersion>
<!--DSP version information, not encrypt-->
<DSPVersion>V4.0 build130111</DSPVersion>
<!--device started time-->
<BootTime>2014-01-06 11:39:00</BootTime>
<!--true: OEM device, false: baseline device-->
<OEMCode>true</OEMCode>
<!--OEM manufacturer information, optional.-->
<OEMInfo>Axis</OEMInfo>
<!--device software version information, it is encrypted in AES128/AES256 CBC mode with fixed key-->
<SoftwareVersionEncrypt>V4.1.0 build130126</SoftwareVersionEncrypt>
<!--DSP version, it is encrypted in AES128/AES256 CBC mode with fixed key-->
<DSPVersionEncrypt>V4.0 build130111</DSPVersionEncrypt>
<!--OEM manufacturer information, it is encrypted in AES128/AES256 CBC mode with fixed key, optional-->
<OEMInfoEncrypt >Axis</OEMInfoEncrypt>
<!--true: encrypted device, false: normal device>
<Encrypt>true</ Encrypt >
<!--security code generated by specific algorithm (reserved), which is to prevent piracy-->
<SafeCode>123456</SafeCode>
<!--support upgrading reset password or not, true: yes, false: no>
<ResetAbility>true</ResetAbility>
<!--number of HDDs>
<DiskNumber>1</ DiskNumber >
<!--true: activated, false: inactivated>
<Activated>true</Activated>
<!--support resetting password or not, true: yes, false: no>
<PasswordResetAbility>true</PasswordResetAbility>
<!--support synchronizing password of network camera or not, true: yes, false: no>
<SyncIPCPassword>true</SyncIPCPassword>
<!--support password reset mode 2 or not, true: yes, false: no>
<PasswordResetModeSecond>true</PasswordResetModeSecond>
<!--OEMCode details-->
<DetailOEMCode>10101</DetailOEMCode>
<!--true: EZVIZ device, false: baseline device-->
<EZVIZCode>true</EZVIZCode>
<!--support locking device or not, true: yes, false: no-->
<DeviceLock>true</DeviceLock>
</Hello>

16.2.156 XML_HttpHostNotification
HttpHostNotification message in XML format
<HttpHostNotification version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs:string, ID--></id>
<url><!--req, xs:string, the absolute path, e.g., http://<ipAddress>:<portNo>/<uri>--></url>

605

Intelligent Security API (General Application) Developer Guide
<protocolType><!--req, xs:string, "HTTP,HTTPS,EHome"--></protocolType>
<parameterFormatType><!--req, xs:string, alarm/event information format, "XML,JSON"--></parameterFormatType>
<addressingFormatType><!--req, xs:string, "ipaddress,hostname"--></addressingFormatType>
<hostName><!--dep, xs:string--></hostName>
<ipAddress><!--dep, xs:string--></ipAddress>
<ipv6Address><!--dep, xs:string--></ipv6Address>
<portNo><!--opt, xs:integer--></portNo>
<userName><!--dep, xs:string--></userName>
<password><!--dep, xs:string--></password>
<httpAuthenticationMethod><!--req, xs:string, "MD5digest,none"--></httpAuthenticationMethod>
<eventType opt="AID,TFS,TPS"><!--req, xs:string--></eventType>
<uploadImagesDataType>
<!--opt, xs:string, "URL", "binary" (default), for cloud storage, only "URL" is supported-->
</uploadImagesDataType>
<eventMode><!--opt, xs:string, "all,list"--></eventMode>
<EventList><!--dep, it is valid only when eventMode is "list"-->
<Event><!--req-->
<type><!--req, xs:string--></type>
</Event>
</EventList>
<channels><!--opt, xs:string, "1,2,3,4…"--></channels>
<SubscribeEvent/><!--opt, event subscription parameters, see details in the message of XML_SubscribeEvent-->
</HttpHostNotification>

Example
Message Example of HttpHostNotification
<HttpHostNotification version="2.0" xmlns="http://www.isapi.com/ver20/XMLSchema">
<id>1</id>
<url></url>
<protocolType>HTTP</protocolType>
<parameterFormatType>XML</parameterFormatType>
<addressingFormatType>ipaddress</addressingFormatType>
<ipAddress>0.0.0.0</ipAddress>
<portNo>80</portNo>
<userName></userName>
<httpAuthenticationMethod>none</httpAuthenticationMethod>
</HttpHostNotification>

16.2.157 XML_HttpHostNotificationCap
HttpHostNotificationCap capability message in XML format
<HttpHostNotificationCap version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<hostNumber><!--Listening host No.--></hostNumber>
<urlLen max=""/>
<protocolType opt="HTTP,HTTPS,EHome"/>
<parameterFormatType opt="XML,querystring,JSON"/>
<addressingFormatType opt="ipaddress,hostname"/>
<ipAddress opt="ipv4,ipv6"/>
<portNo min="" max=""/>

606

Intelligent Security API (General Application) Developer Guide
<userNameLen min="" max=""/>
<passwordLen min="" max=""/>
<httpAuthenticationMethod opt="MD5digest,none"/>
<!--req, if the digest authentication is supported, configuring user name and password should be supported-->
<uploadImagesDataType opt="URL,binary"/>
</HttpHostNotificationCap>

Example
HttpHostNotificationCap Message Example
<HttpHostNotificationCap version="2.0" xmlns="http://www.isapi.com/ver20/XMLSchema">
<hostNumber>3</hostNumber>
<urlLen max="64" />
<protocolType opt="HTTP" />
<parameterFormatType opt="XML" />
<addressingFormatType opt="ipaddress,hostname" />
<ipAddress opt="ipv4,ipv6" />
<portNo min="1" max="65535" />
<userNameLen min="5" max="32" />
<passwordLen min="5" max="32" />
<httpAuthenticationMethod opt="none" />
<uploadImagesDataType opt="URL,binary" />
</HttpHostNotificationCap>

16.2.158 XML_HttpHostNotificationList
HttpHostNotificationList message in XML format
<HttpHostNotificationList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<HttpHostNotification>
<id><!--req, xs:string, ID--></id>
<url><!--req, xs:string--></url>
<protocolType><!--req, xs:string, "HTTP,HTTPS"--></protocolType>
<parameterFormatType><!--req, xs:string, alarm/event information format, "XML,JSON"--></parameterFormatType>
<addressingFormatType><!--req, xs:string, "ipaddress,hostname"--></addressingFormatType>
<hostName><!--dep, xs:string--></hostName>
<ipAddress><!--dep, xs:string--></ipAddress>
<ipv6Address><!--dep, xs:string--></ipv6Address>
<portNo><!--opt, xs:integer--></portNo>
<userName><!--dep, xs:string--></userName>
<password><!--dep, xs:string--></password>
<httpAuthenticationMethod><!--req, xs:string, "MD5digest,none"--></httpAuthenticationMethod>
<uploadImagesDataType>
<!--opt, xs:string, "URL", "binary" (default), for cloud storage, only "URL" is supported-->
</uploadImagesDataType>
<eventMode><!--opt, xs:string, "all,list"--></eventMode>
<EventList><!--dep, it is valid only when eventMode is "list"-->
<Event><!--req-->
<type><!--req, xs:string--></type>
</Event>
</EventList>

607

Intelligent Security API (General Application) Developer Guide
<channels><!--opt, xs:string, "1,2,3,4…"--></channels>
</HttpHostNotification>
</HttpHostNotificationList>

Example
HttpHostNotificationList Message Example
<HttpHostNotificationList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<HttpHostNotification>
<id>1</id>
<url></url>
<protocolType>HTTP</protocolType>
<parameterFormatType>XML</parameterFormatType>
<addressingFormatType>ipaddress</addressingFormatType>
<ipAddress>0.0.0.0</ipAddress>
<portNo>80</portNo>
<userName></userName>
<httpAuthenticationMethod>none</httpAuthenticationMethod>
</HttpHostNotification>
</HttpHostNotificationList>

16.2.159 XML_HttpHostTestResult
HttpHostTestResult message in XML format.
<HttpHostTestResult version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<errorDescription>
<!--req, xs:string-->
</errorDescription>
</HttpHostTestResult>

16.2.160 XML_IbeaconParam
IbeaconParam message in XML format
<IbeaconParam xmlns="http://www.isapi.org/ver20/XMLSchema" version="2.0">
<UUID min="" max="">
<!--req, xs:string, parking lot ID, which supports using digits, letters and hyphen as the tag-->
</UUID>
<major min="" max="">
<!--req, xs:integer, number of floors in the parking lot, which cannot be 0x00 for all-->
</major>
<minor min="" max="">
<!--req, xs:integer, number of parking spaces in each floor, which cannot be 0x00 for all-->
</minor>
<sendPower min="" max="">
<!--req, xs:integer, transmitted power: 01-0 dbm, 02- -6 dbm, 03- -23 dbm-->
</sendPower>
<frequency min="" max="">

608

Intelligent Security API (General Application) Developer Guide
<!--req, xs:integer, transmitted frequency, which is the broadcast time interval, unit: 625 µs. The broadcast time
interval is between 32 (20 ms) to 8000 (5s), and the default value is 160 (100 ms)-->
</frequency>
<measurePower min="" max="">
<!--req, xs:integer, rated power, which is the RSSI (Received Signal Strength Indication) in the position of one meter
away, unit: dbm-->
</measurePower>
</IbeaconParam>

16.2.161 XML_IEEE802_1x
IEEE802_1x message in XML format
<IEEE802_1x version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled><!--req, xs: boolean--></enabled>
<authenticationProtocolType>
<!--req, xs: string, "EAP-TLS,EAP-TTLS,EAP-PEAP,EAP-LEAP,EAP-FAST,EAP-MD5"-->
</authenticationProtocolType>
<innerTTLSAuthenticationMethod>
<!--dep, xs: string, "MS-CHAP,MS-CHAPv2,PAP,EAP-MD5", this node is required when <authenticationProtocolType>
is "EAP-TLS"-->
</innerTTLSAuthenticationMethod>
<innerEAPProtocolType>
<!--dep, xs: string, "EAP-POTP,MS-CHAPv2", this node is required when <authenticationProtocolType> is "EAPPEAP" or "EAP-FAST-->
</innerEAPProtocolType>
<validateServerEnabled><!--dep, xs: boolean--></validateServerEnabled>
<userName><!--dep, xs: string--></userName>
<password><!--dep, xs: string--></password>
<anonymousID><!--opt, xs: string--></anonymousID>
<autoPACProvisioningEnabled>
<!--dep, xs: boolean, this node is required when <authenticationProtocolType> is "EAP-FAST"-->
</autoPACProvisioningEnabled>
<Extensions><!--opt-->
<EAPOLVersion><!--opt, xs:string, "1, 2"--></EAPOLVersion>
</Extensions>
</IEEE802_1x>

Remarks
• For EAP-LEAP or EAP-MD5, the parameters userName, password, and Extensions can be
configured.
• For EAP-TLS, the parameters userName, password, and Extensions can be configured, and the
certificates with different types (i.e., CA, user certificate, key) can be uploaded.

16.2.162 XML_IllegalLoginLock
IllegalLoginLock message in XML format

609

Intelligent Security API (General Application) Developer Guide
<IllegalLoginLock version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled>true</enabled>
<maxIllegalLoginTimes>
<!--opt, xs: integer, maximum illegal login attempts, whose value is between 3 and 20, and the default value is 5-->
</maxIllegalLoginTimes>
</IllegalLoginLock>

16.2.163 XML_ImageCap
ImageCap message in XML format
<ImageCap version="2.0" xmlns="http://www.isapi.com/ver20/XMLSchema">
<isSupportRegionalExposure><!--opt, xs:boolean--></isSupportRegionalExposure>
<isSupportRegionalFocus><!--opt, xs:boolean--></isSupportRegionalFocus>
</ImageCap>

16.2.164 XML_ImageChannel
ImageChannel message in XML format
<ImageChannel version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs: integer--></id>
<enabled><!--req, xs: boolean--></enabled>
<videoInputID><!--req, xs: integer--></videoInputID>
<Defog/><!--opt, electronic defogging parameters, see details in the message of XML_Defog-->
<NoiseReduce2D/><!--opt, 2D noise reduction parameters, see details in the message of XML_NoiseReduce2D-->
<Focusconfiguration/><!--opt-->
<LensInitialization/><!--opt-->
<ImageFlip/><!--opt, image automatic flipping parameters, see details in the message of XML_ImageFlip-->
<ImageFreeze/><!--opt-->
<proportionalpan/><!--opt-->
<WDR/><!--opt, WDR parameters, refer to the message XML_WDR for details-->
<BLC/><!--opt, BLC parameters, refer to the message XML_BLC for details-->
<NoiseReduce/><!--opt, 3D DNR parameters, see details in the message of XML_NoiseReduce-->
<ImageEnhancement/><!--opt, image enhancement parameters, see details in the message of
XML_ImageEnhancement-->
<DSS/><!--opt, low illumination electronic shutter parameters in exposure, see details in the message of XML_DSS-->
<WhiteBlance/><!--opt, WB parameters, see details in the message of XML_WhiteBlance-->
<Exposure/><!--opt, exposure parameters, see details in the message of XML_Exposure-->
<Sharpness/><!--opt, sharpness parameters, see details in the message of XML_Sharpness-->
<gammaCorrection/><!--opt, gamma correction parameters, see details in the message of XML_gammaCorrection-->
<powerLineFrequency/><!--opt, image standard parameters, refer to the message XML_powerLineFrequency for
details-->
<Color/><!--opt, image color parameters, see details in the message of XML_Color-->
<IrcutFilter/><!--opt, day/night auto switch parameters, see details in the message of XML_IrxutFilter-->
<ImageModeList/><!--opt, default image mode parameters, see details in the message of XML_ImageModeList-->
<BrightEnhance/><!--opt, brightness enhancement parameters, see details in the message of XML_BrightEnhance-->
<ISPMode/><!--opt, day/night mode parameters, see details in the message of XML_ISPMode-->

610

Intelligent Security API (General Application) Developer Guide
<Shutter/><!--opt, shutter parameters in exposure, see details in the message of XML_Shutter-->
<Gain/><!--opt, gain parameters, see details in the message of XML_Gain-->
<ImageIcrE/><!--opt, IR-cut filter parameters, see details in the message of XML_ImageIcrE-->
<ImageMultishut/><!--opt, multi-shutter parameters, see details in the message of XML_ImageMultishut-->
<PlateBright/><!--opt, license plate brightness compensation parameters, see details in the message of
XML_PlateBright-->
<JPEGParam/><!--opt, JPEG picture size parameters, see details in the message of XML_JPEGParam-->
<DarkEnhance/><!--opt, dark space enhancement parameters, see details in the message of XML_DarkEnhance-->
<Hdr/><!--opt, WDR (Wide Dynamic Range) parameters, see details in the message of XML_Hdr-->
<LSE/><!--opt, contrast enhancement parameters, see details in the message of XML_LSE-->
<MCE/><!--opt, memory color enhancement parameters, see details in the message of XML_MCE-->
<Svce/><!--opt, part contrast parameters, see details in the message of XML_Svce-->
<SectionCtrl/><!--opt, configuration parameters of picture exposure control by video segment, see details in the
message of XML_SectionCtrl-->
<AutoContrast/><!--opt, automatic contrast parameters, see details in the message of XML_AutoContrast-->
<GrayRange/><!--opt, grayscale range parameters, see details in the message of XML_GrayRange-->
<LSEDetail/><!--opt, contrast enhancement parameters, see details in the message of XML_LSE-->
<ITCImageSnap/><!--opt, captured picture parameters, see details in the message of XML_ITCImageSnap-->
<ImageRecord/><!--opt, image parameters in the recorded video, see details in the message of XML_ImageRecord-->
<Scene/><!--opt-->
<EPTZ/><!--opt-->
<EIS/><!--opt-->
<HLC/><!--opt-->
<ZoomLimit/><!--opt-->
<corridor/><!--opt, image rotate mode parameters, refer to the message XML_corridor for details-->
<Dehaze/><!--opt, defog mode parameters, refer to the message XML_Dehaze for details-->
<ImageMode/><!--opt, xs: string, image mode: "standard, indoor, outdoor, dimLight"-->
<enableImageLossDetection><!--opt, xs: boolean--></enableImageLossDetection>
<CaptureMode/><!--opt, video input mode parameters, refer to the message XML_CaptureMode for details-->
<IrLight/><!--opt-->
<LensDistortionCorrection/><!--opt-->
<ExposureSync/><!--opt-->
<BrightnessSuddenChangeSuppression/><!--opt-->
<TempRange/><!--opt, temperature range, refer to the message XML_tempRange for details-->
</ImageChannel>

16.2.165 XML_ImageChannellist
ImageChannellist message in XML format
<ImageChannellist version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<ImageChannel/><!--opt-->
</ImageChannellist>

See Also
XML_ImageChannel

611

Intelligent Security API (General Application) Developer Guide
16.2.166 XML_ImageFlip
ImageFlip message in XML format
<ImageFlip version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled/><!--req, xs:boolean-->
<ImageFlipStyle/><!--opt, xs:string, "LEFTRIGHT, UPDOWN, CENTER, AUTO", it can be enabled only when the value is
"true"-->
<flipAngle><!--opt, xs:string, "90, 180, 270"--></flipAngle>
</ImageFlip>

16.2.167 XML_ImageMode
ImageMode message in XML format
<ImageMode version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<type><!--req, xs:string, "standard, indoor, outdoor, dimLight"--></type>
<recommendation><!--req, ro-->
<brightnessLevel><!--opt, xs:integer, ranging from 0 to 100--></brightnessLevel>
<contrastLevel><!--opt, xs:integer, ranging from 0 to 100--></contrastLevel>
<sharpnessLevel><!--opt, xs:integer, ranging from 0 to 100--> </sharpnessLevel>
<saturationLevel><!--opt, xs:integer, ranging from 0 to 100--></saturationLevel>
<hueLevel><!--opt, xs:integer, ranging from 0 to 100--></hueLevel>
<deNoiseLevel><!--opt, xs:integer, ranging from 0 to 100--></deNoiseLevel>
</recommendation>
</ImageMode>

16.2.168 XML_ImageModeList
ImageModeList message in XML format
<ImageModeList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<ImageMode/><!--opt, see details in the message of XML_ImageMode-->
</ImageModeList>

See Also
XML_ImageMode

16.2.169 XML_InputProxyChannel
InputProxyChannel message in XML format
<InputProxyChannel version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs:string, starts from 1--></id>
<name><!--opt, xs:string--></name>
<sourceInputPortDescriptor><!--req-->

612

Intelligent Security API (General Application) Developer Guide
<adminProtocol><!--req, xs:string, "HIKVISION,SONY,ISAPI,ONVIF,..."--></adminProtocol>
<addressingFormatType><!--req, xs:string, "ipaddress,hostname"--></addressingFormatType>
<hostName><!--dep, xs:string, domain name--></hostName>
<ipAddress><!--dep, xs:string, IP address--></ipAddress>
<ipv6Address><!--dep, xs:string, IPv6 address--></ipv6Address>
<managePortNo><!--req, xs:integer--></managePortNo>
<srcInputPort><!--req, xs:string, channel No.--></srcInputPort>
<userName><!--req, xs:string, user name, which should be encrypted--></userName>
<password><!--req, wo, xs:string, password, which should be encrypted--></password>
<streamType><!--opt, xs:string, opt="auto,tcp,udp"--></streamType>
<deviceID><!--dep, xs:string--></deviceID>
<deviceTypeName><!--ro, opt, xs:string, device type name--></deviceTypeName>
<serialNumber><!--ro, opt, xs:string, device serial No.--></serialNumber>
<firmwareVersion><!--ro, opt, xs:string, firmware version--></firmwareVersion>
<firmwareCode><!--ro, opt, xs:string, firmware code--></firmwareCode>
</sourceInputPortDescriptor>
<enableAnr>
<!--opt, xs:boolean, whether enables ANR funtion-->
</enableAnr>
<NVRInfo>
<ipAddressNVR>
<!--opt, xs:string, IP address of NVR-->
</ipAddressNVR>
<portNVR>
<!--opt, xs:integer, port No. of NVR-->
</portNVR>
<ipcChannelNo>
<!--opt, xs:integer, channel No. of the network camera in NVR-->
</ipcChannelNo>
</NVRInfo>
</InputProxyChannel>

16.2.170 XML_InputProxyChannelList
InputProxyChannelList message in XML format
<InputProxyChannelList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<InputProxyChannel/><!--opt, see details in
XML_InputProxyChannel
-->
</InputProxyChannelList>

16.2.171 XML_Cap_InputProxyChannelListCap
InputProxyChannelListCap capability message in XML format
<InputProxyChannelListCap version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<InputProxyChannel>
<id min="" max=""/><!--req,xs:string,starts from 1-->

613

Intelligent Security API (General Application) Developer Guide
<name min="" max=""/><!--opt,xs:string-->
<sourceInputPortDescriptor><!--req-->
<adminProtocol opt="HIKVISION,SONY,ISAPI,ONVIF,..."/><!--req,xs:string-->
<addressingFormatType opt="ipaddress,hostname"/><!--req,xs:string-->
<hostName min="" max=""/><!--dep, xs:string, domain name-->
<ipAddress min="" max=""/><!--dep, xs:string, IP address-->
<ipv6Address min="" max=""/><!--dep, xs:string, IPv6 address-->
<managePortNo min="" max=""/><!--req, xs:integer, port number-->
<srcInputPort min="" max=""/><!--req, xs:string, channel No.-->
<userName min="" max=""/><!--req, xs:string-->
<password min="" max=""/><!--req, wo, xs:string-->
<streamType opt="auto,tcp,udp"/><!--opt, xs:string-->
<deviceID min="" max=""/><!--dep, xs:string-->
</sourceInputPortDescriptor>
</InputProxyChannel>
</InputProxyChannelListCap>

16.2.172 XML_InputProxyChannelStatus
InputProxyChannelStatus message in XML format
<InputProxyChannelStatus version="1.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs:string--></id>
<sourceInputPortDescriptor/><!--req-->
<online><!--req, xs:boolean, whether the camera is online--></online>
<streamingProxyChannelIdList><!--req-->
<streamingProxyChannelId>
<!--req, xs:string, stream channel No., e.g., 101-main stream of channel 1, 102-sub-stream of channel 1-->
</streamingProxyChannelId>
</streamingProxyChannelIdList>
<chanDetectResult>
<!--opt, xs:string, network camera status: "connect"-connected, "overSysBandwidth"-insufficient bandwidth,
"domainError"-incorrect domain name, "ipcStreamFail"-getting stream failed, "connecting", "chacnNoError"-incorrect
channel No., "cipAddrConflictWithDev": IP address is conflicted with device address, "ipAddrConflicWithIpc"-IP
address conflicted, "errorUserNameOrPasswd"-incorrect user name or password, "netUnreachable"-invalid network
address, "unknownError"-unknown error, "notExist"-does not exist, "ipcStreamTypeNotSupport"-the stream
transmission mode is not supported, "ipcResolutionNotSupport"-the resolution of network camera is not supported-->
</chanDetectResult>
</InputProxyChannelStatus>

16.2.173 XML_InputProxyChannelStatusList
InputProxyChannelStatusList message in XML format
<InputProxyChannelStatusList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<InputProxyChannelStatus/><!--opt, see details in XML_InputProxyChannelStatus-->
</InputProxyChannelStatusList>

614

Intelligent Security API (General Application) Developer Guide
See Also
XML_InputProxyChannelStatus

16.2.174 XML_IntelliCap
IntelliCap capability message in XML format
<IntelliCap version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<isFaceSupport><!--opt, xs:boolean, whether it supports face detection--></isFaceSupport>
<isBehaviorSupport><!--opt, xs:boolean, whether it supports behavior analysis--></isBehaviorSupport>
<isLineDetectionSupport><!--opt, xs:boolean, whether it supports line crossing detection--></
isLineDetectionSupport>
<isFieldDetectionSupport><!--opt, xs:boolean, whether it supports intrusion detection--></isFieldDetectionSupport>
<isRegionEntranceSupport><!--opt, xs:boolean, whether it supports region entrance detection--></
isRegionEntranceSupport>
<isRegionExitingSupport><!--opt, xs:boolean, whether it supports region exiting detection--></
isRegionExitingSupport>
<isLoiteringSupport><!--opt, xs:boolean, whether it supports loitering detection--></isLoiteringSupport>
<isGroupSupport><!--opt, xs:boolean, whether it supports people gathering detection--></isGroupSupport>
<isRapidMoveSupport><!--opt, xs:boolean, whether it supports fast moving detection--></isRapidMoveSupport>
<isParkingSupport><!--opt, xs:boolean, whether it supports parking detection--></isParkingSupport>
<isUnattendedBaggageSupport><!--opt, xs:boolean, whether it supports unattended baggage detection--></
isUnattendedBaggageSupport>
<isAttendedBaggageSupport><!--opt, xs:boolean, whether it supports object removal detection--></
isAttendedBaggageSupport>
<isTeacherSupport><!--opt, xs:boolean, whether it supports teacher's behavior detection--></isTeacherSupport>
<isStudentSupport><!--opt, xs:boolean, whether it supports student's behavior detection--></isStudentSupport>
<isCombinedSupport><!--opt, xs:boolean, whether it supports combined detection--></isCombinedSupport>
<isTrafficSupport><!--opt, xs:boolean, whether it supports traffic detection--></isTrafficSupport>
<RestoreLib>
<libName opt="studentsStoodUp,peopleCounting,shipDetection"><!--opt,xs:string,--></libName>
</RestoreLib>
<RestoreDefParamForbid>
<!--opt, xs:boolean "true, false", forbid restoring algorithm library to default. When the node does not exist, it
indicates restoring to default is not supported. When the node exists and its value is "ture", it indicates support, when
the value is "false", it indicates not support-->
</RestoreDefParamForbid>
<RestoreAlgLibParam>
<!--opt, the capabilities of restoring algorithm library parameters according to algorithm library name-->
<libName opt="faceSnap,HMS,behaviorAnalysis"><!--opt, xs:string--></libName>
</RestoreAlgLibParam>
<isFaceCaptureStatisticsSupport><!--whether it supports face picture statistics--></isFaceCaptureStatisticsSupport>
<isSupportPersonQueueDetection><!--whether it supports queue management--></
isSupportPersonQueueDetection>
<isSupportIntersectionAnalysis>
<!--opt, xs: boolean, whether it supports intersection analysis-->
</isSupportIntersectionAnalysis>
<mixedTargetDetectionWithoutAttribute><!--opt, xs: boolean--></mixedTargetDetectionWithoutAttribute>
<isSupportUploadFacePictureByForm><!--opt, xs:boolean, whether it supports uploading face pictures by form--></
isSupportUploadFacePictureByForm>

615

Intelligent Security API (General Application) Developer Guide
<isSupportUploadFacePictureByUrl><!--opt, xs: boolean, whether it supports uploading face pictures by URL--></
isSupportUploadFacePictureByUrl>
<isSupportUploadHumanPictureByForm><!--opt, xs:boolean, whether it supports uploading human pictures in form-></isSupportUploadHumanPictureByForm>
<isSupportFaceScore><!--opt,xs:boolean, whether it supports face grading configuration (camera)--></
isSupportFaceScore>
<HumanRecognitionModeSearchCap>
<searchTargetsNumMax><!--opt, xs:integer, maximum number of sample pictures that can be imported for
searching by picture--></searchTargetsNumMax>
<HumanMode>
<searchCond opt="age_group,gender,jacet_color,glass,bag,ride,unlimit"/><!--setting multiple search conditions is
supported-->
<similarity min="0.0" max="100.0"/><!--opt, xs:float, similarity, range: [0.0,100.0]-->
</HumanMode>
<positive opt="true,false"/><!--opt, xs:boolean, whether it is false human body recognition alarm: "true"-yes,
"false"-no-->
<eventType opt="unlimit,humanRecognition">
<!--opt, xs:string, event type: "unlimit"-no limit, "humanRecognition"-human body detection alarm-->
</eventType>
<isSupportMultiChannelSearch>
<!--opt, xs:boolean, whether it supports multi-channel search-->
</isSupportMultiChannelSearch>
<isSupportTotalSearchResult>
<!--opt, xs:boolean, whether it supports limiting number of results that can be obtained after a single search-->
</isSupportTotalSearchResult>
</HumanRecognitionModeSearchCap>
<VehicleRecognitionModeSearchCap>
<searchTargetsNumMax><!--opt, xs:integer, maximum number of sample pictures that can be imported for
searching by picture--></searchTargetsNumMax>
<eventType opt="unlimit,vehicleBlackList,vehicleWhiteList"/><!--xs:string, event type: "unlimit"-no limit,
"vehicleBlackList"-vehicle blacklist, "vehicleWhiteList"-vehicle whitelist-->
<VehicleMode>
<searchCond opt="licensePlate,vehicleLogo,vehicleSubLogoRecog,vehicleType,vehicleColor,unlimit"/>
<similarity min="0.0" max="100.0"/><!--opt, xs:float, similarity, range: [0.0,100.0]-->
</VehicleMode>
<isSupportMultiChannelSearch>
<!--opt, xs:boolean, whether it supports multi-channel search-->
</isSupportMultiChannelSearch>
<isSupportTotalSearchResult>
<!--opt, xs:boolean, whether it supports limiting number of results that can be obtained after a single search-->
</isSupportTotalSearchResult>
</VehicleRecognitionModeSearchCap>
<FaceContrastPersonInfoExtend><!--configuration capability of face comparison tag-->
<personInfoCap>
<maxPersonInfo min="0" max="4">
<!--opt, xs:integer, maximum number of person tags-->
</maxPersonInfo>
</personInfoCap>
<personInfoFDlibCap>
<maxPersonInfo min="0" max="4">
<!--opt, xs:integer, maximum number of person tags-->
</maxPersonInfo>

616

Intelligent Security API (General Application) Developer Guide
</personInfoFDlibCap>
</FaceContrastPersonInfoExtend>
<isSupportSafetyHelmetDetection>
<!-- opt, xs:boolean, whether it supports hard hat detection-->
</isSupportSafetyHelmetDetection>
</IntelliCap>

16.2.175 XML_IOCap
IOCap capability message in XML format
<IOCap version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<IOInputPortNums>
<!--opt, xs:integer-->
</IOInputPortNums>
<IOOutputPortNums>
<!--opt, xs:integer-->
</IOOutputPortNums>
<isSupportStrobeLamp>
<!--opt, xs:integer-->
</isSupportStrobeLamp>
<SoftIOInputPortNums>
<!--opt, xs:integer-->
</SoftIOInputPortNums>
<isSupportIOOutputAdvanceParameter>
<!--opt, xs:boolean, whether supports configuration of alarm input advanced parameters-->
</isSupportIOOutputAdvanceParameter>
<isSupportCombinationAlarm>
<!--opt, xs:boolean, whether supports composite alarm-->
</isSupportCombinationAlarm>
</IOCap>

16.2.176 XML_IOInputPort
IOInputPort message in XML format
<IOInputPort version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs:integer--></id>
<enabled><!--req,Boolean,"true,false"--></enabled>
<IODescriptor><!--opt, I/O port description-->
<proxyProtocol>
<!--req, string, access protocol, "HIKVISION, AXIS, PANASONIC, BOSCH, PELCO, SONY…"-->
</proxyProtocol>
<userName><!--req, string, user name--></userName>
<addressingFormatType>
<!--req, string, address type: "ipaddress,hostname"-->
</addressingFormatType>
<hostName><!--dep, xs:string--></hostName>
<ipAddress><!--dep, xs:string--></ipAddress>

617

Intelligent Security API (General Application) Developer Guide
<ipv6Address><!--dep, xs:string--></ipv6Address>
<managePortNo><!--req, integer, manage port--></managePortNo>
<innerIOPortID><!--req, integer, I/O port--></innerIOPortID>
</IODescriptor>
<triggering><!-- req, xs:string, "high,low"--></triggering>
<name><!--opt,xs:string--></name>
<IOUseType>
<!-- opt, xs:string, "disable,openDoor,doorStatus,custom" -->
</IOUseType>
<inputType>
<!--opt, xs:string, opt="switch,semaphore"-->
</inputType>
<CombinationAlarm><!--opt, composite alarm list-->
<channel><!--req, xs:integer，channel No.--></channel>
<EventTypeList><!--req, event type list-->
<eventType><!--req, xs:string, event type--></eventType>
</EventTypeList>
</CombinationAlarm>
</IOInputPort>

16.2.177 XML_IOInputPortList
IOInputPortList message in XML format
<IOInputPortList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<IOInputPort/><!--opt, alarm input, see details in XML_IOInputPort-->
</IOInputPortList>

See Also
XML_IOInputPort

16.2.178 XML_IOOutputPort
IOOutputPort message in XML format
<IOOutputPort version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!-- req, xs:integer, "2"--></id>
<PowerOnState>
<!--req, output port configuration parameters when the device is powered on-->
<defaultState>
<!--ro, req, xs:string, default output port signal when it is not triggered, "high,low"-->
</defaultState>
<outputState>
<!--ro, req, output port signal when it is being triggered, xs:string, "high,low,pulse"-->
</outputState>
<pulseDuration>
<!--dep, xs:integer, duration of a output port signal when it is being triggered, it is valid when outputState is
"pulse", unit: milliseconds -->
</pulseDuration>

618

Intelligent Security API (General Application) Developer Guide
</PowerOnState>
<name><!--opt, xs:string--></name>
<IOUseType><!--opt, xs:string, "disable,electricLock,custom"--></IOUseType>
<normalStatus><!--opt, xs:string, normal status: open-remain open, close-remain closed--></normalStatus>
</IOOutputPort>

16.2.179 XML_IOOutputPortList
IOOutputPortList message in XML format
<IOOutputPortList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<IOOutputPort/><!--opt, see details in XML_IOOutputPort-->
</IOOutputPort>

See Also
XML_IOOutputPort

16.2.180 XML_IOPortData
IOPortData message in XML format
<IOPortData xmlns=“http://www.isapi.org/ver20/XMLSchema”>
<outputState><!--req, xs:string, output level: "high, low"--></outputState>
</IOPortData>

16.2.181 XML_IOPortStatus
IOPortStatus message in XML format
<IOPortStatus version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<!--req-->
<ioPortID><!--req, xs: integer, I/O No.: 1, 2--></ioPortID>
<ioPortType><!--req, xs: string, I/O type: "input", "output"--></ioPortType>
<ioState><!--req, xs: string, I/O status: "active", "inactive"--></ioState>
</IOPortStatus>

16.2.182 XML_IOPortStatusList
IOPortStatusList message in XML format
<IOPortStatusList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<IOPortStatus><!--req-->
<ioPortID><!--req, xs: integer, I/O No.: 1, 2--></ioPortID>
<ioPortType><!--req, xs: string, I/O type: input, output--></ioPortType>
<ioState><!-- req, xs: string, I/O status: active, inactive--></ioState>

619

Intelligent Security API (General Application) Developer Guide
</IOPortStatus>
</IOPortStatusList>

16.2.183 XML_IOProxyInputPort
IOProxyInputPort message in XML format
<IOProxyInputPort version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs:string--></id>
<enabled><!--req, xs:boolean--></enabled>
<IODescriptor><!--req, xs:string, description about the IO port connected to the front-end device-->
<proxyProtocol><!--req, xs:string, "HIKVISION, AXIS, PANASONIC, BOSCH, PELCO, SONY, …"--></proxyProtocol>
<userName><!--req, wo, xs:string --></userName>
<password><!--req, wo, xs:string --></password>
<addressingFormatType><!--dep, req, xs:enumeration, "ipaddress, hostname, …"--></addressingFormatType>
<hostName><!--dep, xs:string--></hostName>
<ipAddress><!--dep, xs:string--></ipAddress>
<ipv6Address><!--dep, xs:string--></ipv6Address>
<managePortNo><!--req, xs:integer--></managePortNo>
<innerIOPortID><!--req, xs:string, ID--></innerIOPortID>
</IODescriptor>
<triggering><!--req, xs:string, "high, low, rising, falling"--></triggering>
<name><!--opt, xs:string--></name>
<CombinationAlarm><!--opt, information list of the combined alarm-->
<channel><!--req, xs:integer, channel No.--></channel>
<EventTypeList><!--req, event type list-->
<eventType>
<!--list, xs:string, event type-->
</eventType>
</EventTypeList>
</CombinationAlarm>
</IOProxyInputPort>

16.2.184 XML_IOProxyInputPortList
IOProxyInputPortList message in XML format
<IOProxyInputPortList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<IOProxyInputPort/><!--opt, input configuration of one digital channel, see details in the message of
XML_IOProxyInputPort-->
</IOProxyInputPortList>

See Also
XML_IOProxyInputPort

620

Intelligent Security API (General Application) Developer Guide
16.2.185 XML_IOProxyOutputPort
IOProxyOutputPort message in XML format
<IOProxyOutputPort version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs:string--></id>
<IODescriptor/><!--req-->
<PowerOnState><!--req-->
<defaultState><!--req, xs:string, "high, low"--></defaultState>
<outputState><!--req, xs:string, "high, low, pulse"--></outputState>
<pulseDuration><!--dep, xs:integer, unit: milliseconds--></pulseDuration>
</PowerOnState>
<name><!--opt, xs:string--></name>
</IOProxyOutputPort>

16.2.186 XML_IOProxyOutputPortList
IOProxyOutputPortList message in XML format
<IOProxyOutputPortList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<IOProxyOutputPort/><!--opt, output configuration of one digital channel, see details in the message of
XML_IOProxyOutputPort-->
</IOProxyOutputPortList>

See Also
XML_IOProxyOutputPort

16.2.187 XML_IOTTriggersCap
IOTTriggersCap message in XML format
<?xml version="1.0" encoding="utf-8"?>
<IOTTriggersCap version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<AccessController><!--opt, security control panel-->
<XXTriggerCap><!--opt,xs: EventTriggerCapType--></XXTriggerCap>
</AccessController>
<VideoIntercom><!--opt, video intercom-->
<XXTriggerCap><!--opt,xs: EventTriggerCapType --></XXTriggerCap>
</VideoIntercom>
<GJD><!--opt, GJD security control panel-->
<XXTriggerCap><!--opt,xs: EventTriggerCapType--></XXTriggerCap>
</GJD>
<Luminite><!--opt, Luminite security control panel-->
<XXTriggerCap><!--opt,xs: EventTriggerCapType--></XXTriggerCap>
</Luminite>
<OPTEX><!--opt, OPTEX security control panel-->
<XXTriggerCap><!--opt,xs: EventTriggerCapType--></XXTriggerCap>

621

Intelligent Security API (General Application) Developer Guide
</OPTEX>
<CameraDetector><!--opt, detector-->
<XXTriggerCap><!--opt,xs: EventTriggerCapType--></XXTriggerCap>
</CameraDetector>
</IOTTriggersCap>

Remarks
The XX in the node <XXTriggerCap> corresponds to detailed event type. E.g., if the event type is
humanRecognition, then the returned node is <HumanRecognitionTriggerCap>.

See Also
XML_EventTriggerCapType

16.2.188 XML_IPAddress
IPAddress message in XML format
<IPAddress version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<ipVersion><!--req, xs:string, "v4,v6,dual"--></ipVersion>
<addressingType><!--req, xs:string, "static,dynamic,apipa--></addressingType>
<ipAddress><!--dep, xs:string, ipv4 address--></ipAddress>
<subnetMask><!--dep, xs:string, subnet mask for IPv4 address--></subnetMask>
<ipv6Address><!--dep, xs:string--></ipv6Address>
<bitMask><!--dep, xs:integer, bitmask IPv6 address--></bitMask>
<DefaultGateway><!--dep-->
<ipAddress><!--dep, xs:string--></ipAddress>
<ipv6Address><!--dep, xs:string--></ipv6Address>
</DefaultGateway>
<PrimaryDNS><!--dep-->
<ipAddress><!--dep, xs:string--></ipAddress>
<ipv6Address><!--dep, xs:string--></ipv6Address>
</PrimaryDNS>
<SecondaryDNS><!--dep-->
<ipAddress><!--dep, xs:string--></ipAddress>
<ipv6Address><!--dep, xs:string--></ipv6Address>
</SecondaryDNS>
<Ipv6Mode><!--opt-->
<ipV6AddressingType><!--dep, xs:string, "router,ra,manual,dhcp"--></ipV6AddressingType>
<ipv6AddressList>
<v6Address>
<id><!--dep, xs:string; id--></id>
<type><--dep, xs:string, "router,ra,manual,dhcp"--></type>
<address><!--dep, xs:string--></address>
<bitMask><!--dep, xs:integer--></bitMask>
</v6Address>
</ipv6AddressList>
</Ipv6Mode>
</IPAddress>

622

Intelligent Security API (General Application) Developer Guide
16.2.189 XML_IPFilter
IPFilter message in XML format
<IPFilter version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled><!--req, xs:boolean--></enabled>
<permissionType><!--opt, xs:string, "deny,allow"--></permissionType>
<IPFilterAddressList size = "32"/><!--opt, the character size indicates the max. number of supported IP address. See
XML_IPFilterAddressList for details-->
</IPFilter>

See Also
XML_IPFilterAddressList

16.2.190 XML_IPFilterAddress
IPFilterAddress message in XML format
<IPFilterAddress version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs:string;id--></id>
<permissionType><!--dep, xs:string, "deny,allow" --></permissionType>
<addressFilterType><!--ro, xs:string, "mask, range"--></addressFilterType>
<AddressRange><!--dep, it is valid when <addressFilterType> is "range"-->
<startIPAddress><!--dep, xs:string--></startIPAddress>
<endIPAddress><!--dep, xs:string--></endIPAddress>
<startIPv6Address><!--dep, xs:string--></startIPv6Address>
<endIPv6Address><!--dep, xs:string--></endIPv6Address>
</AddressRange>
<AddressMask><!--dep, it is valid when <addressFilterType> is "mask"-->
<ipAddress><!--dep, xs:string--></ipAddress>
<ipv6Address><!--dep, xs:string--></ipv6Address>
<bitMask><!--opt, xs:string--></bitMask>
</AddressMask>
</IPFilterAddress>

16.2.191 XML_IPFilterAddressList
IPFilterAddressList message in XML format
<IPFilterAddressList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<IPFilterAddress/><!--opt, see XML_IPFilterAddress for details-->
</IPFilterAddressList>

See Also
XML_IPFilterAddress

623

Intelligent Security API (General Application) Developer Guide
16.2.192 XML_IrcutFilter
IrcutFilter message in XML format
<IrcutFilter version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<IrcutFilterType>
<!--opt, xs: string, day/night auto switch mode: "auto, day, night, schedule, eventTrigger, darkFighterX,
darkFighterXAuto, darkFighterXSchedule"-->
</IrcutFilterType>
<dayToNightFilterLevel>
<!--opt, xs: string, level of switching day to night: "low, normal, high"-->
</dayToNightFilterLevel>
<dayToNightFilterTime>
<!--opt, xs: integer, time interval of switching day to night-->
</dayToNightFilterTime>
<nightToDayFilterLevel>
<!--opt, xs: string, level of switching night to day: "low, normal, high"-->
</nightToDayFilterLevel>
<nightToDayFilterTime>
<!--opt, xs: integer, time interval of switching night to day-->
</nightToDayFilterTime>
<Schedule><!--dep-->
<scheduleType><!--req, xs: string, schedule type: "day,night"></scheduleType>
<TimeRange><!--req, time period on schedule-->
<beginTime><!--req, xs: time, which is in ISO8601 time format--></beginTime>
<endTime><!--req, xs:time, which is in ISO8601 time format--></endTime>
</TimeRange>
</Schedule>
<EventTrigger><!--dep-->
<eventType><!--req, xs: string, event type: "IO,VMD"></eventType>
<IrcutFilterAction><!--req, xs:string, "day,night"></IrcutFilterAction >
</EventTrigger>
</IrcutFilter>

16.2.193 XML_IrisData
IrisData message in XML format
<IrisData version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<iris>
<!--req, xs: integer, a vector, whose value is the percentage of the maximum iris adjusting speed: negative valueclose iris; positive value-open iris-->
</iris>
</IrisData>

624

Intelligent Security API (General Application) Developer Guide
16.2.194 XML_ISPMode
ISPMode message in XML format
<ISPMode version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<mode><!--opt, xs:string, "auto,schedule"--></mode>
<Schedule><!--dep-->
<scheduleType><!--req, xs:string, "day,night"--></scheduleType>
<TimeRange><!--req-->
<beginTime><!--req, xs:time, ISO8601 time--></beginTime>
<endTime><!--req, xs:time, ISO8601 time--></endTime>
</TimeRange>
</Schedule>
</ISPMode>

16.2.195 XML_ItemList
ItemList message in XML format
<ItemList>
<Item>
<itemID>
<!--req, xs:string, item ID, which is between 1 and 15-->
</itemID>
<itemOrder>
<!--req, xs:string, name element: "none", "devIp"-device IP address, "time", "buildUnitNo"-building No. and unit
No., "outDoorDevNo"-door station, "unlockType"-unlocking type, "devName"-device name, "deviceNo"-device No.,
"channelName"-channel name, "channelNo"-channel No., "plateNo"-license plate number, "plateColor"-license plate
color, "laneNo"-lane No., "carSpeed"-vehicle speed, "positionInfo1"-camera 1, "pictureNo"-picture No., "CarNo"vehicle No., "speedLimit"-speed limit, "illegalCode"-violation code, "siteNo"-intersection No., "directionNo"-direction
No., "carColor"-vehicle color, "platePosition"-license plate coordinates, "carType"-vehicle type, "illegalType"-violation
type, "custom"-->
</itemOrder>
<itemCustomStr>
<!--req, xs:string, element custom string, which is between 1 and 32, unit: bytes. This node is valid only when
<itemOrder> is "custom". Currently traffic cameras only support one custom name-->
</itemCustomStr>
</Item>
</ItemList>

16.2.196 XML_Language
Language message in XML format
<Language version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<type><!--req, xs: string, "GBK,EUC-KR", def="GBK"--></type>
</Language>

625

Intelligent Security API (General Application) Developer Guide
16.2.197 XML_LensDistortionCorrection
LensDistortionCorrection message in XML format
<PrivacyMaskRegion version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs: integer--></id>
<enabled><!--req, xs: boolean--></enabled>
<RegionCoordinatesList><!--req-->
<RegionCoordinates><!--list-->
<positionX><!--req, xs: integer; coordinate--></positionX>
<positionY><!--req, xs: integer; coordinate--></positionY>
</RegionCoordinates>
</RegionCoordinatesList>
<privacymaskName><!--opt, xs: string--></privacymaskName>
<maskType>
<!--opt, xs: string, "gray,red,yellow,blue,orange,green,transparent,half-transparent,mosaic"-->
</maskType>
<zoomdoorlimit><!--opt, xs: integer, the value is between 10 and 1000--></zoomdoorlimit>
</PrivacyMaskRegion>

16.2.198 XML_Link
Link message in XML format
<Link version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<MACAddress><!--req, xs:string--></MACAddress>
<autoNegotiation><!--req, xs:boolean--></autoNegotiation>
<speed><!--req, xs:integer, "10, 100, 1000"--></speed>
<duplex><!--req, xs:string, "half, full"--></duplex>
<MTU><!--req, xs:integer--></MTU>
</Link>

16.2.199 XML_localPermission
localPermission message in XML format
<localPermission version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<backup><!—opt, xs:boolean—></backup>
<record><!—opt, xs:boolean—></record>
<playBack><!—opt, xs:boolean—></playBack>
<preview><!—opt, xs:boolean—></preview>
<videoChannelPermissionList><!—opt—>
<videoChannelPermission><!—opt—>
<id><!—req, corresponds to the video input channel ID—></id>
<playBack><!—opt, xs:boolean—></playBack>
<preview><!—opt, xs:boolean—></preview>
<record><!—opt, xs:boolean—></record>
<backup><!—opt, xs:boolean—></backup>

626

Intelligent Security API (General Application) Developer Guide
<playBackDoubleVerification>
<!—opt, xs:boolean, whether supports secondary authentication for playback—>
</playBackDoubleVerification>
<backupDoubleVerification>
<!—opt, xs:boolean, whether supports secondary authentication for backup—>
</backupDoubleVerification>
</videoChannelPermission>
</videoChannelPermissionList>
<ptzControl>
<!—req, xs:boolean—>
</ptzControl>
<ptzChannelPermissionList><!—opt—>
<ptzChannelPermission><!—req—>
<id><!—req, corresponds to PTZ channel ID—></id>
<ptzControl><!—opt, xs: boolean—></ptzControl>
</ptzChannelPermission>
</ptzChannelPermissionList>
<logOrStateCheck><!—opt, xs: boolean—></logOrStateCheck>
<parameterConfig><!—opt, xs: boolean—></parameterConfig>
<restartOrShutdown><!—opt, xs: boolean—></restartOrShutdown>
<upgrade><!—opt, xs: boolean—></upgrade>
</localPermission>

16.2.200 XML_LockPTZ
LockPTZ message in XML format
<LockPTZ version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<lockTime>
<!--req, xs:integer, PTZ is unlocked when this node is set to 0, unit: second-->
</lockTime>
</LockPTZ>

16.2.201 XML_LogConfig
LogConfig message in XML format.
<LogConfig version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled><!--required, boolean type, whether to enable log--></enabled>
<level>
<!--required, string type, log types: "none,debug,info,error,fault,all", multiple type can be selected, and each type
should be separated by comma-->
</level>
</LogConfig>

627

Intelligent Security API (General Application) Developer Guide
16.2.202 XML_LogServer
LogServer message in XML format
<LogServer version="2.0" xmlns="http://www.std-cgi.org/ver20/XMLSchema">
<enabled><!--req, xs: boolean, opt="true,false"--></enabled>
<addressingFormatType>
<!--req, xs: string, "ipaddress,hostname"-->
</addressingFormatType>
<hostName><!--dep, xs: string--></hostName>
<ipAddress><!--dep, xs: string--></ipAddress>
<ipv6Address><!--dep, xs: string--></ipv6Address>
<portNo><!--opt, xs: integer--></portNo>
<transmissionEncryption>
<!--opt, xs:boolean, whether to enable transmission encryption: "true"-yes, "false"-no (default). If this field is not
supported, the default encryption method is TLS-->
</transmissionEncryption>
</LogServer>

16.2.203 XML_LogServerCap
LogServerCap message in XML format
<LogServerCap version="2.0" xmlns="http://www.std-cgi.org/ver20/XMLSchema">
<enabled opt="true,false"></enabled>
<addressingFormatType opt="ipaddress,hostname">
<!--req,xs:string,"ipaddress,hostname"-->
</addressingFormatType>
<hostName min="" max="">
<!--dep, xs:string-->
</hostName>
<ipAddress min="" max=""><!--dep, xs:string--></ipAddress>
<ipv6Address min="" max=""><!--dep, xs:string--></ipv6Address>
<portNo min="" max=""><!--opt, xs:integer--></portNo>
<transmissionEncryption opt="true,false">
<!--opt, xs:boolean, whether to enable transmission encryption: "true"-yes, "false"-no (default). If this field is not
supported, the default encryption method is TLS-->
</transmissionEncryption>
</LogServerCap>

16.2.204 XML_LogServerTestDescription
LogServerTestDescription message in XML format
<LogServerTestDescription>
<addressingFormatType>
<!--req, xs:string, "ipaddress,hostname"-->
</addressingFormatType>

628

Intelligent Security API (General Application) Developer Guide
<hostName><!--dep, xs:string--></hostName>
<ipAddress><!--dep, xs:string--></ipAddress>
<ipv6Address><!--dep, xs:string--></ipv6Address>
<portNo><!--opt, xs:integer--></portNo>
<transmissionEncryption><!--opt, xs:boolean, whether to enable transmission encryption, and it is disabled by
default. If this field is not supported, the default encryption method used by the device is TLS--></
transmissionEncryption>
</LogServerTestDescription>

16.2.205 XML_MACFilter
MACFilter message in XML format
<MACFilter version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled><!--req, xs:boolean--></enabled>
<permissionType><!--req, xs:string,"deny, allow"--></permissionType>
<MACFilterAddressList>
<MACFilterAddress>
<id><!--req, xs:string, id--></id>
<MACAddress><!--req, xs:string--></MACAddress>
</MACFilterAddress>
</MACFilterAddressList>
</MACFilter>

16.2.206 XML_mailing
mailing message in XML format.
<mailing version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs:string--></id>
<enabled><!--opt, xs:boolean--></enabled>
<sender><!--req-->
<name><!--req, xs:string--></name>
<emailAddress><!--req, xs:string--></emailAddress>
<smtp><!--req-->
<enableAuthorization><!--req, xs:boolean--></enableAuthorization>
<enableSSL><!--opt, xs:boolean--></enableSSL>
<addressingFormatType>
<!--req, xs:string,"ipaddress,hostname"-->
</addressingFormatType>
<hostName><!--dep, xs:string--></hostName>
<ipAddress><!--dep, xs:string--></ipAddress>
<ipv6Address><!--dep, xs:string--></ipv6Address>
<portNo><!--opt, xs:integer--></portNo>
<accountName><!--dep, xs:string--></accountName>
<password><!--dep, xs:string--></password>
<enableTLS><!--opt, xs:boolean--></enableTLS>
<startTLS><!--dep, xs:boolean--></startTLS>
</smtp>

629

Intelligent Security API (General Application) Developer Guide
</sender>
<receiverList><!--req-->
<receiver><!--req-->
<id><!--req, xs:string--></id>
<name><!--req, xs:string--></name>
<emailAddress><!--req,xs:string--></emailAddress>
</receiver>
</receiverList>
<attachment><!--opt-->
<snapshot><!--opt-->
<enabled><!--req, xs:boolean--></enabled>
<interval><!--req, xs:integer, unit: second--></interval>
</snapshot>
</attachment>
</mailing>

16.2.207 XML_mailingList
mailingList message in XML format
<mailingList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<mailing><!--opt,xs:string--></mailing>
</mailingList>

16.2.208 XML_mailingTestResult
mailingTestResult message in XML format
<mailingTestResult version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<errorDescription><!--req, xs:string--></errorDescription>
</mailingTestResult>

16.2.209 XML_mailingTestDescription
mailingTestDescription message in XML format.
<mailingTestDescription version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<sendName><!--opt, xs:string--></sendName>
<sendEmailAddress><!--req, xs:string--></sendEmailAddress>
<addressingFormatType>
<!--req, xs:string,"ipaddress,hostname"-->
</addressingFormatType>
<hostName><!--dep, xs:string--></hostName>
<ipAddress><!--dep, xs:string--></ipAddress>
<ipv6Address><!--dep, xs:string--></ipv6Address>
<portNo><!--req, xs:integer--></portNo>
<enableSSL><!--opt, xs:boolean--></enableSSL>

630

Intelligent Security API (General Application) Developer Guide
<enableAuthorization><!--req, xs:boolean--></enableAuthorization>
<accountName><!--dep, xs:string--></accountName>
<password><!--dep, xs:string--></password>
<receiverList><!--req-->
<receiver><!--req-->
<id><!--req, xs:string--></id>
<name><!--req, xs:string--></name>
<emailAddress><!--req, xs:string--></emailAddress>
</receiver>
</receiverList>
</mailingTestDescription>

16.2.210 XML_MaxElevation
MaxElevation message in XML format
<MaxElevation version="1.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<mElevation><!--req, xs:integer, the lower limit of max. tilt-angle--></mElevation>
</MaxElevation>

16.2.211 XML_MountList
MountList message in XML format
<MountList version="1.0" xmlns="http://www.isapi.com/ver20/XMLSchema">
<Mount>
<id><!--req, xs: integer, storage node ID--></id>
<path><!--req, xs: string, saving path--></path>
<dir><!--req, xs: string--></dir>
<size><!--req, xs: string,, storage size--></size>
<descr><!--req, xs: string, storage description--></descr>
</Mount>
</MountList>

16.2.212 XML_NetworkCap
NetworkCap capability message in XML format
<NetworkCap version="2.0" xmlns=“http://www.isapi.org/ver20/XMLSchema">
<isSupportWireless>
<!--req, xs:boolean, whether to support accessing via wireless network, "true"-yes, "false"-no-->
<isSupportWireless>
<isSupportPPPoE>
<!--req, xs:boolean, whether to support PPPoE, "true"-yes, "false"-no-->
<isSupportPPPoE>
<isSupportBond>
<!--req, xs:boolean, whether to support NIC bonding, "true"-yes, "false"-no-->

631

Intelligent Security API (General Application) Developer Guide
<isSupportBond>
<isSupport802_1x>
<!--req, xs:boolean, whether to support 802_1x-->
</isSupport802_1x>
<isSupportNtp>
<!--opt, xs:boolean, whether to support NTP-->
</ isSupportNtp>
<isSupportFtp>
<!--opt, xs:boolean, whether to support FTP-->
</isSupportFtp>
<isSupportUpnp>
<!--opt, xs:boolean, whether to support UPnP-->
</isSupportUpnp>
<isSupportPNP>
<!--opt, xs:boolean, whether to support PnP-->
</isSupportPNP>
<isSupportDdns>
<!--opt, xs:boolean, whether to support DNS-->
</isSupportDdns>
<isSupportHttps>
<!--opt, xs:boolean, whether to support HTTPS-->
</isSupportHttps>
<SnmpCap><!--opt, whether to support SNMP-->
<isSupport><!--req, xs:boolean--></isSupport>
</SnmpCap>
<isSupportExtNetCfg>
<!--opt, xs:boolean, whether to support configuring extended network parameters-->
</isSupportExtNetCfg>
<isSupportIPFilter>
<!--opt, xs:boolean, whether to support filtering IP address-->
</isSupportIPFilter>
<isSupportSSH opt="true"><!--opt, xs:boolean, whether to support SSH--></isSupportSSH>
<isSupportEZVIZ>
<!--opt, xs:boolean, whether to support Hik-Connect-->
</isSupportEZVIZ>
<isSupportEhome>
<!--opt, xs:boolean, whether to support EHome-->
</isSupportEhome>
<isSupportWirelessServer>
<!--opt, xs:boolean, whether to support Wi-Fi hotspot-->
</isSupportWirelessServer>
<isSupportWirelessDial>
<!--opt, xs:boolean, whether to support wireless dial configuration-->
</isSupportWirelessDial>
<WPS><!--opt, Wi-Fi Protected Setup configuration-->
<NetworkInterfaceList size="2">
<NetworkInterface>
<id><!--req, xs:string, NIC ID--></id>
<enabled><!--req, xs:boolean, whether the NIC is enabled--></enabled>
<isSupportAutoConnect><!--opt, xs:boolean--></isSupportAutoConnect>
<isSupportDevicePinCode>
<!--opt, xs:boolean, whether to support device PIN code-->

632

Intelligent Security API (General Application) Developer Guide
</isSupportDevicePinCode>
<isSupportDevicePinCodeUpdate>
<!--opt, xs:boolean, whether to support updating device PIN code-->
</isSupportDevicePinCodeUpdate>
<ApPinCode><!--opt-->
<ssid min="" max="">
<!--opt, xs:string, maximum and minimum SSID length that can be returned by device-->
</ssid>
<pinCode min="" max="">
<!--opt, xs:string, maximum and minimum PIN code length that can be returned by device-->
</pinCode>
</ApPinCode>
</NetworkInterface>
</NetworkInterfaceList>
</WPS>
<isSupportMACFilter>
<!--opt, xs:boolean, whether to support filtering MAC address-->
</isSupportMACFilter>
<verificationCode max="">
<!--opt, xs:string, the maximum length of verificationCode that can be returned by device-->
</verificationCode>
<WPSCap><!--opt-->
<isSupport><!--req, xs: boolean--></isSupport>
<isSupportAutoConnect><!--req, xs: boolean--></isSupportAutoConnect>
</WPSCap>
<NetWorkMode>
<workMode><!--opt, xs:string, network mode: "close,wifi,wifiAp"--></workMode>
</NetWorkMode>
<VerificationCodeModification><!--opt, xs:string, whether the verification code can be edited by the admin user-->
<verificationCodeType opt="normal,empty"></verificationCodeType>
<isSupportDeclarationURL><!--opt, xs:boolean, whether to support URL declared by the service--></
isSupportDeclarationURL>
<isSupportPrivacyPolicyURL><!--opt, xs:boolean, whether to support the privacy policy URL--></
isSupportPrivacyPolicyURL>
<verificationCodeModify opt="true,false">
<!--opt, whether the verification code is edited: "true"-yes, "false"-no, no return-not support-->
</verificationCodeModify>
<Hyperlinks><!--opt-->
<declarationURL><!--opt,xs:string--></declarationURL>
<privacyPolicyURL><!--opt,xs:string--></privacyPolicyURL>
</Hyperlinks>
<isSupportVerificationCodeCheck>
<!--opt, xs: boolean, whether to support verifying and configuring the verification code, true-yes, if this node is not
returned or the value of the returned node is false, it indicates that not support-->
</isSupportVerificationCodeCheck>
<isSupportOldVerificationCode><!--opt, xs:boolean, whether to support old EZVIZ password configuration. The old
password contains six uppercase letters--></isSupportOldVerificationCode>
</VerificationCodeModification>
<EZVIZSecretKey>
<!--opt, whether to support capability of editing verification code for Hik-Connect-->
<offlineStatus>
<!--ro,dep,xs:string; it is valid when registerStatus values "false", device offline status, opt="secretKeyInvalid"-

633

Intelligent Security API (General Application) Developer Guide
invalid verification code-->
</offlineStatus>
<secretKey min="0" max="64"><!--opt, xs:string, verification code for Hik-Connect--></secretKey>
</EZVIZSecretKey>
<isSupportplatformAccess><!--opt, xs:boolean, capability of accessing the platform, whether to support filtering IP
addresses that access to the platform--></isSupportplatformAccess>
<isSupportIntegrate><!--opt, xs:boolean--></isSupportIntegrate>
<isSupportIntelligentBoost><!--opt, xs:boolean, whether to support bandwidth adaption--></
isSupportIntelligentBoost>
<isSupportWebSocket><!--opt, xs:boolean--></isSupportWebSocket>
<isSupportWebSocketS><!--opt, xs:boolean--></isSupportWebSocketS>
<isSupportResourceStatistics><!--opt, xs:boolean, whether supports network resource information--></
isSupportResourceStatistics>
<isSupportBandwidthLimit><!--opt, xs:boolean--></isSupportBandwidthLimit>
<isSupportPOEPortsDisableServer><!--opt, xs:boolean--></isSupportPOEPortsDisableServer>
<isSupportPOEConfiguration><!--opt, xs:boolean--></isSupportPOEConfiguration>
<Adaption>
<streamType opt="0,1,2,3,4,5,7,8,9,10">
<!--stream types that support network self-adaptive during live view: 0-main stream, 1-sub-stream, 2-third stream,
3-virtual stream, 4-stream 5, 5-stream 6, 7-stream 7, 8-stream 8, …, and so on-->
</streamType>
<isSupportPlayback><!--opt, xs: boolean, whether to support self-adaptive during playback--></isSupportPlayback>
</Adaption>
<isSupportWifiProbe><!--opt, xs:boolean, whether to support Wi-Fi probe configuration--></isSupportWifiProbe>
<isSupportRFIDData><!--opt, xs:boolean, whether to support configuration of RFID data collection--></
isSupportRFIDData>
<isSupportwifiProbeSSID><!--opt, xs:boolean, whether to support SSID configuration of Wi-Fi probe--></
isSupportwifiProbeSSID>
<isSupportPOEPortsDisableAdaptiveServer><!--opt, xs:boolean--></isSupportPOEPortsDisableAdaptiveServer>
</NetworkCap>

16.2.213 XML_NetworkInterface
NetworkInterface message in XML format
<NetworkInterface version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs:string--></id>
<IPAddress/><!--req-->
<Wireless/><!--opt-->
<Discovery/><!--opt-->
<Link/><!--opt-->
<defaultConnection><!--opt, xs:boolean, default network connection, this node is required when the device has
multiple network interfaces--></defaultConnection>
<ActiveMulticast>
<enabled><!--req, xs:boolean--></enabled>
<streamID opt="main"><!--req, xs:string--></streamID>
<ipV4Address><!--opt, xs:string--></ipV4Address>
<ipV6Address><!--opt, xs:string--></ipV6Address>
<port min="" max=""><!--opt, xs:integer--></port>
</ActiveMulticast>
<macAddress min="" max=""><!--opt, xs:string--></macAddress>

634

Intelligent Security API (General Application) Developer Guide
<EthernetPortList size="4"><!--opt, network interface information-->
<EthernetPort><!--opt-->
<id><!--req, xs: integer, min="1",max="4"--></id>
<MACAddress><!--req, xs:string--></MACAddress>
<status><!--opt, xs:string; opt="connected, disconnect"--></status>
<speed><!--req, xs:integer, "10, 100, 1000,10000"--></speed>
</EthernetPort>
</EthernetPortList>
</NetworkInterface>

16.2.214 XML_NetworkInterfaceList
NetworkInterfaceList message in XML format
<NetworkInterfaceList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<NetworkInterface/><!--opt, see details in the message of XML_NetworkInterface-->
</NetworkInterfaceList>

See Also
XML_NetworkInterface

16.2.215 XML_NetWorkMode
NetWorkMode message in XML format
<NetWorkMode version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<workMode><!--opt, xs:string, working mode: "close", "wifi"-Wi-Fi configuration, "wifiAp"-Wi-Fi access point (Wi-Fi
server) configuration--></workMode>
</NetWorkModeParam>

16.2.216 XML_NoiseReduce
NoiseReduce message in XML format
<NoiseReduce version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<mode><!--req, xs: string, 3D DNR mode: "close, general, advanced"--></mode>
<GeneralMode><!--dep, this node is valid only when <mode> is "general"-->
<generalLevel><!--req, xs: integer--></generalLevel>
</GeneralMode>
<AdvancedMode><!--dep, this node is valid only when <mode> is "advanced"-->
<FrameNoiseReduceLevel><!--req, xs: integer--></FrameNoiseReduceLevel>
<InterFrameNoiseReduceLevel><!--req, xs: integer--></InterFrameNoiseReduceLevel>
</AdvancedMode>
</NoiseReduce>

635

Intelligent Security API (General Application) Developer Guide
16.2.217 XML_NTPServer
NTPServer message in XML format
<NTPServer version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs:string, NTP server ID--></id>
<addressingFormatType>
<!--req, xs:string, which field will be used to locate the NTP server: "ipaddress, hostname"-->
</addressingFormatType>
<hostName><!--dep, xs:string--></hostName>
<ipAddress><!--dep, xs:string--></ipAddress>
<ipv6Address><!--dep, xs:string--></ipv6Address>
<portNo><!--opt, xs:integer--></portNo>
<synchronizeInterval>
<!--opt, xs:integer, NTP time synchronization interval, unit: minute-->
</synchronizeInterval>
</NTPServer>

16.2.218 XML_NTPServerList
NTPServerList message in XML format
<NTPServerList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<NTPServer/><!--opt, see details in the message of XML_NTPServer-->
</NTPServerList>

See Also
XML_NTPServer

16.2.219 XML_NTPTestDescription
NTPTestDescription message in XML format
<NTPTestDescription version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<addressingFormatType>
<!--req, xs:string, "ipaddress,hostname"-->
</addressingFormatType>
<hostName><!--dep, xs:string--></hostName>
<ipAddress><!--dep, xs:string--></ipAddress>
<ipv6Address><!--dep, xs:string--></ipv6Address>
<portNo><!--req, xs:integer--></portNo>
</NTPTestDescription>

636

Intelligent Security API (General Application) Developer Guide
16.2.220 XML_NTPTestResult
NTPTestResult message in XML format
<NTPTestResult version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<errorDescription><!--req, xs:string--></errorDescription>
</NTPTestResult>

16.2.221 XML_OnlineUpgradeCap
OnlineUpgradeCap message in XML format
<OnlineUpgradeCap version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<firmwareNum max="" />
<!--req, the number of online upgrade packages, including full package and incremental package. Full package is
used for upgrading whole firmware, while incremental package is used for upgrade certain unit, such as openssl
library-->
<firmwareCode max="" />
<!--req, the maximum length of firmware code-->
<firmwareVersion max="" />
<!--req, the maximum length of version-->
<firmwareCodeNumOnce max="" />
<!--req, the maximum number of firmware codes can be obtained each time-->
<upgradePercent min="" max="" />
<!--req-->
<Version>
<!--req, upgrade package version information-->
<newVersion max="" />
<!--req-->
<changeLog max="" />
<!--req-->
</Version>
<DeviceParameter>
<!--opt, online upgrade parameters-->
<isSupportAutoDownloadPackage>
<!--opt,xs:boolean,"true,false", whether supports automatic download of upgrade package-->
</isSupportAutoDownloadPackage>
<notSupportAutoUpgrade>
<!--opt,xs:boolean,"true,false", whether not support automatic download of upgrade package and automatic
upgrade-->
</notSupportAutoUpgrade>
<isSupportTimingUpgrade>
<!--opt,xs:boolean,"true,false", whether supports scheduled upgrade-->
</isSupportTimingUpgrade>
</DeviceParameter>
<ManualDownloadPackage>
<!--opt, manually download upgrade package-->
<supportOperation opt="start,cancel,pause,resume" />
<!--opt, supported operations: "start,cancel,pause,resume"-->

637

Intelligent Security API (General Application) Developer Guide
</ManualDownloadPackage>
<isSupportIgnoreCurrentVersion>
<!--opt, xs:boolean, "true,false", whether supports ignoring current version-->
</isSupportIgnoreCurrentVersion>
</OnlineUpgradeCap>

16.2.222 XML_OnlineUpgradeStatus
OnlineUpgradeStatus message in XML format
<OnlineUpgradeStatus version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<status>
<!--ro, req, xs:string,
"notUpgrade,upgrading,successful,languageMismatch,writeFlashError,packageTypeMismatch,packageVersionMismatc
h,netUnreachable,unknownError"-->
</status>
<percent><!-- ro, req, xs:integer “0-100” --></percent>
</OnlineUpgradeStatus>

16.2.223 XML_OnlineUpgradeVersion
OnlineUpgradeVersion message in XML format
<OnlineUpgradeVersion version="2.0" xmlns=“http://www.isapi.org/ver20/XMLSchema”>
<newVersionAvailable><!--ro,req,xs:boolean, whether there is new verion of upgrade package--></
newVersionAvailable>
<newVersion><!--ro, dep,xs:string, new version No.--></newVersion>
<changeLog><!--ro, dep,xs:string, update content of new version--></changeLog>
</OnlineUpgradeVersion>

16.2.224 XML_OnlineUpgradeServer
OnlineUpgradeServer message in XML format
<OnlineUpgradeServer version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<connectStatus><!--ro, req xs:boolean, online upgrade server connection status--></connectStatus>
</OnlineUpgradeServer>

16.2.225 XML_Palettes
Palettes message in XML format
<Palettes version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<mode><!--opt, xs:string,
"WhiteHot,BlackHot,Fusion1,Rainbow,Fusion2,Ironbow1,Ironbow2,Sepia,Color1,Color2,IceFire,Rain,RedHot,GreenHot,
DeepBlue,Color3"--></mode>

638

Intelligent Security API (General Application) Developer Guide
<ColorateTarget><!--dep, colorate target, it is valid when mode is "WhiteHot"-->
<ColorateTargetModeList>
<ColorateTargetMode>
<id><!--req, xs:integer, serial number, starts from 1--></id>
<mode>
<!--req, xs:string, colorate target mode; colorateHotAreae-colorate area with temperature high than configured
threshold, colorateIntervalArea-colorate area with temperature between the configured threshold, colorateColdAreacolorate area with temperature lower than the configured threshold-->
</mode>
<enabled><!--req, xs:bool, "true,false"--></enabled>
<TemperatureLimit><!--req, temperature limit-->
<minTemperature><!--dep, it is valid when mode is "colorateHotAreae"/"colorateIntervalArea", xs: float--></
minTemperature>
<maxTemperature><!--dep, it is valid when mode is "colorateColdArea"/"colorateIntervalArea", xs: float--></
maxTemperature>
</TemperatureLimit>
<Color><!--req, area color-->
<R><!--req, xs:integer--></R>
<G><!--req, xs:integer--></G>
<B><!--req, xs:integer--></B>
</Color>
</ColorateTargetMode>
</ColorateTargetModeList>
</ColorateTarget>
</Palettes>

16.2.226 XML_ParkAction
ParkAction message in XML format
<ParkAction version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled><!--req, xs: boolean--></enabled>
<Parktime min="" max=""><!--req, xs: integer, seconds--></Parktime>
<Action>
<ActionType opt="autoscan,framescan,randomscan,panoramascan,patrol,pattern,preset">
<!--req, xs: string-->
</ActionType>
<ActionNum min="" max=""><!--req, xs: integer, from 0 to 255--></ActionNum>
</Action>
</ParkAction>

16.2.227 XML_ParkingParam
ParkingParam message in XML format
<ParkingParam><!--dep-->
<durationTime>
<!—req, xs:integer, duration time, from 5 seconds to 100 seconds, default value: 5s-->

639

Intelligent Security API (General Application) Developer Guide
</durationTime>
</ParkingParam>

16.2.228 XML_Probe
Probe message in XML format.
<?xml version="1.0" encoding="UTF-8"?>
<Probe>
<!--the UUID will be returned in the device response message for matching, if not matched, it will not be handled.-->
<Uuid>8d2091bc-1dd2-11b2-807b-8ce748cf9334</Uuid>
<Types>inquiry</Types>
</Probe>

16.2.229 XML_port
port message in XML format
<port version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id/><!--req, xs: string, ID-->
<enabled/><!—req, xs: boolean-->
<internalPort/><!--req, xs: string, "http,admin,rtsp,https,WebSocket,WebSocket,SDK_OVER_TLS,SRTP..."-->
<externalPort/><!—req, xs:integer-->
</port>

16.2.230 XML_portStatus
portStatus message in XML format
<portStatus version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id/><!--req, xs: string, ID-->
<enabled/><!--req-->
<internalPort/><!--req, xs: string, "http,admin,rtsp,https,WebSocket,WebSocket,SDK_OVER_TLS,SRTP..."-->
<externalPort/><!--req, xs: integer-->
<status/><!--req, xs: string, "inactive, active, conflict, ..."-->
</portStatus>

16.2.231 XML_ports
ports message in XML format
<ports version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled/><!--req-->
<mapmode><!--req, xs: string, "auto,manual"--></mapmode>
<natRouterLanAddr><!--opt-->
<ipVersion><!--req, xs: string, "v4,v6,dual"--></ipVersion>

640

Intelligent Security API (General Application) Developer Guide
<ipAddress><!--dep, xs: string--></ipAddress>
<ipv6Address><!--dep, xs: string--></ipv6Address>
</natRouterLanAddr>
<portList><!--req-->
<port/><!--see details in the message XML_port-->
</portList>
<natType><!--req, xs: string, "manual, auto"--></natType>
</ports>

See Also
XML_port

16.2.232 XML_PortMapParam
PortMapParam message in XML format
<PortMapParam version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<userip><!--IP address of user terminal, or IP address of PoE0 or Eth0--></userip>
</PortMapParam>

16.2.233 XML_PortMapParamRet
PortMapParamRet message in XML format
<PortMapParamRet version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<mapResult><!--whether port mapping is required: 0-no, 1-yes, 2-unknown--></mapResult>
<MapPortGop>
<MapPort>
<mapPortIdx><!--index No. of mapping ports--></mapPortIdx>
<mapPortName><!--mapping port name--></mapPortName>
<mapPortValue><!--mapping port number--></mapPortValue>
<MapPort>
</MapPortGop>
</PortMapParamRet>

16.2.234 XML_portsStatus
portsStatus message in XML format.
<portsStatus version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled/><!--req-->
<natRouterLanAddr><!--req-->
<ipVersion><!--req, xs: string, "v4,v6,dual"--></ipVersion>
<ipAddress><!--dep, xs: string--></ipAddress>
<ipv6Address><!--dep, xs: string--></ipv6Address>
</natRouterLanAddr>
<natRouterWanAddr><!--req-->

641

Intelligent Security API (General Application) Developer Guide
<ipVersion><!--req, xs: string, "v4,v6,dual"--></ipVersion>
<ipAddress><!--dep, xs: string--></ipAddress>
<ipv6Address><!--dep, xs: string--></ipv6Address>
</natRouterWanAddr>
<portStatusList><!--req-->
<portStatus/><!--req, see details in the message XML_portStatus-->
</portStatusList>
</portsStatus>

See Also
XML_portStatus

16.2.235 XML_powerLineFrequency
powerLineFrequency message in XML format
<powerLineFrequency version="2.0" mlns="http://www.isapi.org/ver20/XMLSchema">
<powerLineFrequencyMode/><!--opt, xs: string, standard mode: "50hz, 60hz"-->
</powerLineFrequency>

16.2.236 XML_PreviewSwitch
PreviewSwitch message in XML format
<PreviewSwitch version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<DisplayWindowList size="64">
<!--req, if the number of channels is larger or equal to 64, 64 channels should be applied by a group for one time;
otherwise, apply the maximum number of channels-->
<DisplayWindow>
<id><!--req, xs: string, actual window No., which equals to id × groupNo--></id>
<displayChannelNo><!--req, xs: string, 0-not display, 1 to 64-displayed channel No., min="0" max="64"--></
displayChannelNo>
</DisplayWindow>
</DisplayWindowList>
<previewFrameNo>
<!--req, xs: string, number of live view windows: 1, 4, 6, 8, 9, 25, 32, 36, auto1-custom window division 1, auto2custome window division 2, auto3-custome window division 3, auto4-custome window division 4-->
</previewFrameNo>
<sound><!--req, xs: boolean, whether to turn on audio during live view: true-yes, false-no--></sound>
<switchTime><!--req, xs: string, switching interval: 0, 5, 10, 20, 30, 60, 120, and 300, unit:s--></switchTime>
<sameSource>
<!--dep, xs: boolean, whether the output is homologous: true-yes, false-no, this node is valid only when
VideoOutType is "noSameSourceVGA1", "noSameSourceVGA2", "noSameSourceVGA3", and "noSameSourceVGA4"-->
</sameSource>
</PreviewSwitch>

642

Intelligent Security API (General Application) Developer Guide
16.2.237 XML_PreviewSwitchVideoOutCap
PreviewSwitchVideoOutCap message in XML format
<PreviewSwitchVideoOutCap version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<DisplayWindowList size="64">
<DisplayWindow>
<id><!--req, xs: string, window No., which equals to id × groupNo--></id>
<displayChannelNo min="0" max="64"><!--req, xs: string, 0-not display, 1 to 64-displayed channel No.--></
displayChannelNo>
</DisplayWindow>
</DisplayWindowList>
<previewFrameNo opt="1,4,6,8,9,25,32,36,auto1,auto2,auto3,auto4">
<!--req, xs: string, number of live view windows, auto1-custom window division 1, auto2-custome window division
2, auto3-custome window division 3, auto4-custome window division 4-->
</previewFrameNo>
<sound><!--req, xs: boolean, whether to turn on audio during live view: true-yes, false-no--></sound>
<switchTime opt="0,5,10,20,30,60,120,300"><!--req, xs: string, switching interval, unit: s--></switchTime>
<sameSource>
<!--dep, xs: boolean, whether the output is homologous: true-yes, false-no, this node is valid only when
VideoOutType is "noSameSourceVGA1", "noSameSourceVGA2", "noSameSourceVGA3", and "noSameSourceVGA4"-->
</sameSource>
<supportGetByPreviewNum>
<!--opt, whether supports setting number of live view windows in the URL, true-yes-->
</supportGetByPreviewNum>
</PreviewSwitchVideoOutCap>

16.2.238 XML_PrivacyMask
PrivacyMask message in XML format
<PrivacyMask version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled><!--req, xs: boolean--></enabled>
<normalizedScreenSize><!--opt-->
<normalizedScreenWidth><!--req, xs: integer--></normalizedScreenWidth>
<normalizedScreenHeight><!--req, xs: integer--></normalizedScreenHeight>
</normalizedScreenSize>
<PrivacyMaskRegionList size=8/><!--opt-->
<regionType><!--opt, xs: string, "quadrilateral"--></regionType>
</PrivacyMask>

16.2.239 XML_PrivacyMaskCap
PrivacyMaskCap message in XML format
<PrivacyMaskCap version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<maskTypeDscriptor>
<!--opt, xs: string, privacy mask type: "gray,red,yellow,blue,orange,green,transparent,half-transparent,mosaic"-->

643

Intelligent Security API (General Application) Developer Guide
</maskTypeDscriptor>
<minZoomdoorlimit><!--opt, xs: integer></minZoomdoorlimit>
<maxZoomdoorlimit><!--opt, xs: integer></maxZoomdoorlimit>
<videoPrivacyType opt="privacyMask,privacyCover">
<!--opt, xs: string, "privacyMask"-video tampering, "privacyCover"-privacy mask-->
</videoPrivacyType>
</PrivacyMaskCap>

16.2.240 XML_PrivacyMaskRegion
PrivacyMaskRegion message in XML format
<PrivacyMaskRegion version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs: integer--></id>
<enabled><!--req, xs: boolean--></enabled>
<RegionCoordinatesList><!--req-->
<RegionCoordinates><!--req-->
<positionX><!--req, xs: integer; coordinate--></positionX>
<positionY><!--req, xs: integer; coordinate--></positionY>
</RegionCoordinates>
</RegionCoordinatesList>
<privacymaskName><!--opt, xs: string--></privacymaskName>
<maskType>
<!--opt, xs:string "gray,red,yellow,blue,orange,green,transparent,half-transparent,mosaic,black"-->
</maskType>
<zoomdoorlimit><!--opt, xs: integer, the value is between 10 and 1000--></zoomdoorlimit>
</PrivacyMaskRegion>

16.2.241 XML_PrivacyMaskRegionList
PrivacyMaskRegionList message in XML format
<PrivacyMaskRegionList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<PrivacyMaskRegion/><!--opt, refer to the message XML_PrivacyMaskRegion for details-->
</PrivacyMaskRegionList>

See Also
XML_PrivacyMaskRegion

16.2.242 XML_PTZAux
PTZAux message in XML format
<?xml version="1.0" encoding="utf-8"?>
<PTZAux version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req,xs:string,id--></id>
<type><!--req, ro, xs:string,"LIGHT,WIPER,FAN,HEATER",auxiliary type: light, wiper, fan, heater--></type>

644

Intelligent Security API (General Application) Developer Guide
<status><!--req, xs:string,"on,off", auxiliary status: turned on, turned off--></status>
</PTZAux>

16.2.243 XML_PTZAuxList
PTZAuxList message in XML format
<?xml version="1.0" encoding="utf-8"?>
<PTZAuxList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<PTZAux><!--list-->
<id><!--req,xs:string,id--></id>
<type><!--req, ro, xs:string,"LIGHT,WIPER,FAN,HEATER",auxiliary type: light, wiper, fan, heater--></type>
<status><!--req, xs:string,"on,off", auxiliary status: turned on, turned off--></status>
</PTZAux>
</PTZAuxList>

16.2.244 XML_PTZChannel
PTZChannel message in XML format
<PTZChanel version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs:integer--></id>
<enabled><!--ro, req, xs:boolean--></enabled>
<serialNumber><!--req,xs:integer--></serialNumber>
<videoInputID><!--req, xs:integer--></videoInputID>
<panMaxSpeed><!--ro, opt, xs:integer, degrees/sec--></panMaxSpeed>
<tiltMaxSpeed><!--ro, opt, xs:integer, degrees/sec--></tiltMaxSpeed>
<presetSpeed><!--opt, xs:integer, 1..8--></presetSpeed>
<autoPatrolSpeed><!--opt, xs:integer, 0..100--></autoPatrolSpeed>
<keyBoardControlSpeed><!--opt, xs:integer, 0..100--></keyBoardControlSpeed>
<controlProtocol><!--opt, xs:string, "pelco-d,modbus-RTU,modbus-ASCII"--></controlProtocol>
<controlAddress><!--opt-->
<enabled><!--req, xs:boolean--></enabled>
<Address><!--opt, xs:string, 1-255--></Address>
</controlAddress>
<defaultPresetID><!--opt, xs:string, id--></defaultPresetID>
<PTZRs485Para><!--opt-->
<baudRate><!--req, xs:integer--></baudRate>
<dataBits><!--req, xs:integer--></dataBits>
<parityType><!--req, xs:string, "none, even, odd, mark, space"--></parityType>
<stopBits><!--req, xs:string, "1, 1.5, 2"--></stopBits>
<flowCtrl><!--req, xs:string, "none, software, hardware"--></flowCtrl>
</PTZRs485Para>
<manualControlSpeed>
<!--opt, xs:string, "pedestrian, nonMotorVehicle, motorVehicle, selfadaptive, compatible"-->
</manualControlSpeed>
</PTZChannel>

645

Intelligent Security API (General Application) Developer Guide
16.2.245 XML_PTZChanelCap
PTZChanelCap capability message in XML format
<PTZChanelCap version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<AbsolutePanTiltPositionSpace><!--opt-->
<XRange/><!--req-->
<YRange/><!--req-->
</AbsolutePanTiltPositionSpace>
<AbsoluteZoomPositionSpace><!--opt-->
<ZRange/><!--req-->
</AbsoluteZoomPositionSpace>
<RelativePanTiltSpace><!--opt-->
<XRange/><!--req-->
<YRange/><!--req-->
</RelativePanTiltSpace>
<RelativeZoomSpace><!--opt-->
<ZRange/><!--req-->
</RelativeZoomSpace>
<ContinuousPanTiltSpace><!--opt-->
<XRange/><!--req-->
<YRange/><!--req-->
</ContinuousPanTiltSpace>
<ContinuousZoomSpace><!--opt-->
<ZRange/><!--req-->
</ContinuousZoomSpace>
<MomentaryPanTiltSpace><!--opt-->
<XRange/><!--req-->
<YRange/><!--req-->
</MomentaryPanTiltSpace>
<MomentaryZoomSpace><!--opt-->
<ZRange/><!--req-->
</MomentaryZoomSpace>
<homePostionSupport><!--req, xs:boolean--></homePostionSupport>
<maxPresetNum>
<!--req, xs:integer, max. supported preset number-->
</maxPresetNum>
<maxPatrolNum>
<!--req,xs:integer, max. supported patrol number-->
</maxPatrolNum>
<maxPatternNum>
<!--req,xs:integer, max. supported pattern number-->
</maxPatternNum>
<maxLimitesNum>
<!--req,xs:integer, max. supported limit number-->
</maxLimitesNum>
<maxTimeTaskNum>
<!--req,xs:integer, max. supported timing task number-->
</maxTimeTaskNum>
<serialNumber min="1" max="4">
<!--configuration capability of RS-485 serial port supported by current channel-->

646

Intelligent Security API (General Application) Developer Guide
</serialNumber>
<controlProtocol>
<!--opt, xs:string,"pelco-d,modbus-RTU,modbus-ASCII", supported PTZ control protocol-->
</controlProtocol>
<controlAddress>
<!--opt, xs:string, 0-255, address-->
</controlAddress>
<PTZRs485Para>
<!--opt, PTZ RS485 parameters capability-->
<baudRate>
<!--req, xs:integer, baud rate-->
</baudRate>
<dataBits>
<!--req, xs:integer, data bit-->
</dataBits>
<parityType>
<!--req, xs:string, "none,even,odd,mark,space", verification type-->
</parityType>
<stopBits>
<!--req, xs:string, "1,1.5,2" , stop bit-->
</stopBits>
<flowCtrl>
<!--req, xs:string, "none, software, hardware", stream control type-->
</flowCtrl>
</PTZRs485Para>
<PresetNameCap>
<!--opt, preset name capability-->
<presetNameSupport>
<!--opt,xs:boolean, whether to support preset name?-->
</presetNameSupport>
<maxPresetNameLen>
<!--dep,xs:integer, preset name length-->
</maxPresetNameLen>
<specialNo/>
<!--dep, special preset-->
</PresetNameCap>
<isSupportPosition3D>
<!--opt, xs:boolean, whether to support 3D position-->
</isSupportPosition3D>
<isSupportManualTrack>
<!--opt,xs:boolean, whether to support manual tracking position(NET_DVR_PTZ_MANUALTRACE)?-->
</isSupportManualTrack>
<manualControlSpeed opt="compatible,pedestrian,nonMotorVehicle,motorVehicle,selfadaptive">
<!--opt,xs:string, manual control speed: "compatible"-compatible mode, "pedestrian"-pedestrian,
"nonMotorVehicle"-non-motor vehicle, "motorVehicle"-motor vehicle, "selfadaptive"-self adaptive-->
</manualControlSpeed>
<isSpportPtzlimiteds>
<!--opt,xs:boolean, whether to support PTZ limitation-->
</isSpportPtzlimiteds>
<ParkAction/><!--see details in the message XML_ParkAction-->
<TimeTaskList/><!--see details in the message XML_TimeTaskList-->
<Thermometry>

647

Intelligent Security API (General Application) Developer Guide
<maxThermometryPresetNum>
<!--opt, xs:integer-->
</maxThermometryPresetNum>
</Thermometry>
<isSpportPtzEagleFocusing>
<!--opt, xs:boolean-->
</isSpportPtzEagleFocusing>
<TrackingRatio/>
<!--opt, tracking zoom ratio-->
<coefficient min="1" max="10" default="5">
<!--opt, xs:integer, zoom ratio-->
</coefficient>
</TrackingRatio>
<TrackInitPosition>
<!--opt, tracking initial position-->
<slaveCameraID>
<!--opt, xs:integer, slave camera ID, 1..4 -->
</slaveCameraID>
</TrackInitPosition>
<isSupportAbsoluteEx><!--opt,xs:boolean, whether to support extended capability for PTZ absolute position--></
isSupportAbsoluteEx>
<isSupportCruise><!--opt,xs:boolean, whether to support auto-switch mode--></isSupportCruise>
<isSupportAreaScan><!--opt,xs:boolean, whether to support area scan--></isSupportAreaScan>
<isSupportFaceSnap3D><!--opt, xs: boolean--></isSupportFaceSnap3D>
<isSupportOnepushSynchronizeFOV>
<!--opt, xs:boolean, whether supports one-touch synchronize FOV, return true for supports, and no return indicates
not support-->
</isSupportOnepushSynchronizeFOV>
<isSupportLensCorrection>
<!--opt, xs:boolean, whether supports lens correction, return true for supports, and no return indicates not support->
</isSupportLensCorrection>
<isSupportPTZTrackStatus>
<!--opt, xs:boolean, whether to support getting PTZ tracking linkage status-->
</isSupportPTZTrackStatus>
<pqrsZoom min="" max=""/><!--opt, xs: integer, zooming coordinates of Sony zoom camera module-->
<mnstFocus min="" max=""/><!--opt, xs: integer, focus coordinates of Sony zoom camera module-->
<isSupportPTZSave>
<!--opt, xs: boolean, whether supports saving the current PTZ position information-->
</isSupportPTZSave>
<isSupportPTZSaveGet>
<!--opt, xs:boolean, whether to support saving the PTZ position information of the current channel by GET method->
</isSupportPTZSaveGet>
<isSupportAutoGotoCfg>
<!--opt, xs: boolean, whether supports automatically restoring to saved PTZ position: "true"-yes, this node is not
returned-no-->
<isSupportAutoGotoCfg>
<lockTime><!--opt, xs:integer, PTZ locking time, unit: second--></lockTime>
</PTZChanelCap>

648

Intelligent Security API (General Application) Developer Guide
See Also
XML_ParkAction
XML_TimeTaskList

16.2.246 XML_PTZOSDDisplay
PTZOSDDisplay message in XML format
<PTZOSDDisplay version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<zoomlable><!--req, xs:string, "2sec, 5sec, 10sec, alwaysclose, alwaysopen"--></zoomlable>
<azimuth><!--req, xs:string, "2sec, 5sec, 10sec, alwaysclose, alwaysopen"--></azimuth>
<presetlable><!--req, xs:string, "2sec, 5sec, 10sec, alwaysclose, alwaysopen"--></presetlable>
<actionStatusDisplayEnabled><!--opt, xs:boolean, display status or not--></actionStatusDisplayEnabled>
</PTZOSDDisplay>

16.2.247 XML_PTZStatus
PTZStatus message in XML format
<PTZStatus version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<AbsoluteHigh><!--high-accuracy positioning which is accurate to one decimal place-->
<elevation>
<!--opt, xs:integer, tilting parameter, the value is between -900 and 2700, which corresponds to the range from
-90.0 degree to 270.0 degree vertically-->
</elevation>
<azimuth>
<!--opt, xs:integer, panning parameter, the value is between 0 and 3600, which corresponds to the range from 0.0
degree to 360.0 degree horizontally-->
</azimuth>
<absoluteZoom>
<!--opt, xs:integer, zooming parameter, the value is between 0 and 1000, which corresponds to the focus range
from 0.0 to 100.0-->
</absoluteZoom>
</AbsoluteHigh>
</PTZStatus>

16.2.248 XML_PublicKey
PublicKey message in XML format.
<PublicKey version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<key><!--req, xs:string--></key>
</PublicKey>

649

Intelligent Security API (General Application) Developer Guide
16.2.249 XML_RacmCap
RacmCap capability message in XML format
<RacmCap version="1.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<isSupportZeroChan>
<!--opt, xs:boolean, whether supports channel-zero, "true"-yes, "false"-no-->
</isSupportZeroChan>
<inputProxyNums><!--opt, xs:integer, number of supported digital channels--></inputProxyNums>
<eSATANums><!--opt, xs:integer, number of supported eSATAs--></eSATANums>
<miniSASNums><!--opt, xs:integer, number of supported miniSATAs--></miniSASNums>
<nasNums><!--opt, xs:integer, number of supported NASs--></nasNums>
<ipSanNums><!--opt, xs:integer, number of supported IPSANs--></ipSanNums>
<isSupportRaid>
<!--opt, xs:boolean, whether supports RAID, "true"-yes, "false"-no-->
</isSupportRaid>
<isSupportExtHdCfg>
<!--opt, xs:boolean, whether supports HDD advanced management, "true"-yes, "false"-no-->
</isSupportExtHdCfg>
<isSupportTransCode><!--opt, xs:boolean, whether supports auto-switch, "true"-yes, "false"-no--></
isSupportTransCode>
<isSupportIpcImport>
<!--opt, xs:boolean, whether supports importing configuration files to network camera, "true"-yes, "false"-no-->
</isSupportIpcImport>
<NasMountType><!--opt-->
<isNFSSupportAuthentication/><!--opt, xs:boolean, whether supports NFS authentication, "true"-yes, "false"-no-->
<isCIFSSupportAuthentication/><!--opt, xs:boolean, whether supports CIFS authentication, "true"-yes, "false"-no-->
</NasMountType>
<isSupportIpcStreamType/><!--opt, xs:boolean-->
<isSupportIOInputProxy/><!--opt, xs:boolean, whether supports dynamic alarm input channel: "true"-yes, "false"-no->
<isSupportIOOutputProxy/><!--opt, xs:boolean, whether supports dynamic alarm output channel: "true"-yes, "false"no-->
<isSupportPTZRs485Proxy/><!--opt, xs:boolean, whether supports dynamic PTZ485 channel, "true"-yes, "false"-no-->
<isSupportSrcIDSearch/><!--opt, xs:boolean, whether supports search by stream ID, "true"-yes, "false"-no-->
<isSupportReversePlayback/><!--opt, xs:boolean, whether supports reverse playback, "true"-yes, "false"-no-->
<isSupportSMARTTest/><!--opt, xs:boolean, whether supports HDD checking, "true"-yes, "false"-no-->
<isSupportDownloadByTime/><!--opt, xs:boolean, whether supports downloading by time, "true"-yes, "false"-no-->
<pictureSearchType
opt="AllEvent,CMR,MOTION,ALARM,EDR,ALARMANDMOTION,Command,pir,wlsensor,callhelp,facedetection,FieldDete
ction,scenechangedetection,LineDetection,regionEntrance,regionExiting,loitering,group,rapidMove,parking,unattende
dBaggage,attendedBaggage,vehicleDetection,manual,manualSnapShot,playSnapShot,allPic,evidence,illegalParking,cro
sslane,vehicleexist,lanechange,wrongdirection,congestion,turnround, parallelParking, pedestrian, construction,
roadblock, abandonedObject, trafficAccident, fogDetection, personQueueCounting,personQueueTime,
mixedTargetDetection, safetyHelmet"/>
<!--opt, xs:string, picture search conditions-->
<recordSearchType
opt="AllEvent,CMR,MOTION,ALARM,EDR,ALARMANDMOTION,Command,pir,wlsensor,callhelp,facedetection,FieldDete
ction,scenechangedetection,LineDetection,regionEntrance,regionExiting,loitering,group,rapidMove,parking,unattende
dBaggage,attendedBaggage,vehicleDetection,manual,manualSnapShot,playSnapShot,AudioDetection"/>
<!--opt, xs:string, video file type to be searched-->

650

Intelligent Security API (General Application) Developer Guide
<isSupportActivateIpc/><!--opt, xs:boolean, whether supports activating network camera, "true"-yes, "false"-no-->
<isSupportCheckIpcSecurity><!--opt-->
<isSupportCheckPassword/><!--opt, xs:boolean, whether supports password verification, "true"-yes, "false"-no-->
</isSupportCheckIpcSecurity>
<isSupportMainAndSubRecord/>
<!--opt, xs:boolean, whether supports recording in main stream or sub-stream, "true"-yes, "false"-no-->
<isSupportSyncIPCPassword>
<!--opt, xs:boolean, whether supports synchronizing network camera's password, "true"-yes, "false"-no-->
</isSupportSyncIPCPassword>
<isSupportTransferIPC>
<!--opt, xs:boolean, whether supports network camera passthrough function, "true"-yes, "false"-no-->
</isSupportTransferIPC>
<isSupportPOS><!--opt, xs:boolean, whether supports POS, "true"-yes, "false"-no--></isSupportPOS>
<isSupportPassBackBasicCfg>
<!--opt, xs:boolean, whether supports the ANR basic function of CVR, "true"-yes, "false"-no-->
</isSupportPassBackBasicCfg>
<PassBackTaskConfig><!--opt, task management function of ANR-->
<isSupportAddTask><!--opt, xs:boolean, whether supports adding task, "true"-yes, "false"-no--></isSupportAddTask>
<isSupportSearchTask><!--opt, xs:boolean, whether supports task search, "true"-yes, "false"-no--></
isSupportSearchTask>
<isSupportControlTask><!--opt, xs:boolean, whether supports task control, "true"-yes, "false"-no--></
isSupportControlTask>
<isSupportDeleteTask><!--opt, xs:boolean, whether supports deleting task, "true"-yes, "false"-no--></
isSupportDeleteTask>
</PassBackTaskConfig>
<PassBackPlanConfig><!--opt, task plan of ANR-->
<isSupportAddPlan><!--opt, xs:boolean, whether supports adding plan, "true"-yes, "false"-no--></
isSupportAddPlan>
<isSupportSearchPlan><!--opt, xs:boolean, whether supports plan search, "true"-yes, "false"-no--></
isSupportSearchPlan>
<isSupportDeletePlan><!--opt, xs:boolean, whether supports deleting plan, "true"-yes, "false"-no--></
isSupportDeletePlan>
</PassBackTaskConfig>
<IRAIDCap/><!--opt, network RAID-->
<isSupportStorageExtraInfo>
<!--opt, xs:boolean, whether supports configuring storage additional information, "true"-yes, "false"-no-->
</isSupportStorageExtraInfo>
<isSupportRecordStatus><!--opt, xs:boolean--></isSupportRecordStatus>
<supportAIDTFSType opt="illegalParking,wrongdirection crosslane,vehicleexist,lanechange, turnround, evidence"/>
<!--opt, xs:string, event picture search conditions supported by both AID and TFS-->
<isSupportRacmChannelsCap><!--opt, xs:boolen--></isSupportRacmChannelsCap>
<LockCap/><!--opt, lock or unlock video-->
<isSupportForamtAll><!--opt, xs:boolean, "true,false"--></isSupportForamtAll>
<isSupportExtendCabinetCfg>
<!--opt, xs:boolean, whether supports enclosure configuration-->
</isSupportExtendCabinetCfg>
<diskGroupNums><!--opt, xs:integer, number of supported HDD groups--></diskGroupNums>
<isSupportCountingSearchByUTC><!--opt, xs:boolean, whether supports searching people counting results by UTC
time--></isSupportCountingSearchByUTC>
<isSupportPlaybackReverseByUTC><!--opt, xs:boolean, whether supports reverse playback by UTC time--></
isSupportPlaybackReverseByUTC>
<isSupportWebPrivatePlaybackByUTC>

651

Intelligent Security API (General Application) Developer Guide
<!--opt, xs: boolean, whether supports playback based on Web private protocol-->
</isSupportWebPrivatePlaybackByUTC >
<isSupportFindCommonFileByUTC>
<!--opt, xs: boolean, whether supports extending the time zone for searching files-->
</isSupportFindCommonFileByUTC>
<isSupportFindEventFileByUTC><!--opt, xs: boolean, whether supports extending the time zone for searching files
by event-->
</isSupportFindEventFileByUTC >
<isSupportSmartSearchRecordByUTC>
<!--opt, xs: boolean, whether supports extending the time zone for VCA search-->
</isSupportSmartSearchRecordByUTC>
<isSupportMRDSearchByTimeZone>
<!--opt, xs: boolean, whether supports extending the time zone for searching files by calendar-->
</isSupportMRDSearchByTimeZone>
<isSupportSearchRecordLabelByUTC>
<!--opt, xs: boolean, whether supports extending the time zone for searching video tags-->
</isSupportSearchRecordLabelByUTC>
<isSupportSearchPictureByUTC>
<!--opt, xs: boolean, whether supports extending the time zone for searching pictures-->
</isSupportSearchPictureByUTC>
<isSupportSmartSearchPictureByUTC>
<!--opt, xs: boolean, whether supports extending the time zone for searching pictures with smart information-->
</isSupportSmartSearchPictureByUTC>
<isSupportFindLogByUTC>
<!--opt, xs: boolean, whether supports extending the time zone for searching log-->
</isSupportFindLogByUTC>
<isSupportUploadRecordByUTC>
<!--opt, xs: boolean, whether supports extending the time zone for uploading files to cloud storage-->
</isSupportUploadRecordByUTC>
<isSupportPlaybackByUTC>
<!--opt, xs: boolean, whether supports extending the time zone for playback by time and locating by time-->
</isSupportPlaybackByUTC>
<SecurityLog>
<isSupportSecurityLog><!--opt, boolean, whether supports security log--></isSupportSecurityLog>
<isSupportLogServer><!--opt, boolean, whether supports log server configuration--></isSupportLogServer>
<isSupportLogServerTest><!--opt, xs: boolean, whether supports log server test--></isSupportLogServerTest>
<SecurityLogTypeList><!--req, xs: list, supported log type list-->
<SecurityLogType>
<primaryType><!--req, xs: string, major type--></primaryType>
<secondaryType opt=""><!--req, xs: string, minor type--></secondaryType>
</SecurityLogType>
</SecurityLogTypeList>
</SecurityLog>
<iSptInputProxyChanCap>
<!--opt, xs:boolean, whether to support getting the capability of the digital channel-->
</iSptInputProxyChanCap>
<isSupportLogDataPackage>
<!--opt, xs:boolean, whether to support exporting logs: "true, false"-->
</isSupportLogDataPackage>
<logSearchTimeSpanNums>
<!--opt, xs:integer, supported number of time periods for log search-->

652

Intelligent Security API (General Application) Developer Guide
</logSearchTimeSpanNums>
</RacmCap>

16.2.250 XML_RegionalFocus
RegionalFocus message in XML format
<RegionalFocus version="2.0" xmlns="http://www.isapi.com/ver20/XMLSchema">
<StartPoint><!--0-1000-->
<positionX><!--req, xs:integer--></positionX>
<positionY><!--req, xs:integer--></positionY>
</StartPoint>
<EndPoint><!--0-1000-->
<positionX><!--req, xs:integer--></positionX>
<positionY><!--req, xs:integer--></positionY>
</EndPoint>
</RegionalFocus>

16.2.251 XML_RegionClip
RegionClip message in XML format
<RegionClip version="2.0" xmlns="http://www.std-cgi.org/ver20/XMLSchema">
<id><!--req, xs: string--></id>
<enabled><!--req, xs: boolean--></enabled>
<normalizedScreenSize><!--req, read-only-->
<normalizedScreenWidth><!--req, read-only, xs: integer--></normalizedScreenWidth>
<normalizedScreenHeight><!--req, read-only, xs: integer--></normalizedScreenHeight>
</normalizedScreenSize>
<regionType><!--req, ro, xs:string, opt="rectangle,convexPolygon,concavePolygon"--></regionType>
<videoResolutionWidth><!--opt="704"--></videoResolutionWidth>
<videoResolutionHeight><!--opt="576"--></videoResolutionHeight>
<ClipRegionList>
<ClipRegion>
<RegionCoordinatesList>
<RegionCoordinates><!--req, size=4-->
<positionX><!--req, xs: integer; x-coordinate--></positionX>
<positionY><!--req, xs: integer; y-coordinate--></positionY>
</RegionCoordinates>
</RegionCoordinatesList>
</ClipRegion>
</ClipRegionList>
</RegionClip>

16.2.252 XML_remotePermission
remotePermission message in XML format

653

Intelligent Security API (General Application) Developer Guide
<remotePermission version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<record><!—opt, xs: boolean—></record>
<booleant><!—opt, xs: boolean—></booleant>
<preview><!—opt, xs: boolean—></preview>
<videoChannelPermissionList><!—opt—>
<videoChannelPermission><!—opt—>
<id><!—req, corresponds to the video input channel ID—></id>
<preview><!—opt, xs: boolean—></preview>
<palyBack><!—opt, xs: boolean—></palyBack>
<record><!—opt, xs:boolean—></record>
<playBackDoubleVerification>
<!—opt, xs:boolean, whether supports secondary authentication for playback and download—>
</playBackDoubleVerification>
</videoChannelPermission>
</videoChannelPermissionList>
<ptzControl><!—opt, xs: boolean—></ptzControl>
<ptzChannelPermissionList><!—opt—>
<ptzChannelPermission><!—opt—>
<id><!—req, corresponds to PTZ channel ID—></id>
<ptzControl><!—opt, xs: boolean—></ptzControl>
</ptzChannelPermission>
</ptzChannelPermissionList>
<logOrStateCheck><!—opt, xs: boolean, permission to view log and status—></logOrStateCheck>
<parameterConfig><!—opt, xs: boolean, parameter configuration permission—></parameterConfig>
<restartOrShutdown><!—opt, xs: boolean, permission to reboot and shutdown—></restartOrShutdown>
<upgrade><!—opt, xs: boolean, permission to upgrade—></upgrade>
<voiceTalk><!—opt, xs: boolean—></voiceTalk>
<transParentChannel><!—opt, xs: boolean—></transParentChannel>
<contorlLocalOut><!—opt, xs: boolean—></contorlLocalOut>
<alarmOutOrUpload><!—opt, xs: boolean, permission to upload and output alarm—></alarmOutOrUpload>
<factoryReset><!--opt, xs:boolean, restore default parameters--></factoryReset>
<arm><!--opt, xs:boolean, arm--></arm>
<disarm><!--opt, xs:boolean, disarm--></disarm>
<accessControl><!--opt, xs:boolean, access control--></accessControl>
<subSysOrZoneArm><!--opt, xs:boolean, partition or zone arming permission--></subSysOrZoneArm>
<subSysOrZoneDisarm><!--opt, xs:boolean, partition or zone disarming permission--></subSysOrZoneDisarm>
<subSysOrZoneClearArm><!--opt, xs:boolean, permission to clear partition or zone alarms--></
subSysOrZoneClearArm>
<zoneBypass><!--opt, xs:boolean, permission to bypass zone--></zoneBypass>
<zoneBypassRecover><!--opt, xs:boolean, permission to recover bypassing zone--></zoneBypassRecover>
<IRAID>
<rapidConfiguration><!--opt, xs:boolean--></rapidConfiguration>
<reset><!--opt, xs:boolean--></reset>
</IRAID>
<subSystemList><!--opt, partitions that can be linked to operator when adding operator or setting operator
parameters-->
<subSystem><!--opt, xs:integer, partition that can be linked to operator. When adding operator or setting operator
parameters, one or more partitions can be linked to an operator. An operator should be linked to at least one partition
and up to four partitions--></subSystem>
</subSystemList>
</remotePermission>

654

Intelligent Security API (General Application) Developer Guide
16.2.253 XML_ResponseStatus
ResponseStatus message in XML format
<ResponseStatus version="2.0" xmlns="http://www.std-cgi.org/ver20/XMLSchema">
<requestURL>
<!--req, ro, xs:string, request URL-->
</requestURL>
<statusCode>
<!--req, ro, xs:integer, status code: 0,1-OK, 2-Device Busy, 3-Device Error, 4-Invalid Operation, 5-Invalid XML Format,
6-Invalid XML Content, 7-Reboot Required, 9-Additional Error-->
</statusCode>
<statusString>
<!--req, ro, xs:string, status description: OK, Device Busy, Device Error, Invalid Operation, Invalid XML Format, Invalid
XML Content, Reboot, Additional Error-->
</statusString>
<id>
<!--opt, xs:integer, unique device ID created in POST operation-->
</id>
<subStatusCode>
<!--req, ro, xs:string, describe the error reason in detail-->
</subStatusCode>
<errorCode>
<!--opt, ro, xs:integer, error code, the returned value is the transformed decimal number-->
</errorCode>
<errorMsg>
<!--opt, ro, xs:string, error message-->
</errorMsg>
<AdditionalErr>
<!--dep, it is valid when statusCode is set to 9 (Additional Error). When setting or deleting in a batch failed, if the
error status of a specific device needs to be returned, statusCode should be set to 9 (Additional Error) and the node
<AdditionalError> should be returned-->
<StatusList>
<!--req-->
<Status>
<!--req-->
<id>
<!--opt, xs:string, device ID created in POST operation-->
</id>
<statusCode>
<!--req, ro, xs:integer, status code: 0,1-OK, 2-Device Busy, 3-Device Error, 4-Invalid Operation, 5-Invalid XML
Format, 6-Invalid XML Content, 7-Reboot Required-->
</statusCode>
<statusString>
<!--req, ro, xs:string, status description: OK, Device Busy, Device Error, Invalid Operation, Invalid XML Format,
Invalid XML Content, Reboot-->
</statusString>
<subStatusCode>
<!--req, ro, xs:string, describe the error reason in detail-->
</subStatusCode>
</Status>

655

Intelligent Security API (General Application) Developer Guide
</StatusList>
</AdditionalErr>
</ResponseStatus>

Note
See Error Codes in ResponseStatus for details about sub status codes and corresponding error
codes.

16.2.254 XML_ResponseStatus_AuthenticationFailed
ResponseStatus message in XML format for failed authentication.
<ResponseStatus version="1.0" xmlns="http://www.std-cgi.org/ver20/XMLSchema">
<requestURL><!-- req, ro,xs:string --></requestURL>
<statusCode><!-- req, ro,xs:integer --></statusCode>
<statusString><!-- req, ro,xs:string --></statusString>
<subStatusCode><!-- req, ro,xs:string --></subStatusCode>
<lockStatus><!-- opt, ro,xs:string ,"unlock,locked", locking status--></lockStatus>
<retryTimes><!-- opt, ro,xs:integer, remaining authentication attempts--></retryTimes>
<resLockTime><!-- opt, ro,xs:integer, remaining locking time, unit: second--></resLockTime>
</ResponseStatus>

16.2.255 XML_Schedule
Schedule message in XML format
<Schedule version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs:string, ID--></id>
<eventType>
<!--opt, xs:string, alarm/event types, see details in the "Remarks" below-->
</eventType>
<inputIOPortID><!--ro, dep, xs:string, alarm input No.--></inputIOPortID>
<outputIOPortID><!--ro, dep, xs:string, alarm output No.--></inputIOPortID>
<videoInputChannelID><!--ro, dep, xs:string, video input channel ID--></videoInputChannelID>
<TimeBlockList size="8"><!--req-->
<TimeBlock><!--list-->
<dayOfWeek>
<!--opt, xs:integer, day of the week based on ISO8601, "1"=Monday, ...-->
</dayOfWeek>
<TimeRange><!--req-->
<beginTime><!--req, xs:time, ISO8601 time--></beginTime>
<endTime><!--req, xs:time, ISO8601 time--></endTime>
</TimeRange>
<CustomExtension>
<vehicleDetectSceneID>
<!--req, xs:interger-->
</vehicleDetectSceneID>
</CustomExtension>

656

Intelligent Security API (General Application) Developer Guide
</TimeBlock>
</TimeBlockList>
<HolidayBlockList><!--opt-->
<TimeBlock><!--list-->
<TimeRange><!--req-->
<beginTime><!--req, xs:time, ISO8601 time--></beginTime>
<endTime><!--req, xs:time, ISO8601 time--></endTime>
</TimeRange>
</TimeBlock>
</HolidayBlockList>
</Schedule>

Remarks
The node <eventType> can be set to the following values: IO, VMD,videoloss, PIR,linedetection,
fielddetection, audioexception, facedetection, regionEntrance, regionExiting, loitering, group,
rapidMove, parking, unattendedBaggage,attendedBaggage, storageDetection, shipsDetection,
HUMANATTRIBUTE, humanAttribute, faceContrast, faceSnap, faceLib, whiteListFaceContrast,
personDensityDetection, personQueueDetection, mixedTargetDetection, fireDetection,
illegalParking, pedestrian, trafficAccident,construction, roadblock, abandonedObject,
parallelParking, parkingState, congestion, intersectionAnalysis, heatMap, reverseEntrance,
vehicledetect, safetyHelmetDetection.

16.2.256 XML_SecurityCap
SecurityCap capability message in XML format
<SecurityCap version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<supportUserNums><!--opt, xs:integer, number of supported users--></supportUserNums>
<userBondIpNums><!--opt, xs:integer, number of bound IP addresses supported by the user--></userBondIpNums>
<userBondMacNums><!--opt, xs:integer, number of bound MAC addresses supported by the user--></
userBondMacNums>
<issupIllegalLoginLock><!--opt, xs: boolean, whether it supports locking illegal login: "true,false"-><issupIllegalLoginLock>
<isSupportOnlineUser><!--opt, xs: boolean, "true,false"--><isSupportOnlineUser>
<isSupportAnonymous><!--opt, xs: boolean, "true,false"--><isSupportAnonymous>
<securityVersion opt="1,2"/><!--opt, xs:interger, encryption capability, each version contains encryption algorithm
and node range to be encrypted. "1"-encrypt by AES128, "2"-encrypt by AES256-->
<keyIterateNum>
<!--dep, xs:integer, iteration times, this node depends on securityVersion, and the value is usually between 100 and
1000-->
</keyIterateNum>
<isSupportUserCheck>
<!--dep, opt, xs:boolean, whether it supports verifying password when editing/adding/deleting user parameters,
this node depends on securityVersion-->
</isSupportUserCheck>
<isSupportGUIDFileDataExport><!--opt, xs:boolean, "true,false"--></isSupportGUIDFileDataExport>
<isSupportSecurityQuestionConfig><!--opt, xs:boolean, "true,false"--></isSupportSecurityQuestionConfig>
<isSupportGetOnlineUserListSC><!--opt, xs:boolean, "true,false"--></isSupportGetOnlineUserListSC>
<SecurityLimits><!--opt-->

657

Intelligent Security API (General Application) Developer Guide
<LoginPasswordLenLimit min="1" max="16"><!--opt--></LoginPasswordLenLimit>
<SecurityAnswerLenLimit min="1" max="128"><!--opt--></SecurityAnswerLenLimit>
</SecurityLimits>
<RSAKeyLength opt="512,1024,2048" def=2048/>
<isSupportONVIFUserManagement><!--opt, xs: boolean, "true, false"--><isSupportONVIFUserManagement>
<WebCertificateCap><!--opt-->
<CertificateType opt="basic, digest, digest/basic"><!--req, xs:string--></CertificateType>
</WebCertificateCap>
<isSupportConfigFileImport>
<!--opt, xs: boolean, whether it supports importing configuration files securely: "true"-yes. If it is not supported, this
node will not be returned-->
</isSupportConfigFileImport>
<isSupportConfigFileExport>
<!-- opt, xs:boolean, whether it supports exporting configuration files securely: "true"-yes. If it is not supported, this
node will not be returned-->
</isSupportConfigFileExport>
<cfgFileSecretKeyLenLimit min="0" max="16">
<!--opt, length limit of the configuration files' encryption key-->
</cfgFileSecretKeyLenLimit>
<isSupportDeviceCertificatesManagement>
<!--opt, xs: boolean, whether it supports device certificate management: true-yes, if not support, this node will not
be returned-->
</isSupportDeviceCertificatesManagement>
<isIrreversible>
<!--dep, opt, xs:boolean, whether it supports irreversible password storage. If this node does not exist, irreversible
password storage is not supported-->
</isIrreversible>
<salt>salt of username</salt>
<keypadPassword min="1" max=""/><!--opt, xs:string, keypad password length. If different types of users have
different keypad password length, this node only indicates the administrator's keypad password length, otherwise this
node indicates that all types of users have the same keypad password length-->
<installerKeypadPassword min="1" max=""/><!--opt, xs:string, installer's keypad password length-->
<operatorKeypadPassword min="1" max=""/><!--opt, xs:string, operator's keypad password length-->
<userOperateType opt="1,2,3">
<!--opt, xs:string, user operation type: "1"-network user, "2"-keypad user, "3"-network user and keypad user-->
</userOperateType>
<isSptUserEnabled><!--opt, xs:boolean, whether it supports configuration of enabling user: "true"-yes, "false"-no-></isSptUserEnabled>
<isSptAdminCap><!--opt, xs:boolean, whether it supports getting administrator permission capability: "true"-yes,
"false"-no--></isSptAdminCap>
<DoubleVerificationCap><!--opt, double verification capability-->
<isSupportUsersConfig>
<!--opt, xs: boolean, "true,false", whether it supports configuring double verification user-->
</isSupportUsersConfig>
<isSupportUsersPermissionConfig>
<!--opt, xs: boolean, "true,false", whether it supports configuring the permission of double verification user-->
</isSupportUsersPermissionConfig>
</DoubleVerificationCap>
<isSupportCertificateCustomID><!--opt, xs:Boolean, whether it supports certificate configuration with custom ID--></
isSupportCertificateCustomID>
</SecurityCap>

658

Intelligent Security API (General Application) Developer Guide
16.2.257 XML_SecurityQuestion
SecurityQuestion message in XML format
<SecurityQuestion version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<QuestionList>
<Question><!--the number of security question must be 3-->
<id><!--required, xs: integer, question ID, which corresponds to that of device--></id>
<answer>
<!--write-only, xs: string, answer of the security question, it will not be returned when getting question; when
setting question, this node will be encrypted (BASE64-->AES128CBE) for transmission-->
</answer>
<mark>
<!—required, read-only, xs: boolean, whether the configured security question is marked-->
</mark>
</Question>
</QuestionList>
<password>
<!--write-only, xs: string, password that encrypted by CBC, this node will not be returned when getting question; but
it is required when setting question-->
</password>
</SecurityQuestion>

See Also

16.2.258 XML_SerialCap
SerialCap capability message in XML format
<SerialCap version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<rs485PortNums min="1" max="5" def="1">
<!--opt, xs: integer-->
</rs485PortNums>
<supportRS23Cconfig>
<!--opt, xs: boolean-->
</supportRS23Cconfig>
<rs422PortNums opt="0">
<!--opt, xs: integer-->
</rs422PortNums>
<rs232PortNums opt="1">
<!--opt, xs: integer, range of RS-232 serial port No. supported by the device-->
</rs232PortNums>
<rs485WorkMode opt="Led, CaptureTrigger">
<!--opt, xs: string, range of RS-485 serial port No. supported by the device-->
</rs485WorkMode>
</SerialCap>

659

Intelligent Security API (General Application) Developer Guide
16.2.259 XML_SerialCommand
SerialCommand message in XML format
<SerialCommand version="1.0" xmlns="urn:psialliance-org">
<chainNo>
<!--opt, xs:string-->
</chainNo>
<command>
<!--req, xs:hexBinary-->
</command>
</SerialCommand>

16.2.260 XML_SerialPorList
SerialPorList message in XML format
<SerialPortList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<SerialPort/><!--opt, see details in the message of XML_SerialPort-->
</SerialPortList>

See Also
XML_SerialPort

16.2.261 XML_SerialPort
SerialPort message in XML format
<SerialPort version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id>
<!--req, xs:string, serial port ID-->
</id>
<enabled>
<!--req, xs:boolean, whether to enable the serial port: "true, false"-->
</enabled>
<serialPortType>
<!--req, xs:string, serial port type: "RS485", "RS422", "RS232"-->
</serialPortType>
<duplexMode>
<!--req, xs:string, duplex mode of the serial port: "half", "full"-->
</duplexMode>
<direction>
<!--req, xs:string, "monodirectional, bdirectional"-->
</direction>
<baudRate>
<!--req, xs:integer-->
</baudRate>

660

Intelligent Security API (General Application) Developer Guide
<dataBits>
<!--req, xs:integer-->
</dataBits>
<parityType>
<!--req, xs:string, parity type: "none,even,odd,mark,space"-->
</parityType>
<stopBits>
<!--req, xs:string, stop bit: "1,1.5,2"-->
</stopBits>
<workMode>
<!--dep, xs:string, working mode: "console","transparent","audiomixer","stairsControl"-elevator
control,"cardReader"-card reader,"disabled","custom". This node is required only when <serialPortType> is set to
"RS232"-->
</workMode>
<flowCtrl>
<!--req, xs:string, "none, software, hardware"-->
</flowCtrl>
<rs485WorkMode>
<!--opt, xs:string, working mode of RS-485 serial port, which is used for LED display or triggering transmission of
captured pictures: "Led, CaptureTrigger". This node is valid only when <serialPortType> is "RS485"-->
</rs485WorkMode>
<audiomixerProtocolType>
<!--opt, xs:string, "HIKVISION". This node is required only when <workMode> is "audiomixer"-->
</audiomixerProtocolType>
<deviceName><!--deq, xs:string, device name, the maximum length is 32 bytes, this node is valid only when
<serialPortType> is "RS485"--></deviceName>
<deviceType><!--deq, xs,integer, device type, this node is valid only when <serialPortType> is "RS485"--></
deviceType>
<deviceProtocol><!--deq, xs,integer, device protocol, this node is valid only when <serialPortType> is "RS485"--></
deviceProtocol>
<mode><!--deq, xs:string, working mode: "readerMode,clientMode,externMode,accessControlHost,disabled", this
node is valid only when <serialPortType> is "RS485"--></mode>
<outputDataType><!--dep, xs:string, output data type: "cardNo,employeeNo", this node is valid when <mode>is
"accessControlHost"--></outputDataType>
</SerialPort>

16.2.262 XML_SIPInfo
SIPInfo message in XML format
<SIPInfo version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<videoID>
<!--req, xs:string-->
</videoID>
<AlarmInList>
<AlarmIn>
<id>
<!--req, xs:string-->
</id>
<alarmInID>
<!--req, xs:string-->

661

Intelligent Security API (General Application) Developer Guide
</alarmInID>
</AlarmIn>
</AlarmInList>
</SIPInfo>

16.2.263 XML_SIPInfoList
SIPInfoList message in XML format
<SIPInfoList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<SIPInfo>
<videoID><!--req, xs: string--><videoID>
<AlarmInList>
<AlarmIn>
<id><!--req, xs: string--></id>
<alarmInID><!--req, xs: string--><alarmInID>
</AlarmIn>
</AlarmInList>
<VideoInputList><!--opt-->
<VideoInput>
<id><!--req, xs: string--></id>
<videoInputID><!--req, xs: string></videoInputID>
</VideoInput>
</VideoInputList>
<AudioOutputList><!--opt,ID list of audio outputs-->
<AudioOutput>
<id><!--req, xs: string--></id>
<audioOutputID><!--req, xs: string--></audioOutputID>
</AudioOutput>
</AudioOutputList>
<platformNo><!-- opt, xs:integer--></platformNo>
</SIPInfo>
<SIPInfoList>

16.2.264 XML_SIPServer
SIPServer message in XML format
<SIPServer version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id>
<!--req, xs:interger, the maximum ID depends on the number of channels-->
</id>
<localPort>
<!--req, xs:integer, local port No., which is between 1 and 65535-->
</localPort>
<streamID>
<!--req, xs:integer, stream type: 1-main stream, 2-sub-stream, 3-third stream-->
</streamID>
<Standard>

662

Intelligent Security API (General Application) Developer Guide
<!--opt-->
<registerStatus>
<!--ro, req, xs:boolean, registration status: "false"-unregistered, "true"-registered-->
</registerStatus>
<enabled >
<!--req, xs:string, "true"-log in, "false"-log out-->
</enabled>
<registrar>
<!--req, xs:string-->
</registrar>
<registrarPort>
<!--req, xs:integer-->
</registrarPort>
<proxy>
<!--req, xs:string-->
</proxy>
<proxyPort>
<!--req, xs:integer-->
</proxyPort>
<displayName>
<!--req, xs:string-->
</displayName>
<username>
<!--req, xs:string-->
</userName>
<authID>
<!--req, xs:string-->
</authID>
<password>
<!--wo, req, xs:string-->
</password>
<expires>
<!--req, xs:integer-->
</expires>
</Standard>
<GB28181>
<!--opt-->
<registerStatus>
<!--req, xs:boolean, "true,false"-->
</registerStatus>
<enabled>
<!--req, xs:boolean, "true,false"-->
</enabled>
<registrar>
<!--req, xs:string-->
</registrar>
<registrarPort>
<!--req, xs:integer-->
</registrarPort>
<serverId>
<!--req, xs:string-->
</serverId>

663

Intelligent Security API (General Application) Developer Guide
<serverDomain>
<!--req, xs:string-->
</serverDomain>
<username>
<!--req, xs:string-->
</userName>
<authID>
<!--req, xs:string-->
</authID>
<password>
<!--wo, req, xs:string-->
</password>
<expires>
<!--req, xs:integer-->
</expires>
<liveTime>
<!--req, xs:integer-->
</liveTime>
<heartbeatTime>
<!--req, xs:integer-->
</heartbeatTime>
<heartbeatCount>
<!--req, xs:integer-->
</heartbeatCount>
</GB28181>
</SIPServer>

16.2.265 XML_SIPServerList
SIPServerList message in XML format
<SIPServerList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<SIPServer/><!--opt, see details in the message of XML_SIPServer-->
</SIPServerList>

See Also
XML_SIPServer

16.2.266 XML_Sharpness
Sharpness message in XML format
<Sharpness version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<SharpnessMode><!--opt, xs:string, "manual", "auto"--></SharpnessMode>
<SharpnessLevel><!--req, xs:integer--></SharpnessLevel>
</Sharpness>

664

Intelligent Security API (General Application) Developer Guide
16.2.267 XML_Shutter
Shutter message in XML format
<Shutter version="1.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<ShutterLevel>
<!--dep, xs: string, shutter level: "1/1, 1/2, 1/3, 1/6, 1/12, 1/25, 1/50, 1/75, 1/100, 1/120, 1/125, 1/150, 1/175,
1/215, 1/225, 1/300, 1/400, 1/425, 1/600, 1/1000, 1/1250, 1/1750, 1/2500, 1/3500, 1/6000, 1/10000", this node is
valid when <ExposureType> in the message XML_Exposure is "ShutterFisrt"-->
<ShutterLevel>
</Shutter>

See Also
XML_Exposure

16.2.268 XML_SmartCap
SmartCap capability message in XML format
<SmartCap version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<isSupportROI><!--opt, xs:boolean, whether to support ROI (Region of Interest)--></isSupportROI>
<isSupportFaceDetect><!--opt, xs:boolean, whether to support face detection--></isSupportFaceDetect>
<isSupportIntelliTrace><!--opt, xs:boolean--></isSupportIntelliTrace>
<isSupportFieldDetection><!--opt, xs:boolean, whether to support region detection--></isSupportFieldDetection>
<isSupportDefocusDetection><!--opt, xs:boolean--></isSupportDefocusDetection>
<isSupportAudioDetection><!--opt, xs:boolean--></isSupportAudioDetection>
<isSupportSceneChangeDetection><!--opt, xs:boolean, whether to support scene change detection--></
isSupportSceneChangeDetection>
<isSupportLineDetection><!--opt, xs:boolean--></isSupportLineDetection>
<isSupportRegionEntrance><!--opt, xs:boolean--></isSupportRegionEntrance>
<isSupportRegionExiting><!--opt, xs:boolean--></isSupportRegionExiting>
<isSupportLoitering><!--opt, xs:boolean--></isSupportLoitering>
<isSupportGroup><!--opt, xs:boolean--></isSupportGroup>
<isSupportRapidMove><!--opt, xs:boolean--></isSupportRapidMove>
<isSupportParking><!--opt, xs:boolean--></isSupportParking>
<isSupportUnattendedBaggage><!--opt, xs:boolean--></isSupportUnattendedBaggage>
<isSupportAttendedBaggage><!--opt, xs:boolean--></isSupportAttendedBaggage>
<isSupportPeopleDetection><!--opt, xs:boolean--></isSupportPeopleDetection>
<isSupportStorageDetection><!--opt, xs:boolean--></isSupportStorageDetection>
<isSupportShipsDetection><!--opt, xs:boolean--></isSupportShipsDetection>
<isSupportSmartCalibration><!--opt, xs:boolean--></isSupportSmartCalibration>
<isSupportShield><!--opt, xs:boolean, whether to support shielded area--></isSupportShield>
<isSupportAlgVersion><!--opt, xs:boolean, whether to support algorithm library version--></isSupportAlgVersion>
<isSupportVideoOverlap><!--opt, xs:boolean, whether to support text overlay--></isSupportVideoOverlap>
<isSupportParkingState><!--opt, xs:boolean, whether to support parking space status detection--></
isSupportParkingState>
<isSupportChannelResource><!--opt, xs:boolean--></ isSupportChannelResource>
<isSupportAnalysisUnitSwitch opt="true,false"><!--opt, xs:boolean, whether to support analysis unit switch--></
isSupportAnalysisUnitSwitch>

665

Intelligent Security API (General Application) Developer Guide
<isSupportHFPD><!--opt, xs:boolean, whether to support frequently appeared person detection--></isSupportHFPD>
<isSupportImageROI<!--opt, xs:boolean, whether to support smartJpeg (image ROI (Region of Interest))--></
isSupportImageROI>
</SmartCap>

16.2.269 XML_SmartSearchDescription
SmartSearchDescription message in XML format
<SmartSearchDescription version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<searchID>
<!--req, xs:string, search ID, which is used to confirm the upper-level platform or system. If the platform or system
are same during two times of search, the search history will be recorded in the memory for next fast search-->
</searchID>
<searchResultPosition><!--req, xs: integer--></searchResultPosition>
<maxResults><!--req, xs: integer--></maxResults>
<trackID><!--req, xs: integer, channel ID, e.g., 101-main stream if first channel--></trackID>
<startTime><!--req, xs: datetime, start time of validity period, e.g., 2013-06-10T 12:00:00Z--></startTime>
<endTime><!--req, xs: datetime, end time of validity period, e.g., 2013-06-10T 13:00:00Z--></endTime>
<type>
<!--req, xs: string; VCA event type: "motionDetection, traversePlaneDetection,FieldDetection, faceDetection"-->
</type>
<MotionDetection><!--dep, it is valid when type is "motionDetection"-->
<Grid>
<rowGranularity></rowGranularity>
<columnGranularity></columnGranularity>
</Grid>
<MotionDetectionLayout>
<layout>
<gridMap></gridMap>
</layout>
</MotionDetectionLayout>
<sensitivity><!--opt, xs: integer, value range: [1,100]--></sensitivity>
</MotionDetection>
<TraversePlane><!--dep, it is valid when type is "traversePlaneDetection"-->
<TraversePlaneParam>
<LineList>
<Line>
<StartPoint>
<x><!--req, xs: float--></x>
<y><!--req, xs: float--></y>
</StartPoint>
<EndPoint>
<x><!--req, xs: float--></x>
<y><!--req, xs: float--></y>
</EndPoint>
</Line>
</LineList>
<crossDirection><!--opt, xs: string, crossing direction: "bothDirection, leftToRight, rightToLeft"--><crossDirection>
<sensitivity><!-- opt, xs: integer, value range: [1,100]--></sensitivity>
<planeHeight><!--opt, xs: integer--></planeHeight>

666

Intelligent Security API (General Application) Developer Guide
<detectionTarget><!--req, xs: string, detection target type: "all, human, vehicle--><detectionTarget>
</TraversePlaneParam>
<dwPreTime><!--opt, xs: integer, pre-recording time--></dwPreTime>
<dwDelayTime><!--opt, xs: integer,post-recording time--></dwDelayTime>
<PTZPos>
<P><!--opt, xs: integer--></P>
<T><!--opt, xs: integer--></T>
<Z><!--opt, xs: integer--></Z>
</PTZPos>
<advancedType><!--opt, xs: string, target sub type: "humanFeature, objectFeature"--></advancedType>
<advance><!--dep, it is valid when type is "motionDetection"-->
<HumanFeature>
<age><!--opt, xs: integer, value range: [0,100]--></age>
<sex><!--opt, xs: string, gender: "male,female"--></sex>
<eyeGlass><!--opt, xs: boolean--></eyeGlass>
</HumanFeature><!--dep, it is valid when advancedType is "humanFeature"-->
<ObjectFeature>
<colorRatel><!--opt, xs: integer--></colorRatel>
<R><!--opt, xs: integer--></R>
<G><!--opt, xs: integer--></G>
<B><!--opt, xs: integer--></B>
</ObjectFeature><!--dep, it is valid when advancedType is "objectFeature"-->
</advance>
</TraversePlane>
<FieldDetection><!--dep, it is valid when type is "FieldDetection"-->
<normalizedScreenSize>
<normalizedScreenWidth><!--opt, xs: integer--></normalizedScreenWidth>
<normalizedScreenHeight><!--opt, xs: integer--></normalizedScreenHeight>
</normalizedScreenSize>
<param>
<region>
<pointList>
<point>
<x><!--opt, xs: integer--></x>
<y><!--opt, xs: integer--></y>
</point>
</pointList>
</region>
</param>
<duration><!--opt, xs: integer, value range: [1,100]--></duration>
<sensitivity><!--opt, xs: integer, value range: [1,100]--></sensitivity>
<rate><!--opt, xs: integer, value range: [1,100]--></rate>
<detectionTarget><!--req, xs: string, detection target type: "all, human, vehicle"--><detectionTarget>
<dwPreTime><!--opt, xs: integer, pre-recording time--></dwPreTime>
<dwDelayTime><!--opt, xs: integer, post-recording time--></dwDelayTime>
<PTZPos>
<P><!--opt, xs: integer--></P>
<T><!--opt, xs: integer--></T>
<Z><!--opt, xs: integer--></Z>
</PTZPos>
<advancedType><!--opt, xs: string, target sub type: "humanFeature, objectFeature"--></advancedType>
<advance><!--dep, it is valid when type is "motionDetection"-->

667

Intelligent Security API (General Application) Developer Guide
<HumanFeature>
<age><!--opt, xs: integer, value range: [0,100]--></age>
<sex><!--opt, xs: string, gender: "male,female"--></sex>
<eyeGlass><!--opt, xs: boolean--></eyeGlass>
</HumanFeature><!--dep, it is valid when advancedType is "humanFeature"-->
<ObjectFeature>
<colorRatel><!--opt, xs: integer--></colorRatel>
<R><!--opt, xs: integer--></R>
<G><!--opt, xs: integer--></G>
<B><!--opt, xs: integer--></B>
</ObjectFeature><!--dep, it is valid when advancedType is "objectFeature"-->
</advance>
</FieldDetection>
<FaceDetection><!--dep, it is valid when type is "faceDetection"-->
<param>
<region>
<pointList>
<point>
<x/>
<y/>
</point>
</pointList>
</region>
</param>
<duration><!--opt, xs: integer, value range: [1,100]--></duration>
<sensitivity><!--opt, xs: integer, value range: [1,100]--></sensitivity>
<rate><!--opt, xs: integer, value range: [1,100]--></rate>
<detectionTarget><!--req, xs: string, detection target type: "all, human, vehicle"--><detectionTarget>
<dwPreTime><!--opt, xs: integer, pre-recording time--></dwPreTime>
<dwDelayTime><!--opt, xs: integer, post-recording time--></dwDelayTime>
<PTZPos>
<P><!--opt, xs: integer--></P>
<T><!--opt, xs: integer--></T>
<Z><!--opt, xs: integer--></Z>
</PTZPos>
<advancedType><!--opt, xs: string, target sub type: "humanFeature, objectFeature"--></advancedType>
<advance><!--dep, it is valid when type is "motionDetection"-->
<HumanFeature>
<age><!--opt, xs: integer, value range: [0,100]--></age>
<sex><!--opt, xs: string, gender: "male,female"--></sex>
<eyeGlass><!--opt, xs: boolean--></eyeGlass>
</HumanFeature><!--dep, it is valid when advancedType is "humanFeature"-->
<ObjectFeature>
<colorRatel><!--opt, xs: integer--></colorRatel>
<R><!--opt, xs: integer--></R>
<G><!--opt, xs: integer--></G>
<B><!--opt, xs: integer--></B>
</ObjectFeature><!--dep, it is valid when advancedType is "objectFeature"-->
</advance>
</FaceDetection>
</SmartSearchDescription>

668

Intelligent Security API (General Application) Developer Guide
16.2.270 XML_SmartSearchResult
SmartSearchResult message in XML format
<SmartSearchResult version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<searchID>
<!--req, xs:string, search ID, which is used to confirm the upper-level platform or system. If the platform or system
are same during two times of search, the search history will be recorded in the memory for next fast search-->
</searchID>
<responseStatus><!--req, xs: string, "true,false"--></responseStatus>
<responseStatusStrg><!--req, xs: string, "OK,NO MATCHES,MORE"--></responseStatusStrg>
<numOfMatches><!--req, xs: integer--></numOfMatches>
<totalMatches><!--req, xs: integer--></totalMatches>
<matchList>
<searchMatchItem><!--list-->
<id><!--req, xs: integer--></id>
<timeSpan>
<startTime><!--req, xs: string, start time of validity period, e.g., 2013-06-10T 12:00:00Z--></startTime>
<endTime><!--req,xs:string, end time of validity period, e.g., 2013-06-10T 12:00:00Z--></endTime>
</timeSpan>
</searchMatchItem>
</matchList>
</SmartSearchResult>

16.2.271 XML_SMARTTestConfig
SMARTTestConfig message in XML format
<SMARTTestConfig version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enable opt="true,false"><!--req, xs:string, whether to continue using the HDD when the HDD SMART detection
failed--></enable>
</SMARTTestConfig>

16.2.272 XML_SMARTTestStatus
SMARTTestStatus message in XML format
<SMARTTestStatus version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs: string--></id>
<temprature><!--req, xs: integer, unit: °C--></temprature>
<powerOnDay><!--req, xs: integer, unit: day--></powerOnDay>
<selfEvaluaingStatus><!--req, xs: string, "ok, error"--></selfEvaluaingStatus>
<allEvaluaingStatus><!--req, xs: string, "unctional,badsectors,fault"--></allEvaluaingStatus>
<selfTestPercent><!--req, xs: integer--></selfTestPercent>
<selfTestStatus>
<!--req, xs: string,
"ok,aborted,interrupted,failed,unkown,electronic_element_error,servo_error,read_failed,progress,not_tested,not_rec
ognized"-->

669

Intelligent Security API (General Application) Developer Guide
</selfTestStatus>
<testType><!--req, xs: string, "short,expanded,conveyance"--></testType>
<TestResultList><!--req, list, the maximum size is 30 bytes-->
<TestResult><!--list-->
<attributeID><!--req, xs: string--></attributeID>
<attributeName><!--opt, xs: string--></attributeName>
<status><!--req, xs: string, "ok,illegal"--></status>
<flags><!--req, xs: integer--></flags>
<thresholds><!--req, xs: integer--></thresholds>
<value><!--req, xs: string--></value>
<worst><!--req, xs: integer--></worst>
<rawValue><!--req, xs: integer--></rawValue>
</TestResult>
</TestResultList>
</SMARTTestStatus>

16.2.273 XML_SoftwareService
SoftwareService message in XML format
<SoftwareService version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<ThirdStream><!--opt, third stream configuration-->
<enabled><!--req, xs: boolean, "true,false", whether to enable third stream configuration--></enabled>
</ThirdStream>
<PanoramaDisplay><!--opt, display the image range on panorama view-->
<enabled>
<!--req, xs: boolean, "true,false", whether to enable image range display on panorama view-->
</enabled>
</PanoramaDisplay>
<MotionDetect>
<enabled><!--whether to enable motion detetion--></enabled>
</MotionDetect>
</SoftwareService>

16.2.274 XML_SocketIP
SocketIP message in XML format
<SocketIP version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<ipAddress>
<!--opt, xs: string-->
</ipAddress>
<ipv6Address>
<!--opt, xs: string-->
</ipv6Address>
</SocketIP>

670

Intelligent Security API (General Application) Developer Guide
16.2.275 XML_sourceCapability
sourceCapability message in XML format
<sourceCapability version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<videoInputNums><!--req, xs:integer--></videoInputNums>
<audioInputNums><!--opt, xs:integer--></audioInputNums>
</sourceCapability>

16.2.276 XML_sourceDescriptor
sourceDescriptor message in XML format
<sourceDescriptor version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<adminProtocol><!--req, xs:string, "HIKVISION,SONY,ISAPI,ONVIF,..."--></adminProtocol>
<addressingFormatType><!--req,xs:string, opt="ipaddress,hostname"--></addressingFormatType>
<hostName><!--dep,xs:string, domain name--></hostName>
<ipAddress><!--dep,xs:string, IP address--></ipAddress>
<ipv6Address><!--dep,xs:string, IPv6 address--></ipv6Address>
<managePortNo><!--req,xs:integer, port number--></managePortNo>
<userName><!--req,xs:string--></userName>
<password><!--req,wo,xs:string--></password>
</sourceDescriptor>

16.2.277 XML_SSH
SSH message in XML format
<SSH version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled><!--req, xs:boolean--></enabled>
</SSH>

16.2.278 XML_staticRouteList
staticRouteList message in XML format
<staticRouteList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<staticRoute><!--opt-->
<id>
<!--req, xs: integer, this node must be configured when deleting-->
</id>
<enabled><!--req, xs: boolean--></enabled>
<dstIpAddr><!--req, xs: string--></dstIpAddr>
<dstNetmask><!--req, xs: string--></dstNetmask>
<dstGateway><!--req, xs: string--></dstGateway>
<ifName><!--req, xs: string， 0: G1, 1: G2--></ifName>

671

Intelligent Security API (General Application) Developer Guide
</staticRoute>
</staticRouteList>

16.2.279 XML_StreamingChannel
StreamingChannel message in XML format
<StreamingChannel version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req,xs:string;id--></id>
<channelName><!--req,xs:string--></channelName>
<enabled><!--req,xs:boolean--></enabled>
<Transport><!--req-->
<maxPacketSize><!--opt, xs: integer--></maxPacketSize>
<audioPacketLength><!--opt, xs: integer--></audioPacketLength>
<audioInboundPacketLength><!--opt, xs: integer--></audioInboundPacketLength>
<audioInboundPortNo><!--opt, xs: integer--></audioInboundPortNo>
<videoSourcePortNo><!--opt, xs: integer--></videoSourcePortNo>
<audioSourcePortNo><!--opt, xs: integer--></audioSourcePortNo>
<ControlProtocolList><!--req, protocol types for streaming-->
<ControlProtocol><!--req-->
<streamingTransport>
<!--req,xs:string,"HTTP,RTSP,SHTTP,SRTP"-->
</streamingTransport>
</ControlProtocol>
</ControlProtocolList>
<Unicast><!--opt-->
<enabled><!--req, xs: boolean--></enabled>
<interfaceID><!--opt, xs: string--></interfaceID>
<rtpTransportType
<!--opt, xs: string, "RTP/UDP, RTP/TCP"-->
</rtpTransportType>
</Unicast>
<Multicast><!--opt-->
<enabled><!--req, xs: boolean--></enabled>
<userTriggerThreshold><!--opt, xs: integer--></userTriggerThreshold>
<destIPAddress><!--dep, xs: string--></destIPAddress>
<videoDestPortNo><!--opt, xs: integer--></videoDestPortNo>
<audioDestPortNo><!--opt, xs: integer--></audioDestPortNo>
<destIPv6Address><!--dep, xs: string--></destIPv6Address>
<ttl><!--opt, xs:integer--></ttl>
<activeMulticastEnabled>
<!--opt, xs: boolean, "true,false", whether to enable active multicast, which is mutual exclusion with passive
multicast-->
</activeMulticastEnabled>
<packagingFormat><!--opt, xs: string, container format--></packagingFormat>
<FecInfo><!--opt-->
<fecRatio>
<!--req, read-only, xs: integer, extra bandwidth occupation ratio of forward error correction (FEC) data, the value
is between 0 and 100, the default value is 0-->
</fecRatio>
<fecDestPortNo>

672

Intelligent Security API (General Application) Developer Guide
<!--opt, xs: integer, Port No. of FEC multicast, the default port No. is specified by device-->
</fecDestPortNo>
</FecInfo>
</Multicast>
<Security><!--opt-->
<enabled><!--req, xs: boolean--></enabled>
<certificateType><!--req, xs: string, opt="digest,digest/baisc" def="digest"--></certificateType>
</Security>
<SRTPMulticast><!--opt-->
<SRTPVideoDestPortNo><!--opt, xs:integer--></SRTPVideoDestPortNo>
<SRTPAudioDestPortNo><!--opt, xs:integer--></SRTPAudioDestPortNo>
</SRTPMulticast>
</Transport>
<Video><!--opt-->
<enabled><!--req,xs:boolean--></enabled>
<videoInputChannelID>
<!--req,xs:string;id-->
</videoInputChannelID>
<videoCodecType>
<!--req,xs:string,"MPEG4,MJPEG,3GP,H.264,HK.264,MPNG,SVAC,H.265"-->
</videoCodecType>
<videoResolutionWidth>
<!--req,xs:integer-->
</videoResolutionWidth>
<videoResolutionHeight>
<!--req,xs:integer-->
</videoResolutionHeight>
<videoQualityControlType>
<!--opt,xs:string,"CBR,VBR"-->
</videoQualityControlType>
<constantBitRate>
<!--dep, xs:integer, constant bit rate, unit: kbps-->
</constantBitRate>
<vbrUpperCap>
<!--dep, xs:integer, upper limit of variable bit rate, unit: kbps-->
</vbrUpperCap>
<vbrLowerCap>
<!--dep, xs:integer, lower limit of variable bit rate, unit: kbps-->
</vbrLowerCap>
<maxFrameRate>
<!--req, xs:integer, maximum frame rate, the value is multiplied by 100 to be returned-->
</maxFrameRate>
<keyFrameInterval><!--opt, xs:integer, milliseconds--></keyFrameInterval>
<rotationDegree><!--opt, xs:integer, degrees, 0..360--></rotationDegree>
<mirrorEnabled><!--opt, xs:boolean--></mirrorEnabled>
<snapShotImageType><!--opt, xs:string, "JPEG,GIF,PNG"--></snapShotImageType>
<Mpeg4Profile> <!--dep, xs:string, "SP,ASP"--></Mpeg4Profile>
<H264Profile><!--dep, xs:string, "Baseline,Main,High, Extended"--></H264Profile>
<SVACProfile><!--dep, xs:string, "Baseline,Main,High,Extended"--></SVACProfile>
<GovLength> <!--opt, xs:integer--></GovLength>
<SVC>
<enabled><!--req, xs:boolean--></enabled>

673

Intelligent Security API (General Application) Developer Guide
<SVCMode><!--dep, xs:string, "manual,auto"--></SVCMode>
</SVC>
<smoothing><!--opt, xs:integer--></smoothing>
<SmartCodec><!--dep, -->
<enabled><!--req, xs:boolean--></enabled>
</SmartCodec>
<vbrAverageCap><!--dep, xs:integer, in kbps--></vbrAverageCap>
<IntelligentInfoDisplayMethod>
<!--opt, intelligent information displaying method, xs:string, "player,non-player"-->
</IntelligentInfoDisplayMethod>
</Video>
<Audio><!--opt-->
<enabled><!--req, xs:boolean--></enabled>
<audioInputChannelID><!--req, xs:string;id--></audioInputChannelID>
<audioCompressionType>
<!--req, xs:string,"G.711alaw,G.711ulaw,G.726,G.729,G.729a,G.729b,PCM,MP3,AC3,AAC,ADPCM，MP2L2"-->
</audioCompressionType>
<audioInboundCompressionType>
<!--opt, xs:string,"G.711alaw,G.711ulaw,G.726,G.729,G.729a,G.729b,PCM,MP3,AC3,AAC,ADPCM,MP2L2"-->
</audioInboundCompressionType>
<audioBitRate><!--opt, xs:integer, in kbps--></audioBitRate>
<audioSamplingRate><!--opt, xs:float, in kHz--></audioSamplingRate>
<audioResolution><!--opt, xs:integer, in bits--></audioResolution>
<VoiceChanger><!--opt, xs:integer, -12..0..12-->
<enabled><!--req, xs:boolean--></enabled>
<level><!--req, xs:integer, "-12..12"--></level>
</VoiceChanger>
</Audio>
<enableCABAC><!--opt, xs: boolean--></enableCABAC>
<subStreamRecStatus><!--opt, xs: boolean--></subStreamRecStatus>
<customStreamEnable><!—opt, xs: boolean, whether the stream is custom stream: "true"-yes, this node is not
returned-no--></customStreamEnable>
</StreamingChannel>

16.2.280 XML_StreamingChannelList
StreamingChannelList message in XML format
<StreamingChannelList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<StreamingChannel/><!--opt, see details in XML_StreamingChannel-->
</StreamingChannelList>

See Also
XML_StreamingChannel

16.2.281 XML_StreamingStatus
StreamingStatus message in XML format

674

Intelligent Security API (General Application) Developer Guide
<StreamingStatus version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<totalStreamingSessions><!--req, xs: integer, number of streaming sessions--></totalStreamingSessions>
<StreamingSessionStatusList/><!--dep, this node is valid only when the number of sessions is larger than 0, refer to
XML_StreamingSessionStatusList for details-->
</StreamingStatus>

See Also
XML_StreamingSessionStatusList

16.2.282 XML_StreamingSessionStatusList
StreamingSessionStatusList message in XML format
<StreamingSessionStatusList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<StreamingSessionStatus>
<clientAddress><!--req-->
<ipAddress><!--dep, xs: string--></ipAddress>
<ipv6Address><!--dep, xs: string--></ipv6Address>
</clientAddress>
</StreamingSessionStatus>
</StreamingSessionStatusList>

16.2.283 XML_SubscribeEvent
SubscribeEvent message in XML format
<SubscribeEvent version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema" >
<heartbeat>
<!--optional, xs:integer, heartbeat interval, unit: second, the default value is 30s-->
</heartbeat>
<eventMode>
<!--required, xs:string, "all"-upload all alarms/events, "list"-upload specified alarm/event-->
</eventMode>
<EventList>
<Event><!--uploading mode of specified alarm/event, this node exists only when eventMode is "list"-->
<type>
<!--required, xs:string, alarm/event types, which are obtained from the capability, refer to Alarm/Event Types for
Subscription for its values-->
</type>
<minorAlarm>
<!--opt, xs:string, minor alarm type: "0x400,0x401,0x402,0x403", see details in Access Control Event Type. This
node is required when type is "AccessControllerEvent"-->
</minorAlarm>
<minorException>
<!--opt, xs:string, minor exception type: "0x400,0x401,0x402,0x403", see details in Access Control Event Type.
This node is required when type is "AccessControllerEvent"-->
</minorException>
<minorOperation>

675

Intelligent Security API (General Application) Developer Guide
<!--opt, xs:string, minor operation type: "0x400,0x401,0x402,0x403", see details in Access Control Event Type.
This node is required when type is "AccessControllerEvent"-->
</minorOperation>
<minorEvent>
<!--opt, xs:string, minor event type: "0x01,0x02,0x03,0x04", see details in Access Control Event Type. This node is
required when type is "AccessControllerEvent"-->
</minorEvent>
<pictureURLType>
<!--opt, xs:string, alarm picture format: "binary"-binary, "localURL"-device local URL, "cloudStorageURL"-cloud
storage URL-->
</pictureURLType>
</Event>
</EventList>
<channels>
<!--optional, xs:string, event linked channel information, and multiple channels can be linked, each channel is
separated by comma, e.g., "1,2,3,4…"-->
</channels>
<channels>
<!--optional, xs:string, specify channels (each channel is separated by comma, e.g., "1,2,3,4…") to be armed, this
node does not exist if you want to arm all channels, and if this node exists, the sub node <channels> in the node
<Event> is invalid-->
</channels>
<identityKey max="64"/>
<!--opt, xs: string, interaction command of subscription, supports subscribing comparison results of face picture
library (importing with this command), the maximum length is 64-->
</SubscribeEvent>

16.2.284 XML_SubscribeEventCap
SubscribeEventCap capability message in XML format
<SubscribeEventCap version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<heartbeat min="" max="" />
<!--optional, heartbeat time interval, unit: second-->
<format opt="xml,json"/><!--req, supported message format-->
<channelMode opt="all,list" />
<!--required, channel subscription mode: "all"-subscribe events/alarms of all channels, "list"-subscribe events/
alarms of specific channels-->
<eventMode opt="all,list" />
<!--required, event subscription mode: "all"-subscribe all event types (must be supported), "list"-subscribe specific
event types, if "list" is returned, "all" will also be returned-->
<!--if both the channelMode and eventMode returns "all", it indicates that the device does not support subscribing
event/alarm by event type or channel-->
<EventList><!--required, dependent, upload mode of specified alarms/events, it is valid only when eventMode is
"list"-->
<Event><!--required-->
<type><!--required, xs:string, refer to Supported Alarm/Event Types for details--></type>
<minorAlarm opt="0x400,0x401,0x402,0x403">
<!--opt, xs:string, minor alarm type, see details in Access Control Event Type. This node is required when type is
"AccessControllerEvent"-->
</minorAlarm>

676

Intelligent Security API (General Application) Developer Guide
<minorException opt="0x400,0x401,0x402,0x403">
<!--opt, xs:string, minor exception type, see details in Access Control Event Type. This node is required when type
is "AccessControllerEvent"-->
</minorException>
<minorOperation opt="0x400,0x401,0x402,0x403">
<!--opt, xs:string, minor operation type, see details in Access Control Event Type. This node is required when type
is "AccessControllerEvent"-->
</minorOperation>
<minorEvent opt="0x01,0x02,0x03,0x04">
<!--opt, xs:string, minor event type, see details in Access Control Event Type. This node is required when type is
"AccessControllerEvent"-->
</minorEvent>
<pictureURLType opt="binary,localURL,cloudStorageURL" def=""/>
<!--opt, xs:string, alarm picture format: "binary"-binary, "localURL"-device local URL, "cloudStorageURL"-cloud
storage URL, and the def is followed by the default format-->
</Event>
</EventList>
<pictureURLType opt="binary,localURL,cloudStorageURL" def=""/>
<!--opt, xs:string, alarm picture format: "binary"-binary picture, "localURL"-device local URL, "cloudStorageURL"cloud storage URL. This node is the method of uploading all pictures related to the event. If this node is applied,
<pictureURLType> in <Event> is invalid; otherwise, pictures will be uploaded using the default method returned by the
device capability. For front-end devices, the default method is uploading binary pictures; for back-end devices, the
default method is by device local URL-->
<ChangedUploadSub><!--message subscription-->
<interval/><!--opt, xs:integer, lifecycle of arming GUID, the default value is 5 minutes, unit: second. The device will
generate new GUID for the arming connection after it is disconnected for the set lifecycle-->
<StatusSub>
<all/><!-- opt, xs:boolean, whether to subscribe all events-->
<channel/><!--opt, xs:boolean, whether to subscribe channel status. This node is not required when <all> is
"true"-->
<hd/><!--opt, xs:boolean, whether to subscribe disk status. This node is not required when <all> is "true"-->
<capability/><!--opt, xs:boolean, whether to subscribe capability change status. This node is not required when
<all> is "true"-->
</StatusSub>
</ChangedUploadSub>
<identityKey max="64"/>
<!--opt, xs: string, interaction command of subscription, supports subscribing comparison results of face picture
library (importing with this command), the maximum length is 64-->
</SubscribeEventCap>

16.2.285 XML_SubscribeEventResponse
SubscribeEventResponse message in XML format
<SubscribeEventResponse>
<id><!--req, xs:integer, subscription ID--></id>
<FailedEventList>
<!--opt, list of subscription failed events. When subscription failed, it should be returned, and the upper layer can
check whether all event/alarm subscriptions are succeeded via the existence of node FailedEventList-->
<Event>
<type>

677

Intelligent Security API (General Application) Developer Guide
<!--req, xs:string, refer to Supported Alarm/Event Types for details-->
</type>
<minorAlarm>
<!--opt, xs:string, minor alarm type: "0x400,0x401,0x402,0x403", see details in Access Control Event Type. This
node is required when type is "AccessControllerEvent"-->
</minorAlarm>
<minorException>
<!--opt, xs:string, minor exception type: "0x400,0x401,0x402,0x403", see details in Access Control Event Type.
This node is required when type is "AccessControllerEvent"-->
</minorException>
<minorOperation>
<!--opt, xs:string, minor operation type: "0x400,0x401,0x402,0x403", see details in Access Control Event Type.
This node is required when type is "AccessControllerEvent"-->
</minorOperation>
<minorEvent>
<!--opt, xs:string, minor event type: "0x01,0x02,0x03,0x04", see details in Access Control Event Type. This node is
required when type is "AccessControllerEvent"-->
</minorEvent>
<pictureURLType>
<!--opt,xs:string, opt="binary,localURL,cloudStorageURL", alarm picture transmission mode: "binary"-binary,
"localURL"-device local URL, "cloudStorageURL"-cloud storage URL-->
</pictureURLType>
<channels>
<!--opt, xs:string, "1,2,3,4…", event related channel ID, supports multiple channels, and the channel ID is
separated by commas-->
</channels>
<subStatusCode>
<!--req, string, subscription failure error code-->
</subStatusCode>
</Event>
</FailedEventList>
</SubscribeEventResponse>

16.2.286 XML_SupplementLight
SupplementLight message in XML format
<SupplementLight><!--opt-->
<mode><!--opt, xs: string, adjustment mode of supplement light, opt="schedule,off,on,auto"--></mode>
<Schedule>
<TimeRange><!--req-->
<beginTime><!--req, xs: time, ISO8601 time--></beginTime>
<endTime><!-- req, xs: time, ISO8601 time--></endTime>
</TimeRange>
</Schedule>
<brightnessLimit>
<!--dep, xs: integer, brightness of supplement light, which is between 0 and 100; the brightness can be adjust when
<mode> is set to "on"-->
</brightnessLimit>
<supplementLightMode>
<!--opt, xs: string, illumination mode: "mixed"-hybrid, "whitelight"-white light, "close"-disabled-->

678

Intelligent Security API (General Application) Developer Guide
</supplementLightMode>
<irLightBrightness>
<!--dep, xs: integer, brightness of IR supplement light, which is between 0 and 100; this node is valid only when
<supplementLightMode> is set to "mixed" and <mixedLightBrightnessRegulatMode> is set to "manual"-->
</irLightBrightness>
<mixedLightBrightnessRegulatMode>
<!--dep, xs: string, brightness adjustment mode of hybrid supplement light, opt="manual,auto"; this node is valid
only when <supplementLightMode> is set to "mixed"-->
</mixedLightBrightnessRegulatMode>
<highIrLightBrightness>
<!--dep, xs: integer, brightness of far IR light, which is between 0 and 100; this node cannot be configured together
with node <irLightBrightness>-->
</highIrLightBrightness>
<highWhiteLightBrightness>
<!--dep, xs: integer, brightness of far white light, which is between 0 and 100; this node cannot be configured
together with node <brightnessLimit>-->
</highWhiteLightBrightness>
<lowIrLightBrightness>
<!--dep, xs: integer, brightness of near IR light, which is between 0 and 100; this node cannot be configured together
with node <irLightBrightness>-->
</lowIrLightBrightness>
<lowWhiteLightBrightness>
<!--dep, xs: integer, brightness of near white light, which is between 0 and 100; this node cannot be configured
together with node <brightnessLimit>-->
</lowWhiteLightBrightness>
<whiteLightBrightness><!--dep, xs: integer, white light brightness, which is between 0 and 100--></
whiteLightBrightness>
</SupplementLight>

16.2.287 XML_SyncSignalOutputList
SyncSignalOutputList message in XML format
<SyncSignalOutputList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<SyncSignalOutput>
<IOWorkMode>
<!--req, xs:string, IO output mode: "flashLight"-strobe light control mode, "polarizer"-polarizer control mode,
"continuousLight"-solid light control mode, "flashLightSwitch"-strobe light switching mode (used to switch between
the strobe supplement light mode and IR mode). When this node is set to "polarizer", only <outputStatus>,
<detectBrightnessEnable>, <brightnessThreshold>, <flashEnabled>, <startHour>, <startMinute>, <endHour>, and
<endMinute> are valid, and the <outputStatus> can only be set to "high" or "low". When this node is set to
"continuousLight", only <detectBrightnessEnable>, <brightnessThreshold>, <flashEnabled>, <startHour>,
<startMinute>, <endHour>, and <endMinute> are valid-->
</IOWorkMode>
<id>
<!--req, xs:integer, number of IO outputs, which is between 1 and 8-->
</id>
<defaultStatus>
<!--req, xs:string, IO default status: "high, low"-->
</defaultStatus>
<outputStatus>

679

Intelligent Security API (General Application) Developer Guide
<!--req,xs:string, IO effective status: "high, low, pulse"-->
</outputStatus>
<aheadTime>
<!--req, xs:integer, IO pre-output time, unit: microsecond-->
</aheadTime>
<timeDelay>
<!--req, xs:integer, IO effective duration, unit: microsecond-->
</timeDelay>
<freqMultiplyulti>
<!--req, xs:integer, frequency multiplication, which is between 1 and 15-->
</freqMultiplyulti>
<dutyRate>
<!--req, xs:integer, duty ratio, which is between 0 and 40, unit: %-->
</dutyRate>
<postFlashEnable>
<!--req, xs:boolean, checkpoint output: 0-enable, 1-disable-->
</postFlashEnable>
<illegalFlashEnable>
<!--req, xs:boolean, violation output: 0/"true"-enable, 1/"false"-disable-->
</illegalFlashEnable>
<videoFlashEnable>
<!--req, xs:boolean, video output: 0/"true"-enable, 1/"false"-disable-->
</videoFlashEnable>
<detectBrightnessEnable>
<!--req, xs:boolean, whether to enable flash light for automatic brightness detection-->
</detectBrightnessEnable>
<brightnessThreshold>
<!--dep, xs:integer, brightness threshold of the enabled flash light, which is between 0 and 100-->
</brightnessThreshold>
<flashEnabled>
<!--req, xs:boolean, whether to enable flash light-->
</flashEnabled>
<startHour>
<!--dep, xs:integer, start time in hour-->
</startHour>
<startMinute>
<!--dep, xs:integer, start time in minute-->
</startMinute>
<endHour>
<!--dep, xs:integer, end time in hour-->
</endHour>
<endMinute>
<!--dep, xs:integer, end time in minute-->
</endMinute>
<plateBrightness>
<!--req, xs:boolean, whether to enable flash light by license plate brightness: 0-disable, 1-enable. Only one node
among <detectBrightness>, <flashEnabled>, <manualBrightnessEnable> and <plateBrightness> can be enabled-->
</plateBrightness>
<incrBrightEnable>
<!--opt, xs:boolean, whether to enable brightness enhancement mode (for solid light mode)-->
</incrBrightEnable>
<incrBrightTime>

680

Intelligent Security API (General Application) Developer Guide
<!--req, xs:integer, brightness enhancement duration. This node is valid only when <incrBrightEnable> is "true"-->
</incrBrightTime>
<incrBrightPercent>
<!--req, xs:integer, percentage of brightness enhancement, which is between 0 and 100. This node is valid only
when <incrBrightEnable> is "true"-->
</incrBrightPercent>
<brightness>
<!--dep, xs:integer, solid light brightness (for solid light mode), which is between 0 and 100-->
</brightness>
<delayCaptureTime>
<!--dep, xs:integer, delayed capture time, which is between 1 and 1000, unit: millisecond. This node is valid only
when <incrBrightEnable> is "true"-->
</delayCaptureTime>
<manualBrightnessEnable>
<!--req, xs:boolean, whether to enable adjusting brightness manually-->
</manualBrightnessEnable>
<manualBrightness>
<!--dep, xs:integer, brightness adjusted manually, which is between 0 and 100-->
</manualBrightness>
</SyncSignalOutput>
</SyncSignalOutputList>

16.2.288 XML_TargetEnhancement
TargetEnhancement message in XML format
<TargetEnhancement version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled><!--req,xs:boolean--></enabled>
</TargetEnhancement>

16.2.289 XML_TargetEnhancementCap
TargetEnhancementCap message in XML format
<TargetEnhancementCap version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled opt="true,false"><!--req, xs:boolean--></enabled>
</TargetEnhancementCap>

16.2.290 XML_Telnetd
Telnetd message in XML format
<Telnetd version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled>
<!--req, xs:boolean, whether to enable telnet: "true, false"-->
</enabled>
<radarMsgEnabled>

681

Intelligent Security API (General Application) Developer Guide
<!--req, xs:boolean, whether to enable uploading radar debugging information: "true, false"-->
</radarMsgEnabled>
<illeagalLoginLock>
<!--req, xs:boolean, "true, false"-->
</illeagalLoginLock>
</Telnetd>

16.2.291 XML_tempRange
tempRange message in XML format
<?xml version="1.0" encoding="utf-8"?>
<TempRange version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<mode>
<!--req, xs:string, temperature range mode: "automatic"-automatic mode, "manual"-manual mode-->
</mode>
<temperatureUpperLimit>
<!--dep, xs:float, maximum temperature, corrects to one decimal, the minimum value is "-20", the maximum value
is "550", unit: Celsius degree; its value should be larger than temperatureLowerLimit; it is valid when the value of
mode is "manual"-->
</temperatureUpperLimit>
<temperatureLowerLimit>
<!--dep, xs:float, minimum temperature, corrects to one decimal, the minimum value is "-20", the maximum value is
"550", unit: Celsius degree; its value should be smaller than temperatureUpperLimit; it is valid when the value of
mode is "manual"-->
</temperatureLowerLimit>
</TempRange>

16.2.292 XML_TextOverlay
TextOverlay message in XML format
<TextOverlay version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs:string, ID--></id>
<enabled><!--req, xs:boolean--></enabled>
<positionX><!--req, xs:float--></positionX>
<positionY><!--req, xs:float--></positionY>
<displayText><!--req, xs:string--></displayText>
</TextOverlay>

16.2.293 XML_TextOverlayList
TextOverlayList message in XML format
<TextOverlayList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<TextOverlay/><!--opt, see details in the message of XML_TextOverlay-->
</TextOverlayList>

682

Intelligent Security API (General Application) Developer Guide
See Also
XML_TextOverlay

16.2.294 XML_ThermalCap
ThermalCap message in XML format.
<ThermalCap version="2.0" xmlns="http://www.std-cgi.org/ver20/XMLSchema">
<isSupportFireDetection><!--opt, xs:boolean, whether supports fire detection--></isSupportFireDetection>
<isSupportThermometry><!--opt, xs:boolean, whether supports thermometry--></isSupportThermometry>
<isSupportRealtimeThermometry><!--opt, xs:boolean, whether supports uploading real-time thermometry data--></
isSupportRealtimeThermometry>
<isFireFocusZoomSupport><!--opt, xs:boolean, whether supports visible light lens zooming--></
isFireFocusZoomSupport>
<isSupportManualRanging>
<!--opt, xs:boolean, this node will be returned if one or more channels of device supports this function, see detailed
channel capability in the response information"-->
</isSupportManualRanging>
<isSupportPower><!--opt, xs:boolean, whether supports power on/off capability--></isSupportPower>
<isSupportRealtimeTempHumi><!--opt, xs:boolean, whether supports real-time detection of temperature and
humidity--></isSupportRealtimeTempHumi>
<ManualThermCap>
<manualThermRuleNum>
<!--opt, xs:integer, the max. number of supported rules for manual thermometry. If this node is not returned, it
indicates manual thermometry is not supported-->
</manualThermRuleNum>
</ManualThermCap>
<isSupportManualThermBasic>
<!--opt, xs:boolean, whether supports basic configuration of manual thermometry-->
</isSupportManualThermBasic>
<isSupportFireShieldMask><!--opt, xs:boolean--></isSupportFireShieldMask>
<isSupportsmokeShieldMask><!--opt, xs:boolean--></isSupportsmokeShieldMask>
<isSupportThermometryMode>
<!--opt, xs:boolean, whether supports the configuration of temperature measurement mode-->
</isSupportThermometryMode>
<isSupportThermalPip>
<!--opt, xs:boolean, whether supports the PIP configuration-->
</isSupportThermalPip>
<isSupportThermalIntelRuleDisplay><!--opt, xs:boolean, whether supports VCA rule configuration--></
isSupportThermaIntelRuleDisplay>
<AlgVersionInfo><!-opt, whether supports getting the version information of thermal algorithms library-->
<thermometryAlgName min = "1" max = "128">
<!--ro, xs:string, version information of temperature measurement algorithms library-->
</thermometryAlgName>
<shipsAlgName min = "1" max = "128"><!--ro, xs:string, version name of ship detection algorithms library--></
shipsAlgName>
</AlgVersionInfo>
<isSupportFaceThermometry><!--opt, xs:boolean, whether supports body thermometry configuration--></
isSupportFaceThermometry>
<isSupportThermalBlackBody><!--opt, xs:boolean, whether supports black body configuration--></

683

Intelligent Security API (General Application) Developer Guide
isSupportThermalBlackBody>
<isSupportThermalStreamParam><!--opt, xs:boolean, whether supports stream configuration--></
isSupportThermalStreamParam>
<isSupportBodyTemperatureCompensation>
<!--opt, xs:boolean, whether supports temperature compensation configuration-->
</isSupportBodyTemperatureCompensation>
<isSupportTemperatureCorrection><!--opt, xs:boolean, whether device supports thermometry correction--></
isSupportTemperatureCorrection>
<isSupportClickToThermometry><!--opt, xs:boolean, whether device supports clicking for thermometry--></
isSupportClickToThermometry>
<isSupportThermometryHistorySearch><!--opt, xs:boolean--></isSupportThermometryHistorySearch>
<isSupportBurningPrevention><!--opt, xs:boolean, whether device supports burning prevention--></
isSupportBurningPrevention>
<isSupportTemperatureCollection><!--opt, xs:boolean, whether device supports temperature ANR--></
isSupportTemperatureCollection>
<isSupportJpegPicWithAppendData>
<!--opt, xs:boolean, whether device supports getting JPEG picture with pixel-to-pixel thermometry data. If supports,
it is returned and values true, if not support, it is not returned-->
</isSupportJpegPicWithAppendData>
<isSupportRealTimethermometryForHTTP>
<!--opt, xs:boolean, whether device supports real-time thermometry. If supports, it is returned and its value is true,
if not support, it is not returned-->
</isSupportRealTimethermometryForHTTP>
<isSupportShipsDetectionWithScene>
<!--opt, xs:boolean, whether device supports ship detection by scene, this node and isSupportShipsDetection in
XML_SmartCap are mutually exclusive-->
</isSupportShipsDetectionWithScene>
<isSupportthermometryOffLineCapture>
<!--opt, xs:boolean, whether device supports offline capture. If supports, this node returned and its value is true; if
not, it is not returned-->
</isSupportthermometryOffLineCapture>
</ThermalCap>

Remarks
When getting thermal product capabilities, isSupportShipsDetectionWithScene has a higher
priority than isSupportShipsDetection. That is, firstly check if the node
isSupportShipsDetectionWithScene exists and its value is "true", that indicates ship detection
according to scene is supported, otherwise, check the if the node isSupportShipsDetection exists.

16.2.295 XML_Time
Time message in XML format
<Time version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<timeMode><!--req, xs:string, "manual, NTP, local, satellite, timecorrect"--></timeMode>
<localTime>
<!--req, xs:datetime, ISO 8601 time format, device time set manually, e.g.: 2018-02-01T19:54:04. This node is
required when <timemode> is "manual" or "local"-->
</localTime>
<timeZone>

684

Intelligent Security API (General Application) Developer Guide
<!-- req, xs:string, POSIX time zone string, device time synchronized with NTP, this node is required when
<timemode> is "manual", "local" or "NTP"-->
</timeZone>
<satelliteInterval><!--dep, xs:integer, unit: minute--></satelliteInterval>
</Time>

16.2.296 XML_TimeTaskList
TimeTaskList message in XML format
<TimeTaskList size="">
<enabled><!--req, xs: boolean--></enabled>
<Parktime min="" max=""><!--req, xs:integer, seconds--></Parktime>
<TimeTaskBlock>
<dayOfWeek><!--req, xs: integer, day of the week based on ISO8601, "1"-Monday, ...--></dayOfWeek>
<TimeTaskRange>
<TaskID min="" max=""><!--req, xs: string; ID--></TaskID>
<beginTime><!--req, xs: time, ISO8601 time--></beginTime>
<endTime> <!--req, xs: time, ISO8601 time--></endTime>
<Task>
<TaskType
opt="disable,autoscan,framescan,randomscan,panoramascan,patrol,pattern,preset,tiltscan,periodreboot,periodadjust,
auxoutput">
<!--req, xs: strings-->
</TaskType>
<patrolTaskNum min="" max=""><!--dep, xs: integer, from 0 to 8--></patrolTaskNum>
<patternTaskNum min="" max=""><!--dep, xs: integer, from 0 to 8--></patternTaskNum>
<presetTaskNum min="" max=""><!--dep, xs: integer, from 0 to 8--></presetTaskNum>
<auxoutputTaskNum min="" max=""><!--dep, xs: integer, from 0 to 8--></
auxoutputTaskNum>
</Task>
</TimeTaskRange>
</TimeTaskBlock>
<isSupportTimeTaskCopy><!--req, xs: boolean--></isSupportTimeTaskCopy>
</TimeTaskList>

16.2.297 XML_trackDailyParam
trackDailyParam message in XML format
<trackDailyParam version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<year><!--req, xs: integer, year--></year>
<monthOfYear><!--req, xs: integer, month of the year--></monthOfYear>
</trackDailyParam>

685

Intelligent Security API (General Application) Developer Guide
16.2.298 XML_trackDailyDistribution
trackDailyDistribution message in XML format
<trackDailyDistribution version="1.0" xmlns="http://www.isapi.com/ver20/XMLSchema">
<dayList>
<day>
<id><!--req, xs: integer, ID--></id>
<dayOfMonth><!--req, xs: integer, day of the month, starts from 1st--></dayOfMonth>
<record><!--req, xs: boolean, true-with video, false-no video--></record>
<recordType>
<!--req, xs: string, record type: time-continuous recording; event-record based on event-->
</recordType>
</day>
</dayList>
</trackDailyDistribution>

16.2.299 XML_TrackList
TrackList message in XML format
<TrackList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<Track/><!--opt, recording schedule list, refer to the message XML_Track for details-->
</TrackList>

See Also
XML_Track

16.2.300 XML_Track
Track message in XML format
<Track version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs: integer--></id>
<Channel><!--req, xs: integer--></Channel>
<Enable><!--req, xs: boolean--></Enable>
<Description><!--req, xs: string--></Description>
<TrackGUID><!--req, xs: string--></TrackGUID>
<Size><!--opt, xs: integer--></Size>
<Duration min="" max=""><!--opt, xs: string--></Duration>
<DefaultRecordingMode><!--req, xs: string--></DefaultRecordingMode>
<LoopEnable><!--opt, xs: string--></LoopEnable>
<SrcDescriptor>
<SrcGUID><!--req, xs: string--></SrcGUID>
<SrcChannel><!--req, xs: integer--></SrcChannel>
<StreamHint><!--req, xs: string--></StreamHint>
<SrcDriver><!--req, xs: string--></SrcDriver>

686

Intelligent Security API (General Application) Developer Guide
<SrcType><!--req, xs: string--></SrcType>
<SrcUrl><!--req, xs: string--></SrcUrl>
<SrcUrlMethods><!--req, xs: string--></SrcUrlMethods>
<SrcLogin><!--req, xs: string--></SrcLogin>
</SrcDescriptor>
<TrackSchedule>
<ScheduleBlockList>
<ScheduleBlock>
<ScheduleBlockGUID><!--req, xs: string--></ScheduleBlockGUID>
<ScheduleBlockType><!--req, xs: string--></ScheduleBlockType>
<ScheduleAction>
<id><!--req, xs: integer--></id>
<ScheduleActionStartTime>
<DayOfWeek><!--req, xs: string--></DayOfWeek>
<TimeOfDay><!--req, xs: string--></TimeOfDay>
</ScheduleActionStartTime>
<ScheduleActionEndTime>
<DayOfWeek><!--req, xs: string--></DayOfWeek>
<TimeOfDay><!--req, xs: string--></TimeOfDay>
</ScheduleActionEndTime>
<ScheduleDSTEnable><!--req, xs: boolean--></ScheduleDSTEnable>
<Description><!--req, xs: string--></Description>
<Actions>
<Record><!--req, xs: boolean--></Record>
<Log><!--req, xs: boolean--></Log>
<SaveImg><!--req, xs: boolean--></SaveImg>
<ActionRecordingMode><!--req, xs: string--></ActionRecordingMode>
</Actions>
</ScheduleAction>
</ScheduleBlock>
</ScheduleBlockList>
</TrackSchedule>
<CustomExtensionList>
<CustomExtension>
<CustomExtensionName><!--req, xs: string--></CustomExtensionName>
<enableSchedule><!--req, xs: boolean--></enableSchedule>
<SaveAudio><!--req, xs: boolean--></SaveAudio>
<PreRecordTimeSeconds><!--req, xs: integer--></PreRecordTimeSeconds>
<PostRecordTimeSeconds><!--req, xs: integer--></PostRecordTimeSeconds>
<HolidaySchedule>
<ScheduleBlock>
<ScheduleBlockGUID><!--req, xs: string--></ScheduleBlockGUID>
<ScheduleBlockType><!--req, xs: string--></ScheduleBlockType>
</ScheduleBlock>
</HolidaySchedule>
</CustomExtension>
</CustomExtensionList>
<IntelligentRecord><!--opt, xs:boolean, whether to enable VCA recording function: 0-no, 1-yes--></IntelligentRecord>
<delayTime><!--opt, xs:integer, capture delay time, unit: second--></delayTime>
<durationEnabled><!--opt, xs:boolean, whether to enable video expiry time. If this function is not supported, this
node will not be returned. If this function is supported, the video expiry date will be set by the node <Duration>--></

687

Intelligent Security API (General Application) Developer Guide
durationEnabled>
</Track>

16.2.301 XML_TwoWayAudioChannel
TwoWayAudioChannel message in XML format
<TwoWayAudioChannel version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id>
<!--req, xs:string, two-way audio channel ID-->
</id>
<enabled>
<!--req, xs:boolean, whether to enable two-way audio: "true"-yes, "false"-no-->
</enabled>
<audioCompressionType>
<!--req, xs:string, audio output encoding type: "G.711alaw,G.711ulaw,G.726,G.729,G.729a,G.
729b,PCM,MP3,AC3,AAC,ADPCM,MP2L2"-->
</audioCompressionType>
<audioInboundCompressionType>
<!--opt, xs:string, audio input encoding type: "G.711alaw,G.711ulaw,G.726,G.729,G.729a,G.
729b,PCM,MP3,AC3,AAC,ADPCM"-->
</audioInboundCompressionType>
<speakerVolume>
<!--opt, xs:integer, input volume-->
</speakerVolume>
<microphoneVolume>
<!--opt, xs:integer, output volume-->
</microphoneVolume>
<noisereduce>
<!--opt, xs:boolean, whether to enable noise reduction: "true, false"-->
</noisereduce>
<audioBitRate>
<!--opt, xs:integer, audio frame rate, unit: kbs-->
</audioBitRate>
<audioInputType>
<!--opt, xs:string, audio input type: "MicIn, LineIn"-->
</audioInputType>
<associateVideoInputs><!--opt-->
<enabled>
<!--req, xs:boolean-->
</enabled>
<videoInputChannelList>
<!--req-->
<videoInputChannelID>
<!--opt, xs:string, ID-->
</videoInputChannelID>
</videoInputChannelList>
</associateVideoInputs>
<lineOutForbidden>
<!--read-only, xs:boolean, whether the audio output is not supported, if this node is not returned or the value is
"false", it represents that audio output is supported; if the value is "true", it represents that audio output is not

688

Intelligent Security API (General Application) Developer Guide
supported-->
</lineOutForbidden>
<micInForbidden>
<!--read-only, xs: boolean, whether the audio input is not supported, if this node is not returned or the value is
"false", it represents that audio input is supported; if the value is "true", it represents that audio input is not
supported-->
</micInForbidden>
</TwoWayAudioChannel>

16.2.302 XML_TwoWayAudioChannelCap
TwoWayAudioChannelCap capability message in XML format
<TwoWayAudioChannelCap version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id opt="1">
<!--req, xs:string, two-way audio channel ID-->
</id>
<enabled opt="true,false">
<!--req, xs:boolean, whether to enable two-way audio: "true"-yes, "false"-no-->
</enabled>
<audioCompressionType opt="G.711alaw,G.711ulaw,G.726,G.729,G.729a,G.
729b,PCM,MP3,AC3,AAC,ADPCM,MP2L2">
<!--req, xs:string, audio output encoding type-->
</audioCompressionType>
<audioInboundCompressionType opt=" G.711alaw,G.711ulaw,G.726,G.729,G.729a,G.
729b,PCM,MP3,AC3,AAC,ADPCM">
<!--opt, xs:string, audio input encoding type-->
</audioInboundCompressionType>
<speakerVolume opt="0-100">
<!--opt, xs:integer, input volume, which is between 0 and 100-->
</speakerVolume>
<microphoneVolume opt="0-100">
<!--opt, xs:integer, output volume, which is between 0 and 100-->
</microphoneVolume>
<noisereduce opt="true,false">
<!--opt, xs:boolean, whether to enable noise reduction: "true, false"-->
</noisereduce>
<audioBitRate opt="32,64,128">
<!--opt, xs:integer, audio frame rate, unit: kbs-->
</audioBitRate>
<audioInputType opt="Micln,LineIn">
<!--opt, xs:string, audio input type-->
</audioInputType>
<associateVideoInputs>
<!--opt-->
<enabled opt="true,false">
<!--req, xs:boolean-->
</enabled>
<videoInputChannelList>
<!--req-->
<videoInputChannelID opt="1">

689

Intelligent Security API (General Application) Developer Guide
<!--opt, xs:string, ID-->
</videoInputChannelID>
</videoInputChannelList>
</associateVideoInputs>
</TwoWayAudioChannelCap>

16.2.303 XML_TwoWayAudioChannelList
TwoWayAudioChannelList message in XML format
<TwoWayAudioChannelList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<TwoWayAudioChannel/><!--opt, see details in the message of XML_TwoWayAudioChannel-->
</TwoWayAudioChannelList>

See Also
XML_TwoWayAudioChannel

16.2.304 XML_TwoWayAudioSession
TwoWayAudioSession message in XML format
<TwoWayAudioSession version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<sessionId><!--req, xs: string, communication session ID--></sessionId>
</TwoWayAudioSession>

16.2.305 XML_upgradeStatus
upgradeStatus message in XML format
<upgradeStatus version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<upgrading><!--ro, req, xs:boolean--></upgrading>
<percent><!--ro, req, xs:integer, upgrading progress, the value is between 0 and 100--></percent>
</upgradeStatus>

16.2.306 XML_UPnP
UPnP message in XML format
<UPnP version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled/><!--req-->
<ports/><!--opt-->
</UPnP>

690

Intelligent Security API (General Application) Developer Guide
16.2.307 XML_User
User message in XML format
<User version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs:integer, the value is between 1 and 16, the ID of the administrator account is 1 and the administrator
account cannot be deleted--></id>
<enabled><!--opt, xs:boolean, whether to enable the user: "true"-yes, "false"-no--></enabled>
<userName><!--req, xs:string, the sensitive information should be encrypted--></userName>
<password><!--wo, opt, xs:string, the sensitive information should be encrypted--></password>
<keypadPassword><!--wo, opt, xs:string, keypad password, the sensitive information should be encrypted--></
keypadPassword>
<loginPassword><!--wo, dep, xs:string, this node depends on security in the URL and it is required when security
exists. The sensitive information should be encrypted, and the password is the administrator password--></
loginPassword>
<userOperateType><!--opt, xs:integer, user operation type: "1"-network user, "2"-keypad user, "3"-network user and
keypad user. When this node is set to 1 or NULL, password is valid, and password is required when the method is
POST, otherwise it is optional. When this node is set to 2, keypadPassword is valid, and keypadPassword is required
when the method is POST, otherwise it is optional. When this node is set to 3, both password and keypadPassword
are valid, and they are required when the method is POST, otherwise they are optional--></userOperateType>
<bondIpAddressList><!--opt-->
<bondIpAddress><!--opt-->
<id><!--req, xs:integer--></id>
<ipAddress><!--dep, xs:string--></ipAddress>
<ipv6Address><!--dep, xs:string--></ipv6Address>
</bondIpAddress>
</bondIpAddressList>
<bondMacAddressList><!--opt-->
<bondMacAddress><!--opt-->
<id><!--req, xs:integer--></id>
<macAddress><!--opt, xs:string--></macAddress>
</bondMacAddress>
</bondMacAddressList>
<userLevel><!--opt, xs:string, "Administrator,Operator,Viewer,installer,manufacturer"--></userLevel>
<attribute><!--opt-->
<inherent><!--xs:boolean--></inherent>
</attribute>
</User>

16.2.308 XML_userCheck
userCheck message in XML format
<userCheck version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<statusValue><!--req, xs:integer, status code: "200"-succeeded, "401"-failed--></statusValue>
<statusString><!--opt, xs:string, status: "OK", "Unauthorized"--></statusString>
<isDefaultPassword><!--opt, xs:boolean--></isDefaultPassword>
<isRiskPassword><!--opt, xs:boolean></isRiskPassword>
<isActivated><!--opt, xs:boolean></isActivated>

691

Intelligent Security API (General Application) Developer Guide
<lockStatus><!--opt, xs:string, locking status: "unlock","locked"--></lockStatus>
<unlockTime><!--opt, xs:integer, unlocking remaining time, unit: second--></ unlockTime>
<retryLoginTime><!--opt, xs:integer, remaining login attempts--></retryLoginTime>
</userCheck>

16.2.309 XML_UserList
UserList message in XML format
<UserList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<User/><!--opt, see details in the message of XML_User-->
</UserList>

See Also
XML_User

16.2.310 XML_UserPermission
UserPermission message in XML format
<UserPermission version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs:string--></id>
<userID><!--req, xs:string, user ID--></userID>
<userType>
<!--req, xs:string, user type: "admin"-administrator, which has all permissions and can review and edit user's
permission, "operator"-operator, which has default permissions, "viewer"-viewer, which has default permissions,
"installer", "manufacturer"-->
</userType>
<localPermission/>
<!--opt, local permission, see details in the message of XML_localPermission -->
<remotePermission/>
<!--opt, remote permission, see details in the message of XML_remotePermission -->
</UserPermission>

See Also
XML_localPermission
XML_remotePermission

16.2.311 XML_UserPermissionCap
UserPermissionCap capability message in XML format
<UserPermissionCap version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<userType><!--req, xs:string, "admin"-administrator, "operator", "viewer", "installer", "manufacturer"--></userType>
<localPermissionCap><!--opt, see details in the message of
XML_localPermission

692

Intelligent Security API (General Application) Developer Guide
--></localPermissionCap>
<remotePermissionCap><!--opt, see details in the message of
XML_remotePermission
--></remotePermissionCap>
</UserPermissionCap>

16.2.312 XML_UserPermissionList
UserPermissionList message in XML format
<UserPermissionList version="2.0" xmlns=" http://www.isapi.org/ver20/XMLSchema">
<UserPermission/>
<!--opt, user permission, see details in the message of XML_UserPermission-->
</UserPermissionList>

See Also
XML_UserPermission

16.2.313 XML_WDR
WDR message in XML format
<WDR version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<mode><!--req, xs: string, WDR mode: "open,close,auto"--></mode>
<WDRLevel><!--opt, xs: integer--></WDRLevel>
<WDRContrastLevel><!--opt, xs: integer--></WDRContrastLevel>
<WDRLevel1><!--opt, xs: integer--></WDRLevel1>
</WDR>

16.2.314 XML_WhiteBalance
WhiteBalance message in XML format
<WhiteBalance version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<WhiteBalanceStyle/><!--req, xs:string, "auto, manual, indoor, outdoor, autotrace, onece, sodiumlight,
mercurylight,auto0, atuo1, fluorescent, natural, warm, incandescent"-->
<WhiteBalanceRed/><!--dep,xs:integer, this node depends on <WhiteBalanceStyle>-->
<WhiteBalanceBlue/><!--dep,xs:integer, this node depends on <WhiteBalanceStyle>-->
</WhiteBalance>

Remarks
Setting WhiteBalanceRed and WhiteBalanceBlue is available only when WhiteBalanceStyle is set
to "manual".

693

Intelligent Security API (General Application) Developer Guide
16.2.315 XML_WirelessServer
WirelessServer message in XML format
<WirelessServer version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<wifiApEnabled><!--opt,xs:boolean,"true,false"--></wifiApEnabled>
<broadcastEnabled><!--opt,xs:boolean,"true,false"--></broadcastEnabled>
<wlanShareEnabled><!--opt,xs:boolean,"true,false"--></wlanShareEnabled>
<ssid><!--opt, xs:string--></ssid>
<WirelessSecurity><!--req-->
<securityMode>
<!--opt, xs: string, security mode: "disable,WEP,WPA-personal,WPA2-personal,WPA-RADIUS,WPA-enterprise,WPA2enterprise"-->
</securityMode>
<WEP><!--dep, depends on <securityMode>-->
<authenticationType>
<!--req, xs: string, authentication type: "open,sharedkey,auto"-->
</authenticationType>
<defaultTransmitKeyIndex>
<!--req, xs: integer-->
</defaultTransmitKeyIndex>
<wepKeyLength><!--opt, xs: integer, the key length should be 64 and 128--></wepKeyLength>
<EncryptionKeyList>
<encryptionKey>
<!--req, xs: hexBinary, WEP encryption key in hexadecimal format-->
</encryptionKey>
</EncryptionKeyList>
</WEP>
<WPA><!--dep, depends on <securityMode>-->
<algorithmType>
<!--req, xs: string, algorithm type: "TKIP,AES,TKIP/AES"-->
</algorithmType>
<sharedKey><!--opt, xs: string, shared key used in WPA--></sharedKey>
<wpaKeyLength><!-- opt, xs: integer, the key length is between 8 and 63--></wpaKeyLength>
<defaultPassword><!--opt, xs: boolean--></defaultPassword>
</WPA>
</WirelessSecurity>
<DHCPEnabled><!--opt,xs:boolean,"true,false"--></DHCPEnabled>
<ipVersion><!--opt, xs:string, opt="v4,v6"--></ipVersion>
<HostIpAddress><!--opt-->
<ipAddress><!--dep, xs:string--></ipAddress>
<ipv6Address><!--dep, xs:string--></ipv6Address>
</HostIpAddress>
<IPMask><!--opt-->
<subnetMask><!--dep, xs:string, subnet mask for IPv4 address--></subnetMask>
<bitMask><!--dep, xs:integer, bitmask IPv6 address--></bitMask>
</IPMask>
<AddressPool><!--opt-->
<startIPV4Address><!--dep, xs:string--></startIPV4Address>
<endIPV4Address><!--dep, xs:string--></endIPV4Address>
<startIPV6Address><!-- dep, xs:string--></startIPV6Address>

694

Intelligent Security API (General Application) Developer Guide
<endIPV6Address><!--dep, xs:string--></endIPV6Address>
<AddressPool>
<DNSAddressList><!--opt-->
<DNSAddress><!--opt>
<id><!--opt,xs:string,start from 1--></id>
<ipAddress><!--dep, xs:string--></ipAddress>
<ipv6Address><!--dep, xs:string--></ipv6Address>
</DNSAddress>
</DNSAddressList>
<GatewayAddress>
<ipAddress><!--dep, xs:string--></ipAddress>
<ipv6Address><!--dep, xs:string--></ipv6Address>
<GatewayAddress>
<wifiApModeType>
<!--opt, xs: string, current wireless Access Point (AP) mode: "true,false,auto", if this node is returned, it indicates
that the device supports auto mode-->
</wifiApModeType>
</WirelessServer>

Remarks
For Client supports auto AP, the node <<wifiApModeType> is valid; for Client does not supports
auto AP, the node <wifiApEnabled> is valid; the values of these two nodes will effect each other,
and when <wifiApModeType> equals to "auto", the value of <wifiApEnabled> is "true".

16.2.316 XML_WirelessServerStatus
WirelessServerStatus message in XML format
<WirelessServerStatus version="1.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<wifiApEnabled>
<!--dep, xs:boolean-->
</wifiApEnabled>
<linkDevices>
<!--dep, xs:integer, maximum number of linked devices-->
</linkDevices>
<DeviceInfoList>
<!--opt-->
<DeviceInfo>
<!--opt-->
<IpAddress>
<!--req-->
<ipAddress>
<!--dep, xs:string-->
</ipAddress>
<ipv6Address>
<!--dep, xs:string-->
</ipv6Address>
</IpAddress>
<hostName>
<!--opt, xs:string-->

695

Intelligent Security API (General Application) Developer Guide
</hostName>
<macAddress>
<!--opt, xs:string-->
</macAddress>
</DeviceInfo>
</DeviceInfoList>
</WirelessServerStatus>

16.2.317 XML_WirelessStatus
WirelessStatus message in XML format
<WirelessStatus version="1.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled>
<!--dep, xs:boolean-->
</enabled>
<connectionEnabled>
<!--dep, xs:boolean-->
</connectionEnabled>
<IpAddress>
<!--req-->
<ipAddress>
<!--dep, xs:string-->
</ipAddress>
<ipv6Address>
<!--dep, xs:string-->
</ipv6Address>
</IpAddress>
<SubnetMask>
<!--req-->
<ipAddress>
<!--dep, xs:string-->
</ipAddress>
<ipv6Address>
<!--dep, xs:string-->
</ipv6Address>
</SubnetMask>
<RouterAddress>
<!--req-->
<ipAddress>
<!--dep, xs:string-->
</ipAddress>
<ipv6Address>
<!--dep, xs:string-->
</ipv6Address>
</RouterAddress>
<DNSAddressList>
<!--opt-->
<DNSAddress>
<!--opt-->
<id>

696

Intelligent Security API (General Application) Developer Guide
<!--opt, xs:string, DNS address ID, which starts from 1-->
</id>
<ipAddress>
<!--dep, xs:string-->
</ipAddress>
<ipv6Address>
<!--dep, xs:string-->
</ipv6Address>
</DNSAddress>
</DNSAddressList>
</WirelessStatus>

16.2.318 XML_Wireless
Wireless message in XML format
<Wireless version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<enabled><!--req, xs:boolean--></enabled>
<wirelessNetworkMode>
<!--opt, xs:string, "infrastructure,adhoc"-->
</wirelessNetworkMode>
<channel><!--opt, xs:string, "1 to 14,auto"--></channel>
<ssid><!--opt, xs:string--></ssid>
<wmmEnabled><!--opt, xs:boolean--></wmmEnabled>
<WirelessSecurity><!--opt-->
<securityMode>
<!--opt, xs:string, "disable,WEP,WPA-personal,WPA2-personal,WPA-RADIUS, WPA-enterprise,WPA2-enterprise"-->
</securityMode>
<WEP><!--dep, depends on <securityMode>-->
<authenticationType>
<!--req, xs:string, "open,sharedkey,auto"-->
</authenticationType>
<defaultTransmitKeyIndex><!--req, xs:integer--></defaultTransmitKeyIndex>
<wepKeyLength><!--opt, xs:integer "64,128"--></wepKeyLength>
<EncryptionKeyList>
<encryptionKey>
<!--req, xs:hexBinary, WEP encryption key in hexadecimal format-->
</encryptionKey>
</EncryptionKeyList>
</WEP>
<WPA><!--dep, depends on <securityMode>-->
<algorithmType><!--req, xs:string, "TKIP,AES,TKIP/AES"--></algorithmType>
<sharedKey><!--req, xs:string, pre-shared key used in WPA--></sharedKey>
<wpaKeyLength><!--req, xs: integer, "8-63"--></wpaKeyLength>
</WPA>
</WirelessSecurity>
<workScene><!--opt, xs:string, "computerRoom,monitorTerminal"--></workScene>
<protocol><!--req,xs:string, "802.11ac"--></protocol>
<protocolRealTime><!--req,xs:string, real-time mode--></protocolRealTime>
<hideSsid><!--opt, xs:boolean--></hideSsid>
<ChannelConfig><!--opt-->

697

Intelligent Security API (General Application) Developer Guide
<width><!--opt, xs:string, "auto,20,40,80", bandwidth, unit: MHz--></width>
<autoWidth>
<!--dep,ro, xs:string, it is valid only when width is "auto"-->
</autoWidth>
<channel><!--opt, dep, xs:string, channel frequency, unit: MHz--></channel>
<autoChannel><!--dep,ro,xs:string, it is valid only when channel is "auto"--></autoChannel>
<transmitPower> <!--opt, xs:integer, "9,12,15,18,21,24,27", power, unit: dBm--><transmitPower>
<transmitPowerRealTime> <!--opt, xs:integer, real-time power, unit: dBm--><transmitPowerRealTime>
<countryID><!--opt,xs:integer，country code--></countryID>
</ChannelConfig>
</Wireless>

16.2.319 XML_VCAResource
VCAResource message in XML format
<VCAResource version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<type>
<!--req, xs:string,
"basicBehavior,fullBehavior,facesnapBehavior,facesnap,TFS,smartVehicleDetection,smartHVTDetection,smart,judicial,s
mart264AndRoadDetection,smart264AndFaceDetection,smart264AndHeatMap,smartIntelligentMonitor,smartTrafficD
ataCollection,roadDetection,humanRecognition,perimeterCapture,vehicleDetection,HVTDetection,mixedTargetDetecti
on,trackingCaptureMode,nonTrackingCaptureMode,close,faceHumanModelingContrast,cityManagement,teacherBeha
vior,12MPLiveView,personQueueDetection,verticalPeopleCounting,safetyHelmet"-->
</type>
</VCAResource>

16.2.320 XML_VideoCap
VideoCap message in XML format
<VideoCap version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<videoInputPortNums><!--opt, xs: integer--><videoInputPortNums>
<videoOutputPortNums><!--opt, xs: integer--><videoOutputPortNums>
<isSupportHeatmap><!--opt, xs: boolean, whether to support heat map function--></isSupportHeatmap>
<isSupportCounting><!--opt, xs: boolean--></isSupportCounting>
<countingType><!--dep, xs: string, "human,object"--></countingType>
<isSupportPreviewSwitch><!--opt, xs: boolean, whether to support live view switch--></isSupportPreviewSwitch>
<isSupportRecodStatus>
<!--opt, xs: boolean, whether supports getting recording status-->
</isSupportRecodStatus>
<isSupportPrivacyMask>
<!--opt, xs: boolean, whether supports priavte mask function-->
</isSupportPrivacyMask>
<isSupportBinocularPreviewSwitch>
<!--opt, xs: boolean, whether supports auto-switch during the live view of dual lens camera-->
</isSupportBinocularPreviewSwitch>
<isSupportCalibCheck>
<!--opt, xs: boolean, whether supports calibration verification-->

698

Intelligent Security API (General Application) Developer Guide
</isSupportCalibCheck>
<isSupportPIP><!--opt, xs: boolean, "true, false"--></isSupportPIP>
<channelFlexible opt ="name,enable,online,linknum">
<!--capability of getting channel status by condition-->
</channelFlexible >
<isSupportFocusVideoMode>
<!--opt, xs: boolean, video focus mode for installation and debug-->
</isSupportFocusVideoMode>
<isSupportExternalChannel>
<!--opt, xs: boolean, whether supports extending analog channel-->
</isSupportExternalChannel>
<isSupportMultiChannelCounting>
<!--opt, xs: boolean, whether supports people counting of multiple channels-->
</isSupportMultiChannelCounting>
<isSupportCountingCollection>
<!--opt, xs:boolean, whether supports people counting data replenishment-->
</isSupportCountingCollection>
<isSupportHeatmapCollection>
<!--opt, xs:boolean, whether supports heat map data replenishment-->
</isSupportHeatmapCollection>
<OSDLanguage opt="GBK,EUC-KR" def="GBK"/>
<isSupportInitLens><!--req, xs:boolean, whether to support initializing lens--><isSupportInitLens>
<isSupportOneFocus><!--req, xs:boolean, whether to support one-touch focusing--><isSupportOneFoucs>
<notSupportFocus><!--req, xs:boolean, the focus capability is not supported--><notSupportFoucs>
<notSupportIris><!--req, xs:boolean, the iris capability is not supported--><notSupportIris>
<isSupportCapturePicOverlays><!--opt, xs:boolean, whether to support text overlay on the captured picture--></
isSupportCapturePicOverlays>
<isSupportMergePicOverlays><!--opt, xs:boolean, whether to support text overlay on the composite picture--></
isSupportMergePicOverlays>
</VideoCap>

16.2.321 XML_VideoInput
VideoInput message in XML format
<VideoInput version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<VideoInputChannelList/><!--op, see details in the message of XML_VideoInputChannelList-->
</VideoInput>

See Also
XML_VideoInputChannelList

16.2.322 XML_VideoInputChannel
VideoInputChannel message in XML format
<VideoInputChannel version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id>
<!--req, xs:string-->

699

Intelligent Security API (General Application) Developer Guide
</id>
<inputPort>
<!--req, xs:string-->
</inputPort>
<videoInputEnabled>
<!--opt, xs:boolean-->
</videoInputEnabled>
<name>
<!--opt, xs:string-->
</name>
<videoFormat>
<!--opt, xs:string, "PAL, NTSC"-->
</videoFormat>
<portType>
<!--opt, xs:string, "SDI, OPT, VGA, HDMI, YPbPr"-->
</portType>
<resDesc>
<!--opt, xs:string-->
</resDesc>
</VideoInputChannel>

16.2.323 XML_VideoInputChannelList
VideoInputChannelList message in XML format
<VideoInputChannelList version="2.0"
xmlns="http://www.isapi.org/ver20/XMLSchema">
<VideoInputChannel/><!--opt, see details in the message of XML_VideoInputChannel-->
</VideoInputChannelList>

See Also
XML_VideoInputChannel

16.2.324 XML_VideoOutput
VideoOutput message in XML format
<VideoOutput version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<VideoOutputChannelList/><!--opt, refer to the message XML_VideoOutputChannelList for details-->
</VideoOutput>

See Also
XML_VideoOutputChannelList

700

Intelligent Security API (General Application) Developer Guide
16.2.325 XML_VideoOutputChannel
VideoOutputChannel message in XML format
<VideoOutputChannel version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<id><!--req, xs: string; ID--></id>
<type><!--req, xs: string, video output type: "VGA,CVBS,HDMI,Spot,SDI"--></type>
<menu><!--dep, read-only-->
<mirrorMenu><!--req, xs: boolean--></mirrorMenu>
</menu>
<mode><!--opt,xs:string, video output mode: "close,clip,scale,open,SDI_1080P25,
…,HDMI_1080P,HDMI_720P,HDMI_2160P"--></mode>
<resolution><!--opt, xs: string; video solution: "1920*1080/60HZ,1280*720/50HZ,…"--></resolution>
</VideoOutputChannel>

16.2.326 XML_VideoOutputChannelList
VideoOutputChannelList message in XML format
<VideoOutputChannelList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<VideoOutputChannel/><!--opt, refer to the message XML_VideoOutputChannel for details-->
</VideoOutputChannelList>

See Also
XML_VideoOutputChannel

16.2.327 XML_VideoOverlay
VideoOverlay message in XML format
<VideoOverlay version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<normalizedScreenSize><!--req, reference value of the region coordinates, which is 704*576 for PAL and 704*480 for
NTSC-->
<normalizedScreenWidth><!--ro, req, xs: integer--></normalizedScreenWidth>
<normalizedScreenHeight><!--ro, req, xs: integer--></normalizedScreenHeight>
</normalizedScreenSize>
<attribute><!--opt, OSD properties-->
<transparent><!--req, xs: boolean--></transparent>
<flashing><!--req, xs: boolean--><flashing>
</attribute>
<TextOverlayList>
<TextOverlay><!--text overlay parameter-->
<id><!-- req, xs: string; text ID--></id>
<enabled><!--req, xs: boolean, whether to enable text overlay--></enabled>
<positionX><!--req, xs: float, x-coordinate--></positionX>
<positionY><!-- req, xs: float, y-coordinate--></positionY>
<displayText><!-- req, xs: string, displayed text contents--></displayText>

701

Intelligent Security API (General Application) Developer Guide
</TextOverlay>
</TextOverlayList>
<DateTimeOverlay>
<enabled><!--req, xs: boolean, whether to enable date and time overlay--></enabled>
<positionX><!--req, xs: integer; x-coordinate--></positionX>
<positionY><!--req, xs: integer; y-coordinate--></positionY>
<dateStyle>
<!--opt, xs: string, date display format: YYYY-MM-DD, MM-DD-YYYY, DD-MM-YYYY, CHR-YYYY-MM-DD, CHR-MM-DDYYYY, CHR-DD-MM-YYYY, CHR-YYYY/MM/DD, CHR-MM/DD/YYYY, CHR-DD/MM/YYYY-->
</dateStyle>
<timeStyle><!--opt, xs: string, time format: 12hour, 24hour--></timeStyle>
<displayWeek><!--opt, xs: boolean, wehther to display day of the week--></displayWeek>
</DateTimeOverlay
<channelNameOverlay>
<enabled><!--req, xs: boolean, whether to enable channel name overlay--></enabled>
<positionX><!--req, xs: integer; x-coordinate--></positionX>
<positionY><!--req, xs: integer; y-coordinate--></positionY>
</channelNameOverlay>
<fontSize opt="adaptive,16*16,32*32,48*48,64*64,80*80,96*96,112*112,128*128"><!--opt, xs: string, font size of
video OSD: "adaptive,16*16,32*32,48*48,64*64,80*80,96*96,112*112,128*128", unit: pixel. Currently only 16*16
and 32*32 are supported--></fontSize>
<frontColorMode opt="auto,customize"><!--opt, string, front color mode: "auto,customize"--></frontColorMode>
<frontColor><!--dep, xs: hexBinary, front color--></frontColor>
<alignment><!--opt, xs:string, "customize,alignRight,alignLeft"--></alignment>
<BatteryPowerOverlay/><!--opt-->
<DeviceStatusDisplay>
<!--opt, display control of the device status on the video of portable speed dome-->
<batteryCapacityDisplay>
<!--opt, xs:boolean, whether to display battery capacity-->
</batteryCapacityDisplay>
<chargingStatusDisplay>
<!--opt, xs:boolean, whether to display charging status-->
</chargingStatusDisplay>
<bluetoothStatusDisplay>
<!--opt, xs:boolean, whether to display bluetooth status-->
</bluetoothStatusDisplay>
<dialStatusDisplay>
<!--opt, xs:boolean, whether to display dial-up status-->
</dialStatusDisplay>
</DeviceStatusDisplay>
<boundary><!--opt, xs:integer--></boundary>
<alignment><!--opt, xs: string, alignment mode: "customize, alignRight, alignLeft"--></alignment>
<publicSecurity><!--req, xs: boolean--></publicSecurity>
</VideoOverlay>

16.2.328 XML_VideoSourceActivation
XML Message about Parameters of Activating Network Device
<?xml version="1.0" encoding="utf-8"?>
<VideoSourceActivation version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">

702

Intelligent Security API (General Application) Developer Guide
<ramerat><!--required, xs:string--></ramerat>
<passwordType>
<!--required, xs:string, password types: "default"-NVR password, "selfDefine", "IPCActivatePasswd"-activation
password-->
</passwordType>
<password><!--depend, xs:string--></password>
<ActivationDevice>
<mode><!--required, xs:string, "channel, descriptor"--></mode>
<channel><!--depend-->
<dynVideoInputChannelID><!--required, xs:integer--></dynVideoInputChannelID>
</channel>
<descriptor><!--depend-->
<macAddress><!--required, xs:string--></macAddress>
<addressingFormatType><!--required, xs:string, "ipaddress, hostname"--></addressingFormatType>
<ramerat><!--depend, xs:string--></ramerat>
<ipAddress><!--depend, xs:string--></ipAddress>
<ipv6Address><!--depend, xs:string--></ipv6Address>
<portNo><!--required, xs:integer--></portNo>
<proxyProtocol><!--required, xs:string, "HIKVISION, SONY, ISAPI, ONVIF, …"--></proxyProtocol>
</descriptor>
</ActivationDevice>
</VideoSourceActivation>

16.2.329 XML_VideoSourceActivationCapability
XML Message about Capability of Activating Network Device
<?xml version="1.0" encoding="utf-8"?>
<VideoSourceActivationCapability version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<ActivateByChannel>
<proxyProtocol opt="HIKVISION"/>
</ActivateByChannel>
<ActivateByAddress>
<proxyProtocol opt="HIKVISION"/>
</ActivateByAddress>
</VideoSourceActivationCapability>

16.2.330 XML_VideoSourceList
XML Message about Searched Network Devices
<VideoSourceList version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<VideoSourceDescriptor><!--list-->
<id><!--req, xs: string;id--></id>
<proxyProtocol><!--req, xs: string, "HIKVISION, SONY, ISAPI, ONVIF"--></proxyProtocol>
<addressingFormatType><!--req, xs: string, address type: "ipaddress, hostname"--></addressingFormatType>
<hostName><!--dep, xs: string--></hostName>
<ipAddress><!--dep, xs: string--></ipAddress>
<subnetMask><!--opt, xs: string, subnet mask for IPv4 address--></subnetMask>

703

Intelligent Security API (General Application) Developer Guide
<ipv6Address><!--dep, xs: string--></ipv6Address>
<bitMask><!--opt, xs: integer, bitmask IPv6 address--></bitMask>
<serialNumber><!--opt, xs: string--></serialNumber>
<macAddress><!--opt, xs: string--></macAddress>
<firmwareVersion><!--opt, req, xs: string--></firmwareVersion>
<managePortNo><!--opt, xs: integer--></managePortNo>
<userName><!--opt, xs: string--></userName>
<password><!--opt, xs: string--></password>
<srcInputPortNums><!--req, xs: integer--></srcInputPortNums>
<deviceID><!--dep, xs: string--></deviceID>
<deviceModel><!-- opt, xs: string, device model--></deviceModel>
</VideoSourceDescriptor>
</VideoSourceList>

16.2.331 XML_ZoomFocus
ZoomFocus message in XML format
<ZoomFocus version="2.0" xmlns="http://www.isapi.org/ver20/XMLSchema">
<pqrsZoom/><!--opt, xs: integer, zoom coordinates of Sony zoom camera module-->
<mnstFocus/><!--opt, xs: integer, focus coordinates of Sony zoom camera module-->
</ZoomFocus>

704

Intelligent Security API (General Application) Developer Guide

Appendix A. Appendixes
A.1 Log Types for ISAPI
There are four major log types, i.e., alarm log, exception log, operation log, and event log. And
each major type contains multiple minor types, see details in the following contents.

Alarm Logs
Log Type

Description

shortCircuit

Short Circuit Alarm

brokenCircuit

Open Circuit Alarm

alarmReset

Alarm Reset

alarmNormal

Return to Normal

passwordError

Incorrect Password (3 Tmes in a Row)

idCardIllegally

Invalid Card ID

keyPADRemove

Keypad Tampered

keyPADRemoveRestore

Keypad Restored

devRemove

Device Tampered

devRemoveRestore

Device Restored

belowAlarmLimit1

Sensor Value is Lower than Alarm Limit Value 1

belowAlarmLimit2

Sensor Value is Lower than Alarm Limit Value 2

belowAlarmLimit3

Sensor Value is Lower than Alarm Limit Value 3

belowAlarmLimit4

Sensor Value is Lower than Alarm Limit Value 4

aboveAlarmLimit1

Sensor Value is Higher than Alarm Limit Value 1

aboveAlarmLimit2

Sensor Value is Higher than Alarm Limit Value 2

aboveAlarmLimit3

Sensor Value is Higher than Alarm Limit Value 3

aboveAlarmLimit4

Sensor Value is Higher than Alarm Limit Value 4

UrgencyBtnON

Panic Button Triggered

UrgencyBtnOFF

Panic Button Restored

virtualDefenceBandit

Virtual Zone Burglary Alarm

virtualDefenceFire

Virtual Zone Fire Alarm

705

Intelligent Security API (General Application) Developer Guide
Log Type

Description

virtualDefenceUrgent

Virtual Zone Panic Alarm

motDetStart

Motion Detection Alarm Started

motDetStop

Motion Detection Alarm Stopped

hideAlarmStart

Device Blocked

hideAlarmStop

Device Blocking Alarm Restored

UPSAlarm

UPS Alarm

electricityMeterAlarm

Coulombmeter Alarm

switchPowerAlarm

Switch Power Supply Alarm

GasDetectSys

Gas Detection Alarm

transformerTempAlarm

Transformer Temperature Alarm

tempHumiAlarm

Temperature and Humidity Sensor Alarm

UPSAlarmRestore

UPS Alarm Restored

electricityMeterAlarmRestore

Coulombmeter Alarm Restored

switchPowerAlarmRestore

Switch Power Supply Alarm Restored

GasDetectSysRestore

Gas Detection Alarm Restored

transformerTempAlarmRestor
e

Transformer Temperature Alarm Restored

tempHumiAlarmRestore

Temperature-Humidity Sensor Alarm Restored

waterLevelSensorAlarm

Temperature-Humidity Sensor Alarm Restored

waterLevelSensorAlarmRestore

Flood Sensor Restored

dustNoiseAlarm

Dust and Noise Sensor Alarm

dustNoiseAlarmRestore

Dust and Noise Sensor Alarm Restored

environmentalLogger

Environmental Data Collector Alarm

environmentalLoggerAlarm

Environmental Data Collector Restored

triggerTemper

Detector Tampered

triggerTemperRestore

Detector Restored

emergencyCallHelp

Panic Alarm

emergencyCallHelpRestore

Panic Alarm Restored

consult

Consultation Alarm

706

Intelligent Security API (General Application) Developer Guide
Log Type

Description

consultRestore

Consultation Alarm Restored

deviceMoveAlarm

Device Motion Alarm

deviceMoveAlarmRestore

Device Motion Alarm Restored

earlyWarningAlarm

Early Warning Zone Alarm

earlyWarningAlarmRestore

Early Warning Zone Restored

warningAlarm

Warning Zone Alarm

warningAlarmRestore

Warning Zone Restored

wirelessOutputModTamperEvident

Wireless Output Expander Tampered

wirelessOutputModTamperEvidentReset

Wireless Output Expander tamper Restored

wirelessRepeaterTamperEvident

Wireless Repeater Tampered

wirelessRepeaterTamperEvidentReset

Wireless Repeater tamper Restored

wirelessSirenTamperEvident

Wireless Siren Tampered

wirelessSirenTamperEvidentReset

Wireless Siren Tamper Restored

wirelessKeypadTamperEvident

Wireless Keypad Tampered

wirelessKeypadTamperEvidentReset

Wireless Keypad Tamper Restored

wirelessCardReaderTamperEvident

Wireless Card Reader Tampered

wirelessCardReaderTamperEvidentReset

Wireless Card Reader Tamper Restored

softZoneMedicalAlarm

Virtual Zone Medical Alarm

accessControllerEvent

Access Controller Event

videoIntercomEvent

Video Intercom Event

GJDEvent

GJD Security Control Panel Event

LuminateEvent

LUMINITE Security Control Panel Event

OPTEXEvent

OPTEX Security Control Panel Event

cameraDetectorEvent

Detector Event

securityControlPanelEvent

Security Control Panel Event

RS-485AlarmInputModuleEvident

RS-485 Zone Module Tampered

RS-485AlarmInputModuleTamperReset

RS-485 Zone Module Tampering Reset

RS-485WirelessReceiverTamperEvident

RS-485 Wireless Receiver Module Tampered

RS-485WirelessReceiverTamperEvidentReset RS-485 Wireless Receiver Module Tampering Reset

707

Intelligent Security API (General Application) Developer Guide
Log Type

Description

dredgerDetectionAlarm

Dredger Detection Alarm

crossLineAlarm

Line Crossing Alarm

crossLineAlarmRestore

Line Crossing Alarm Restored

HFPDAlarmStart

High Frequently Appeared Person Alarm Started

HFPDAlarmStop

High Frequently Appeared Person Alarm Stopped

LFPDAlarmStart

Low Frequency Person Alarm Started

LFPDAlarmStop

Low Frequency Person Alarm Stopped

Exception Logs
Log Type

Description

powerOn

Power on

powerOff

Power off

WDTReset

WDT Reset

lowBatteryVoltage

Low Battery Voltage

ACLoss

AC Power Disconnected

ACRestore

AC Power Restored

RTCException

RTC Real-​time Clock Exception

netFailure

Network Disconnected

netRestore

Network Connected

telLineBroken

Telephone Line Disconnected

telLineRestore

Telephone Line Connected

expanderBusLoss

Bus Expander Disconnected

expanderBusRestore

Bus Expander Connected

keypadBusLoss

Keypad Expander Disconnected

keypadBusRestore

Keypad Expander Connected

sensorFailure

Analog Sensor Fault

sensorRestore

Analog Sensor Restored

RS485DisConnect

RS-485 Channel Disconnected

RS485Connect

RS-486 Channel Connected

708

Intelligent Security API (General Application) Developer Guide
Log Type

Description

batteryVoltageRestore

Battery Voltage Restored

wiredNetAbnormal

Wired Network Exception

wiredNetRestore

Wired Network Restored

GPRSAbnormal

GPRS Exception

GPRSRestore

GPRS Restored

3GAbnormal

3G Network Exception

3GRestore

3G Network Restored

SIMCardAbnormal

SIM Card Exception

SIMCardRestore

SIM Card Restored

VILost

Video Loss

illegalAccess

Illegal Login

HDFull

HDD Full

HDError

HDD Error

DCDLost

MODEM Disconnected

IPConflict

IP Address Conflicted

netbroken

Network Disconnected

recError

Recording Error

VIError

Video Input Exception(Only for Analog Channel)

formatHDDError

Remote HDD Formatting Failed

USBError

USB Communication Error

USBRestore

USB Communication Error Restored

printError

Printer Error

printRestore

Printer Error Restored

subsystemCommunication Sub-board Communication Error
Error
IPCIPconflict

Network Camera IP Address Conflicted

VIMisMatch

Video Standard Mismatches

MCURestart

MCU Restarted

GprsMouleFault

GPRS Module Fault

709

Intelligent Security API (General Application) Developer Guide
Log Type

Description

telephoneFault

Telephone Module Fault

wifiAbnormal

Wi-Fi Exception

wifiRestore

Wi-Fi Restored

RFAbornal

RF Exception

RFRestore

RF Restored

detectorOnline

Detector Connected

detectorOffline

Detector Disconnected

detectorBatteryNormal

Detector Battery Restored

detectorBatteryLow

Detector Battery Low

dataTrafficOverflow

Cellular Network Data Exceeded

radarSignalFault

Radar Transmitter Fault

radarSignalFaultRestore

Radar Transmitter Restored

wirelessOutputModOffline Wireless Output Expander Disconnected
wirelessOutputModOnline Wireless Output Expander Connected
wirelessRepeaterOffline

Wireless Repeater Disconnected

wirelessRepeaterOnline

Wireless Repeater Connected

triggerOffline

Trigger Disconnected

triggerOnline

Trigger Connected

wirelessSirenOffline

Wireless Siren Disconnected

wirelessSirenOnline

Wireless Siren Connected

sirenLowPower

Siren Battery Low

sirenPowerRecovery

Siren Battery Restored

ipcDisconnect

Network Camera Disconnected

ipcConnectRecovery

Network Camera Connected

sendMailFailed

Sending Email Failed

eventUploadException

Uploading Event Failed or Uploaded Event Lost

keyfobLowPower

Low Keyfob Battery

keyfobPowerRecovery

Normal Keyfob Battery

detectorOvertime

Detector Heartbeat Timed Out

710

Intelligent Security API (General Application) Developer Guide
Log Type

Description

detectorOvertimeRecover Detector Heartbeat Timeout Restored
y
wSirenOvertime

Wireless Siren Heartbeat Timed Out

wSirenOvertimeRecovery

Wireless Siren Heartbeat Timeout Restored

wOutputOvertime

Wireless Output Module Heartbeat Timed Out

wOutputOvertimeRecover Wireless Output Module Heartbeat Timeout Restored
y
wRepeaterOvertime

Wireless Repeater Heartbeat Timed Out

wRepeaterOvertimeRecov Wireless Repeater Heartbeat Timeout Restored
ery
rfJamming

RF Wireless Communication Blocked

rfJammingRecovery

RF Wireless Communication Blocking Restored

batteryMiss

Storage Battery Loss

batteryMissRecovery

Storage Battery Restored

ARCUploadFailed

ARC Uploading Failed

ARCUploadRecovery

ARC Uploading Restored

wirelessKeypadOffline

Wireless Keypad Disconnected

wirelessKeypadOnline

Wireless Keypad Connected

wirelessCardReaderOffline Wireless Card Reader Disconnected
wirelessCardReaderOnline Wireless Card Reader Connected
keypadLowPower

Low Keypad Battery

keypadLowPowerRecovery Low Keypad Battery Recovered
cardReaderLowPower

Low Card Reader Battery

cardReaderLowPowerReco Low Card Reader Battery Recovered
very
wKeypadOvertime

Wireless Keypad Heartbeat Timed Out

wKeypadOvertimeRecover Wireless Keypad Heartbeat Timeout Recovered
y
wCardReaderOvertime

Wireless Card Reader Heartbeat Timed Out

711

Intelligent Security API (General Application) Developer Guide
Log Type

Description

wCardReaderOvertimeRec Wireless Card Reader Heartbeat Timeout Recovered
overy
RSRS-485 Zone Module Offline
485AlarmInputModuleDisc
onnected
RSRS-485 Zone Module Online
485AlarmInputModuleCon
nected
RSRS-485 Wireless Receiver Module Offline
485WirelessReceiverDisco
nnected
RSRS-485 Wireless Receiver Module Online
485WirelessReceiverConn
ected
keypadDisconnected

Keypad Offline

keypadConnected

Keypad Online

overvoltage

High Supply Voltage

undervoltage

Low Supply Voltage

highHDTemperature

HDD High Temperature

lowHDTemperature

HDD Low Temperature

hdImpact

HDD Impact

hdBadBlock

HDD Bad Sector

severeHDFailure

HDD Severe Fault

Operation Logs
Log Type

Description

guard

Normal Arming

unguard

Normal Disarming

bypass

Bypass

duressAccess

Duress

localReboot

Local Reboot

remoteReboot

Remote Reboot

712

Intelligent Security API (General Application) Developer Guide
Log Type

Description

localUpgrade

Local Upgrade

remoteUpgrade

Remote Upgrade

recoveryDefultParam

Restore Default Settings

outpulAlarm

Remote Alarm Output Control

accessOpen

Access Control: Open

accessClose

Access Control : Closed

sirenOpen

Siren: On

sirenClose

Siren: Off

modZoneConfig

Zone Settings

modAlarmoutConfig

Alarm Output Settings

modAnalogConfig

Sensor Settings

RS485Config

RS-485 Channel Settings

phoneConfig

Dialing Settings

addAdmin

Added Administrator

modAdminParam

Edited Administrator

delAdmin

Deleted Administrator

addNetUser

Added DVR/NVR Operator

modNetUserParam

Edited DVR/NVR Operator

delNetUser

Deleted DVR/NVR Operator

addOperator

Added Camera Operator

modOperatorPw

Edited Camera Operator Password

delOperator

Deleted Camera Operator Password

addKeyPadUser

Added Keypad/Card Reader User

delKeyPadUser

Deleted Keyboard/Card Reader User

remoteUserLogin

Remote Login

remoteUserLogout

Remote Logout

remoteGuard

Remote Arming

remoteUnguard

Remote Disarming

modHostConfig

Edited Control Panel Settings

713

Intelligent Security API (General Application) Developer Guide
Log Type

Description

restoreBypass

Bypass Restored

alarmOutOpen

Turned on Output

alarmOutClose

Turned off Output

modSubsystemParam

Edited Subsystem Parameters

groupBypass

Group Bypass

groupBypassRestore

Group Bypass Restored

modGprsParam

Edited GPRS Parameters

modNetReportParam

Edited Network Report Settings

modReportMode

Edited Uploading Mode

modGatewayParam

Edited Access Control Settings

remoteStartRec

Remote: Started Recording

remoteStopRec

Remote: Stopped Recording

transChanStart

Transparent Transmission Started

transChanStop

Transparent Transmission Stopped

startVoiceTalk

Two-way Audio Started

stopVoiceTalk

Two-way Audio Terminated

remotePlayByFile

Remote: Playback or Downloaded by File

remotePlayByTime

Remote: Playback by Time

remotePTZCtrl

Remote: PTZ Control

remoteLockFile

Remote: Locked File

remoteUnlockFile

Remote: Unlocked File

remoteFormatHd

Remote: Formatted HDD

remoteDownloadCfgFile

Remote: Exported Configuration Files

remoteUploadCfgFile

Remote: Imported Configuration Files

remoteDownloadRecFile

Remote: Exported File

stayArm

Stay Arming

quickArm

Instant Arming

keyswitchArm

Key Zone Arming

keyswitckDisarm

Key Zone Disarming

714

Intelligent Security API (General Application) Developer Guide
Log Type

Description

clearAlarm

Alarm Cleared

modFaultConfig

Edited System Fault Settings

modAlarmOutConfig

Edited Event Alarm Output Settings

searchExternalModule

Searched for External Module

registerExternalModule

Re-registered External Module

closeKeypadAlarm

Disabled Keypad Beep

mod3GConfig

Edited Mobile Parameters

modPrintConfig

Edited Printer Parameters

SDCardFormat

Formatted SD Card

upgradeSubsystem

Upgraded Sub-board

planArmConfig

Arming/Disarming Schedule Configuration

phoneArm

SMS Arming

phoneStayArm

SMS Stay Arming

phoneQuickArm

SMS Instant Arming

phoneDisarm

SMS Disarming

phoneClearAlarm

SMS Alarm Cleared

whiteConfig

Whitelist Settings

timeTriggerConfig

Enabled/Disabled Trigger Configuration by Schedule

pictureConfig

Capture Settings

tamperConfig

Zone Tamper-Proof Settings

remoteKeypadUpgrade

Remote: Upgraded Keypad

singlePartionArmORDisar
m

Single-Zone Arming/Disarming

cardConfiguration

Card Settings

cardAramORDisarm

Arming/Disarming by Card

expendNetCenterConfig

Extension Network Center Settings

netCardConfig

NIC Settings

DDNSConfig

DDNS Settings

RS485BusConfig

RS-485 Bus Settings

715

Intelligent Security API (General Application) Developer Guide
Log Type

Description

RS485BusReRegistration

RS-485 Bus Re-​registration

remoteOpenElectricLock

Remote: Unlocked

remoteCloseElectricLock

Remote: Locked

localOpenElectricLock

Local: Unlocked

localCloseElectricLock

Local: Locked

openAlarmLamp

Remote: Turned On Alarm Lamp

closeAlarmLamp

Remote: Turned Off Strobe

temporaryPassword

Operation Record of Temporary Password

oneKeyAwayArm

One-Push Away Arming

oneKeyStayArm

One-Push Stay Arming

singleZoneArm

Single-Zone Arming

singleZoneDisarm

Single-Zone Disarming

HIDDNSConfig

HiDDNS Settings

remoteKeypadUpdata

Remote: Upgraded Keypad

zoneAddDetector

Added Detector

zoneDelDetector

Deleted Detector

qureyDetectorSignal

Checked Detector Signal Strength on Security Control Panel

qureyDetectorBattery

Checked Detector Remaining Battery on Security Control Panel

setDetectorGuard

Detector Arming

setDetectorUnguard

Detector Disarming

setWifiParm

Wi-Fi Settings

voiceOpen

Audio On

voiceClose

Mute

functionKeyEnable

Enabled Function Key

functionKeyDisable

Disabled Panel Function Button

readCard

Swiped Patrol Card

localDeviceActive

Activated Device Remotely

localFactoryDefault

Restored Factory Settings Locally

remoteFactoryDefault

Restored Factory Settings Remotely

716

Intelligent Security API (General Application) Developer Guide
Log Type

Description

addWirelessOutputMod

Added Wireless Output Module

delWirelessOutputMod

Deleted Wireless Output Module

addWirelessRepeater

Added Wireless Repeater

delWirelessRepeater

Deleted Wireless Repeater

telListConfig

Mobile Phone Number Settings

searchRFSignal

Checked RF Signal

addWirelessSiren

Added Wireless Siren

delWirelessSiren

Deleted Wireless Siren

flowConfig

Cellular Data Limit Settings

addRemoter

Added Keyfob

delRemoter

Deleted Keyfob

addCard

Added Card

delCard

Deleted Card

remoteAddIpc

Added Network Camera

remoteDelIpc

Deleted Network Camera

remoteSetIpc

Edited Network Camera

localAddressFilterConfig/ Local/Remote Address Filter Configuration
remoteAddressFilterConfig
enterProgramMode

Programming Mode Enabled for Keypad

existProgramMode

Programming Mode Disabled for Keypad

localIOTCfgFileInput

Local operation: import IoT configuration file

localIOTCfgFileOutput

Local operation: export IoT configuration file

remoteIOTCfgFileInput

Remote operation: import IoT configuration file

remoteIOTCfgFileOutput

Remote operation: export IoT configuration file

localIOTAdd

Local operation: add IoT channel

remoteIOTAdd

Remote operation: add IoT channel

localIOTDelete

Local operation: delete IoT channel

remoteIOTDelete

Remote operation: delete IoT channel

localIOTSet

Local operation: configure IoT channel

717

Intelligent Security API (General Application) Developer Guide
Log Type

Description

remoteIOTSet

Remote operation: configure IoT channel

armWithFault

Armed with Fault

entryDelay

Entering and Exiting Delay

modArmConfig

Edit Arming Parameters

modCertificateStandard

Edit Authentication Standard

entryPaceTest

Pacing Mode Entered

exitPaceTest

Pacing Mode Exited

addNetOperator

Add Operator

modNetOperator

Edit Operator Information

delNetOperator

Delete Operator

addNetInstaller

Add Installer

modNetInstaller

Edit Installer Information

delNetInstaller

Delete Installer

addManufacturer

Add Manufacturer

modManufacturer

Edit Manufacturer Information

delManufacturer

Delete Manufacturer

upgradeSuccessed

Upgraded

upgradeFailed

Upgrading Failed

zoneDisabled

Zone Shielded

localCfgSecurity

Security Parameter Configured Locally

remoteCfgSecurity

Security Parameter Configured Remotely

remoteGetParaSecurity

Security Parameters Obtained Remotely

delRS-485InputModule

RS-485 Zone Module Deleted

delRS-485OutputModule

RS-485 Output Module Deleted

delRS485WirelessReceiver

RS-485 Wireless Receiver Module Deleted

enrollRS-485InputModule

RS-485 Zone Module Registered

enrollRS485OutputModule

RS-485 Output Module Registered

718

Intelligent Security API (General Application) Developer Guide
Log Type

Description

delRS-485OutputModule

RS-485 Output Module Deleted

enrollRS485WirelessReceiver

RS-485 Wireless Receiver Module Registered

enrollKeypad

Keypad Registered

delKeypad

Keypad Deleted

scheduledAngleCalibration Scheduled Angle Calibration
addZone

Added Zone

modZone

Edited Zone

delZone

Deleted Zone

addAlarmLine

Added Trigger Line

modAlarmLine

Edited Trigger Line

delAlarmLine

Deleted Trigger Line

remoteHFPDconfig/
localHFPDconfig

Remote/Local Configuration of Frequently Appeared Person
Detection

remoteLFPDconfig

Remote Configuration of Low Frequency Person Detection

Event Logs
Log Type

Description

SDKSchool

SDK Synchronization

selfTimeSchool

Time Synchronization by Schedule

insertSubsystem

Plugged in Sub-board

pullOutSubsystem

Pulled out Sub-board

autoArm

Auto Arming

autoDisarm

Auto Disarming

triggerOn

Activated Trigger by Schedule

triggerOff

Deactivated Trigger by Schedule

autoArmFailed

Auto Arming Failed

autoDisarmFailed

Auto Disarming Failed

triggerOnFailed

Activating Trigger Failed

triggerOffFailed

Deactivating Trigger Failed

719

Intelligent Security API (General Application) Developer Guide
Log Type

Description

mandatoryAlarm

Forced Arming

keyPADlocked

Keypad Locked

keyPADunlocked

Keypad Unlocked

insetUSB

Plugged in USB Flash Drive

pulloutUSB

Removed USB Flash Drive

lateRemind

Late to Disarm

keypadUnlocked

Unlocked Keypad

timeSynchronization

Time Synchronization

armFailed

Arming Failed

ARCStart

ARC Connected

Additional Logs
Log Type

Description

doubleVerificationPass

Double Verification Completed

hdFormatStart

Formatting HDD Started

hdFormatStop

Formatting HDD Stopped

A.2 Supported Alarm/Event Types
This part lists the alarm or event types that can be received or subscribed via Intelligent Security
API and the corresponding values to be set for getting the details.
Alarm/Event Type

Value of <type>

Intrusion Detection

fielddetection

Line Crossing Detection

linedetection

Region Entrance
Detection

regionEntrance

Alarm/Event Details
Refer to Intelligent Security API (Behavior Analysis)
_Developer Guide for details.

Region Exiting Detection regionExiting
Loitering Detection

loitering

People Gathering
Detection

group

720

Intelligent Security API (General Application) Developer Guide
Alarm/Event Type

Value of <type>

Fast Moving Detection

rapidMove

Parking Detection

parking

Unattended Baggage
Detection

unattendedBagga
ge

Object Removal
Detection

attendedBaggage

Absence Alarm

leavePosition

Alarm/Event Details

People Number Changed peopleNumChang
Alarm
e
Fast Moving Alarm

running

Violent Motion Alarm

violentMotion

People Falling Down
Alarm

failDown

Overstay Alarm

retention

People Counting Alarm

PeopleCounting

Refer to Intelligent Security API (People Counting) _
Developer Guide for details

Temperature Alarm

thermometry

Temperature Difference
Alarm

temperature

Refer to Intelligent Security API (Thermal) _
Developer Guide for details

Fire Source Detection

fireDetection

Smoke Detection

smokeDetection

Fire and Smoke
Detection

smokeAndFireDet
ection

Ship Detection

shipsDetection

Face Detection Alarm

facedetection

Face Capture Alarm

faceCapture

Refer to Intelligent Security API (Facial) _Developer
Guide for details.

Face Picture Comparison alarmResult
Result
Stranger Detection
Alarm

whiteFaceContras
t

High Frequently Person
Detection

HFPD

721

Intelligent Security API (General Application) Developer Guide
Alarm/Event Type

Value of <type>

Alarm/Event Details

Low Frequency Person
Detection

LFPD

Waiting Time Detection
Alarm

personQueueTim
e

People Queuing-Up
Alarm

personQueueCou
nting

Multi-​Target-​Type
Detection Alarm

mixedTargetDetect Refer to Intelligent Security API (Multi-Target-Type
ion
Detection) _Developer Guide for details

Traffic Incident Alarm

AID

Traffic Violation
Enforcement Alarm

TFS

Traffic Data Collection
Alarm

TPS

ANPR Alarm

ANPR

Blacklist and Whitelist
ANPR Alarm

vehicleMatchResu
lt

Vehicle Feature
Recognition Alarm

vehicleRcogResult

Radar Measurement
Data

radarMeasureme
nt

Heat Map Alarm

heatmap

Refer to Intelligent Security API (Heat Map) _
Developer Guide for details

Face and ID Card
Recognition Alarm

cardMatch

Refer to Intelligent Security API (Access Control on
Person) _Developer Guide for details

Hot Spare Exception
Alarm

hotSpare

The alarm or event details will be provided in the
further versions.

Overspeed Alarm

overSpeed

The alarm or event details will be provided in the
further versions.

Temperature Too Hight
Alarm

highTempAlarm

The alarm or event details will be provided in the
further versions.

Acceleration Exception
Alarm

abnormalAccelerat The alarm or event details will be provided in the
ion
further versions.

Refer to Intelligent Security API (Queue
Management) _Developer Guide for details

Refer to Intelligent Security API (Traffic
Enforcement) _Developer Guide for details

Refer to Intelligent Security API (Traffic Capture and
Analysis) _Developer Guide for details

722

Intelligent Security API (General Application) Developer Guide
Alarm/Event Type

Value of <type>

Alarm/Event Details

Collision Alarm

collision

The alarm or event details will be provided in the
further versions.

Rollover Detection

rollover

The alarm or event details will be provided in the
further versions.

Abnormal Driving
Behavior Detection

abnormalDriving

The alarm or event details will be provided in the
further versions.

GPS Information
Uploaded

GPSUpload

The alarm or event details will be provided in the
further versions.

Video Standard
Mismatched

PALMismatch

The alarm or event details will be provided in the
further versions.

Sensor Alarm

IO

The alarm or event details will be provided in the
further versions.

Motion Detection Alarm VMD

The alarm or event details will be provided in the
further versions.

Video Loss Alarm

videoloss

The alarm or event details will be provided in the
further versions.

Tampering Alarm

shelteralarm

The alarm or event details will be provided in the
further versions.

Defocus Alarm

defocus

The alarm or event details will be provided in the
further versions.

Audio Exception Alarm

audioexception

The alarm or event details will be provided in the
further versions.

Scene Changed Alarm

scenechangedete The alarm or event details will be provided in the
ction
further versions.

PIR Alarm

PIR

The alarm or event details will be provided in the
further versions.

HDD Full

diskfull

The alarm or event details will be provided in the
further versions.

HDD Error

diskerror

The alarm or event details will be provided in the
further versions.

Network Disconnected

nicbroken

The alarm or event details will be provided in the
further versions.

IP Address Conflicted

ipconflict

The alarm or event details will be provided in the
further versions.

723

Intelligent Security API (General Application) Developer Guide
Alarm/Event Type

Value of <type>

Alarm/Event Details

Illegal Login Alarm

illaccess

The alarm or event details will be provided in the
further versions.

PoE Power Exception
Alarm

poe

The alarm or event details will be provided in the
further versions.

Video Exception Alarm

videoException

The alarm or event details will be provided in the
further versions.

Recording Exception
Alarm

recordException

The alarm or event details will be provided in the
further versions.

HDD Unformatted Alarm diskUnformat

The alarm or event details will be provided in the
further versions.

Supply Voltage Exception voltageinstable
Alarm

Refer to
JSON_EventNotificationAlert_voltageinstable for
alarm/event details

HDD High Temperature

highHDTemperatu Refer to
re
JSON_EventNotificationAlert_HDDHighTemperatu
reEventMsg for alarm/event details

HDD Low Temperature

lowHDTemperatur Refer to
e
JSON_EventNotificationAlert_HDDLowTemperatur
eEventMsg for alarm/event details

HDD Impact

hdImpact

Refer to
JSON_EventNotificationAlert_HDDImpactEventMs
g for alarm/event details

HDD Bad Sector

hdBadBlock

Refer to
JSON_EventNotificationAlert_HDDBadSectorEvent
Msg for alarm/event details

HDD Severe Fault

severeHDFailure

Refer to
JSON_EventNotificationAlert_HDDSevereFaultEve
ntMsg for alarm/event details

Certificate Expiry Alarm

certificateRevocat Refer to
ion
JSON_EventNotificationAlert_CertificateExpiryAlar
mMsg for alarm/event details

724

Intelligent Security API (General Application) Developer Guide

A.3 Error Codes in ResponseStatus
The error classification returned by the ResponseStatus message is based on the status codes of
HTTP protocol. 7 kinds of status codes are predefined, including 1 (OK), 2 (Device Busy), 3 (Device
Error), 4 (Invalid Operation), 5 (Invalid Message Format), 6 (Invalid Message Content), and 7
(Reboot Required). Each kind of status code contains multiple sub status codes, and the error
codes are in a one-to-one correspondence with the sub status codes.

StatusCode=1
SubStatusCode

Error Code

Description

ok

0x1

Operation completed.

riskPassword

0x10000002

Risky password.

armProcess

0x10000005

Arming process.

StatusCode=2
Sub Status Code

Error Code

Description

noMemory

0x20000001

Insufficient memory.

serviceUnavailable

0x20000002

The service is not available.

upgrading

0x20000003

Upgrading.

deviceBusy

0x20000004

The device is busy or no
response.

reConnectIpc

0x20000005

The video server is
reconnected.

transferUpgradePackageFailed

0x20000006

Transmitting device upgrade
data failed.

startUpgradeFailed

0x20000007

Starting upgrading device
failed.

getUpgradeProcessfailed.

0x20000008

Getting upgrade status failed.

certificateExist

0x2000000B

The Authentication certificate
already exists.

725

Intelligent Security API (General Application) Developer Guide
StatusCode=3
Sub Status Code

Error Code

Description

deviceError

0x30000001

Hardware error.

badFlash

0x30000002

Flash operation error.

28181Uninitialized

0x30000003

The 28181 configuration is not
initialized.

socketConnectError

0x30000005

Connecting to socket failed.

receiveError

0x30000007

Receive response message
failed.

deletePictureError

0x3000000A

Deleting picture failed.

pictureSizeExceedLimit

0x3000000C

Too large picture size.

clearCacheError

0x3000000D

Clearing cache failed.

updateDatabasError

0x3000000F

Updating database failed.

searchDatabaseError

0x30000010

Searching in the database
failed.

writeDatabaseError

0x30000011

Writing to database failed.

deleteDatabaseError

0x30000012

Deleting database element
failed.

searchDatabaseElementError

0x30000013

Getting number of database
elements failed.

cloudAutoUpgradeException

0x30000016

Downloading upgrade packet
from cloud and upgrading
failed.

HBPException

0x30001000

HBP exception.

UDEPException

0x30001001

UDEP exception

elasticSearchException

0x30001002

Elastic exception.

kafkaException

0x30001003

Kafka exception.

HBaseException

0x30001004

Hbase exception.

sparkException

0x30001005

Spark exception.

yarnException

0x30001006

Yarn exception.

cacheException

0x30001007

Cache exception.

726

Intelligent Security API (General Application) Developer Guide
Sub Status Code

Error Code

Description

trafficException

0x30001008

Monitoring point big data
server exception.

faceException

0x30001009

Human face big data server
exception.

SSDFileSystemIsError

0x30001013

SSD file system error (Error
occurs when it is non-Ext4 file
system)

insufficientSSDCapacityForFPD

0x30001014

Insufficient SSD space for
person frequency detection

wifiException

0x3000100A

Wi-Fi big data server exception.

structException

0x3000100D

Video parameters structure
server exception.

captureTimeout

0x30006000

Data collection timed out.

lowScore

0x30006001

Low quality of collected data.

StatusCode=4
Sub Status Code

Error Code

Description

notSupport

0x40000001

Not supported.

lowPrivilege

0x40000002

No permission.

badAuthorization

0x40000003

Authentication failed.

methodNotAllowed

0x40000004

Invalid HTTP method.

notSetHdiskRedund

0x40000005

Setting spare HDD failed.

invalidOperation

0x40000006

Invalid operation.

hdFormatFail

\

Formatting HDD failed.

notActivated

0x40000007

Inactivated.

hasActivated

0x40000008

Activated.

certificateAlreadyExist

0x40000009

The certificate already exists.

fileError

0x4000000F

Upgrading file error.

USBNotExist

0x40000010

USB device is not connected.

upgradePackageMoret 0x40001000
han2GB

Up to 2GB upgrade package is allowed to be
uploaded.

727

Intelligent Security API (General Application) Developer Guide
Sub Status Code

Error Code

Description

IDNotexist

0x40001001

The ID does not exist.

synchronizationError

0x40001003

Synchronization failed.

synchronizing

0x40001004

Synchronizing.

importError

0x40001005

Importing failed.

importing

0x40001006

Importing.

fileAlreadyExists

0x40001007

The file already exists.

invalidID

0x40001008

Invalid ID.

backupnodeNotAllowe 0x40001009
Log

Accessing to backup node is not allowed.

exportingError

0x4000100A

Exporting failed.

exporting

0x4000100B

Exporting.

exportEnded

0x4000100C

Exporting stopped.

exported

0x4000100D

Exported.

IPOccupied

0x4000100E

The IP address is already occupied.

IDAlreadyExists

0x4000100F

The ID already exists.

exportItemsExceedLimi 0x40001010
t

No more items can be exported.

noFiles

The file does not exist.

0x40001011

beingExportedByAnoth 0x40001012
erUser

Being exported by others.

needReAuthentication 0x40001013

Authentication is needed after upgrade.

unitAddNotOnline

0x40001015

The added data analysis server is offline.

unitControl

0x40001016

The data analysis server is already added.

analysis unitFull

0x40001017

No more data analysis server can be added.

unitIDError

0x40001018

The data analysis server ID does not exist.

unitExit

0x40001019

The data analysis server already exists in the
list.

unitSearch

0x4000101A

Searching data analysis server in the list failed.

unitNotOnline

0x4000101B

The data analysis server is offline.

unitInfoEror

0x4000101C

Getting data analysis server information failed.

728

Intelligent Security API (General Application) Developer Guide
Sub Status Code
unitGetNodeInfoError

Error Code
0x4000101D

Description
Getting node information failed.

unitGetNetworkInfoErr 0x4000101E
or

Getting the network information of data
analysis server failed

unitSetNetworkInfoErr 0x4000101F
or

Setting the network information of data analysis
server failed

setSmartNodeInfoError 0x40001020

Setting node information failed.

setUnitNetworkInfoErr 0x40001021
or

Setting data analysis server network
information failed.

unitRestartCloseError

0x40001022

Rebooting or shutting down data analysis server
failed.

virtualIPnotAllowed

0x40001023

Adding virtual IP address is not allowed.

unitInstalled

0x40001024

The data analysis server is already installed.

badSubnetMask

0x40001025

Invalid subnet mask.

uintVersionMismatche 0x40001026
d

Data analysis server version mismatches.

deviceMOdelMismatch 0x40001027
ed

Adding failed. Device model mismatches.

unitAddNotSelf

0x40001028

Adding peripherals is not allowed.

noValidUnit

0x40001029

No valid data analysis server.

unitNameDuplicate

0x4000102A

Duplicated data analysis server name.

deleteUnitFirst

0x4000102B

Delete the added data analysis server of the
node first.

getLocalInfoFailed

0x4000102C

Getting the server information failed.

getClientAddedNodeFa 0x4000102D
iled

Getting the added node information of data
analysis server failed.

taskExit

0x4000102E

The task already exists.

taskInitError

0x4000102F

Initializing task failed.

taskSubmitError

0x40001030

Submiting task failed.

taskDelError

0x40001031

Deleting task failed.

taskPauseError

0x40001032

Pausing task failed.

taskContinueError

0x40001033

Starting task failed.

729

Intelligent Security API (General Application) Developer Guide
Sub Status Code

Error Code

Description

taskSeverNoCfg

0x40001035

Full-text search server is not configured.

taskPicSeverNoCfg

0x40001036

The picture server is not configured.

taskStreamError

0x40001037

Streaming information exception.

taskRecSDK

0x40001038

History recording is not supported.

taskCasaError

0x4000103A

Cascading is not supported.

taskVCARuleError

0x4000103B

Invalid VCA rule.

taskNoRun

0x4000103C

The task is not executed.

unitLinksNoStorageNo
de

0x4000103D

No node is linked with the data analysis server.
Configure the node first.

searchFailed

0x4000103E

Searching video files failed.

searchNull

0x4000103F

No video clip.

userScheOffline

0x40001040

The task scheduler service is offline.

updateTypeUnmatche
d

0x40001041

The upgrade package type mismatches.

userExist

0x40001043

The user already exists.

userCannotDelAdmin

0x40001044

The administrator cannot be deleted.

userInexistence

0x40001045

The user name does not exist.

userCannotCreatAdmi
n

0x40001046

The administrator cannot be created.

monitorCamExceed

0x40001048

Up to 3000 cameras can be added.

monitorCunitOverLimit 0x40001049

Adding failed. Up to 5 lower-levels are
supported by the control center.

monitorReginOverLimit 0x4000104A

Adding failed. Up to 5 lower-levels are
supported by the area.

monitorArming

The camera is already armed. Disarm the
camera and try again.

0x4000104B

monitorSyncCfgNotSet 0x4000104C

The system parameters are not configured.

monitorFdSyncing

0x4000104E

Synchronizing. Try again after completing the
synchronization.

monitorParseFailed

0x4000104F

Parsing camera information failed.

730

Intelligent Security API (General Application) Developer Guide
Sub Status Code

Error Code

Description

monitorCreatRootFaile 0x40001050
d

Creating resource node failed.

deleteArmingInfo

0x40001051

The camera is already . Disarm the camera and
try again.

cannotModify

0x40001052

Editing is not allowed. Select again.

cannotDel

0x40001053

Deletion is not allowed. Select again.

deviceExist

0x40001054

The device already exists.

IPErrorConnectFailed

0x40001056

Connection failed. Check the network port.

cannotAdd

0x40001057

Only the capture cameras can be added.

serverExist

0x40001058

The server already exists.

fullTextParamError

0x40001059

Incorrect full-text search parameters.

storParamError

0x4000105A

Incorrect storage server parameters.

picServerFull

0x4000105B

The storage space of picture storage server is
full.

NTPUnconnect

0x4000105C

Connecting to NTP server failed. Check the
parameters.

storSerConnectFailed

0x4000105D

Connecting to storage server failed. Check the
network port.

storSerLoginFailed

0x4000105E

Logging in to storage server failed. Check the
user name and password.

searchSerConnectFaile 0x4000105F
d

Connecting to full-text search server failed.
Check the network port.

searchSerLoginFailed

0x40001060

Logging in to full-text search server failed.
Check the user name and password.

kafkaConnectFailed

0x40001061

Connecting to Kafka failed. Check the network
port.

mgmtConnectFailed

0x40001062

Connecting to system failed. Check the network
port.

mgmtLoginFailed

0x40001063

Logging in to system failed. Check the user
name and password.

TDAConnectFailed

0x40001064

Connecting to traffic data access server failed.
Checking the server status.

731

Intelligent Security API (General Application) Developer Guide
Sub Status Code

Error Code

Description

86sdkConnectFailed

0x40001065

Connecting to listening port of iVMS-8600
System failed. Check the parameters.

nameExist

0x40001066

Duplicated server name.

batchProcessFailed

0x40001067

Processing in batch failed.

IDNotExist

0x40001068

The server ID does not exist.

serviceNumberReache 0x40001069
sLimit

No more service can be added.

invalidServiceType.

0x4000106A

Invalid service type.

clusterGetInfo

0x4000106B

Getting cluster group information failed.

clusterDelNode

0x4000106C

Deletion node failed.

clusterAddNode

0x4000106D

Adding node failed.

clusterInstalling

0x4000106E

Creating cluster…Do not operate.

clusterUninstall

0x4000106F

Reseting cluster…Do not operate.

clusterInstall

0x40001070

Creating cluster failed.

clusterIpError

0x40001071

Invalid IP address of task scheduler server.

clusterNotSameSeg

0x40001072

The master node and slave node must be in the
same network segment.

clusterVirIpError

0x40001073

Automatically getting virtual IP address failed.
Enter manually.

clusterNodeUnadd

0x40001074

The specified master(slave) node is not added.

clusterNodeOffline

0x40001075

The task scheduler server is offline.

nodeNotCurrentIP

0x40001076

The analysis node of the current IP address is
required when adding master and slave nodes.

addNodeNetFailed

0x40001077

Adding node failed. The network disconnected.

needTwoMgmtNode

0x40001078

Two management nodes are required when
adding master and slave nodes.

ipConflict

0x40001079

The virtual IP address and data analysis server's
IP address conflicted.

ipUsed

0x4000107A

The virtual IP address has been occupied.

cloudAlalyseOnline

0x4000107B

The cloud analytic server is online.

732

Intelligent Security API (General Application) Developer Guide
Sub Status Code
virIP&mainIPnotSame
NetSegment

Error Code
0x4000107C

Description
The virtual IP address is not in the same
network segment with the IP address of
master/slave node.

getNodeDispatchInfoFa 0x4000107D
iled

Getting node scheduler information failed.

unableModifyManage
mentNetworkIP

0x4000107E

Editing management network interface failed.
The analysis board is in the cluster.

notSpecifyVirtualIP

0x4000107F

Virtual IP address should be specified for
master and slave cluster.

armingFull

0x40001080

No more device can be armed.

armingNoFind

0x40001081

The arming information does not exist.

disArming

0x40001082

Disarming failed.

getArmingError

0x40001084

Getting arming information failed.

refreshArmingError

0x40001085

Refreshing arming information failed.

ArmingPlateSame

0x40001086

The license plate number is repeatedly armed.

ArmingParseXLSError

0x40001087

Parsing arming information file failed.

ArmingTimeError

0x40001088

Invalid arming time period.

ArmingSearchTimeErro 0x40001089
r

Invalid search time period.

armingRelationshipRea 0x4000108A
chesLimit

No more relation can be created.

duplicateAarmingNam 0x4000108B
e

The relation name already exists.

noMoreArmingListAdd 0x4000108C
ed

No more blacklist library can be armed.

noMoreCamerasAdded 0x4000108D

No more camera can be armed.

noMoreArmingListAdd 0x4000108E
edWithCamera

No more library can be linked to the camera.

noMoreArmingPeriodA 0x4000108F
dded

No more time period can be added to the
arming schedule.

armingPeriodsOverlap 0x40001090
ped

The time periods in the arming schedule are
overlapped.

733

Intelligent Security API (General Application) Developer Guide
Sub Status Code

Error Code

Description

noArmingAlarmInfo

0x40001091

The alarm information does not exist.

armingAlarmUnRead

0x40001092

Getting number of unread alarms failed.

getArmingAlarmError

0x40001093

Getting alarm information failed.

searchByPictureTimed
Out

0x40001094

Searching picture by picture timeout. Search
again.

comparisonTimeRange 0x40001095
Error

Comparison time period error.

selectMonitorNumber 0x40001096
UpperLimit

No more monitoring point ID can be filtered.

noMoreComparisonTas 0x40001097
ksAdded

No more comparison task can be executed at
the same time.

GetComparisonResultF 0x40001098
ailed

Getting comparison result failed.

comparisonTypeError

Comparison type error.

0x40001099

comparisonUnfinished 0x4000109A

The comparison is not completed.

facePictureModelInvali 0x4000109B
d

Invalid face model.

duplicateLibraryName. 0x4000109C

The library name already exists.

noRecord

No record found.

0x4000109D

countingRecordsFailed. 0x4000109E

Calculate the number of records failed.

getHumanFaceFrameF 0x4000109F
ailed

Getting face thumbnail from the picture failed.

modelingFailed.

Modeling face according to picture URL failed.

0x400010A0

1V1FacePictureCompar 0x400010A1
isonFailed

Comparison 1 VS 1 face picture failed.

libraryArmed

0x400010A2

The blacklist library is armed.

licenseExeedLimit

0x400010A3

Dongle limited.

licenseExpired

0x400010A4

Dongle expired.

licenseDisabled

0x400010A5

Unavailable dongle.

licenseNotExist

0x400010A6

The dongle does not exist.

SessionExpired

0x400010A7

Session expired .

734

Intelligent Security API (General Application) Developer Guide
Sub Status Code

Error Code

Description

beyondConcurrentLimi 0x400010A8
t

Out of concurrent limit.

stopSync

0x400010A9

Synchronization stopped.

getProgressFaild

0x400010AA

Getting progress failed.

uploadExtraCaps

0x400010AB

No more files can be uploaded.

timeRangeError

0x400010AC

Time period error.

dataPortNotConnected 0x400010AD

The data port is not connected.

addClusterNodeFailed

0x400010AE

Adding to the cluster failed. The device is
already added to other cluster.

taskNotExist

0x400010AF

The task does not exist.

taskQueryFailed

0x400010B0

Searching task failed.

modifyTimeRuleFailed

0x400010B2

The task already exists. Editing time rule is not
allowed.

modifySmartRuleFailed 0x400010B3

The task already exists. Editing VAC rule is not
allowed.

queryHistoryVideoFaile 0x400010B4
d

Searching history video failed.

addDeviceFailed

0x400010B5

Adding device failed.

addVideoFailed

0x400010B6

Adding video files failed.

deleteAllVideoFailed

0x400010B7

Deleting all video files failed.

createVideoIndexFailed 0x400010B8

Indexing video files failed.

videoCheckTypeFailed

Verifying video files types failed.

0x400010B9

configStructuredAddre 0x400010BA
ssFailed

Configuring IP address of structured server
failed.

configPictureServerAd
dressFailed

Configuring IP address of picture storaged
server failed.

0x400010BB

storageServiceIPNotExi 0x400010BD
st

The storage server IP address does not exist.

syncBackupDatabaseFa 0x400010BE
iled

Synchronizing slave database failed. Try again.

syncBackupNTPTimeFa 0x400010BF
iled

Synchronizing NTP time of slave server failed.

735

Intelligent Security API (General Application) Developer Guide
Sub Status Code

Error Code

Description

clusterNotSelectLoopb 0x400010C0
ackAddress

Loopbacl address is not supported by the
master or slave cluster.

addFaceRecordFailed

0x400010C1

Adding face record failed.

deleteFaceRecordFaile 0x400010C2
d

Deleting face record failed.

modifyFaceRecordFaile 0x400010C3
d

Editing face record failed.

queryFaceRecordFailed 0x400010C4

Searching face record failed.

faceDetectFailed

0x400010C5

Detecting face failed.

libraryNotExist

0x400010C6

The library does not exist.

blackListQueryExportin 0x400010C7
g

Exporting matched blacklists.

blackListQueryExporte 0x400010C8
d

The matched blacklists are exported.

blackListQueryStopExp 0x400010C9
orting

Exporting matched blacklists is stopped.

blackListAlarmQueryEx 0x400010CA
porting

Exporting matched blacklist alarms.

blackListAlarmQueryEx 0x400010CB
ported

The matched blacklists alarms are exported.

blackListAlarmQuerySt 0x400010CC
opExporting

Exporting matched blacklist alarms is stopped.

getBigDataCloudAnalys 0x400010CD
isFailed

Getting big data cloud analytic information
failed.

setBigDataCloudAnalys 0x400010CE
isFailed

Configuring big data cloud analytic failed.

submitMapSearchFaile 0x400010CF
d

Submitting search by picture task failed.

controlRelationshipNot 0x400010D0
Exist

The relation does not exist.

getHistoryAlarmInfoFai 0x400010D1
led

Getting history alarm information failed.

getFlowReportFailed

Getting people counting report failed.

0x400010D2

736

Intelligent Security API (General Application) Developer Guide
Sub Status Code

Error Code

Description

addGuardFailed

0x400010D3

Adding arming configuration failed.

deleteGuardFailed

0x400010D4

Deleting arming configuration failed.

modifyGuardFailed

0x400010D5

Editing arming configuration failed.

queryGuardFailed

0x400010D6

Searching arming configurations failed.

uploadUserSuperCaps

0x400010D7

No more user information can be uploaded.

bigDataServerConnect 0x400010D8
Failed

Connecting to big data server failed.

microVideoCloudRequ 0x400010D9
estInfoBuildFailed

Adding response information of micro video
cloud failed.

microVideoCloudRespo 0x400010DA
nseInfoBuildFailed

Parsing response information of micro video
cloud failed.

transcodingServerRequ 0x400010DB
estInfoBuildFailed

Adding response information of transcoding
server failed.

transcodingServerResp 0x400010DC
onseInfoParseFailed

Parsing response information of transcoding
server failed.

transcodingServerOffli 0x400010DD
ne

Transcoding server is offline.

microVideoCloudOfflin 0x400010DE
e

Micro video cloud is offline.

UPSServerOffline

UPS monitor server is offline.

0x400010DF

statisticReportRequestI 0x400010E0
nfoBuildFailed

Adding response information of statistics report
failed.

statisticReportRespons 0x400010E1
eInfoParseFailed

Parsing response information of statistics report
failed.

DisplayConfigInfoBuild 0x400010E2
Failed

Adding display configuration information failed.

DisplayConfigInfoParse 0x400010E3
Failed

Parsing display configuration information failed.

DisplayConfigInfoSaveF 0x400010E4
ailed

Saving display configuration information failed.

notSupportDisplayConf 0x400010E5
igType

The display configuration type is not supported.

passError

Incorrect password.

0x400010E7

737

Intelligent Security API (General Application) Developer Guide
Sub Status Code
upgradePackageLarge

Error Code
0x400010EB

Description
Too large upgrade package.

sesssionUserReachesLi 0x400010EC
mit

No more user can log in via session.

ISO
8601TimeFormatError

Invalid ISO8601 time format.

0x400010ED

clusterDissolutionFaile 0x400010EE
d

Deleting cluster failed.

getServiceNodeInfoFail 0x400010EF
ed

Getting service node information failed.

getUPSInfoFailed

Getting UPS configuration information failed.

0x400010F0

getDataStatisticsRepor 0x400010F1
tFailed

Getting data statistic report failed.

getDisplayConfigInfoFai 0x400010F2
led

Getting display configuration failed.

namingAnalysisBoardN 0x400010F3
otAllowed

Renaming analysis board is not allowed.

onlyDrawRegionsOfCo 0x400010F4
nvexPolygon

Only drawing convex polygon area is supported.

bigDataServerRespons 0x400010F5
eInfoParseFailed

Parsing response message of big data service
failed.

bigDataServerReturnFa 0x400010F6
iled

No response is returned by big data service.

microVideoReturnFaile 0x400010F7
d

No response is returned by micro video cloud
service.

transcodingServerRetu 0x400010F8
rnFailed

No response is returned by transcoding service.

UPSServerReturnFailed 0x400010F9

No response is returned by UPS monitoring
service.

forwardingServer
ReturnFailed

0x400010FA

No response is returned by forwarding service.

storageServer
ReturnFailed

0x400010FB

No response is returned by storage service.

738

Intelligent Security API (General Application) Developer Guide
Sub Status Code

Error Code

Description

cloudAnalysisServerRet 0x400010FC
urnFailed

No response is returned by cloud analytic
service.

modelEmpty

No model is obtained.

0x400010FD

mainAndBackupNodeC 0x400010FE
annotModifyManagem
entNetworkInterfaceIP

Editing the management interface IP address of
master node and backup node is not allowed.

IDTooLong

0x400010FF

The ID is too long.

pictureCheckFailed

0x40001100

Detecting picture failed.

pictureModelingFailed 0x40001101

Modeling picture failed.

setCloudAnalsisDefault 0x40001102
ProvinceFailed

Setting default province of cloud analytic
service failed.

InspectionAreasNumbe 0x40001103
rExceedLimit

No more detection regions can be added.

picturePixelsTooLarge

0x40001105

The picture resolution is too high.

picturePixelsTooSmall

0x40001106

The picture resolution is too low.

storageServiceIPEmpty 0x40001107

The storage server IP address is required.

bigDataServerRequestI 0x40001108
nfoBuildFail

Creating request message of big data service
failed.

analysiTimedOut

Analysis time out.

0x40001109

high0x4000110A
performanceModeDisa
bled.

Please enable high-performance mode.

configuringUPSMonito 0x4000110B
ringServerTimedOut

Configurating the UPS monitoring server time
out. Check IP address.

cloudAnalysisRequestI
nformationBuildFailed

0x4000110C

Creating request message of cloud analytic
service failed.

cloudAnalysisResponse 0x4000110D
InformationParseFailed

Parsing response message of cloud analytic
service failed.

allCloudAnalysisInterfa 0x4000110E
ceFailed

Calling API for cloud analytic service failed.

cloudAnalysisModelCo 0x4000110F
mpareFailed

Model comparison of cloud analytic service
failed.

739

Intelligent Security API (General Application) Developer Guide
Sub Status Code

Error Code

Description

cloudAnalysisFacePictu 0x40001110
reQualityRatingFailed

Getting face quality grading of cloud analytic
service failed.

cloudAnalysisExtractFe 0x40001111
aturePointsFailed

Extracting feature of cloud analytic service
failed.

cloudAnalysisExtractPr 0x40001112
opertyFailed

Extracting property of cloud analytic service
failed.

getAddedNodeInformat 0x40001113
ionFailed

Getting the added nodes information of data
analysis server failed.

noMoreAnalysisUnitsA 0x40001114
dded

No more data analysis servers can be added.

detectionAreaInvalid

0x40001115

Invalid detection region.

shieldAreaInvalid

0x40001116

Invalid shield region.

noMoreShieldAreasAd 0x40001117
ded

No more shield region can be drawn.

onlyAreaOfRectangleS
hapeAllowed

0x40001118

Only drawing rectangle is allowed in detection
area.

numberReachedLlimit

0x40001119

Number reached the limit.

wait1~3MinutesGetIPAf 0x4000111A
terSetupDHCP

Wait 1 to 3 minutes to get IP address after
configuring DHCP.

plannedTimeMustbeH 0x4000111B
alfAnHour

Schedule must be half an hour.

oneDeviceCannotBuild 0x4000111C
Cluster

Creating master and backup cluster requires at
least two devices.

updatePackageFileNot 0x4000111E
Uploaded

Upgrade package is not uploaded.

highPerformanceTasks 0x4000111F
NotSupportDrawingDe
tectionRegions

Drawing detection area is not allowed under
high-performance mode.

controlCenterIDDoesN 0x40001120
otExist

The control center ID does not exist.

regionIDDoesNotExist

0x40001121

The area ID does not exist.

licensePlateFormatErro 0x40001122
r

Invalid license plate format.

740

Intelligent Security API (General Application) Developer Guide
Sub Status Code

Error Code

Description

managementNodeDoe 0x40001123
sNotSupportThisOperat
ion

The operation is not supported.

searchByPictureResour 0x40001124
ceNotConfiged

The conditions for searching picture by picture
are not configured.

videoFileEncapsulation 0x40001125
FormatNotSupported

The video container format is not supported.

videoPackageFailure

Converting video container format failed.

0x40001126

videoCodingFormatNot 0x40001127
Supported

Video coding format is not supported.

monitorOfDeviceArmin 0x40001129
gdeleteArmingInfo

The camera is armed. Disarm it and try again.

getVideoSourceTypeFai 0x4000112A
led

Getting video source type failed.

smartRulesBuildFailed

0x4000112B

Creating VAC rule failed.

smartRulesParseFailed 0x4000112C

Parsing VAC rule failed.

timeRulesBuildFailed

0x4000112D

Creating time rule failed.

timeRulesParseFailed

0x4000112E

Parsing time rule failed.

monitoInfoInvalid

0x4000112F

Invalid camera information.

addingFailedVersionMi 0x40001130
smatches

Adding failed. The device version mismatches.

theInformationReturne 0x40001131
dAfterCloudAnalysisIsE
mpty

No response is returned by the cloud analytic
service.

selectingIpAddressOfH 0x40001132
ostAndSpareNodeFaile
dCheckTheStatus

Setting IP address for master node and backup
node failed. Check the node status.

theSearchIdDoesNotEx 0x40001133
ist

The search ID does not exist.

theSynchronizationIdD 0x40001134
oesNotExist

The synchronization ID does not exist.

theUserIdDoesNotExist 0x40001136

The user ID does not exist.

741

Intelligent Security API (General Application) Developer Guide
Sub Status Code

Error Code

Description

theIndexCodeDoesNot 0x40001138
Exist

The index code does not exist.

theControlCenterIdDoe 0x40001139
sNotExist

The control center ID does not exist.

theAreaIdDoesNotExist 0x4000113A

The area ID does not exist.

theArmingLinkageIdDo 0x4000113C
esNotExist

The arming relationship ID does not exist.

theListLibraryIdDoesNo 0x4000113D
tExist

The list library ID does not exist.

invalidCityCode

Invalid city code.

0x4000113E

synchronizingThePass 0x4000113F
wordOfSpareServerFail
ed

Synchronizing backup system password failed.

editingStreamingTypeIs 0x40001140
NotSupported

Editing streaming type is not supported.

switchingScheduledTas 0x40001141
kToTemporaryTaskIsNo
tSupported

Switching scheduled task to temporary task is
not supported.

switchingTemporaryTas 0x40001142
kToScheduledTaskIsNot
Supported

Switching temporary task to scheduled task is
not supported.

theTaskIsNotDispatche 0x40001143
dOrItIsUpdating

The task is not dispatched or is updating.

thisTaskDoesNotExist

0x40001144

This task does not exist in the cloud analytic
serice.

duplicatedSchedule

0x40001145

Schedule period cannot be overlapped.

continuousScheduleWi 0x40001146
thSameAlgorithmType
ShouldBeMerged

The continuous schedule periods with same
algorithm type should be merged.

invalidStreamingTimeR 0x40001147
ange

Invalid streaming time period.

invalidListLibraryType

Invalid list library type.

0x40001148

742

Intelligent Security API (General Application) Developer Guide
Sub Status Code

Error Code

Description

theNumberOfMatched 0x40001149
ResultsShouldBeLarger
Than0

The number of search results should be larger
than 0.

invalidValueRangeOfSi
milarity

0x4000114A

Invalid similarity range.

invalidSortingType

0x4000114B

Invalid sorting type.

noMoreListLibraryCanB 0x4000114C
eLinkedToTheDevice

No more lists can be added to one device.

InvalidRecipientAddres 0x4000114D
sFormat

Invalid address format of result receiver.

creatingClusterFailedT 0x4000114E
heDongleIsNotPlugged
In

Insert the dongle before creating cluster.

theURLIsTooLong

0x4000114F

No schedule configured for the task.

noScheduleIsConfigure 0x40001150
dForTheTask

No schedule configured for the task.

theDongleIsExpiried

0x40001151

Dongle has expired.

dongleException

0x40001152

Dongle exception.

invalidKey

0x40001153

Invalid authorization service key.

decryptionFailed

0x40001154

Decrypting authorization service failed.

encryptionFailed

0x40001155

Encrypting authorization service failed.

AuthorizeServiceRespo 0x40001156
nseError

Authorization service response exception.

incorrectParameter

0x40001157

Authorization service parameters error.

operationFailed

0x40001158

Operating authorization service error.

noAnalysisResourceOr 0x40001159
NoDataInTheListLibrary

No cloud analytic resources or no data in the list
library.

calculationException

0x4000115A

Calculation exception.

allocatingList

0x4000115B

Allocating list.

thisOperationIsNotSup 0x4000115C
portedByTheCloudAnal
ytics

This operation is not supported by the cloud
analytic serice.

743

Intelligent Security API (General Application) Developer Guide
Sub Status Code

Error Code

Description

theCloudAnalyticsIsInt 0x4000115D
errupted

The operation of cloud analytic serice is
interrupted.

theServiceIsNotReady

The service is not ready.

0x4000115E

searchingForExternalA 0x4000115F
piFailed

Searching external interfaces failed.

noOnlineNode

0x40001160

No node is online.

noNodeAllocated

0x40001161

No allocated node.

noMatchedList

0x40001162

No matched list.

allocatingFailedTooMa 0x40001163
nyFacePictureLists

Allocation failed. Too many lists of big data
service.

searchIsNotCompleted 0x40001164
SearchAgain

Current searching is not completed. Search
again.

allocatingListIsNotCom 0x40001165
pleted

Allocating list is not completed.

searchingForCloudAnal 0x40001166
yticsResultsFailed

Searching cloud analytic serice overtime.

noDataOfTheCurrentLi 0x40001167
braryFound

No data in the current library. Make sure there
is data in the Hbase.

noFacePictureLibraryIs 0x40001168
Armed

No face picture library is armed for big data
service.

noAvailableDataSlicing 0x40001169
VersionInformationAr
mFirstAndSliceTheData

Invalid standard version information.

duplicatedOperationDa 0x4000116A
taSlicingIsExecuting

Slicing failed. Duplicated operation.

slicinDataFailedNoArm 0x4000116B
edFacePictureLibrary

Slicing failed. No arming information in the face
big data.

GenerateBenchmarkFil 0x4000116C
eFailedSlicingAgain

Generating sliced file failed. Slice again.

NonprimaryNodeIsPro 0x4000116D
hibitedFromSlcingData

Slicing is not allowed by the backup node.

NoReadyNodeToCluste 0x4000116E
rServers

Creating the cluster failed. No ready node.

744

Intelligent Security API (General Application) Developer Guide
Sub Status Code

Error Code

Description

NodeManagementServ 0x4000116F
iceIsOffline

The node management server is offline.

theCamera(s)OfTheCo 0x40001170
ntrolCenterAreAlready
Armed.DisarmThemFir
st

Some cameras in control center are already
armed. Disarm them and try again.

theCamera(s)OfTheAre 0x40001171
aAreAlreadyArmed.Dis
armThemFirst

Some cameras in this area are already armed.
Disarm them and try again.

configuringHigh0x40001172
frequencyPeopleDetect
ionFailed

Configuring high frequency people detection
failed.

searchingForHigh0x40001173
frequencyPeopleDetect
ionLogsFailed.

Searching detection event logs of highfrequency people detection failed.

gettingDetailsOfSearch 0x40001174
edHighfrequencyPeopleDetect
ionLogsFailed.

Getting the search result details of high
frequency alarms failed.

theArmedCamerasAlre 0x40001175
adyExistInTheControlC
enter

Some cameras in control center are already
armed.

disarmingFailedTheCa
meraIsNotArmed

0x40001177

Disarming failed. The camera is not armed.

noDataReturned

0x40001178

No response is returned by the big data service.

preallocFailure

0x40001179

Pre-​allocating algorithm resource failed.

overDogLimit

0x4000117A

Configuration failed. No more resources can be
pre-allocated.

analysisServicesDoNot 0x4000117B
Support

Not supported.

commandAndDispatch 0x4000117C
ServiceError

Scheduling service of cloud analytic serice error.

engineModuleError

0x4000117D

Engine module of cloud analytic serice error.

streamingServiceError

0x4000117E

Streaming component of cloud analytic serice
error.

745

Intelligent Security API (General Application) Developer Guide
Sub Status Code

Error Code

Description

faceAnalysisModuleErr 0x4000117F
or

Face analysis module of cloud analytic serice
error.

vehicleAnalysisModule 0x40001180
Error

Vehicle pictures analytic module of cloud
analytic serice error.

videoStructuralAnalysis 0x40001181
ModuleError

Video structuring module of cloud analytic
serice error.

postprocessingModule 0x40001182
Error

Post-processing module of cloud analytic serice
error.

frequentlyAppearedPe 0x40001183
rsonAlarmIsAlreadyCo
nfiguredForListLibrary

High frequency alarm is already armed for
blacklist library.

creatingListLibraryFaile 0x40001184
d

Creating list library failed.

invalidIdentiryKeyOfLis 0x40001185
tLibrary

Invalid identity key of list library.

noMoreDevicesCanBe
Armed

0x40001186

No more camera can be added.

settingAlgorithmTypeF 0x40001187
orDeviceFailed

Allocating task resource failed.

gettingHighFrequencyP 0x40001188
ersonDetectionAlarmIn
formationFailed

Setting high frequency alarm failed.

invalidSearchConfition 0x40001189

Invalid result.

theTaskIsNotComplete 0x4000118B
d

The task is not completed.

resourceOverRemainLi 0x4000118C
mit

No more resource can be pre-allocated.

frequentlyAppearedPe 0x4000118D
rsonAlarmIs
AlreadyConfiguredForT
heCameraDisarmFirstA
ndTryAgain

The high frequency alarm of this camera is
configured. Delete the arming information and
try again.

noClientCertificate

0x40002036

The client certificate is not installed.

noCACertificate

0x40002037

The CA certificate is not installed.

746

Intelligent Security API (General Application) Developer Guide
Sub Status Code
authenticationFailed

Error Code
0x40002038

Description
Authenticating certificate failed. Check the
certificate.

clientCertificateExpired 0x40002039

The client certificate is expired.

clientCertificateRevocat 0x4000203A
ion

The client certificate is revoked.

CACertificateExpired

0x4000203B

The CA certificate is expired.

CACertificateRevocatio 0x4000203C
n

The CA certificate is revoked.

connectFail

0x4000203D

Connection failed.

loginNumExceedLimit

0x4000203F

No more user can log in.

formattingFailed

0x40002056

Formatting HDD failed.

encryptedFormattingFa 0x40002057
iled

Formatting encrypted HDD failed.

wrongPassword

0x40002058

Verifying password of SD card failed. Incorrect
password.

armingFailed

0x40008000

Arming failed.

disarmingFailed

0x40008001

Disarming failed.

clearAlarmFailed

0x40008002

Clearing alarm failed.

bypassFailed

0x40008003

Bypass failed.

bypassRecoverFailed

0x40008004

Bypass recovery failed.

outputsOpenFailed

0x40008005

Opening relay failed.

outputsCloseFailed

0x40008006

Closing relay failed.

registerTimeOut

0x40008007

Registering timed out.

registerFailed

0x40008008

Registering failed.

addedByOtherHost

0x40008009

The peripheral is already added by other
security control panel.

alreadyAdded

0x4000800A

The peripheral is already added.

armedStatus

0x4000800B

The partition is armed.

bypassStatus

0x4000800C

Bypassed.

zoneNotSupport

0x4000800D

This operation is not supported by the zone.

747

Intelligent Security API (General Application) Developer Guide
Sub Status Code

Error Code

Description

zoneFault

0x4000800E

The zone is in fault status.

pwdConflict

0x4000800F

Password conflicted.

audioTestEntryFailed

0x40008010

Enabling audio test mode failed.

audioTestRecoveryFaile 0x40008011
d

Disabling audio test mode failed.

addCardMode

0x40008012

Adding card mode.

searchMode

0x40008013

Search mode.

addRemoterMode

0x40008014

Adding keyfob mode.

registerMode

0x40008015

Registration mode.

exDevNotExist

0x40008016

The peripheral does not exist.

theNumberOfExDevLi
mited

0x40008017

No peripheral can be added.

sirenConfigFailed

0x40008018

Setting siren failed.

chanCannotRepeatedB 0x40008019
inded

This channel is already linked by the zone.

masterSlaveIsEnable

0x4000802c

The master-slave relationship has taken effect,
the slave radar does not support this operation.

forceTrackNotEnabled

0x4000802d

Mandatory tracking is disabled.

isNotSupportZoneConfi 0x4000802e
gByLocalArea

This area does not support the zone type.

alarmLineCross

Trigger lines are overlapped.

0x4000802f

zoneDrawingOutOfRan 0x40008030
ge

The drawn zone is out of detection range.

alarmLineDrawingOut
OfRange

0x40008031

The drawn alarm trigger line is out of detection
range.

hasTargetInWarningAr
ea

0x40008032

The warning zone already contains targets.
Whether to enable mandatory arming?

inProgramMode

0x4000801B

The keypad is in programming mode.

inPaceTest

0x4000801C

Pacing mode.

arming

0x4000801D

Armed.

748

Intelligent Security API (General Application) Developer Guide
Sub Status Code

Error Code

Description

HDMIResolutionIllegal

/

The HDMI video resolution cannot be larger
than that of main and sub stream.

startAppFail

/

Starting running application program failed.

yuvconflict

/

The raw video stream conflicted.

overMaxAppNum

/

No more application program can be uploaded.

alreadyExist

/

The application program already exists.

noFlash

/

Insufficient flash.

noFlash

/

The platform mismatches.

alreadyRunning

/

The application program is running.

notRunning

/

The application program is stopped.

packNotFound

/

The software packet does not exist.

noMemory

/

Insufficient memory.

invalLicense

/

Invalid Licnese.

StatusCode=5
Sub Status Code
badXmlFormat

Error Code
0x50000001

Description
Invalid XML format.

StatusCode=6
Sub Status Code

Error Code

Description

badParameters

0x60000001

Invalid parameter.

badHostAddress

0x60000002

Invalid host IP address.

badXmlContent

0x60000003

Invalid XML content.

badIPv4Address

0x60000004

Invalid IPv4 address.

badIPv6Address

0x60000005

Invalid IPv6 address.

conflictIPv4Address

0x60000006

IPv4 address conflicted.

conflictIPv6Address

0x60000007

IPv6 address conflicted.

badDomainName

0x60000008

Invalid domain name.

connectSreverFail

0x60000009

Connecting to server failed.

conflictDomainName

0x6000000A

Domain name conflicted.

749

Intelligent Security API (General Application) Developer Guide
Sub Status Code

Error Code

Description

badPort

0x6000000B

Port number conflicted.

portError

0x6000000C

Port error.

exportErrorData

0x6000000D

Importing data failed.

badNetMask

0x6000000E

Invalid sub-net mask.

badVersion

0x6000000F

Version mismatches.

badDevType

0x600000010

Device type mismatches.

badLanguage

0x600000011

Language mismatches.

incorrentUserNameOrPasswor
d

0x600000012

Incorrect user name or
password.

invalidStoragePoolOfCloudServ 0x600000013
er

Invalid storage pool. The
storage pool is not configured
or incorrect ID.

noFreeSpaceOfStoragePool

0x600000014

Storage pool is full.

riskPassword

0x600000015

Risky password.

UnSupportCapture

0x600000016

Capturing in 4096*2160 or
3072*2048 resolution is not
supported when H.264+ is
enabled.

userPwdLenUnder8

0x60000023

At least two kinds of
characters, including digits,
letters, and symbols, should be
contained in the password.

userPwdNameSame

0x60000025

Duplicated password.

userPwdNameMirror

0x60000026

The password cannot be the
reverse order of user name.

beyondARGSRangeLimit

0x60000027

The parameter value is out of
limit.

DetectionLineOutofDetectionR 0x60000085
egion

The rule line is out of region.

DetectionRegionError

Rule region error. Make sure
the rule region is convex
polygon.

0x60000086

750

Intelligent Security API (General Application) Developer Guide
Sub Status Code

Error Code

Description

DetectionRegionOutOfCountin 0x60000087
gRegion

The rule region must be
marked as red frame.

PedalAreaError

0x60000088

The pedal area must be in the
rule region.

DetectionAreaABError

0x60000089

The detection region A and B
must be in the a rule frame.

ABRegionCannotIntersect

0x6000008a

Region A and B cannot be
overlapped.

analysisEnginesNoResourceErr
or

0x60001000

No analysis engine.

analysisEnginesUsageExcced

0x60001001

The engine usage is
overloaded.

PicAnalysisNoResourceError

0x60001002

No analysis engine provided for
picture secondary recognition.

analysisEnginesLoadingError

0x60001003

Initializing analysis engine.

analysisEnginesAbnormaError

0x60001004

Analysis engine exception.

analysisEnginesFacelibImportin 0x60001005
g

Importing pictures to face
picture library. Failed to edit
analysis engine parameters.

analysisEnginesAssociatedChan 0x60001006
nel

The analysis engine is linked to
channel.

smdEncodingNoResource

0x60001007

Insufficient motion detection
encoding resources.

smdDecodingNoResource

0x60001008

Insufficient motion detection
decoding resources.

diskError

0x60001009

HDD error.

diskFull

0x6000100a

HDD full.

facelibDataProcessing

0x6000100b

Handling face picture library
data.

capturePackageFailed

0x6000100c

Capturing packet failed.

capturePackageProcessing

0x6000100d

Capturing packet.

751

Intelligent Security API (General Application) Developer Guide
Sub Status Code

Error Code

Description

noSupportWithPlaybackAbstra 0x6000100e
ct

This function is not supported.
Playback by video synopsis is
enabled.

insufficientNetworkBandwidth

0x6000100f

Insufficient network
bandwidth.

tapeLibNeedStopArchive

0x60001010

Stop the filing operation of
tape library first.

identityKeyError

0x60001011

Incorrect interaction command.

identityKeyMissing

0x60001012

The interaction command is
lost.

noSupportWithPersonDensityD 0x60001013
etect

This function is not supported.
The people density detection is
enabled.

ipcResolutionOverflow

0x60001014

The configured resolution of
network camera is invalid.

ipcBitrateOverflow

0x60001015

The configured bit rate of
network camera is invalid.

tooGreatTimeDifference

0x60001016

Too large time difference
between device and server.

noSupportWithPlayback

0x60001017

This function is not supported.
Playback is enabled.

channelNoSupportWithSMD

0x60001018

This function is not supported.
Motion detection is enabled.

channelNoSupportWithFD

0x60001019

This function is not supported.
Face capture is enabled.

illegalPhoneNumber

0x6000101a

Invalid phone number.

illegalCertificateNumber

0x6000101b

Invalid certificate No.

linkedCameraOutLimit

0x6000101c

Connecting camera timed out.

achieveMaxChannelLimit

0x6000101e

No more channels are allowed.

humanMisInfoFilterEnabledCha 0x6000101f
nNumError

No more channels are allowed
to enable preventing false
alarm.

752

Intelligent Security API (General Application) Developer Guide
Sub Status Code

Error Code

Description

humanEnginesNoResource

0x60001020

Insufficient human body
analysis engine resources.

taskNumberOverflow

0x60001021

No more tasks can be added.

collisionTimeOverflow

0x60001022

No more comparison duration
can be configured.

invalidTaskID

0x60001023

Invalid task ID.

eventNotSupport

0x60001024

Event subscription is not
supported.

invalidEZVIZSecretKey

0x60001034

Invalid verification code for HikConnect.

needDoubleVerification

0x60001042

Double verification required

noDoubleVerificationUser

0x60001043

No double verification user

timeSpanNumOverLimit

0x60001044

Max. number of time buckets
reached

channelNumOverLimit

0x60001045

Max. number of channels
reached

noSearchIDResource

0x60001046

Insufficient searchID resources

noSupportDeleteStrangerLib

0x60001051

Deleting stranger library is not
supported

noSupportCreateStrangerLib

0x60001052

Creating stranger library is not
supported

TransitionUseEmmc

0x60002000

Starting device failed. The
EMMC is overused.

AdaptiveStreamNotEnabled

0x60002001

The stream self-​adaptive
function is not enabled .

AdaptiveStreamAndVariableBit 0x60002002
rateEnabled

Stream self-​adptive and
variable bitrate function cannot
be enabled at the same time.

detectorTypeMismatch

0x60008000

The detector type mismatched.

nameExist

0x60008001

The name already exists.

laneAndRegionOverlap

None.

The lanes are overlapped.

unitConfigurationNotInEffect

/

Invalid unit parameter.

753

Intelligent Security API (General Application) Developer Guide
StatusCode=7
SubStatusCode
rebootRequired

Error Code
0x70000001

Description
Reboot to take effect.

754

UD09761B

